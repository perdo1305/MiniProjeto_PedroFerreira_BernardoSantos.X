

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Dec 13 16:43:14 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    87                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    88                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    89                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    90   000000                     
    91                           ; Version 2.40
    92                           ; Generated 17/11/2021 GMT
    93                           ; 
    94                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    95                           ; All rights reserved.
    96                           ; 
    97                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    98                           ; 
    99                           ; Redistribution and use in source and binary forms, with or without modification, are
   100                           ; permitted provided that the following conditions are met:
   101                           ; 
   102                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   103                           ;        conditions and the following disclaimer.
   104                           ; 
   105                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   106                           ;        of conditions and the following disclaimer in the documentation and/or other
   107                           ;        materials provided with the distribution. Publication is not required when
   108                           ;        this file is used in an embedded application.
   109                           ; 
   110                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   111                           ;        software without specific prior written permission.
   112                           ; 
   113                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   114                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   115                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   116                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   117                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   118                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   119                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   120                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   121                           ; 
   122                           ; 
   123                           ; Code-generator required, PIC18F46K22 Definitions
   124                           ; 
   125                           ; SFR Addresses
   126   000000                     
   127                           	psect	idataCOMRAM
   128   0014E8                     __pidataCOMRAM:
   129                           	callstack 0
   130                           
   131                           ;initializer for _temperatura
   132   0014E8  0012               	dw	18
   133                           
   134                           	psect	idataBANK0
   135   0014EA                     __pidataBANK0:
   136                           	callstack 0
   137                           
   138                           ;initializer for _carater_recebido
   139   0014EA  01                 	db	1
   140                           
   141                           ;initializer for _menu
   142   0014EB  30                 	db	48
   143                           
   144                           	psect	mediumconst
   145   00FE38                     __pmediumconst:
   146                           	callstack 0
   147   00FE38  00                 	db	0
   148   00FE39                     _spi1_configuration:
   149                           	callstack 0
   150   00FE39  00                 	db	0
   151   00FE3A  40                 	db	64
   152   00FE3B  01                 	db	1
   153   00FE3C  00                 	db	0
   154   00FE3D                     __end_of_spi1_configuration:
   155                           	callstack 0
   156   000000                     _T1CON	set	4045
   157   000000                     _TMR1L	set	4046
   158   000000                     _TMR1H	set	4047
   159   000000                     _ANSELA	set	3896
   160   000000                     _ANSELB	set	3897
   161   000000                     _ANSELC	set	3898
   162   000000                     _ANSELD	set	3899
   163   000000                     _TRISD	set	3989
   164   000000                     _TRISB	set	3987
   165   000000                     _TRISE	set	3990
   166   000000                     _LATC	set	3979
   167   000000                     _LATB	set	3978
   168   000000                     _OSCTUNE	set	3995
   169   000000                     _RCREG1	set	4014
   170   000000                     _TXREG1	set	4013
   171   000000                     _SPBRG1	set	4015
   172   000000                     _TXSTA1	set	4012
   173   000000                     _PIE1bits	set	3997
   174   000000                     _ADRESH	set	4036
   175   000000                     _ADRESL	set	4035
   176   000000                     _PIR1bits	set	3998
   177   000000                     _SSP1CON2	set	4037
   178   000000                     _CCP5CON	set	3924
   179   00FE3D                     STR_5:
   180   00FE3D  0D                 	db	13
   181   00FE3E  0A                 	db	10
   182   00FE3F  33                 	db	51	;'3'
   183   00FE40  20                 	db	32
   184   00FE41  2D                 	db	45
   185   00FE42  20                 	db	32
   186   00FE43  56                 	db	86	;'V'
   187   00FE44  69                 	db	105	;'i'
   188   00FE45  73                 	db	115	;'s'
   189   00FE46  75                 	db	117	;'u'
   190   00FE47  61                 	db	97	;'a'
   191   00FE48  6C                 	db	108	;'l'
   192   00FE49  69                 	db	105	;'i'
   193   00FE4A  7A                 	db	122	;'z'
   194   00FE4B  61                 	db	97	;'a'
   195   00FE4C  72                 	db	114	;'r'
   196   00FE4D  20                 	db	32
   197   00FE4E  61                 	db	97	;'a'
   198   00FE4F  20                 	db	32
   199   00FE50  70                 	db	112	;'p'
   200   00FE51  65                 	db	101	;'e'
   201   00FE52  72                 	db	114	;'r'
   202   00FE53  63                 	db	99	;'c'
   203   00FE54  65                 	db	101	;'e'
   204   00FE55  6E                 	db	110	;'n'
   205   00FE56  74                 	db	116	;'t'
   206   00FE57  61                 	db	97	;'a'
   207   00FE58  67                 	db	103	;'g'
   208   00FE59  65                 	db	101	;'e'
   209   00FE5A  6D                 	db	109	;'m'
   210   00FE5B  20                 	db	32
   211   00FE5C  64                 	db	100	;'d'
   212   00FE5D  6F                 	db	111	;'o'
   213   00FE5E  20                 	db	32
   214   00FE5F  6E                 	db	110	;'n'
   215   00FE60  69                 	db	105	;'i'
   216   00FE61  76                 	db	118	;'v'
   217   00FE62  65                 	db	101	;'e'
   218   00FE63  6C                 	db	108	;'l'
   219   00FE64  20                 	db	32
   220   00FE65  64                 	db	100	;'d'
   221   00FE66  65                 	db	101	;'e'
   222   00FE67  20                 	db	32
   223   00FE68  61                 	db	97	;'a'
   224   00FE69  67                 	db	103	;'g'
   225   00FE6A  75                 	db	117	;'u'
   226   00FE6B  61                 	db	97	;'a'
   227   00FE6C  00                 	db	0
   228   00FE6D                     STR_7:
   229   00FE6D  0D                 	db	13
   230   00FE6E  0A                 	db	10
   231   00FE6F  35                 	db	53	;'5'
   232   00FE70  20                 	db	32
   233   00FE71  2D                 	db	45
   234   00FE72  20                 	db	32
   235   00FE73  50                 	db	80	;'P'
   236   00FE74  72                 	db	114	;'r'
   237   00FE75  6F                 	db	111	;'o'
   238   00FE76  67                 	db	103	;'g'
   239   00FE77  72                 	db	114	;'r'
   240   00FE78  61                 	db	97	;'a'
   241   00FE79  6D                 	db	109	;'m'
   242   00FE7A  61                 	db	97	;'a'
   243   00FE7B  72                 	db	114	;'r'
   244   00FE7C  20                 	db	32
   245   00FE7D  6E                 	db	110	;'n'
   246   00FE7E  6F                 	db	111	;'o'
   247   00FE7F  76                 	db	118	;'v'
   248   00FE80  6F                 	db	111	;'o'
   249   00FE81  20                 	db	32
   250   00FE82  76                 	db	118	;'v'
   251   00FE83  61                 	db	97	;'a'
   252   00FE84  6C                 	db	108	;'l'
   253   00FE85  6F                 	db	111	;'o'
   254   00FE86  72                 	db	114	;'r'
   255   00FE87  20                 	db	32
   256   00FE88  64                 	db	100	;'d'
   257   00FE89  65                 	db	101	;'e'
   258   00FE8A  20                 	db	32
   259   00FE8B  72                 	db	114	;'r'
   260   00FE8C  65                 	db	101	;'e'
   261   00FE8D  66                 	db	102	;'f'
   262   00FE8E  65                 	db	101	;'e'
   263   00FE8F  72                 	db	114	;'r'
   264   00FE90  65                 	db	101	;'e'
   265   00FE91  6E                 	db	110	;'n'
   266   00FE92  63                 	db	99	;'c'
   267   00FE93  69                 	db	105	;'i'
   268   00FE94  61                 	db	97	;'a'
   269   00FE95  00                 	db	0
   270   00FE96                     STR_25:
   271   00FE96  0D                 	db	13
   272   00FE97  0A                 	db	10
   273   00FE98  50                 	db	80	;'P'
   274   00FE99  72                 	db	114	;'r'
   275   00FE9A  69                 	db	105	;'i'
   276   00FE9B  6D                 	db	109	;'m'
   277   00FE9C  61                 	db	97	;'a'
   278   00FE9D  20                 	db	32
   279   00FE9E  30                 	db	48	;'0'
   280   00FE9F  20                 	db	32
   281   00FEA0  70                 	db	112	;'p'
   282   00FEA1  61                 	db	97	;'a'
   283   00FEA2  72                 	db	114	;'r'
   284   00FEA3  61                 	db	97	;'a'
   285   00FEA4  20                 	db	32
   286   00FEA5  76                 	db	118	;'v'
   287   00FEA6  6F                 	db	111	;'o'
   288   00FEA7  6C                 	db	108	;'l'
   289   00FEA8  74                 	db	116	;'t'
   290   00FEA9  61                 	db	97	;'a'
   291   00FEAA  72                 	db	114	;'r'
   292   00FEAB  20                 	db	32
   293   00FEAC  61                 	db	97	;'a'
   294   00FEAD  6F                 	db	111	;'o'
   295   00FEAE  20                 	db	32
   296   00FEAF  4D                 	db	77	;'M'
   297   00FEB0  65                 	db	101	;'e'
   298   00FEB1  6E                 	db	110	;'n'
   299   00FEB2  75                 	db	117	;'u'
   300   00FEB3  20                 	db	32
   301   00FEB4  50                 	db	80	;'P'
   302   00FEB5  72                 	db	114	;'r'
   303   00FEB6  69                 	db	105	;'i'
   304   00FEB7  6E                 	db	110	;'n'
   305   00FEB8  63                 	db	99	;'c'
   306   00FEB9  69                 	db	105	;'i'
   307   00FEBA  70                 	db	112	;'p'
   308   00FEBB  61                 	db	97	;'a'
   309   00FEBC  6C                 	db	108	;'l'
   310   00FEBD  00                 	db	0
   311   00FEBE                     STR_6:
   312   00FEBE  0D                 	db	13
   313   00FEBF  0A                 	db	10
   314   00FEC0  34                 	db	52	;'4'
   315   00FEC1  20                 	db	32
   316   00FEC2  2D                 	db	45
   317   00FEC3  20                 	db	32
   318   00FEC4  56                 	db	86	;'V'
   319   00FEC5  69                 	db	105	;'i'
   320   00FEC6  73                 	db	115	;'s'
   321   00FEC7  75                 	db	117	;'u'
   322   00FEC8  61                 	db	97	;'a'
   323   00FEC9  6C                 	db	108	;'l'
   324   00FECA  69                 	db	105	;'i'
   325   00FECB  7A                 	db	122	;'z'
   326   00FECC  61                 	db	97	;'a'
   327   00FECD  72                 	db	114	;'r'
   328   00FECE  20                 	db	32
   329   00FECF  6F                 	db	111	;'o'
   330   00FED0  20                 	db	32
   331   00FED1  6E                 	db	110	;'n'
   332   00FED2  69                 	db	105	;'i'
   333   00FED3  76                 	db	118	;'v'
   334   00FED4  65                 	db	101	;'e'
   335   00FED5  6C                 	db	108	;'l'
   336   00FED6  20                 	db	32
   337   00FED7  64                 	db	100	;'d'
   338   00FED8  65                 	db	101	;'e'
   339   00FED9  20                 	db	32
   340   00FEDA  72                 	db	114	;'r'
   341   00FEDB  65                 	db	101	;'e'
   342   00FEDC  66                 	db	102	;'f'
   343   00FEDD  65                 	db	101	;'e'
   344   00FEDE  72                 	db	114	;'r'
   345   00FEDF  65                 	db	101	;'e'
   346   00FEE0  6E                 	db	110	;'n'
   347   00FEE1  63                 	db	99	;'c'
   348   00FEE2  69                 	db	105	;'i'
   349   00FEE3  61                 	db	97	;'a'
   350   00FEE4  00                 	db	0
   351   00FEE5                     STR_4:
   352   00FEE5  0D                 	db	13
   353   00FEE6  0A                 	db	10
   354   00FEE7  32                 	db	50	;'2'
   355   00FEE8  20                 	db	32
   356   00FEE9  2D                 	db	45
   357   00FEEA  20                 	db	32
   358   00FEEB  41                 	db	65	;'A'
   359   00FEEC  74                 	db	116	;'t'
   360   00FEED  69                 	db	105	;'i'
   361   00FEEE  76                 	db	118	;'v'
   362   00FEEF  61                 	db	97	;'a'
   363   00FEF0  72                 	db	114	;'r'
   364   00FEF1  20                 	db	32
   365   00FEF2  63                 	db	99	;'c'
   366   00FEF3  6F                 	db	111	;'o'
   367   00FEF4  6D                 	db	109	;'m'
   368   00FEF5  74                 	db	116	;'t'
   369   00FEF6  72                 	db	114	;'r'
   370   00FEF7  6F                 	db	111	;'o'
   371   00FEF8  6C                 	db	108	;'l'
   372   00FEF9  6F                 	db	111	;'o'
   373   00FEFA  20                 	db	32
   374   00FEFB  64                 	db	100	;'d'
   375   00FEFC  6F                 	db	111	;'o'
   376   00FEFD  20                 	db	32
   377   00FEFE  6E                 	db	110	;'n'
   378   00FEFF  69                 	db	105	;'i'
   379   00FF00  76                 	db	118	;'v'
   380   00FF01  65                 	db	101	;'e'
   381   00FF02  6C                 	db	108	;'l'
   382   00FF03  20                 	db	32
   383   00FF04  64                 	db	100	;'d'
   384   00FF05  65                 	db	101	;'e'
   385   00FF06  20                 	db	32
   386   00FF07  61                 	db	97	;'a'
   387   00FF08  67                 	db	103	;'g'
   388   00FF09  75                 	db	117	;'u'
   389   00FF0A  61                 	db	97	;'a'
   390   00FF0B  00                 	db	0
   391   00FF0C                     STR_13:
   392   00FF0C  0D                 	db	13
   393   00FF0D  0A                 	db	10
   394   00FF0E  43                 	db	67	;'C'
   395   00FF0F  6F                 	db	111	;'o'
   396   00FF10  6E                 	db	110	;'n'
   397   00FF11  74                 	db	116	;'t'
   398   00FF12  72                 	db	114	;'r'
   399   00FF13  6F                 	db	111	;'o'
   400   00FF14  6C                 	db	108	;'l'
   401   00FF15  6F                 	db	111	;'o'
   402   00FF16  20                 	db	32
   403   00FF17  64                 	db	100	;'d'
   404   00FF18  6F                 	db	111	;'o'
   405   00FF19  20                 	db	32
   406   00FF1A  6E                 	db	110	;'n'
   407   00FF1B  69                 	db	105	;'i'
   408   00FF1C  76                 	db	118	;'v'
   409   00FF1D  65                 	db	101	;'e'
   410   00FF1E  6C                 	db	108	;'l'
   411   00FF1F  20                 	db	32
   412   00FF20  64                 	db	100	;'d'
   413   00FF21  65                 	db	101	;'e'
   414   00FF22  20                 	db	32
   415   00FF23  61                 	db	97	;'a'
   416   00FF24  67                 	db	103	;'g'
   417   00FF25  75                 	db	117	;'u'
   418   00FF26  61                 	db	97	;'a'
   419   00FF27  20                 	db	32
   420   00FF28  61                 	db	97	;'a'
   421   00FF29  74                 	db	116	;'t'
   422   00FF2A  69                 	db	105	;'i'
   423   00FF2B  76                 	db	118	;'v'
   424   00FF2C  61                 	db	97	;'a'
   425   00FF2D  64                 	db	100	;'d'
   426   00FF2E  6F                 	db	111	;'o'
   427   00FF2F  00                 	db	0
   428   00FF30                     STR_16:
   429   00FF30  0D                 	db	13
   430   00FF31  0A                 	db	10
   431   00FF32  50                 	db	80	;'P'
   432   00FF33  65                 	db	101	;'e'
   433   00FF34  72                 	db	114	;'r'
   434   00FF35  63                 	db	99	;'c'
   435   00FF36  65                 	db	101	;'e'
   436   00FF37  6E                 	db	110	;'n'
   437   00FF38  74                 	db	116	;'t'
   438   00FF39  61                 	db	97	;'a'
   439   00FF3A  67                 	db	103	;'g'
   440   00FF3B  65                 	db	101	;'e'
   441   00FF3C  6D                 	db	109	;'m'
   442   00FF3D  20                 	db	32
   443   00FF3E  64                 	db	100	;'d'
   444   00FF3F  6F                 	db	111	;'o'
   445   00FF40  20                 	db	32
   446   00FF41  6E                 	db	110	;'n'
   447   00FF42  69                 	db	105	;'i'
   448   00FF43  76                 	db	118	;'v'
   449   00FF44  65                 	db	101	;'e'
   450   00FF45  6C                 	db	108	;'l'
   451   00FF46  20                 	db	32
   452   00FF47  64                 	db	100	;'d'
   453   00FF48  65                 	db	101	;'e'
   454   00FF49  20                 	db	32
   455   00FF4A  61                 	db	97	;'a'
   456   00FF4B  67                 	db	103	;'g'
   457   00FF4C  75                 	db	117	;'u'
   458   00FF4D  61                 	db	97	;'a'
   459   00FF4E  3A                 	db	58	;':'
   460   00FF4F  20                 	db	32
   461   00FF50  25                 	db	37
   462   00FF51  64                 	db	100	;'d'
   463   00FF52  00                 	db	0
   464   00FF53                     STR_1:
   465   00FF53  53                 	db	83	;'S'
   466   00FF54  45                 	db	69	;'E'
   467   00FF55  54                 	db	84	;'T'
   468   00FF56  55                 	db	85	;'U'
   469   00FF57  50                 	db	80	;'P'
   470   00FF58  20                 	db	32
   471   00FF59  43                 	db	67	;'C'
   472   00FF5A  4F                 	db	79	;'O'
   473   00FF5B  4D                 	db	77	;'M'
   474   00FF5C  50                 	db	80	;'P'
   475   00FF5D  4C                 	db	76	;'L'
   476   00FF5E  45                 	db	69	;'E'
   477   00FF5F  54                 	db	84	;'T'
   478   00FF60  45                 	db	69	;'E'
   479   00FF61  44                 	db	68	;'D'
   480   00FF62  20                 	db	32
   481   00FF63  53                 	db	83	;'S'
   482   00FF64  55                 	db	85	;'U'
   483   00FF65  43                 	db	67	;'C'
   484   00FF66  43                 	db	67	;'C'
   485   00FF67  45                 	db	69	;'E'
   486   00FF68  53                 	db	83	;'S'
   487   00FF69  53                 	db	83	;'S'
   488   00FF6A  46                 	db	70	;'F'
   489   00FF6B  55                 	db	85	;'U'
   490   00FF6C  4C                 	db	76	;'L'
   491   00FF6D  4C                 	db	76	;'L'
   492   00FF6E  59                 	db	89	;'Y'
   493   00FF6F  0D                 	db	13
   494   00FF70  0A                 	db	10
   495   00FF71  00                 	db	0
   496   00FF72                     STR_8:
   497   00FF72  0D                 	db	13
   498   00FF73  0A                 	db	10
   499   00FF74  30                 	db	48	;'0'
   500   00FF75  20                 	db	32
   501   00FF76  2D                 	db	45
   502   00FF77  20                 	db	32
   503   00FF78  56                 	db	86	;'V'
   504   00FF79  6F                 	db	111	;'o'
   505   00FF7A  6C                 	db	108	;'l'
   506   00FF7B  74                 	db	116	;'t'
   507   00FF7C  61                 	db	97	;'a'
   508   00FF7D  72                 	db	114	;'r'
   509   00FF7E  20                 	db	32
   510   00FF7F  61                 	db	97	;'a'
   511   00FF80  6F                 	db	111	;'o'
   512   00FF81  20                 	db	32
   513   00FF82  4D                 	db	77	;'M'
   514   00FF83  65                 	db	101	;'e'
   515   00FF84  6E                 	db	110	;'n'
   516   00FF85  75                 	db	117	;'u'
   517   00FF86  20                 	db	32
   518   00FF87  50                 	db	80	;'P'
   519   00FF88  72                 	db	114	;'r'
   520   00FF89  69                 	db	105	;'i'
   521   00FF8A  6E                 	db	110	;'n'
   522   00FF8B  63                 	db	99	;'c'
   523   00FF8C  69                 	db	105	;'i'
   524   00FF8D  70                 	db	112	;'p'
   525   00FF8E  61                 	db	97	;'a'
   526   00FF8F  6C                 	db	108	;'l'
   527   00FF90  00                 	db	0
   528   00FF91                     STR_3:
   529   00FF91  0D                 	db	13
   530   00FF92  0A                 	db	10
   531   00FF93  31                 	db	49	;'1'
   532   00FF94  20                 	db	32
   533   00FF95  2D                 	db	45
   534   00FF96  20                 	db	32
   535   00FF97  44                 	db	68	;'D'
   536   00FF98  65                 	db	101	;'e'
   537   00FF99  73                 	db	115	;'s'
   538   00FF9A  6C                 	db	108	;'l'
   539   00FF9B  69                 	db	105	;'i'
   540   00FF9C  67                 	db	103	;'g'
   541   00FF9D  61                 	db	97	;'a'
   542   00FF9E  72                 	db	114	;'r'
   543   00FF9F  20                 	db	32
   544   00FFA0  62                 	db	98	;'b'
   545   00FFA1  6F                 	db	111	;'o'
   546   00FFA2  6D                 	db	109	;'m'
   547   00FFA3  62                 	db	98	;'b'
   548   00FFA4  61                 	db	97	;'a'
   549   00FFA5  20                 	db	32
   550   00FFA6  64                 	db	100	;'d'
   551   00FFA7  65                 	db	101	;'e'
   552   00FFA8  20                 	db	32
   553   00FFA9  61                 	db	97	;'a'
   554   00FFAA  67                 	db	103	;'g'
   555   00FFAB  75                 	db	117	;'u'
   556   00FFAC  61                 	db	97	;'a'
   557   00FFAD  00                 	db	0
   558   00FFAE                     STR_10:
   559   00FFAE  0D                 	db	13
   560   00FFAF  0A                 	db	10
   561   00FFB0  42                 	db	66	;'B'
   562   00FFB1  6F                 	db	111	;'o'
   563   00FFB2  6D                 	db	109	;'m'
   564   00FFB3  62                 	db	98	;'b'
   565   00FFB4  61                 	db	97	;'a'
   566   00FFB5  20                 	db	32
   567   00FFB6  64                 	db	100	;'d'
   568   00FFB7  65                 	db	101	;'e'
   569   00FFB8  20                 	db	32
   570   00FFB9  61                 	db	97	;'a'
   571   00FFBA  67                 	db	103	;'g'
   572   00FFBB  75                 	db	117	;'u'
   573   00FFBC  61                 	db	97	;'a'
   574   00FFBD  20                 	db	32
   575   00FFBE  64                 	db	100	;'d'
   576   00FFBF  65                 	db	101	;'e'
   577   00FFC0  73                 	db	115	;'s'
   578   00FFC1  6C                 	db	108	;'l'
   579   00FFC2  69                 	db	105	;'i'
   580   00FFC3  67                 	db	103	;'g'
   581   00FFC4  61                 	db	97	;'a'
   582   00FFC5  64                 	db	100	;'d'
   583   00FFC6  61                 	db	97	;'a'
   584   00FFC7  00                 	db	0
   585   00FFC8                     STR_2:
   586   00FFC8  0D                 	db	13
   587   00FFC9  0A                 	db	10
   588   00FFCA  4D                 	db	77	;'M'
   589   00FFCB  45                 	db	69	;'E'
   590   00FFCC  4E                 	db	78	;'N'
   591   00FFCD  55                 	db	85	;'U'
   592   00FFCE  20                 	db	32
   593   00FFCF  50                 	db	80	;'P'
   594   00FFD0  52                 	db	82	;'R'
   595   00FFD1  49                 	db	73	;'I'
   596   00FFD2  4E                 	db	78	;'N'
   597   00FFD3  43                 	db	67	;'C'
   598   00FFD4  49                 	db	73	;'I'
   599   00FFD5  50                 	db	80	;'P'
   600   00FFD6  41                 	db	65	;'A'
   601   00FFD7  4C                 	db	76	;'L'
   602   00FFD8  00                 	db	0
   603   00FFD9                     STR_24:
   604   00FFD9  0D                 	db	13
   605   00FFDA  0A                 	db	10
   606   00FFDB  4F                 	db	79	;'O'
   607   00FFDC  70                 	db	112	;'p'
   608   00FFDD  63                 	db	99	;'c'
   609   00FFDE  61                 	db	97	;'a'
   610   00FFDF  6F                 	db	111	;'o'
   611   00FFE0  20                 	db	32
   612   00FFE1  49                 	db	73	;'I'
   613   00FFE2  6E                 	db	110	;'n'
   614   00FFE3  76                 	db	118	;'v'
   615   00FFE4  61                 	db	97	;'a'
   616   00FFE5  6C                 	db	108	;'l'
   617   00FFE6  69                 	db	105	;'i'
   618   00FFE7  64                 	db	100	;'d'
   619   00FFE8  61                 	db	97	;'a'
   620   00FFE9  00                 	db	0
   621   00FFEA                     STR_17:
   622   00FFEA  0D                 	db	13
   623   00FFEB  0A                 	db	10
   624   00FFEC  62                 	db	98	;'b'
   625   00FFED  69                 	db	105	;'i'
   626   00FFEE  74                 	db	116	;'t'
   627   00FFEF  73                 	db	115	;'s'
   628   00FFF0  3A                 	db	58	;':'
   629   00FFF1  20                 	db	32
   630   00FFF2  25                 	db	37
   631   00FFF3  64                 	db	100	;'d'
   632   00FFF4  00                 	db	0
   633   00FFF5                     STR_9:
   634   00FFF5  0D                 	db	13
   635   00FFF6  0A                 	db	10
   636   00FFF7  4F                 	db	79	;'O'
   637   00FFF8  70                 	db	112	;'p'
   638   00FFF9  63                 	db	99	;'c'
   639   00FFFA  61                 	db	97	;'a'
   640   00FFFB  6F                 	db	111	;'o'
   641   00FFFC  3A                 	db	58	;':'
   642   00FFFD  20                 	db	32
   643   00FFFE  00                 	db	0
   644   00FFFF  00                 	db	0	; dummy byte at the end
   645   000000                     
   646                           	psect	nvCOMRAM
   647   000033                     __pnvCOMRAM:
   648                           	callstack 0
   649   000033                     _TMR1_InterruptHandler:
   650                           	callstack 0
   651   000033                     	ds	2
   652   000035                     _timer1ReloadVal:
   653                           	callstack 0
   654   000035                     	ds	2
   655   000037                     _TMR0_InterruptHandler:
   656                           	callstack 0
   657   000037                     	ds	2
   658   000039                     _INT0_InterruptHandler:
   659                           	callstack 0
   660   000039                     	ds	2
   661   00003B                     _ADC_InterruptHandler:
   662                           	callstack 0
   663   00003B                     	ds	2
   664   00003D                     _timer0ReloadVal:
   665                           	callstack 0
   666   00003D                     	ds	1
   667   00003E                     _eusart1TxBufferRemaining:
   668                           	callstack 0
   669   00003E                     	ds	1
   670                           
   671                           	psect	nvBANK0
   672   0000F3                     __pnvBANK0:
   673                           	callstack 0
   674   0000F3                     _EUSART1_ErrorHandler:
   675                           	callstack 0
   676   0000F3                     	ds	2
   677   0000F5                     _EUSART1_OverrunErrorHandler:
   678                           	callstack 0
   679   0000F5                     	ds	2
   680   0000F7                     _EUSART1_FramingErrorHandler:
   681                           	callstack 0
   682   0000F7                     	ds	2
   683   0000F9                     _EUSART1_RxDefaultInterruptHandler:
   684                           	callstack 0
   685   0000F9                     	ds	2
   686   0000FB                     _EUSART1_TxDefaultInterruptHandler:
   687                           	callstack 0
   688   0000FB                     	ds	2
   689   0000FD                     _SistemaControloLigado:
   690                           	callstack 0
   691   0000FD                     	ds	1
   692   000000                     _TMR1	set	4046
   693   000000                     _T1GCONbits	set	4044
   694   000000                     _T1CONbits	set	4045
   695   000000                     _LATBbits	set	3978
   696   000000                     _T0CONbits	set	4053
   697   000000                     _TRISC	set	3988
   698   000000                     _RCSTA1bits	set	4011
   699   000000                     _TXSTA1bits	set	4012
   700   000000                     _ADCON0bits	set	4034
   701   000000                     _SSP1CON1bits	set	4038
   702   000000                     _WPUB	set	3937
   703   000000                     _LATA	set	3977
   704   000000                     _LATD	set	3980
   705   000000                     _LATE	set	3981
   706   000000                     _TRISCbits	set	3988
   707   000000                     _SSP1CON1	set	4038
   708   000000                     _SSP1STAT	set	4039
   709   000000                     _CCPR5H	set	3926
   710   000000                     _CCPR5L	set	3925
   711   000000                     _T1GCON	set	4044
   712   000000                     _RCONbits	set	4048
   713   000000                     _INTCON2bits	set	4081
   714   000000                     _INTCONbits	set	4082
   715   000000                     _SSP1BUF	set	4041
   716   000000                     _SSP1ADD	set	4040
   717   000000                     _IPR1bits	set	3999
   718   000000                     _RCSTA1	set	4011
   719   000000                     _BAUDCON1	set	4024
   720   000000                     _ADCON2	set	4032
   721   000000                     _ADCON1	set	4033
   722   000000                     _ADCON0	set	4034
   723   000000                     _SPBRGH1	set	4016
   724   000000                     _OSCCON2	set	4050
   725   000000                     _OSCCON	set	4051
   726   000000                     _T0CON	set	4053
   727   000000                     _TMR0L	set	4054
   728   000000                     _TMR0H	set	4055
   729   000000                     _TRISA	set	3986
   730   000000                     _ANSELE	set	3900
   731                           
   732                           ; #config settings
   733                           
   734                           	psect	cinit
   735   000FF0                     __pcinit:
   736                           	callstack 0
   737   000FF0                     start_initialization:
   738                           	callstack 0
   739   000FF0                     __initialization:
   740                           	callstack 0
   741                           
   742                           ; Initialize objects allocated to BANK0 (2 bytes)
   743                           ; load TBLPTR registers with __pidataBANK0
   744   000FF0  0EEA               	movlw	low __pidataBANK0
   745   000FF2  6EF6               	movwf	tblptrl,c
   746   000FF4  0E14               	movlw	high __pidataBANK0
   747   000FF6  6EF7               	movwf	tblptrh,c
   748   000FF8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   749   000FFA  6EF8               	movwf	tblptru,c
   750   000FFC  0009               	tblrd		*+	;fetch initializer
   751   000FFE  CFF5 F0FE          	movff	tablat,__pdataBANK0
   752   001002  0009               	tblrd		*+	;fetch initializer
   753   001004  CFF5 F0FF          	movff	tablat,__pdataBANK0+1
   754                           
   755                           ; Initialize objects allocated to COMRAM (2 bytes)
   756                           ; load TBLPTR registers with __pidataCOMRAM
   757   001008  0EE8               	movlw	low __pidataCOMRAM
   758   00100A  6EF6               	movwf	tblptrl,c
   759   00100C  0E14               	movlw	high __pidataCOMRAM
   760   00100E  6EF7               	movwf	tblptrh,c
   761   001010  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   762   001012  6EF8               	movwf	tblptru,c
   763   001014  0009               	tblrd		*+	;fetch initializer
   764   001016  CFF5 F03F          	movff	tablat,__pdataCOMRAM
   765   00101A  0009               	tblrd		*+	;fetch initializer
   766   00101C  CFF5 F040          	movff	tablat,__pdataCOMRAM+1
   767                           
   768                           ; Clear objects allocated to BANK0 (64 bytes)
   769   001020  EE00  F0B3         	lfsr	0,__pbssBANK0
   770   001024  0E40               	movlw	64
   771   001026                     clear_0:
   772   001026  6AEE               	clrf	postinc0,c
   773   001028  06E8               	decf	wreg,f,c
   774   00102A  E1FD               	bnz	clear_0
   775                           
   776                           ; Clear objects allocated to COMRAM (17 bytes)
   777   00102C  EE00  F022         	lfsr	0,__pbssCOMRAM
   778   001030  0E11               	movlw	17
   779   001032                     clear_1:
   780   001032  6AEE               	clrf	postinc0,c
   781   001034  06E8               	decf	wreg,f,c
   782   001036  E1FD               	bnz	clear_1
   783   001038                     end_of_initialization:
   784                           	callstack 0
   785   001038                     __end_of__initialization:
   786                           	callstack 0
   787   001038  9041               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   788   00103A  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   789   00103C  0100               	movlb	0
   790   00103E  EFE6  F005         	goto	_main	;jump to C main() function
   791                           
   792                           	psect	bssCOMRAM
   793   000022                     __pbssCOMRAM:
   794                           	callstack 0
   795   000022                     _s:
   796                           	callstack 0
   797   000022                     	ds	4
   798   000026                     _nivel_referencia:
   799                           	callstack 0
   800   000026                     	ds	2
   801   000028                     _convertedValue:
   802                           	callstack 0
   803   000028                     	ds	2
   804   00002A                     _intro_valor:
   805                           	callstack 0
   806   00002A                     	ds	1
   807   00002B                     _cnt_char:
   808                           	callstack 0
   809   00002B                     	ds	1
   810   00002C                     _rxData:
   811                           	callstack 0
   812   00002C                     	ds	1
   813   00002D                     _eusart1RxLastError:
   814                           	callstack 0
   815   00002D                     	ds	1
   816   00002E                     _eusart1RxCount:
   817                           	callstack 0
   818   00002E                     	ds	1
   819   00002F                     _eusart1RxTail:
   820                           	callstack 0
   821   00002F                     	ds	1
   822   000030                     _eusart1RxHead:
   823                           	callstack 0
   824   000030                     	ds	1
   825   000031                     _eusart1TxTail:
   826                           	callstack 0
   827   000031                     	ds	1
   828   000032                     _eusart1TxHead:
   829                           	callstack 0
   830   000032                     	ds	1
   831                           
   832                           	psect	dataCOMRAM
   833   00003F                     __pdataCOMRAM:
   834                           	callstack 0
   835   00003F                     _temperatura:
   836                           	callstack 0
   837   00003F                     	ds	2
   838                           
   839                           	psect	bssBANK0
   840   0000B3                     __pbssBANK0:
   841                           	callstack 0
   842   0000B3                     _eusart1RxStatusBuffer:
   843                           	callstack 0
   844   0000B3                     	ds	8
   845   0000BB                     _eusart1RxBuffer:
   846                           	callstack 0
   847   0000BB                     	ds	8
   848   0000C3                     _eusart1TxBuffer:
   849                           	callstack 0
   850   0000C3                     	ds	8
   851   0000CB                     _width:
   852                           	callstack 0
   853   0000CB                     	ds	2
   854   0000CD                     _prec:
   855                           	callstack 0
   856   0000CD                     	ds	2
   857   0000CF                     _nivel_agua:
   858                           	callstack 0
   859   0000CF                     	ds	2
   860   0000D1                     _flags:
   861                           	callstack 0
   862   0000D1                     	ds	1
   863   0000D2                     _BombaLigada:
   864                           	callstack 0
   865   0000D2                     	ds	1
   866   0000D3                     _dbuf:
   867                           	callstack 0
   868   0000D3                     	ds	32
   869                           
   870                           	psect	dataBANK0
   871   0000FE                     __pdataBANK0:
   872                           	callstack 0
   873   0000FE                     _carater_recebido:
   874                           	callstack 0
   875   0000FE                     	ds	1
   876   0000FF                     _menu:
   877                           	callstack 0
   878   0000FF                     	ds	1
   879                           
   880                           	psect	cstackBANK1
   881   000100                     __pcstackBANK1:
   882                           	callstack 0
   883   000100                     ?_vfprintf:
   884                           	callstack 0
   885   000100                     vfprintf@fp:
   886                           	callstack 0
   887                           
   888                           ; 2 bytes @ 0x0
   889   000100                     	ds	2
   890   000102                     vfprintf@fmt:
   891                           	callstack 0
   892                           
   893                           ; 2 bytes @ 0x2
   894   000102                     	ds	2
   895   000104                     vfprintf@ap:
   896                           	callstack 0
   897                           
   898                           ; 2 bytes @ 0x4
   899   000104                     	ds	2
   900   000106                     ?_printf:
   901                           	callstack 0
   902   000106                     printf@fmt:
   903                           	callstack 0
   904                           
   905                           ; 2 bytes @ 0x6
   906   000106                     	ds	4
   907   00010A                     ??_ShowMenuInTerminal:
   908                           
   909                           ; 1 bytes @ 0xA
   910   00010A                     	ds	2
   911                           
   912                           	psect	cstackBANK0
   913   000060                     __pcstackBANK0:
   914                           	callstack 0
   915   000060                     ?___aodiv:
   916                           	callstack 0
   917   000060                     ?___aomod:
   918                           	callstack 0
   919   000060                     fputc@c:
   920                           	callstack 0
   921   000060                     ___aodiv@dividend:
   922                           	callstack 0
   923   000060                     ___aomod@dividend:
   924                           	callstack 0
   925                           
   926                           ; 8 bytes @ 0x0
   927   000060                     	ds	2
   928   000062                     fputc@fp:
   929                           	callstack 0
   930                           
   931                           ; 2 bytes @ 0x2
   932   000062                     	ds	2
   933   000064                     ??_fputc:
   934                           
   935                           ; 1 bytes @ 0x4
   936   000064                     	ds	4
   937   000068                     ___aodiv@divisor:
   938                           	callstack 0
   939   000068                     ___aomod@divisor:
   940                           	callstack 0
   941                           
   942                           ; 8 bytes @ 0x8
   943   000068                     	ds	1
   944   000069                     fputs@s:
   945                           	callstack 0
   946                           
   947                           ; 2 bytes @ 0x9
   948   000069                     	ds	2
   949   00006B                     fputs@fp:
   950                           	callstack 0
   951                           
   952                           ; 2 bytes @ 0xB
   953   00006B                     	ds	2
   954   00006D                     fputs@c:
   955                           	callstack 0
   956                           
   957                           ; 1 bytes @ 0xD
   958   00006D                     	ds	1
   959   00006E                     fputs@i:
   960                           	callstack 0
   961                           
   962                           ; 2 bytes @ 0xE
   963   00006E                     	ds	2
   964   000070                     ?_abs:
   965                           	callstack 0
   966   000070                     ___aodiv@counter:
   967                           	callstack 0
   968   000070                     pad@fp:
   969                           	callstack 0
   970   000070                     abs@a:
   971                           	callstack 0
   972                           
   973                           ; 2 bytes @ 0x10
   974   000070                     	ds	1
   975   000071                     ___aodiv@sign:
   976                           	callstack 0
   977                           
   978                           ; 1 bytes @ 0x11
   979   000071                     	ds	1
   980   000072                     ??_abs:
   981   000072                     pad@buf:
   982                           	callstack 0
   983   000072                     ___aodiv@quotient:
   984                           	callstack 0
   985                           
   986                           ; 8 bytes @ 0x12
   987   000072                     	ds	2
   988   000074                     pad@p:
   989                           	callstack 0
   990                           
   991                           ; 2 bytes @ 0x14
   992   000074                     	ds	2
   993   000076                     pad@i:
   994                           	callstack 0
   995                           
   996                           ; 2 bytes @ 0x16
   997   000076                     	ds	2
   998   000078                     pad@w:
   999                           	callstack 0
  1000                           
  1001                           ; 2 bytes @ 0x18
  1002   000078                     	ds	2
  1003   00007A                     dtoa@fp:
  1004                           	callstack 0
  1005                           
  1006                           ; 2 bytes @ 0x1A
  1007   00007A                     	ds	2
  1008   00007C                     dtoa@d:
  1009                           	callstack 0
  1010                           
  1011                           ; 8 bytes @ 0x1C
  1012   00007C                     	ds	8
  1013   000084                     ??_dtoa:
  1014                           
  1015                           ; 1 bytes @ 0x24
  1016   000084                     	ds	8
  1017   00008C                     _dtoa$2076:
  1018                           	callstack 0
  1019                           
  1020                           ; 2 bytes @ 0x2C
  1021   00008C                     	ds	2
  1022   00008E                     dtoa@p:
  1023                           	callstack 0
  1024                           
  1025                           ; 2 bytes @ 0x2E
  1026   00008E                     	ds	2
  1027   000090                     dtoa@w:
  1028                           	callstack 0
  1029                           
  1030                           ; 2 bytes @ 0x30
  1031   000090                     	ds	2
  1032   000092                     dtoa@n:
  1033                           	callstack 0
  1034                           
  1035                           ; 8 bytes @ 0x32
  1036   000092                     	ds	8
  1037   00009A                     dtoa@s:
  1038                           	callstack 0
  1039                           
  1040                           ; 1 bytes @ 0x3A
  1041   00009A                     	ds	1
  1042   00009B                     dtoa@i:
  1043                           	callstack 0
  1044                           
  1045                           ; 2 bytes @ 0x3B
  1046   00009B                     	ds	2
  1047   00009D                     vfpfcnvrt@fp:
  1048                           	callstack 0
  1049                           
  1050                           ; 2 bytes @ 0x3D
  1051   00009D                     	ds	2
  1052   00009F                     vfpfcnvrt@fmt:
  1053                           	callstack 0
  1054                           
  1055                           ; 2 bytes @ 0x3F
  1056   00009F                     	ds	2
  1057   0000A1                     vfpfcnvrt@ap:
  1058                           	callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x41
  1061   0000A1                     	ds	2
  1062   0000A3                     ??_vfpfcnvrt:
  1063                           
  1064                           ; 1 bytes @ 0x43
  1065   0000A3                     	ds	2
  1066   0000A5                     vfpfcnvrt@convarg:
  1067                           	callstack 0
  1068                           
  1069                           ; 8 bytes @ 0x45
  1070   0000A5                     	ds	8
  1071   0000AD                     vfpfcnvrt@cp:
  1072                           	callstack 0
  1073                           
  1074                           ; 2 bytes @ 0x4D
  1075   0000AD                     	ds	2
  1076   0000AF                     vfprintf@cfmt:
  1077                           	callstack 0
  1078                           
  1079                           ; 2 bytes @ 0x4F
  1080   0000AF                     	ds	2
  1081   0000B1                     printf@ap:
  1082                           	callstack 0
  1083                           
  1084                           ; 2 bytes @ 0x51
  1085   0000B1                     	ds	2
  1086                           
  1087                           	psect	cstackCOMRAM
  1088   000001                     __pcstackCOMRAM:
  1089                           	callstack 0
  1090   000001                     ??_ADC_SelectChannel:
  1091   000001                     ??_TMR1_MyInterruptHandler:
  1092   000001                     ?_ADC_GetConversionResult:
  1093                           	callstack 0
  1094   000001                     ?___lmul:
  1095                           	callstack 0
  1096   000001                     TMR1_WriteTimer@timerVal:
  1097                           	callstack 0
  1098   000001                     ___lmul@multiplier:
  1099                           	callstack 0
  1100                           
  1101                           ; 4 bytes @ 0x0
  1102   000001                     	ds	1
  1103   000002                     ADC_SelectChannel@channel:
  1104                           	callstack 0
  1105                           
  1106                           ; 1 bytes @ 0x1
  1107   000002                     	ds	1
  1108   000003                     ??_ADC_GetConversionResult:
  1109   000003                     
  1110                           ; 1 bytes @ 0x2
  1111   000003                     	ds	2
  1112   000005                     ___lmul@multiplicand:
  1113                           	callstack 0
  1114                           
  1115                           ; 4 bytes @ 0x4
  1116   000005                     	ds	4
  1117   000009                     ___lmul@product:
  1118                           	callstack 0
  1119                           
  1120                           ; 4 bytes @ 0x8
  1121   000009                     	ds	4
  1122   00000D                     ?___aldiv:
  1123                           	callstack 0
  1124   00000D                     ___aldiv@dividend:
  1125                           	callstack 0
  1126                           
  1127                           ; 4 bytes @ 0xC
  1128   00000D                     	ds	4
  1129   000011                     ___aldiv@divisor:
  1130                           	callstack 0
  1131                           
  1132                           ; 4 bytes @ 0x10
  1133   000011                     	ds	4
  1134   000015                     ___aldiv@counter:
  1135                           	callstack 0
  1136                           
  1137                           ; 1 bytes @ 0x14
  1138   000015                     	ds	1
  1139   000016                     ___aldiv@sign:
  1140                           	callstack 0
  1141                           
  1142                           ; 1 bytes @ 0x15
  1143   000016                     	ds	1
  1144   000017                     ___aldiv@quotient:
  1145                           	callstack 0
  1146                           
  1147                           ; 4 bytes @ 0x16
  1148   000017                     	ds	4
  1149   00001B                     ??_INTERRUPT_InterruptManagerHigh:
  1150   00001B                     
  1151                           ; 1 bytes @ 0x1A
  1152   00001B                     	ds	4
  1153   00001F                     EUSART1_Read@readValue:
  1154                           	callstack 0
  1155   00001F                     EUSART1_Write@txData:
  1156                           	callstack 0
  1157   00001F                     ___aomod@counter:
  1158                           	callstack 0
  1159   00001F                     ADC_SetInterruptHandler@InterruptHandler:
  1160                           	callstack 0
  1161   00001F                     INT0_SetInterruptHandler@InterruptHandler:
  1162                           	callstack 0
  1163   00001F                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1164                           	callstack 0
  1165   00001F                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1166                           	callstack 0
  1167   00001F                     EUSART1_SetErrorHandler@interruptHandler:
  1168                           	callstack 0
  1169   00001F                     EUSART1_SetTxInterruptHandler@interruptHandler:
  1170                           	callstack 0
  1171   00001F                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1172                           	callstack 0
  1173   00001F                     TMR0_SetInterruptHandler@InterruptHandler:
  1174                           	callstack 0
  1175   00001F                     TMR1_SetInterruptHandler@InterruptHandler:
  1176                           	callstack 0
  1177                           
  1178                           ; 2 bytes @ 0x1E
  1179   00001F                     	ds	1
  1180   000020                     putch@txData:
  1181                           	callstack 0
  1182   000020                     ___aomod@sign:
  1183                           	callstack 0
  1184                           
  1185                           ; 1 bytes @ 0x1F
  1186   000020                     	ds	1
  1187   000021                     ??_pad:
  1188                           
  1189                           ; 1 bytes @ 0x20
  1190   000021                     	ds	1
  1191   000022                     
  1192                           ; 1 bytes @ 0x21
  1193 ;;
  1194 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1195 ;;
  1196 ;; *************** function _main *****************
  1197 ;; Defined at:
  1198 ;;		line 101 in file "main.c"
  1199 ;; Parameters:    Size  Location     Type
  1200 ;;		None
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;		None
  1203 ;; Return value:  Size  Location     Type
  1204 ;;                  1    wreg      void 
  1205 ;; Registers used:
  1206 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1216 ;;Total ram usage:        0 bytes
  1217 ;; Hardware stack levels required when called: 14
  1218 ;; This function calls:
  1219 ;;		_ADC_SetInterruptHandler
  1220 ;;		_CheckUSART
  1221 ;;		_INT0_SetInterruptHandler
  1222 ;;		_SYSTEM_Initialize
  1223 ;;		_ShowMenuInTerminal
  1224 ;;		_TMR0_SetInterruptHandler
  1225 ;;		_TMR0_StartTimer
  1226 ;;		_TMR1_SetInterruptHandler
  1227 ;;		_TMR1_StartTimer
  1228 ;;		_TMR1_StopTimer
  1229 ;;		_printf
  1230 ;; This function is called by:
  1231 ;;		Startup code after reset
  1232 ;; This function uses a non-reentrant model
  1233 ;;
  1234                           
  1235                           	psect	text0
  1236   000BCC                     __ptext0:
  1237                           	callstack 0
  1238   000BCC                     _main:
  1239                           	callstack 17
  1240   000BCC                     
  1241                           ;main.c: 103:     SYSTEM_Initialize();
  1242   000BCC  EC63  F009         	call	_SYSTEM_Initialize	;wreg free
  1243   000BD0                     
  1244                           ;main.c: 110:     (INTCONbits.GIEH = 1);
  1245   000BD0  8EF2               	bsf	242,7,c	;volatile
  1246   000BD2                     
  1247                           ;main.c: 113:     (INTCONbits.GIEL = 1);
  1248   000BD2  8CF2               	bsf	242,6,c	;volatile
  1249   000BD4                     
  1250                           ;main.c: 122:     (INTCONbits.PEIE = 1);
  1251   000BD4  8CF2               	bsf	242,6,c	;volatile
  1252                           
  1253                           ;main.c: 127:     INT0_SetInterruptHandler(INT0_MyInterruptHandler);
  1254   000BD6  0E46               	movlw	low _INT0_MyInterruptHandler
  1255   000BD8  6E1F               	movwf	INT0_SetInterruptHandler@InterruptHandler^0,c
  1256   000BDA  0E14               	movlw	high _INT0_MyInterruptHandler
  1257   000BDC  6E20               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,c
  1258   000BDE  EC3F  F00A         	call	_INT0_SetInterruptHandler	;wreg free
  1259                           
  1260                           ;main.c: 128:     ADC_SetInterruptHandler(ADC_MyInterruptHandler);
  1261   000BE2  0EE6               	movlw	low _ADC_MyInterruptHandler
  1262   000BE4  6E1F               	movwf	ADC_SetInterruptHandler@InterruptHandler^0,c
  1263   000BE6  0E0E               	movlw	high _ADC_MyInterruptHandler
  1264   000BE8  6E20               	movwf	(ADC_SetInterruptHandler@InterruptHandler+1)^0,c
  1265   000BEA  EC5D  F00A         	call	_ADC_SetInterruptHandler	;wreg free
  1266                           
  1267                           ;main.c: 129:     TMR0_SetInterruptHandler(TMR0_MyInterruptHandler);
  1268   000BEE  0E54               	movlw	low _TMR0_MyInterruptHandler
  1269   000BF0  6E1F               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  1270   000BF2  0E14               	movlw	high _TMR0_MyInterruptHandler
  1271   000BF4  6E20               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  1272   000BF6  EC3A  F00A         	call	_TMR0_SetInterruptHandler	;wreg free
  1273   000BFA                     
  1274                           ;main.c: 130:     TMR0_StartTimer();
  1275   000BFA  EC70  F00A         	call	_TMR0_StartTimer	;wreg free
  1276   000BFE                     
  1277                           ;main.c: 132:     TMR1_SetInterruptHandler(TMR1_MyInterruptHandler);
  1278   000BFE  0EDA               	movlw	low _TMR1_MyInterruptHandler
  1279   000C00  6E1F               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
  1280   000C02  0E11               	movlw	high _TMR1_MyInterruptHandler
  1281   000C04  6E20               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
  1282   000C06  EC35  F00A         	call	_TMR1_SetInterruptHandler	;wreg free
  1283                           
  1284                           ;main.c: 133:     TMR1_StartTimer();
  1285   000C0A  EC6E  F00A         	call	_TMR1_StartTimer	;wreg free
  1286   000C0E                     
  1287                           ;main.c: 135:     printf("SETUP COMPLETED SUCCESSFULLY\r\n");
  1288   000C0E  0E53               	movlw	low STR_1
  1289   000C10  0101               	movlb	1	; () banked
  1290   000C12  6F06               	movwf	printf@fmt& (0+255),b
  1291   000C14  0EFF               	movlw	high STR_1
  1292   000C16  6F07               	movwf	(printf@fmt+1)& (0+255),b
  1293   000C18  EC4E  F009         	call	_printf	;wreg free
  1294   000C1C                     
  1295                           ;main.c: 136:     SistemaControloLigado = 1;
  1296   000C1C  0E01               	movlw	1
  1297   000C1E  0100               	movlb	0	; () banked
  1298   000C20  6FFD               	movwf	_SistemaControloLigado& (0+255),b	;volatile
  1299   000C22                     l3364:
  1300                           
  1301                           ;main.c: 140:         if (!SistemaControloLigado) {
  1302   000C22  0100               	movlb	0	; () banked
  1303   000C24  51FD               	movf	_SistemaControloLigado& (0+255),w,b	;volatile
  1304   000C26  A4D8               	btfss	status,2,c
  1305   000C28  EF18  F006         	goto	u2311
  1306   000C2C  EF1A  F006         	goto	u2310
  1307   000C30                     u2311:
  1308   000C30  EF20  F006         	goto	l3372
  1309   000C34                     u2310:
  1310   000C34                     
  1311                           ; BSR set to: 0
  1312                           ;main.c: 141:             TMR1_StopTimer();
  1313   000C34  EC6C  F00A         	call	_TMR1_StopTimer	;wreg free
  1314   000C38  988A               	bcf	138,4,c	;volatile
  1315   000C3A  868A               	bsf	138,3,c	;volatile
  1316   000C3C  EF23  F006         	goto	l3376
  1317   000C40                     l3372:
  1318                           
  1319                           ; BSR set to: 0
  1320                           ;main.c: 145:             TMR1_StartTimer();
  1321   000C40  EC6E  F00A         	call	_TMR1_StartTimer	;wreg free
  1322   000C44  968A               	bcf	138,3,c	;volatile
  1323   000C46                     l3376:
  1324                           
  1325                           ;main.c: 150:         if (BombaLigada) {
  1326   000C46  0100               	movlb	0	; () banked
  1327   000C48  51D2               	movf	_BombaLigada& (0+255),w,b	;volatile
  1328   000C4A  B4D8               	btfsc	status,2,c
  1329   000C4C  EF2A  F006         	goto	u2321
  1330   000C50  EF2C  F006         	goto	u2320
  1331   000C54                     u2321:
  1332   000C54  EF2F  F006         	goto	l558
  1333   000C58                     u2320:
  1334   000C58                     
  1335                           ; BSR set to: 0
  1336   000C58  8A8A               	bsf	138,5,c	;volatile
  1337   000C5A  EF30  F006         	goto	l3378
  1338   000C5E                     l558:
  1339                           
  1340                           ; BSR set to: 0
  1341   000C5E  9A8A               	bcf	138,5,c	;volatile
  1342   000C60                     l3378:
  1343                           
  1344                           ; BSR set to: 0
  1345                           ;main.c: 156:         if (carater_recebido) {
  1346   000C60  51FE               	movf	_carater_recebido& (0+255),w,b
  1347   000C62  B4D8               	btfsc	status,2,c
  1348   000C64  EF36  F006         	goto	u2331
  1349   000C68  EF38  F006         	goto	u2330
  1350   000C6C                     u2331:
  1351   000C6C  EF3D  F006         	goto	l3384
  1352   000C70                     u2330:
  1353   000C70                     
  1354                           ; BSR set to: 0
  1355                           ;main.c: 157:             ShowMenuInTerminal();
  1356   000C70  ECDB  F001         	call	_ShowMenuInTerminal	;wreg free
  1357   000C74                     
  1358                           ;main.c: 158:             carater_recebido = 0;
  1359   000C74  0E00               	movlw	0
  1360   000C76  0100               	movlb	0	; () banked
  1361   000C78  6FFE               	movwf	_carater_recebido& (0+255),b
  1362   000C7A                     l3384:
  1363                           
  1364                           ; BSR set to: 0
  1365                           ;main.c: 160:         CheckUSART();
  1366   000C7A  EC08  F007         	call	_CheckUSART	;wreg free
  1367   000C7E  EF11  F006         	goto	l3364
  1368   000C82  EF99  F000         	goto	start
  1369   000C86                     __end_of_main:
  1370                           	callstack 0
  1371                           
  1372 ;; *************** function _TMR1_StopTimer *****************
  1373 ;; Defined at:
  1374 ;;		line 99 in file "mcc_generated_files/tmr1.c"
  1375 ;; Parameters:    Size  Location     Type
  1376 ;;		None
  1377 ;; Auto vars:     Size  Location     Type
  1378 ;;		None
  1379 ;; Return value:  Size  Location     Type
  1380 ;;                  1    wreg      void 
  1381 ;; Registers used:
  1382 ;;		None
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1392 ;;Total ram usage:        0 bytes
  1393 ;; Hardware stack levels used: 1
  1394 ;; Hardware stack levels required when called: 4
  1395 ;; This function calls:
  1396 ;;		Nothing
  1397 ;; This function is called by:
  1398 ;;		_main
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402                           	psect	text1
  1403   0014D8                     __ptext1:
  1404                           	callstack 0
  1405   0014D8                     _TMR1_StopTimer:
  1406                           	callstack 26
  1407   0014D8                     
  1408                           ;mcc_generated_files/tmr1.c: 102:     T1CONbits.TMR1ON = 0;
  1409   0014D8  90CD               	bcf	205,0,c	;volatile
  1410   0014DA  0012               	return		;funcret
  1411   0014DC                     __end_of_TMR1_StopTimer:
  1412                           	callstack 0
  1413                           
  1414 ;; *************** function _TMR1_StartTimer *****************
  1415 ;; Defined at:
  1416 ;;		line 93 in file "mcc_generated_files/tmr1.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;		None
  1419 ;; Auto vars:     Size  Location     Type
  1420 ;;		None
  1421 ;; Return value:  Size  Location     Type
  1422 ;;                  1    wreg      void 
  1423 ;; Registers used:
  1424 ;;		None
  1425 ;; Tracked objects:
  1426 ;;		On entry : 0/0
  1427 ;;		On exit  : 0/0
  1428 ;;		Unchanged: 0/0
  1429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1434 ;;Total ram usage:        0 bytes
  1435 ;; Hardware stack levels used: 1
  1436 ;; Hardware stack levels required when called: 4
  1437 ;; This function calls:
  1438 ;;		Nothing
  1439 ;; This function is called by:
  1440 ;;		_main
  1441 ;; This function uses a non-reentrant model
  1442 ;;
  1443                           
  1444                           	psect	text2
  1445   0014DC                     __ptext2:
  1446                           	callstack 0
  1447   0014DC                     _TMR1_StartTimer:
  1448                           	callstack 26
  1449   0014DC                     
  1450                           ;mcc_generated_files/tmr1.c: 96:     T1CONbits.TMR1ON = 1;
  1451   0014DC  80CD               	bsf	205,0,c	;volatile
  1452   0014DE  0012               	return		;funcret
  1453   0014E0                     __end_of_TMR1_StartTimer:
  1454                           	callstack 0
  1455                           
  1456 ;; *************** function _TMR0_StartTimer *****************
  1457 ;; Defined at:
  1458 ;;		line 94 in file "mcc_generated_files/tmr0.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;		None
  1461 ;; Auto vars:     Size  Location     Type
  1462 ;;		None
  1463 ;; Return value:  Size  Location     Type
  1464 ;;                  1    wreg      void 
  1465 ;; Registers used:
  1466 ;;		None
  1467 ;; Tracked objects:
  1468 ;;		On entry : 0/0
  1469 ;;		On exit  : 0/0
  1470 ;;		Unchanged: 0/0
  1471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1476 ;;Total ram usage:        0 bytes
  1477 ;; Hardware stack levels used: 1
  1478 ;; Hardware stack levels required when called: 4
  1479 ;; This function calls:
  1480 ;;		Nothing
  1481 ;; This function is called by:
  1482 ;;		_main
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           
  1486                           	psect	text3
  1487   0014E0                     __ptext3:
  1488                           	callstack 0
  1489   0014E0                     _TMR0_StartTimer:
  1490                           	callstack 26
  1491   0014E0                     
  1492                           ;mcc_generated_files/tmr0.c: 97:     T0CONbits.TMR0ON = 1;
  1493   0014E0  8ED5               	bsf	213,7,c	;volatile
  1494   0014E2  0012               	return		;funcret
  1495   0014E4                     __end_of_TMR0_StartTimer:
  1496                           	callstack 0
  1497                           
  1498 ;; *************** function _ShowMenuInTerminal *****************
  1499 ;; Defined at:
  1500 ;;		line 168 in file "main.c"
  1501 ;; Parameters:    Size  Location     Type
  1502 ;;		None
  1503 ;; Auto vars:     Size  Location     Type
  1504 ;;		None
  1505 ;; Return value:  Size  Location     Type
  1506 ;;                  1    wreg      void 
  1507 ;; Registers used:
  1508 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1509 ;; Tracked objects:
  1510 ;;		On entry : 0/0
  1511 ;;		On exit  : 0/0
  1512 ;;		Unchanged: 0/0
  1513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1516 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1517 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1518 ;;Total ram usage:        2 bytes
  1519 ;; Hardware stack levels used: 1
  1520 ;; Hardware stack levels required when called: 13
  1521 ;; This function calls:
  1522 ;;		_EUSART1_Write
  1523 ;;		_printf
  1524 ;; This function is called by:
  1525 ;;		_main
  1526 ;; This function uses a non-reentrant model
  1527 ;;
  1528                           
  1529                           	psect	text4
  1530   0003B6                     __ptext4:
  1531                           	callstack 0
  1532   0003B6                     _ShowMenuInTerminal:
  1533                           	callstack 17
  1534   0003B6                     
  1535                           ;main.c: 169:     switch (menu) {
  1536   0003B6  EFB6  F002         	goto	l3322
  1537   0003BA                     l3242:
  1538                           
  1539                           ; BSR set to: 1
  1540                           ;main.c: 171:             EUSART1_Write(12);
  1541   0003BA  0E0C               	movlw	12
  1542   0003BC  ECA3  F007         	call	_EUSART1_Write
  1543   0003C0                     
  1544                           ;main.c: 172:             printf("\r\nMENU PRINCIPAL");
  1545   0003C0  0EC8               	movlw	low STR_2
  1546   0003C2  0101               	movlb	1	; () banked
  1547   0003C4  6F06               	movwf	printf@fmt& (0+255),b
  1548   0003C6  0EFF               	movlw	high STR_2
  1549   0003C8  6F07               	movwf	(printf@fmt+1)& (0+255),b
  1550   0003CA  EC4E  F009         	call	_printf	;wreg free
  1551   0003CE                     
  1552                           ;main.c: 173:             printf("\r\n1 - Desligar bomba de agua");
  1553   0003CE  0E91               	movlw	low STR_3
  1554   0003D0  0101               	movlb	1	; () banked
  1555   0003D2  6F06               	movwf	printf@fmt& (0+255),b
  1556   0003D4  0EFF               	movlw	high STR_3
  1557   0003D6  6F07               	movwf	(printf@fmt+1)& (0+255),b
  1558   0003D8  EC4E  F009         	call	_printf	;wreg free
  1559   0003DC                     
  1560                           ;main.c: 174:             printf("\r\n2 - Ativar comtrolo do nivel de agua");
  1561   0003DC  0EE5               	movlw	low STR_4
  1562   0003DE  0101               	movlb	1	; () banked
  1563   0003E0  6F06               	movwf	printf@fmt& (0+255),b
  1564   0003E2  0EFE               	movlw	high STR_4
  1565   0003E4  6F07               	movwf	(printf@fmt+1)& (0+255),b
  1566   0003E6  EC4E  F009         	call	_printf	;wreg free
  1567   0003EA                     
  1568                           ;main.c: 175:             printf("\r\n3 - Visualizar a percentagem do nivel de agua");
  1569   0003EA  0E3D               	movlw	low STR_5
  1570   0003EC  0101               	movlb	1	; () banked
  1571   0003EE  6F06               	movwf	printf@fmt& (0+255),b
  1572   0003F0  0EFE               	movlw	high STR_5
  1573   0003F2  6F07               	movwf	(printf@fmt+1)& (0+255),b
  1574   0003F4  EC4E  F009         	call	_printf	;wreg free
  1575   0003F8                     
  1576                           ;main.c: 176:             printf("\r\n4 - Visualizar o nivel de referencia");
  1577   0003F8  0EBE               	movlw	low STR_6
  1578   0003FA  0101               	movlb	1	; () banked
  1579   0003FC  6F06               	movwf	printf@fmt& (0+255),b
  1580   0003FE  0EFE               	movlw	high STR_6
  1581   000400  6F07               	movwf	(printf@fmt+1)& (0+255),b
  1582   000402  EC4E  F009         	call	_printf	;wreg free
  1583   000406                     
  1584                           ;main.c: 177:             printf("\r\n5 - Programar novo valor de referencia");
  1585   000406  0E6D               	movlw	low STR_7
  1586   000408  0101               	movlb	1	; () banked
  1587   00040A  6F06               	movwf	printf@fmt& (0+255),b
  1588   00040C  0EFE               	movlw	high STR_7
  1589   00040E  6F07               	movwf	(printf@fmt+1)& (0+255),b
  1590   000410  EC4E  F009         	call	_printf	;wreg free
  1591   000414                     
  1592                           ;main.c: 178:             printf("\r\n0 - Voltar ao Menu Principal");
  1593   000414  0E72               	movlw	low STR_8
  1594   000416  0101               	movlb	1	; () banked
  1595   000418  6F06               	movwf	printf@fmt& (0+255),b
  1596   00041A  0EFF               	movlw	high STR_8
  1597   00041C  6F07               	movwf	(printf@fmt+1)& (0+255),b
  1598   00041E  EC4E  F009         	call	_printf	;wreg free
  1599   000422                     
  1600                           ;main.c: 179:             printf("\r\nOpcao: ");
  1601   000422  0EF5               	movlw	low STR_9
  1602   000424  0101               	movlb	1	; () banked
  1603   000426  6F06               	movwf	printf@fmt& (0+255),b
  1604   000428  0EFF               	movlw	high STR_9
  1605   00042A  6F07               	movwf	(printf@fmt+1)& (0+255),b
  1606   00042C  EC4E  F009         	call	_printf	;wreg free
  1607   000430                     l3260:
  1608                           
  1609                           ;main.c: 180:             menu = 0;
  1610   000430  0E00               	movlw	0
  1611   000432  0100               	movlb	0	; () banked
  1612   000434  6FFF               	movwf	_menu& (0+255),b
  1613                           
  1614                           ;main.c: 181:             break;
  1615   000436  EFDD  F002         	goto	l575
  1616   00043A                     l3262:
  1617                           
  1618                           ; BSR set to: 1
  1619                           ;main.c: 183:             EUSART1_Write(12);
  1620   00043A  0E0C               	movlw	12
  1621   00043C  ECA3  F007         	call	_EUSART1_Write
  1622   000440                     
  1623                           ;main.c: 185:             printf("\r\nBomba de agua desligada");
  1624   000440  0EAE               	movlw	low STR_10
  1625   000442  0101               	movlb	1	; () banked
  1626   000444  6F06               	movwf	printf@fmt& (0+255),b
  1627   000446  0EFF               	movlw	high STR_10
  1628   000448  6F07               	movwf	(printf@fmt+1)& (0+255),b
  1629   00044A  EC4E  F009         	call	_printf	;wreg free
  1630   00044E                     
  1631                           ;main.c: 186:             printf("\r\n0 - Voltar ao Menu Principal");
  1632   00044E  0E72               	movlw	low STR_8
  1633   000450  0101               	movlb	1	; () banked
  1634   000452  6F06               	movwf	printf@fmt& (0+255),b
  1635   000454  0EFF               	movlw	high STR_8
  1636   000456  6F07               	movwf	(printf@fmt+1)& (0+255),b
  1637   000458  EC4E  F009         	call	_printf	;wreg free
  1638   00045C                     
  1639                           ;main.c: 187:             printf("\r\nOpcao: ");
  1640   00045C  0EF5               	movlw	low STR_9
  1641   00045E  0101               	movlb	1	; () banked
  1642   000460  6F06               	movwf	printf@fmt& (0+255),b
  1643   000462  0EFF               	movlw	high STR_9
  1644   000464  6F07               	movwf	(printf@fmt+1)& (0+255),b
  1645   000466  EC4E  F009         	call	_printf	;wreg free
  1646   00046A                     
  1647                           ;main.c: 188:             BombaLigada = 0;
  1648   00046A  0E00               	movlw	0
  1649   00046C  0100               	movlb	0	; () banked
  1650   00046E  6FD2               	movwf	_BombaLigada& (0+255),b	;volatile
  1651   000470  EF18  F002         	goto	l3260
  1652   000474                     l3274:
  1653                           
  1654                           ; BSR set to: 1
  1655                           ;main.c: 192:             EUSART1_Write(12);
  1656   000474  0E0C               	movlw	12
  1657   000476  ECA3  F007         	call	_EUSART1_Write
  1658   00047A                     
  1659                           ;main.c: 194:             printf("\r\nControlo do nivel de agua ativado");
  1660   00047A  0E0C               	movlw	low STR_13
  1661   00047C  0101               	movlb	1	; () banked
  1662   00047E  6F06               	movwf	printf@fmt& (0+255),b
  1663   000480  0EFF               	movlw	high STR_13
  1664   000482  6F07               	movwf	(printf@fmt+1)& (0+255),b
  1665   000484  EC4E  F009         	call	_printf	;wreg free
  1666   000488                     
  1667                           ;main.c: 195:             printf("\r\n0 - Voltar ao Menu Principal");
  1668   000488  0E72               	movlw	low STR_8
  1669   00048A  0101               	movlb	1	; () banked
  1670   00048C  6F06               	movwf	printf@fmt& (0+255),b
  1671   00048E  0EFF               	movlw	high STR_8
  1672   000490  6F07               	movwf	(printf@fmt+1)& (0+255),b
  1673   000492  EC4E  F009         	call	_printf	;wreg free
  1674   000496                     
  1675                           ;main.c: 196:             printf("\r\nOpcao: ");
  1676   000496  0EF5               	movlw	low STR_9
  1677   000498  0101               	movlb	1	; () banked
  1678   00049A  6F06               	movwf	printf@fmt& (0+255),b
  1679   00049C  0EFF               	movlw	high STR_9
  1680   00049E  6F07               	movwf	(printf@fmt+1)& (0+255),b
  1681   0004A0  EC4E  F009         	call	_printf	;wreg free
  1682   0004A4  EF18  F002         	goto	l3260
  1683   0004A8                     l3284:
  1684                           
  1685                           ; BSR set to: 1
  1686                           ;main.c: 200:             EUSART1_Write(12);
  1687   0004A8  0E0C               	movlw	12
  1688   0004AA  ECA3  F007         	call	_EUSART1_Write
  1689   0004AE                     
  1690                           ;main.c: 202:             printf("\r\nPercentagem do nivel de agua: %d", nivel_agua);
  1691   0004AE  0E30               	movlw	low STR_16
  1692   0004B0  0101               	movlb	1	; () banked
  1693   0004B2  6F06               	movwf	printf@fmt& (0+255),b
  1694   0004B4  0EFF               	movlw	high STR_16
  1695   0004B6  6F07               	movwf	(printf@fmt+1)& (0+255),b
  1696   0004B8  C0CF  F108         	movff	_nivel_agua,?_printf+2
  1697   0004BC  C0D0  F109         	movff	_nivel_agua+1,?_printf+3
  1698   0004C0  EC4E  F009         	call	_printf	;wreg free
  1699   0004C4                     
  1700                           ;main.c: 203:             printf("\r\nbits: %d", convertedValue);
  1701   0004C4  0EEA               	movlw	low STR_17
  1702   0004C6  0101               	movlb	1	; () banked
  1703   0004C8  6F06               	movwf	printf@fmt& (0+255),b
  1704   0004CA  0EFF               	movlw	high STR_17
  1705   0004CC  6F07               	movwf	(printf@fmt+1)& (0+255),b
  1706   0004CE  C028  F108         	movff	_convertedValue,?_printf+2
  1707   0004D2  C029  F109         	movff	_convertedValue+1,?_printf+3
  1708   0004D6  EC4E  F009         	call	_printf	;wreg free
  1709   0004DA                     
  1710                           ;main.c: 204:             printf("\r\n0 - Voltar ao Menu Principal");
  1711   0004DA  0E72               	movlw	low STR_8
  1712   0004DC  0101               	movlb	1	; () banked
  1713   0004DE  6F06               	movwf	printf@fmt& (0+255),b
  1714   0004E0  0EFF               	movlw	high STR_8
  1715   0004E2  6F07               	movwf	(printf@fmt+1)& (0+255),b
  1716   0004E4  EC4E  F009         	call	_printf	;wreg free
  1717   0004E8                     
  1718                           ;main.c: 205:             printf("\r\nOpcao: ");
  1719   0004E8  0EF5               	movlw	low STR_9
  1720   0004EA  0101               	movlb	1	; () banked
  1721   0004EC  6F06               	movwf	printf@fmt& (0+255),b
  1722   0004EE  0EFF               	movlw	high STR_9
  1723   0004F0  6F07               	movwf	(printf@fmt+1)& (0+255),b
  1724   0004F2  EC4E  F009         	call	_printf	;wreg free
  1725   0004F6  EF18  F002         	goto	l3260
  1726   0004FA                     l3296:
  1727                           
  1728                           ; BSR set to: 1
  1729                           ;main.c: 209:             EUSART1_Write(12);
  1730   0004FA  0E0C               	movlw	12
  1731   0004FC  ECA3  F007         	call	_EUSART1_Write
  1732   000500                     
  1733                           ;main.c: 211:             printf("\r\n0 - Voltar ao Menu Principal");
  1734   000500  0E72               	movlw	low STR_8
  1735   000502  0101               	movlb	1	; () banked
  1736   000504  6F06               	movwf	printf@fmt& (0+255),b
  1737   000506  0EFF               	movlw	high STR_8
  1738   000508  6F07               	movwf	(printf@fmt+1)& (0+255),b
  1739   00050A  EC4E  F009         	call	_printf	;wreg free
  1740   00050E                     
  1741                           ;main.c: 212:             printf("\r\nOpcao: ");
  1742   00050E  0EF5               	movlw	low STR_9
  1743   000510  0101               	movlb	1	; () banked
  1744   000512  6F06               	movwf	printf@fmt& (0+255),b
  1745   000514  0EFF               	movlw	high STR_9
  1746   000516  6F07               	movwf	(printf@fmt+1)& (0+255),b
  1747   000518  EC4E  F009         	call	_printf	;wreg free
  1748   00051C  EF18  F002         	goto	l3260
  1749   000520                     l3304:
  1750                           
  1751                           ; BSR set to: 1
  1752                           ;main.c: 216:             EUSART1_Write(12);
  1753   000520  0E0C               	movlw	12
  1754   000522  ECA3  F007         	call	_EUSART1_Write
  1755   000526                     
  1756                           ;main.c: 218:             printf("\r\n0 - Voltar ao Menu Principal");
  1757   000526  0E72               	movlw	low STR_8
  1758   000528  0101               	movlb	1	; () banked
  1759   00052A  6F06               	movwf	printf@fmt& (0+255),b
  1760   00052C  0EFF               	movlw	high STR_8
  1761   00052E  6F07               	movwf	(printf@fmt+1)& (0+255),b
  1762   000530  EC4E  F009         	call	_printf	;wreg free
  1763   000534                     
  1764                           ;main.c: 219:             printf("\r\nOpcao: ");
  1765   000534  0EF5               	movlw	low STR_9
  1766   000536  0101               	movlb	1	; () banked
  1767   000538  6F06               	movwf	printf@fmt& (0+255),b
  1768   00053A  0EFF               	movlw	high STR_9
  1769   00053C  6F07               	movwf	(printf@fmt+1)& (0+255),b
  1770   00053E  EC4E  F009         	call	_printf	;wreg free
  1771   000542  EF18  F002         	goto	l3260
  1772   000546                     l3312:
  1773                           
  1774                           ; BSR set to: 1
  1775                           ;main.c: 223:             EUSART1_Write(12);
  1776   000546  0E0C               	movlw	12
  1777   000548  ECA3  F007         	call	_EUSART1_Write
  1778   00054C                     
  1779                           ;main.c: 224:             printf("\r\nOpcao Invalida");
  1780   00054C  0ED9               	movlw	low STR_24
  1781   00054E  0101               	movlb	1	; () banked
  1782   000550  6F06               	movwf	printf@fmt& (0+255),b
  1783   000552  0EFF               	movlw	high STR_24
  1784   000554  6F07               	movwf	(printf@fmt+1)& (0+255),b
  1785   000556  EC4E  F009         	call	_printf	;wreg free
  1786   00055A                     
  1787                           ;main.c: 225:             printf("\r\nPrima 0 para voltar ao Menu Principal");
  1788   00055A  0E96               	movlw	low STR_25
  1789   00055C  0101               	movlb	1	; () banked
  1790   00055E  6F06               	movwf	printf@fmt& (0+255),b
  1791   000560  0EFE               	movlw	high STR_25
  1792   000562  6F07               	movwf	(printf@fmt+1)& (0+255),b
  1793   000564  EC4E  F009         	call	_printf	;wreg free
  1794   000568  EF18  F002         	goto	l3260
  1795   00056C                     l3322:
  1796   00056C  0100               	movlb	0	; () banked
  1797   00056E  51FF               	movf	_menu& (0+255),w,b
  1798   000570  0101               	movlb	1	; () banked
  1799   000572  6F0A               	movwf	??_ShowMenuInTerminal& (0+255),b
  1800   000574  6B0B               	clrf	(??_ShowMenuInTerminal+1)& (0+255),b
  1801                           
  1802                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1803                           ; Switch size 1, requested type "simple"
  1804                           ; Number of cases is 1, Range of values is 0 to 0
  1805                           ; switch strategies available:
  1806                           ; Name         Instructions Cycles
  1807                           ; simple_byte            4     3 (average)
  1808                           ;	Chosen strategy is simple_byte
  1809   000576  510B               	movf	(??_ShowMenuInTerminal+1)& (0+255),w,b
  1810   000578  0A00               	xorlw	0	; case 0
  1811   00057A  B4D8               	btfsc	status,2,c
  1812   00057C  EFC2  F002         	goto	l3416
  1813   000580  EFA3  F002         	goto	l3312
  1814   000584                     l3416:
  1815                           
  1816                           ; BSR set to: 1
  1817                           ; Switch size 1, requested type "simple"
  1818                           ; Number of cases is 6, Range of values is 48 to 53
  1819                           ; switch strategies available:
  1820                           ; Name         Instructions Cycles
  1821                           ; simple_byte           19    10 (average)
  1822                           ;	Chosen strategy is simple_byte
  1823   000584  510A               	movf	??_ShowMenuInTerminal& (0+255),w,b
  1824   000586  0A30               	xorlw	48	; case 48
  1825   000588  B4D8               	btfsc	status,2,c
  1826   00058A  EFDD  F001         	goto	l3242
  1827   00058E  0A01               	xorlw	1	; case 49
  1828   000590  B4D8               	btfsc	status,2,c
  1829   000592  EF1D  F002         	goto	l3262
  1830   000596  0A03               	xorlw	3	; case 50
  1831   000598  B4D8               	btfsc	status,2,c
  1832   00059A  EF3A  F002         	goto	l3274
  1833   00059E  0A01               	xorlw	1	; case 51
  1834   0005A0  B4D8               	btfsc	status,2,c
  1835   0005A2  EF54  F002         	goto	l3284
  1836   0005A6  0A07               	xorlw	7	; case 52
  1837   0005A8  B4D8               	btfsc	status,2,c
  1838   0005AA  EF7D  F002         	goto	l3296
  1839   0005AE  0A01               	xorlw	1	; case 53
  1840   0005B0  B4D8               	btfsc	status,2,c
  1841   0005B2  EF90  F002         	goto	l3304
  1842   0005B6  EFA3  F002         	goto	l3312
  1843   0005BA                     l575:
  1844                           
  1845                           ; BSR set to: 0
  1846   0005BA  0012               	return		;funcret
  1847   0005BC                     __end_of_ShowMenuInTerminal:
  1848                           	callstack 0
  1849                           
  1850 ;; *************** function _printf *****************
  1851 ;; Defined at:
  1852 ;;		line 5 in file "G:\Microchip\xc8\v2.40\pic\sources\c99\common\printf.c"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;  fmt             2    6[BANK1 ] PTR const unsigned char 
  1855 ;;		 -> STR_25(40), STR_24(17), STR_23(10), STR_22(31), 
  1856 ;;		 -> STR_21(10), STR_20(31), STR_19(10), STR_18(31), 
  1857 ;;		 -> STR_17(11), STR_16(35), STR_15(10), STR_14(31), 
  1858 ;;		 -> STR_13(36), STR_12(10), STR_11(31), STR_10(26), 
  1859 ;;		 -> STR_9(10), STR_8(31), STR_7(41), STR_6(39), 
  1860 ;;		 -> STR_5(48), STR_4(39), STR_3(29), STR_2(17), 
  1861 ;;		 -> STR_1(31), 
  1862 ;; Auto vars:     Size  Location     Type
  1863 ;;  ap              2   81[BANK0 ] PTR void [1]
  1864 ;;		 -> ?_printf(2), 
  1865 ;;  ret             2    0        int 
  1866 ;; Return value:  Size  Location     Type
  1867 ;;                  2    6[BANK1 ] int 
  1868 ;; Registers used:
  1869 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1870 ;; Tracked objects:
  1871 ;;		On entry : 0/0
  1872 ;;		On exit  : 0/0
  1873 ;;		Unchanged: 0/0
  1874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1875 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1876 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1878 ;;      Totals:         0       2       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1879 ;;Total ram usage:        6 bytes
  1880 ;; Hardware stack levels used: 1
  1881 ;; Hardware stack levels required when called: 12
  1882 ;; This function calls:
  1883 ;;		_vfprintf
  1884 ;; This function is called by:
  1885 ;;		_main
  1886 ;;		_ShowMenuInTerminal
  1887 ;; This function uses a non-reentrant model
  1888 ;;
  1889                           
  1890                           	psect	text5
  1891   00129C                     __ptext5:
  1892                           	callstack 0
  1893   00129C                     _printf:
  1894                           	callstack 18
  1895   00129C  0E08               	movlw	low (?_printf+2)
  1896   00129E  0100               	movlb	0	; () banked
  1897   0012A0  6FB1               	movwf	printf@ap& (0+255),b
  1898   0012A2  0E01               	movlw	high (?_printf+2)
  1899   0012A4  6FB2               	movwf	(printf@ap+1)& (0+255),b
  1900   0012A6                     
  1901                           ; BSR set to: 0
  1902   0012A6  0E00               	movlw	0
  1903   0012A8  0101               	movlb	1	; () banked
  1904   0012AA  6F00               	movwf	vfprintf@fp& (0+255),b
  1905   0012AC  0E00               	movlw	0
  1906   0012AE  6F01               	movwf	(vfprintf@fp+1)& (0+255),b
  1907   0012B0  C106  F102         	movff	printf@fmt,vfprintf@fmt
  1908   0012B4  C107  F103         	movff	printf@fmt+1,vfprintf@fmt+1
  1909   0012B8  0EB1               	movlw	low printf@ap
  1910   0012BA  6F04               	movwf	vfprintf@ap& (0+255),b
  1911   0012BC  0E00               	movlw	high printf@ap
  1912   0012BE  6F05               	movwf	(vfprintf@ap+1)& (0+255),b
  1913   0012C0  ECCE  F007         	call	_vfprintf	;wreg free
  1914   0012C4  0012               	return		;funcret
  1915   0012C6                     __end_of_printf:
  1916                           	callstack 0
  1917                           
  1918 ;; *************** function _vfprintf *****************
  1919 ;; Defined at:
  1920 ;;		line 1520 in file "G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  1923 ;;		 -> NULL(0), 
  1924 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  1925 ;;		 -> STR_25(40), STR_24(17), STR_23(10), STR_22(31), 
  1926 ;;		 -> STR_21(10), STR_20(31), STR_19(10), STR_18(31), 
  1927 ;;		 -> STR_17(11), STR_16(35), STR_15(10), STR_14(31), 
  1928 ;;		 -> STR_13(36), STR_12(10), STR_11(31), STR_10(26), 
  1929 ;;		 -> STR_9(10), STR_8(31), STR_7(41), STR_6(39), 
  1930 ;;		 -> STR_5(48), STR_4(39), STR_3(29), STR_2(17), 
  1931 ;;		 -> STR_1(31), 
  1932 ;;  ap              2    4[BANK1 ] PTR PTR void 
  1933 ;;		 -> printf@ap(2), 
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;  cfmt            2   79[BANK0 ] PTR unsigned char 
  1936 ;;		 -> STR_25(40), STR_24(17), STR_23(10), STR_22(31), 
  1937 ;;		 -> STR_21(10), STR_20(31), STR_19(10), STR_18(31), 
  1938 ;;		 -> STR_17(11), STR_16(35), STR_15(10), STR_14(31), 
  1939 ;;		 -> STR_13(36), STR_12(10), STR_11(31), STR_10(26), 
  1940 ;;		 -> STR_9(10), STR_8(31), STR_7(41), STR_6(39), 
  1941 ;;		 -> STR_5(48), STR_4(39), STR_3(29), STR_2(17), 
  1942 ;;		 -> STR_1(31), 
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  2    0[BANK1 ] int 
  1945 ;; Registers used:
  1946 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1952 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1953 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1955 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1956 ;;Total ram usage:        8 bytes
  1957 ;; Hardware stack levels used: 1
  1958 ;; Hardware stack levels required when called: 11
  1959 ;; This function calls:
  1960 ;;		_vfpfcnvrt
  1961 ;; This function is called by:
  1962 ;;		_printf
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965                           
  1966                           	psect	text6
  1967   000F9C                     __ptext6:
  1968                           	callstack 0
  1969   000F9C                     _vfprintf:
  1970                           	callstack 18
  1971   000F9C                     
  1972                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprintf(FILE *fp, co
      +                          nst char *fmt, va_list ap);G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1521:
      +                           {;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1523:     char *cfmt;;G:\Micr
      +                          ochip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1973   000F9C  C102  F0AF         	movff	vfprintf@fmt,vfprintf@cfmt
  1974   000FA0  C103  F0B0         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1975                           
  1976                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (*cfmt) {
  1977   000FA4  EFE3  F007         	goto	l3228
  1978   000FA8                     l3226:
  1979                           
  1980                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvrt(fp, &cfmt, a
      +                          p);
  1981   000FA8  C100  F09D         	movff	vfprintf@fp,vfpfcnvrt@fp
  1982   000FAC  C101  F09E         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1983   000FB0  0EAF               	movlw	low vfprintf@cfmt
  1984   000FB2  0100               	movlb	0	; () banked
  1985   000FB4  6F9F               	movwf	vfpfcnvrt@fmt& (0+255),b
  1986   000FB6  0E00               	movlw	high vfprintf@cfmt
  1987   000FB8  6FA0               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1988   000FBA  C104  F0A1         	movff	vfprintf@ap,vfpfcnvrt@ap
  1989   000FBE  C105  F0A2         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1990   000FC2  EC56  F004         	call	_vfpfcnvrt	;wreg free
  1991   000FC6                     l3228:
  1992                           
  1993                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (*cfmt) {
  1994   000FC6  C0AF  FFF6         	movff	vfprintf@cfmt,tblptrl
  1995   000FCA  C0B0  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1996   000FCE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1997   000FCE  6AF8               	clrf	tblptru,c
  1998   000FD0                     	endif
  1999   000FD0                     	if	0	;tblptru may be non-zero
  2000   000FD0                     	endif
  2001   000FD0  0008               	tblrd		*
  2002   000FD2  50F5               	movf	tablat,w,c
  2003   000FD4  0900               	iorlw	0
  2004   000FD6  A4D8               	btfss	status,2,c
  2005   000FD8  EFF0  F007         	goto	u2261
  2006   000FDC  EFF2  F007         	goto	u2260
  2007   000FE0                     u2261:
  2008   000FE0  EFD4  F007         	goto	l3226
  2009   000FE4                     u2260:
  2010   000FE4                     
  2011                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2012   000FE4  0E00               	movlw	0
  2013   000FE6  0101               	movlb	1	; () banked
  2014   000FE8  6F01               	movwf	(?_vfprintf+1)& (0+255),b
  2015   000FEA  0E00               	movlw	0
  2016   000FEC  6F00               	movwf	?_vfprintf& (0+255),b
  2017   000FEE                     
  2018                           ; BSR set to: 1
  2019   000FEE  0012               	return		;funcret
  2020   000FF0                     __end_of_vfprintf:
  2021                           	callstack 0
  2022                           
  2023 ;; *************** function _vfpfcnvrt *****************
  2024 ;; Defined at:
  2025 ;;		line 1007 in file "G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2026 ;; Parameters:    Size  Location     Type
  2027 ;;  fp              2   61[BANK0 ] PTR struct _IO_FILE
  2028 ;;		 -> NULL(0), 
  2029 ;;  fmt             2   63[BANK0 ] PTR PTR unsigned char 
  2030 ;;		 -> vfprintf@cfmt(2), 
  2031 ;;  ap              2   65[BANK0 ] PTR PTR void 
  2032 ;;		 -> printf@ap(2), 
  2033 ;; Auto vars:     Size  Location     Type
  2034 ;;  convarg         8   69[BANK0 ] struct .
  2035 ;;  cp              2   77[BANK0 ] PTR unsigned char 
  2036 ;;		 -> STR_25(40), STR_24(17), STR_23(10), STR_22(31), 
  2037 ;;		 -> STR_21(10), STR_20(31), STR_19(10), STR_18(31), 
  2038 ;;		 -> STR_17(11), STR_16(35), STR_15(10), STR_14(31), 
  2039 ;;		 -> STR_13(36), STR_12(10), STR_11(31), STR_10(26), 
  2040 ;;		 -> STR_9(10), STR_8(31), STR_7(41), STR_6(39), 
  2041 ;;		 -> STR_5(48), STR_4(39), STR_3(29), STR_2(17), 
  2042 ;;		 -> STR_1(31), 
  2043 ;;  i               2    0        int 
  2044 ;;  done            2    0        int 
  2045 ;;  c               1    0        unsigned char 
  2046 ;; Return value:  Size  Location     Type
  2047 ;;                  1    wreg      void 
  2048 ;; Registers used:
  2049 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2050 ;; Tracked objects:
  2051 ;;		On entry : 0/0
  2052 ;;		On exit  : 0/0
  2053 ;;		Unchanged: 0/0
  2054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2055 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2056 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2057 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2058 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2059 ;;Total ram usage:       18 bytes
  2060 ;; Hardware stack levels used: 1
  2061 ;; Hardware stack levels required when called: 10
  2062 ;; This function calls:
  2063 ;;		_dtoa
  2064 ;;		_fputc
  2065 ;; This function is called by:
  2066 ;;		_vfprintf
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070                           	psect	text7
  2071   0008AC                     __ptext7:
  2072                           	callstack 0
  2073   0008AC                     _vfpfcnvrt:
  2074                           	callstack 18
  2075   0008AC                     
  2076                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(FILE *fp, char 
      +                          *fmt[], va_list ap);G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1008: {;G:\M
      +                          icrochip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1009:     char c, *cp;;G:\Microchip\
      +                          xc8\v2.40\pic\sources\c99\common\doprnt.c: 1010:     int done, i;;G:\Microchip\xc8\v2.40
      +                          \pic\sources\c99\common\doprnt.c: 1016:  } convarg;;G:\Microchip\xc8\v2.40\pic\sources\c
      +                          99\common\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2077   0008AC  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2078   0008B0  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2079   0008B4  CFDE FFF6          	movff	postinc2,tblptrl
  2080   0008B8  CFDD FFF7          	movff	postdec2,tblptrh
  2081   0008BC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2082   0008BC  6AF8               	clrf	tblptru,c
  2083   0008BE                     	endif
  2084   0008BE                     	if	0	;tblptru may be non-zero
  2085   0008BE                     	endif
  2086   0008BE  0008               	tblrd		*
  2087   0008C0  50F5               	movf	tablat,w,c
  2088   0008C2  0A25               	xorlw	37
  2089   0008C4  A4D8               	btfss	status,2,c
  2090   0008C6  EF67  F004         	goto	u2231
  2091   0008CA  EF69  F004         	goto	u2230
  2092   0008CE                     u2231:
  2093   0008CE  EFEB  F004         	goto	l3218
  2094   0008D2                     u2230:
  2095   0008D2                     
  2096                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*fmt;
  2097   0008D2  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2098   0008D6  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2099   0008DA  2ADE               	incf	postinc2,f,c
  2100   0008DC  0E00               	movlw	0
  2101   0008DE  22DD               	addwfc	postdec2,f,c
  2102   0008E0                     
  2103                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         flags = width = 0
      +                          ;
  2104   0008E0  0E00               	movlw	0
  2105   0008E2  0100               	movlb	0	; () banked
  2106   0008E4  6FCC               	movwf	(_width+1)& (0+255),b
  2107   0008E6  0E00               	movlw	0
  2108   0008E8  6FCB               	movwf	_width& (0+255),b
  2109   0008EA  C0CB  F0D1         	movff	_width,_flags
  2110   0008EE                     
  2111                           ; BSR set to: 0
  2112                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         prec = -1;
  2113   0008EE  69CD               	setf	_prec& (0+255),b
  2114   0008F0  69CE               	setf	(_prec+1)& (0+255),b
  2115   0008F2                     
  2116                           ; BSR set to: 0
  2117                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt;
  2118   0008F2  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2119   0008F6  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2120   0008FA  CFDE F0AD          	movff	postinc2,vfpfcnvrt@cp
  2121   0008FE  CFDD F0AE          	movff	postdec2,vfpfcnvrt@cp+1
  2122   000902                     
  2123                           ; BSR set to: 0
  2124                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp == 'd' || *cp =
      +                          = 'i') {
  2125   000902  C0AD  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2126   000906  C0AE  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2127   00090A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2128   00090A  6AF8               	clrf	tblptru,c
  2129   00090C                     	endif
  2130   00090C                     	if	0	;tblptru may be non-zero
  2131   00090C                     	endif
  2132   00090C  0008               	tblrd		*
  2133   00090E  50F5               	movf	tablat,w,c
  2134   000910  0A64               	xorlw	100
  2135   000912  B4D8               	btfsc	status,2,c
  2136   000914  EF8E  F004         	goto	u2241
  2137   000918  EF90  F004         	goto	u2240
  2138   00091C                     u2241:
  2139   00091C  EF9F  F004         	goto	l3208
  2140   000920                     u2240:
  2141   000920                     
  2142                           ; BSR set to: 0
  2143   000920  C0AD  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2144   000924  C0AE  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2145   000928                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2146   000928  6AF8               	clrf	tblptru,c
  2147   00092A                     	endif
  2148   00092A                     	if	0	;tblptru may be non-zero
  2149   00092A                     	endif
  2150   00092A  0008               	tblrd		*
  2151   00092C  50F5               	movf	tablat,w,c
  2152   00092E  0A69               	xorlw	105
  2153   000930  A4D8               	btfss	status,2,c
  2154   000932  EF9D  F004         	goto	u2251
  2155   000936  EF9F  F004         	goto	u2250
  2156   00093A                     u2251:
  2157   00093A  EFE2  F004         	goto	l3214
  2158   00093E                     u2250:
  2159   00093E                     l3208:
  2160                           
  2161                           ; BSR set to: 0
  2162                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.ll = (long lon
      +                          g)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2163   00093E  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2164   000942  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2165   000946  CFDF F0A3          	movff	indf2,??_vfpfcnvrt
  2166   00094A  0E02               	movlw	2
  2167   00094C  26DE               	addwf	postinc2,f,c
  2168   00094E  CFDF F0A4          	movff	indf2,??_vfpfcnvrt+1
  2169   000952  0E00               	movlw	0
  2170   000954  22DD               	addwfc	postdec2,f,c
  2171   000956  C0A3  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2172   00095A  C0A4  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2173   00095E  CFDE F0A5          	movff	postinc2,vfpfcnvrt@convarg
  2174   000962  CFDD F0A6          	movff	postdec2,vfpfcnvrt@convarg+1
  2175   000966  0E00               	movlw	0
  2176   000968  BFA6               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  2177   00096A  0EFF               	movlw	-1
  2178   00096C  6FA7               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  2179   00096E  6FA8               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  2180   000970  6FA9               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  2181   000972  6FAA               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  2182   000974  6FAB               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  2183   000976  6FAC               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  2184                           
  2185                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = cp+1;
  2186   000978  0E01               	movlw	1
  2187   00097A  25AD               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2188   00097C  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  2189   00097E  0E00               	movlw	0
  2190   000980  21AE               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2191   000982  6FA4               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2192   000984  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2193   000988  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2194   00098C  C0A3  FFDE         	movff	??_vfpfcnvrt,postinc2
  2195   000990  C0A4  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2196   000994                     
  2197                           ; BSR set to: 0
  2198                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (void) dtoa(fp,
      +                           convarg.ll);;	Return value of _vfpfcnvrt is never used
  2199   000994  C09D  F07A         	movff	vfpfcnvrt@fp,dtoa@fp
  2200   000998  C09E  F07B         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2201   00099C  C0A5  F07C         	movff	vfpfcnvrt@convarg,dtoa@d
  2202   0009A0  C0A6  F07D         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2203   0009A4  C0A7  F07E         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2204   0009A8  C0A8  F07F         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2205   0009AC  C0A9  F080         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2206   0009B0  C0AA  F081         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2207   0009B4  C0AB  F082         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2208   0009B8  C0AC  F083         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2209   0009BC  EC9B  F000         	call	_dtoa	;wreg free
  2210   0009C0  EF01  F005         	goto	l1381
  2211   0009C4                     l3214:
  2212                           
  2213                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*fmt;
  2214   0009C4  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2215   0009C8  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2216   0009CC  2ADE               	incf	postinc2,f,c
  2217   0009CE  0E00               	movlw	0
  2218   0009D0  22DD               	addwfc	postdec2,f,c
  2219   0009D2  EF01  F005         	goto	l1381
  2220   0009D6                     l3218:
  2221                           
  2222                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((int)(*fmt)[0],
      +                           fp);
  2223   0009D6  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2224   0009DA  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2225   0009DE  CFDE FFF6          	movff	postinc2,tblptrl
  2226   0009E2  CFDD FFF7          	movff	postdec2,tblptrh
  2227   0009E6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2228   0009E6  6AF8               	clrf	tblptru,c
  2229   0009E8                     	endif
  2230   0009E8                     	if	0	;tblptru may be non-zero
  2231   0009E8                     	endif
  2232   0009E8  0008               	tblrd		*
  2233   0009EA  50F5               	movf	tablat,w,c
  2234   0009EC  0100               	movlb	0	; () banked
  2235   0009EE  6F60               	movwf	fputc@c& (0+255),b
  2236   0009F0  6B61               	clrf	(fputc@c+1)& (0+255),b
  2237   0009F2  C09D  F062         	movff	vfpfcnvrt@fp,fputc@fp
  2238   0009F6  C09E  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2239   0009FA  EC43  F006         	call	_fputc	;wreg free
  2240   0009FE  EFE2  F004         	goto	l3214
  2241   000A02                     l1381:
  2242   000A02  0012               	return		;funcret
  2243   000A04                     __end_of_vfpfcnvrt:
  2244                           	callstack 0
  2245                           
  2246 ;; *************** function _dtoa *****************
  2247 ;; Defined at:
  2248 ;;		line 443 in file "G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2249 ;; Parameters:    Size  Location     Type
  2250 ;;  fp              2   26[BANK0 ] PTR struct _IO_FILE
  2251 ;;		 -> NULL(0), 
  2252 ;;  d               8   28[BANK0 ] long long 
  2253 ;; Auto vars:     Size  Location     Type
  2254 ;;  n               8   50[BANK0 ] long long 
  2255 ;;  i               2   59[BANK0 ] int 
  2256 ;;  w               2   48[BANK0 ] int 
  2257 ;;  p               2   46[BANK0 ] int 
  2258 ;;  s               1   58[BANK0 ] unsigned char 
  2259 ;; Return value:  Size  Location     Type
  2260 ;;                  1    wreg      void 
  2261 ;; Registers used:
  2262 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2263 ;; Tracked objects:
  2264 ;;		On entry : 0/0
  2265 ;;		On exit  : 0/0
  2266 ;;		Unchanged: 0/0
  2267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2268 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2269 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2270 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2271 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2272 ;;Total ram usage:       35 bytes
  2273 ;; Hardware stack levels used: 1
  2274 ;; Hardware stack levels required when called: 9
  2275 ;; This function calls:
  2276 ;;		___aodiv
  2277 ;;		___aomod
  2278 ;;		_abs
  2279 ;;		_pad
  2280 ;; This function is called by:
  2281 ;;		_vfpfcnvrt
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285                           	psect	text8
  2286   000136                     __ptext8:
  2287                           	callstack 0
  2288   000136                     _dtoa:
  2289                           	callstack 18
  2290   000136                     
  2291                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void dtoa(FILE *fp,
      +                           long long d);G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 444: {;G:\Microchi
      +                          p\xc8\v2.40\pic\sources\c99\common\doprnt.c: 445:  char s;;G:\Microchip\xc8\v2.40\pic\so
      +                          urces\c99\common\doprnt.c: 446:     int i, p, w;;G:\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 447:     long long n;;G:\Microchip\xc8\v2.40\pic\sources\c99\common\dop
      +                          rnt.c: 450:     n = d;
  2292   000136  C07C  F092         	movff	dtoa@d,dtoa@n
  2293   00013A  C07D  F093         	movff	dtoa@d+1,dtoa@n+1
  2294   00013E  C07E  F094         	movff	dtoa@d+2,dtoa@n+2
  2295   000142  C07F  F095         	movff	dtoa@d+3,dtoa@n+3
  2296   000146  C080  F096         	movff	dtoa@d+4,dtoa@n+4
  2297   00014A  C081  F097         	movff	dtoa@d+5,dtoa@n+5
  2298   00014E  C082  F098         	movff	dtoa@d+6,dtoa@n+6
  2299   000152  C083  F099         	movff	dtoa@d+7,dtoa@n+7
  2300   000156                     
  2301                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 0 ? 1 : 0;
  2302   000156  0100               	movlb	0	; () banked
  2303   000158  BF99               	btfsc	(dtoa@n+7)& (0+255),7,b
  2304   00015A  EFB1  F000         	goto	u2131
  2305   00015E  EFB4  F000         	goto	u2130
  2306   000162                     u2131:
  2307   000162  0E01               	movlw	1
  2308   000164  EFB5  F000         	goto	u2140
  2309   000168                     u2130:
  2310   000168  0E00               	movlw	0
  2311   00016A                     u2140:
  2312   00016A  6F9A               	movwf	dtoa@s& (0+255),b
  2313   00016C                     
  2314                           ; BSR set to: 0
  2315                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  2316   00016C  519A               	movf	dtoa@s& (0+255),w,b
  2317   00016E  B4D8               	btfsc	status,2,c
  2318   000170  EFBC  F000         	goto	u2151
  2319   000174  EFBE  F000         	goto	u2150
  2320   000178                     u2151:
  2321   000178  EFCE  F000         	goto	l3150
  2322   00017C                     u2150:
  2323   00017C                     
  2324                           ; BSR set to: 0
  2325                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = -n;
  2326   00017C  1F99               	comf	(dtoa@n+7)& (0+255),f,b
  2327   00017E  1F98               	comf	(dtoa@n+6)& (0+255),f,b
  2328   000180  1F97               	comf	(dtoa@n+5)& (0+255),f,b
  2329   000182  1F96               	comf	(dtoa@n+4)& (0+255),f,b
  2330   000184  1F95               	comf	(dtoa@n+3)& (0+255),f,b
  2331   000186  1F94               	comf	(dtoa@n+2)& (0+255),f,b
  2332   000188  1F93               	comf	(dtoa@n+1)& (0+255),f,b
  2333   00018A  6D92               	negf	dtoa@n& (0+255),b
  2334   00018C  0E00               	movlw	0
  2335   00018E  2393               	addwfc	(dtoa@n+1)& (0+255),f,b
  2336   000190  2394               	addwfc	(dtoa@n+2)& (0+255),f,b
  2337   000192  2395               	addwfc	(dtoa@n+3)& (0+255),f,b
  2338   000194  2396               	addwfc	(dtoa@n+4)& (0+255),f,b
  2339   000196  2397               	addwfc	(dtoa@n+5)& (0+255),f,b
  2340   000198  2398               	addwfc	(dtoa@n+6)& (0+255),f,b
  2341   00019A  2399               	addwfc	(dtoa@n+7)& (0+255),f,b
  2342   00019C                     l3150:
  2343                           
  2344                           ; BSR set to: 0
  2345                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 < prec) ? prec 
      +                          : 1;
  2346   00019C  BFCE               	btfsc	(_prec+1)& (0+255),7,b
  2347   00019E  EFDB  F000         	goto	u2160
  2348   0001A2  51CE               	movf	(_prec+1)& (0+255),w,b
  2349   0001A4  E106               	bnz	u2161
  2350   0001A6  05CD               	decf	_prec& (0+255),w,b
  2351   0001A8  B0D8               	btfsc	status,0,c
  2352   0001AA  EFD9  F000         	goto	u2161
  2353   0001AE  EFDB  F000         	goto	u2160
  2354   0001B2                     u2161:
  2355   0001B2  EFE1  F000         	goto	l1360
  2356   0001B6                     u2160:
  2357   0001B6                     
  2358                           ; BSR set to: 0
  2359   0001B6  0E00               	movlw	0
  2360   0001B8  6F8F               	movwf	(dtoa@p+1)& (0+255),b
  2361   0001BA  0E01               	movlw	1
  2362   0001BC  6F8E               	movwf	dtoa@p& (0+255),b
  2363   0001BE  EFE5  F000         	goto	l1362
  2364   0001C2                     l1360:
  2365                           
  2366                           ; BSR set to: 0
  2367   0001C2  C0CD  F08E         	movff	_prec,dtoa@p
  2368   0001C6  C0CE  F08F         	movff	_prec+1,dtoa@p+1
  2369   0001CA                     l1362:
  2370                           
  2371                           ; BSR set to: 0
  2372                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = width;
  2373   0001CA  C0CB  F090         	movff	_width,dtoa@w
  2374   0001CE  C0CC  F091         	movff	_width+1,dtoa@w+1
  2375   0001D2                     
  2376                           ; BSR set to: 0
  2377                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  2378   0001D2  519A               	movf	dtoa@s& (0+255),w,b
  2379   0001D4  B4D8               	btfsc	status,2,c
  2380   0001D6  EFEF  F000         	goto	u2171
  2381   0001DA  EFF1  F000         	goto	u2170
  2382   0001DE                     u2171:
  2383   0001DE  EF08  F001         	goto	l1363
  2384   0001E2                     u2170:
  2385   0001E2                     
  2386                           ; BSR set to: 0
  2387                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;G:\Microchip\xc8\v
      +                          2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  2388   0001E2  0790               	decf	dtoa@w& (0+255),f,b
  2389   0001E4  A0D8               	btfss	status,0,c
  2390   0001E6  0791               	decf	(dtoa@w+1)& (0+255),f,b
  2391   0001E8                     
  2392                           ; BSR set to: 0
  2393                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-' : '+';
  2394   0001E8  519A               	movf	dtoa@s& (0+255),w,b
  2395   0001EA  A4D8               	btfss	status,2,c
  2396   0001EC  EFFA  F000         	goto	u2181
  2397   0001F0  EFFC  F000         	goto	u2180
  2398   0001F4                     u2181:
  2399   0001F4  EF02  F001         	goto	l3162
  2400   0001F8                     u2180:
  2401   0001F8                     
  2402                           ; BSR set to: 0
  2403   0001F8  0E00               	movlw	0
  2404   0001FA  6F8D               	movwf	(_dtoa$2076+1)& (0+255),b
  2405   0001FC  0E2B               	movlw	43
  2406   0001FE  6F8C               	movwf	_dtoa$2076& (0+255),b
  2407   000200  EF06  F001         	goto	l3164
  2408   000204                     l3162:
  2409                           
  2410                           ; BSR set to: 0
  2411   000204  0E00               	movlw	0
  2412   000206  6F8D               	movwf	(_dtoa$2076+1)& (0+255),b
  2413   000208  0E2D               	movlw	45
  2414   00020A  6F8C               	movwf	_dtoa$2076& (0+255),b
  2415   00020C                     l3164:
  2416                           
  2417                           ; BSR set to: 0
  2418   00020C  C08C  F09A         	movff	_dtoa$2076,dtoa@s
  2419   000210                     l1363:
  2420                           
  2421                           ; BSR set to: 0
  2422                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = sizeof(dbuf) - 1;
  2423   000210  0E00               	movlw	0
  2424   000212  6F9C               	movwf	(dtoa@i+1)& (0+255),b
  2425   000214  0E1F               	movlw	31
  2426   000216  6F9B               	movwf	dtoa@i& (0+255),b
  2427   000218                     
  2428                           ; BSR set to: 0
  2429                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] = '\0';
  2430   000218  0E00               	movlw	0
  2431   00021A  6FF2               	movwf	(_dbuf+31)& (0+255),b
  2432                           
  2433                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!(i < 1) && (n 
      +                          || (0 < p)
  2434   00021C  EF8D  F001         	goto	l3178
  2435   000220                     l3168:
  2436                           
  2437                           ; BSR set to: 0
  2438                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;G:\Microchip\xc8\
      +                          v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  2439   000220  079B               	decf	dtoa@i& (0+255),f,b
  2440   000222  A0D8               	btfss	status,0,c
  2441   000224  079C               	decf	(dtoa@i+1)& (0+255),f,b
  2442   000226                     
  2443                           ; BSR set to: 0
  2444                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf[i] = (char)((
      +                          int)'0' + abs(n % 10));
  2445   000226  0ED3               	movlw	low _dbuf
  2446   000228  259B               	addwf	dtoa@i& (0+255),w,b
  2447   00022A  6ED9               	movwf	fsr2l,c
  2448   00022C  0E00               	movlw	high _dbuf
  2449   00022E  219C               	addwfc	(dtoa@i+1)& (0+255),w,b
  2450   000230  6EDA               	movwf	fsr2h,c
  2451   000232  C092  F060         	movff	dtoa@n,___aomod@dividend
  2452   000236  C093  F061         	movff	dtoa@n+1,___aomod@dividend+1
  2453   00023A  C094  F062         	movff	dtoa@n+2,___aomod@dividend+2
  2454   00023E  C095  F063         	movff	dtoa@n+3,___aomod@dividend+3
  2455   000242  C096  F064         	movff	dtoa@n+4,___aomod@dividend+4
  2456   000246  C097  F065         	movff	dtoa@n+5,___aomod@dividend+5
  2457   00024A  C098  F066         	movff	dtoa@n+6,___aomod@dividend+6
  2458   00024E  C099  F067         	movff	dtoa@n+7,___aomod@dividend+7
  2459   000252  0E0A               	movlw	10
  2460   000254  6F68               	movwf	___aomod@divisor& (0+255),b
  2461   000256  0E00               	movlw	0
  2462   000258  6F69               	movwf	(___aomod@divisor+1)& (0+255),b
  2463   00025A  0E00               	movlw	0
  2464   00025C  6F6A               	movwf	(___aomod@divisor+2)& (0+255),b
  2465   00025E  0E00               	movlw	0
  2466   000260  6F6B               	movwf	(___aomod@divisor+3)& (0+255),b
  2467   000262  0E00               	movlw	0
  2468   000264  6F6C               	movwf	(___aomod@divisor+4)& (0+255),b
  2469   000266  0E00               	movlw	0
  2470   000268  6F6D               	movwf	(___aomod@divisor+5)& (0+255),b
  2471   00026A  0E00               	movlw	0
  2472   00026C  6F6E               	movwf	(___aomod@divisor+6)& (0+255),b
  2473   00026E  0E00               	movlw	0
  2474   000270  6F6F               	movwf	(___aomod@divisor+7)& (0+255),b
  2475   000272  ECA3  F003         	call	___aomod	;wreg free
  2476   000276  C060  F084         	movff	?___aomod,??_dtoa
  2477   00027A  C061  F085         	movff	?___aomod+1,??_dtoa+1
  2478   00027E  C062  F086         	movff	?___aomod+2,??_dtoa+2
  2479   000282  C063  F087         	movff	?___aomod+3,??_dtoa+3
  2480   000286  C064  F088         	movff	?___aomod+4,??_dtoa+4
  2481   00028A  C065  F089         	movff	?___aomod+5,??_dtoa+5
  2482   00028E  C066  F08A         	movff	?___aomod+6,??_dtoa+6
  2483   000292  C067  F08B         	movff	?___aomod+7,??_dtoa+7
  2484   000296  C084  F070         	movff	??_dtoa,abs@a
  2485   00029A  C085  F071         	movff	??_dtoa+1,abs@a+1
  2486   00029E  EC8F  F008         	call	_abs	;wreg free
  2487   0002A2  0100               	movlb	0	; () banked
  2488   0002A4  5170               	movf	?_abs& (0+255),w,b
  2489   0002A6  0F30               	addlw	48
  2490   0002A8  6EDF               	movwf	indf2,c
  2491   0002AA                     
  2492                           ; BSR set to: 0
  2493                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  2494   0002AA  078E               	decf	dtoa@p& (0+255),f,b
  2495   0002AC  A0D8               	btfss	status,0,c
  2496   0002AE  078F               	decf	(dtoa@p+1)& (0+255),f,b
  2497   0002B0                     
  2498                           ; BSR set to: 0
  2499                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  2500   0002B0  0790               	decf	dtoa@w& (0+255),f,b
  2501   0002B2  A0D8               	btfss	status,0,c
  2502   0002B4  0791               	decf	(dtoa@w+1)& (0+255),f,b
  2503   0002B6                     
  2504                           ; BSR set to: 0
  2505                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = n / 10;
  2506   0002B6  C092  F060         	movff	dtoa@n,___aodiv@dividend
  2507   0002BA  C093  F061         	movff	dtoa@n+1,___aodiv@dividend+1
  2508   0002BE  C094  F062         	movff	dtoa@n+2,___aodiv@dividend+2
  2509   0002C2  C095  F063         	movff	dtoa@n+3,___aodiv@dividend+3
  2510   0002C6  C096  F064         	movff	dtoa@n+4,___aodiv@dividend+4
  2511   0002CA  C097  F065         	movff	dtoa@n+5,___aodiv@dividend+5
  2512   0002CE  C098  F066         	movff	dtoa@n+6,___aodiv@dividend+6
  2513   0002D2  C099  F067         	movff	dtoa@n+7,___aodiv@dividend+7
  2514   0002D6  0E0A               	movlw	10
  2515   0002D8  6F68               	movwf	___aodiv@divisor& (0+255),b
  2516   0002DA  0E00               	movlw	0
  2517   0002DC  6F69               	movwf	(___aodiv@divisor+1)& (0+255),b
  2518   0002DE  0E00               	movlw	0
  2519   0002E0  6F6A               	movwf	(___aodiv@divisor+2)& (0+255),b
  2520   0002E2  0E00               	movlw	0
  2521   0002E4  6F6B               	movwf	(___aodiv@divisor+3)& (0+255),b
  2522   0002E6  0E00               	movlw	0
  2523   0002E8  6F6C               	movwf	(___aodiv@divisor+4)& (0+255),b
  2524   0002EA  0E00               	movlw	0
  2525   0002EC  6F6D               	movwf	(___aodiv@divisor+5)& (0+255),b
  2526   0002EE  0E00               	movlw	0
  2527   0002F0  6F6E               	movwf	(___aodiv@divisor+6)& (0+255),b
  2528   0002F2  0E00               	movlw	0
  2529   0002F4  6F6F               	movwf	(___aodiv@divisor+7)& (0+255),b
  2530   0002F6  ECDE  F002         	call	___aodiv	;wreg free
  2531   0002FA  C060  F092         	movff	?___aodiv,dtoa@n
  2532   0002FE  C061  F093         	movff	?___aodiv+1,dtoa@n+1
  2533   000302  C062  F094         	movff	?___aodiv+2,dtoa@n+2
  2534   000306  C063  F095         	movff	?___aodiv+3,dtoa@n+3
  2535   00030A  C064  F096         	movff	?___aodiv+4,dtoa@n+4
  2536   00030E  C065  F097         	movff	?___aodiv+5,dtoa@n+5
  2537   000312  C066  F098         	movff	?___aodiv+6,dtoa@n+6
  2538   000316  C067  F099         	movff	?___aodiv+7,dtoa@n+7
  2539   00031A                     l3178:
  2540                           
  2541                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!(i < 1) && (n 
      +                          || (0 < p)
  2542   00031A  0100               	movlb	0	; () banked
  2543   00031C  BF9C               	btfsc	(dtoa@i+1)& (0+255),7,b
  2544   00031E  EF99  F001         	goto	u2191
  2545   000322  519C               	movf	(dtoa@i+1)& (0+255),w,b
  2546   000324  E108               	bnz	u2190
  2547   000326  059B               	decf	dtoa@i& (0+255),w,b
  2548   000328  A0D8               	btfss	status,0,c
  2549   00032A  EF99  F001         	goto	u2191
  2550   00032E  EF9B  F001         	goto	u2190
  2551   000332                     u2191:
  2552   000332  EFB7  F001         	goto	l3184
  2553   000336                     u2190:
  2554   000336                     
  2555                           ; BSR set to: 0
  2556   000336  5192               	movf	dtoa@n& (0+255),w,b
  2557   000338  1193               	iorwf	(dtoa@n+1)& (0+255),w,b
  2558   00033A  1194               	iorwf	(dtoa@n+2)& (0+255),w,b
  2559   00033C  1195               	iorwf	(dtoa@n+3)& (0+255),w,b
  2560   00033E  1196               	iorwf	(dtoa@n+4)& (0+255),w,b
  2561   000340  1197               	iorwf	(dtoa@n+5)& (0+255),w,b
  2562   000342  1198               	iorwf	(dtoa@n+6)& (0+255),w,b
  2563   000344  1199               	iorwf	(dtoa@n+7)& (0+255),w,b
  2564   000346  A4D8               	btfss	status,2,c
  2565   000348  EFA8  F001         	goto	u2201
  2566   00034C  EFAA  F001         	goto	u2200
  2567   000350                     u2201:
  2568   000350  EF10  F001         	goto	l3168
  2569   000354                     u2200:
  2570   000354                     
  2571                           ; BSR set to: 0
  2572   000354  BF8F               	btfsc	(dtoa@p+1)& (0+255),7,b
  2573   000356  EFB7  F001         	goto	u2210
  2574   00035A  518F               	movf	(dtoa@p+1)& (0+255),w,b
  2575   00035C  E106               	bnz	u2211
  2576   00035E  058E               	decf	dtoa@p& (0+255),w,b
  2577   000360  B0D8               	btfsc	status,0,c
  2578   000362  EFB5  F001         	goto	u2211
  2579   000366  EFB7  F001         	goto	u2210
  2580   00036A                     u2211:
  2581   00036A  EF10  F001         	goto	l3168
  2582   00036E                     u2210:
  2583   00036E                     l3184:
  2584                           
  2585                           ; BSR set to: 0
  2586                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s != 0) {
  2587   00036E  519A               	movf	dtoa@s& (0+255),w,b
  2588   000370  B4D8               	btfsc	status,2,c
  2589   000372  EFBD  F001         	goto	u2221
  2590   000376  EFBF  F001         	goto	u2220
  2591   00037A                     u2221:
  2592   00037A  EFCA  F001         	goto	l3190
  2593   00037E                     u2220:
  2594   00037E                     
  2595                           ; BSR set to: 0
  2596                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  2597   00037E  079B               	decf	dtoa@i& (0+255),f,b
  2598   000380  A0D8               	btfss	status,0,c
  2599   000382  079C               	decf	(dtoa@i+1)& (0+255),f,b
  2600   000384                     
  2601                           ; BSR set to: 0
  2602                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf[i] = s;
  2603   000384  0ED3               	movlw	low _dbuf
  2604   000386  259B               	addwf	dtoa@i& (0+255),w,b
  2605   000388  6ED9               	movwf	fsr2l,c
  2606   00038A  0E00               	movlw	high _dbuf
  2607   00038C  219C               	addwfc	(dtoa@i+1)& (0+255),w,b
  2608   00038E  6EDA               	movwf	fsr2h,c
  2609   000390  C09A  FFDF         	movff	dtoa@s,indf2
  2610   000394                     l3190:
  2611                           
  2612                           ; BSR set to: 0
  2613                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (void) pad(fp, 
      +                          &dbuf[i], w);
  2614   000394  C07A  F070         	movff	dtoa@fp,pad@fp
  2615   000398  C07B  F071         	movff	dtoa@fp+1,pad@fp+1
  2616   00039C  0ED3               	movlw	low _dbuf
  2617   00039E  259B               	addwf	dtoa@i& (0+255),w,b
  2618   0003A0  6F72               	movwf	pad@buf& (0+255),b
  2619   0003A2  0E00               	movlw	high _dbuf
  2620   0003A4  219C               	addwfc	(dtoa@i+1)& (0+255),w,b
  2621   0003A6  6F73               	movwf	(pad@buf+1)& (0+255),b
  2622   0003A8  C090  F074         	movff	dtoa@w,pad@p
  2623   0003AC  C091  F075         	movff	dtoa@w+1,pad@p+1
  2624   0003B0  EC8F  F006         	call	_pad	;wreg free
  2625   0003B4  0012               	return		;funcret
  2626   0003B6                     __end_of_dtoa:
  2627                           	callstack 0
  2628                           
  2629 ;; *************** function _pad *****************
  2630 ;; Defined at:
  2631 ;;		line 133 in file "G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2632 ;; Parameters:    Size  Location     Type
  2633 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  2634 ;;		 -> NULL(0), 
  2635 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  2636 ;;		 -> dbuf(32), 
  2637 ;;  p               2   20[BANK0 ] int 
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;  w               2   24[BANK0 ] int 
  2640 ;;  i               2   22[BANK0 ] int 
  2641 ;; Return value:  Size  Location     Type
  2642 ;;                  1    wreg      void 
  2643 ;; Registers used:
  2644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2645 ;; Tracked objects:
  2646 ;;		On entry : 0/0
  2647 ;;		On exit  : 0/0
  2648 ;;		Unchanged: 0/0
  2649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2650 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2651 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2652 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2653 ;;      Totals:         1      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2654 ;;Total ram usage:       11 bytes
  2655 ;; Hardware stack levels used: 1
  2656 ;; Hardware stack levels required when called: 8
  2657 ;; This function calls:
  2658 ;;		_fputc
  2659 ;;		_fputs
  2660 ;; This function is called by:
  2661 ;;		_dtoa
  2662 ;; This function uses a non-reentrant model
  2663 ;;
  2664                           
  2665                           	psect	text9
  2666   000D1E                     __ptext9:
  2667                           	callstack 0
  2668   000D1E                     _pad:
  2669                           	callstack 18
  2670   000D1E                     
  2671                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void pad(FILE *fp, 
      +                          char *buf, int p);G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 134: {;G:\Micr
      +                          ochip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 135:     int i, w;;G:\Microchip\xc8\v2.
      +                          40\pic\sources\c99\common\doprnt.c: 145:     w = (p < 0) ? 0 : p;
  2672   000D1E  0100               	movlb	0	; () banked
  2673   000D20  BF75               	btfsc	(pad@p+1)& (0+255),7,b
  2674   000D22  EF95  F006         	goto	u2101
  2675   000D26  EF97  F006         	goto	u2100
  2676   000D2A                     u2101:
  2677   000D2A  EF9D  F006         	goto	l3128
  2678   000D2E                     u2100:
  2679   000D2E                     
  2680                           ; BSR set to: 0
  2681   000D2E  C074  F078         	movff	pad@p,pad@w
  2682   000D32  C075  F079         	movff	pad@p+1,pad@w+1
  2683   000D36  EFA1  F006         	goto	l1351
  2684   000D3A                     l3128:
  2685                           
  2686                           ; BSR set to: 0
  2687   000D3A  0E00               	movlw	0
  2688   000D3C  6F79               	movwf	(pad@w+1)& (0+255),b
  2689   000D3E  0E00               	movlw	0
  2690   000D40  6F78               	movwf	pad@w& (0+255),b
  2691   000D42                     l1351:
  2692                           
  2693                           ; BSR set to: 0
  2694                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2695   000D42  0E00               	movlw	0
  2696   000D44  6F77               	movwf	(pad@i+1)& (0+255),b
  2697   000D46  0E00               	movlw	0
  2698   000D48  6F76               	movwf	pad@i& (0+255),b
  2699                           
  2700                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i < w) {
  2701   000D4A  EFB4  F006         	goto	l3134
  2702   000D4E                     l3130:
  2703                           
  2704                           ; BSR set to: 0
  2705                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fputc(' ', fp);
  2706   000D4E  0E00               	movlw	0
  2707   000D50  6F61               	movwf	(fputc@c+1)& (0+255),b
  2708   000D52  0E20               	movlw	32
  2709   000D54  6F60               	movwf	fputc@c& (0+255),b
  2710   000D56  C070  F062         	movff	pad@fp,fputc@fp
  2711   000D5A  C071  F063         	movff	pad@fp+1,fputc@fp+1
  2712   000D5E  EC43  F006         	call	_fputc	;wreg free
  2713   000D62                     
  2714                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2715   000D62  0100               	movlb	0	; () banked
  2716   000D64  4B76               	infsnz	pad@i& (0+255),f,b
  2717   000D66  2B77               	incf	(pad@i+1)& (0+255),f,b
  2718   000D68                     l3134:
  2719                           
  2720                           ; BSR set to: 0
  2721                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i < w) {
  2722   000D68  5178               	movf	pad@w& (0+255),w,b
  2723   000D6A  5D76               	subwf	pad@i& (0+255),w,b
  2724   000D6C  5177               	movf	(pad@i+1)& (0+255),w,b
  2725   000D6E  0A80               	xorlw	128
  2726   000D70  6E21               	movwf	??_pad^0,c
  2727   000D72  5179               	movf	(pad@w+1)& (0+255),w,b
  2728   000D74  0A80               	xorlw	128
  2729   000D76  5821               	subwfb	??_pad^0,w,c
  2730   000D78  A0D8               	btfss	status,0,c
  2731   000D7A  EFC1  F006         	goto	u2111
  2732   000D7E  EFC3  F006         	goto	u2110
  2733   000D82                     u2111:
  2734   000D82  EFA7  F006         	goto	l3130
  2735   000D86                     u2110:
  2736   000D86                     
  2737                           ; BSR set to: 0
  2738                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fputs((const char 
      +                          *)buf, fp);
  2739   000D86  C072  F069         	movff	pad@buf,fputs@s
  2740   000D8A  C073  F06A         	movff	pad@buf+1,fputs@s+1
  2741   000D8E  C070  F06B         	movff	pad@fp,fputs@fp
  2742   000D92  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  2743   000D96  EC49  F008         	call	_fputs	;wreg free
  2744   000D9A  0012               	return		;funcret
  2745   000D9C                     __end_of_pad:
  2746                           	callstack 0
  2747                           
  2748 ;; *************** function _fputs *****************
  2749 ;; Defined at:
  2750 ;;		line 8 in file "G:\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2751 ;; Parameters:    Size  Location     Type
  2752 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  2753 ;;		 -> dbuf(32), 
  2754 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  2755 ;;		 -> NULL(0), 
  2756 ;; Auto vars:     Size  Location     Type
  2757 ;;  i               2   14[BANK0 ] int 
  2758 ;;  c               1   13[BANK0 ] unsigned char 
  2759 ;; Return value:  Size  Location     Type
  2760 ;;                  2    9[BANK0 ] int 
  2761 ;; Registers used:
  2762 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2763 ;; Tracked objects:
  2764 ;;		On entry : 0/0
  2765 ;;		On exit  : 0/0
  2766 ;;		Unchanged: 0/0
  2767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2768 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2769 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2771 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2772 ;;Total ram usage:        7 bytes
  2773 ;; Hardware stack levels used: 1
  2774 ;; Hardware stack levels required when called: 7
  2775 ;; This function calls:
  2776 ;;		_fputc
  2777 ;; This function is called by:
  2778 ;;		_pad
  2779 ;; This function uses a non-reentrant model
  2780 ;;
  2781                           
  2782                           	psect	text10
  2783   001092                     __ptext10:
  2784                           	callstack 0
  2785   001092                     _fputs:
  2786                           	callstack 18
  2787   001092  0E00               	movlw	0
  2788   001094  0100               	movlb	0	; () banked
  2789   001096  6F6F               	movwf	(fputs@i+1)& (0+255),b
  2790   001098  0E00               	movlw	0
  2791   00109A  6F6E               	movwf	fputs@i& (0+255),b
  2792   00109C  EF5C  F008         	goto	l3042
  2793   0010A0                     l3038:
  2794                           
  2795                           ; BSR set to: 0
  2796   0010A0  C06D  F060         	movff	fputs@c,fputc@c
  2797   0010A4  6B61               	clrf	(fputc@c+1)& (0+255),b
  2798   0010A6  C06B  F062         	movff	fputs@fp,fputc@fp
  2799   0010AA  C06C  F063         	movff	fputs@fp+1,fputc@fp+1
  2800   0010AE  EC43  F006         	call	_fputc	;wreg free
  2801   0010B2  0100               	movlb	0	; () banked
  2802   0010B4  4B6E               	infsnz	fputs@i& (0+255),f,b
  2803   0010B6  2B6F               	incf	(fputs@i+1)& (0+255),f,b
  2804   0010B8                     l3042:
  2805                           
  2806                           ; BSR set to: 0
  2807   0010B8  516E               	movf	fputs@i& (0+255),w,b
  2808   0010BA  2569               	addwf	fputs@s& (0+255),w,b
  2809   0010BC  6ED9               	movwf	fsr2l,c
  2810   0010BE  516F               	movf	(fputs@i+1)& (0+255),w,b
  2811   0010C0  216A               	addwfc	(fputs@s+1)& (0+255),w,b
  2812   0010C2  6EDA               	movwf	fsr2h,c
  2813   0010C4  50DF               	movf	indf2,w,c
  2814   0010C6  6F6D               	movwf	fputs@c& (0+255),b
  2815   0010C8  516D               	movf	fputs@c& (0+255),w,b
  2816   0010CA  A4D8               	btfss	status,2,c
  2817   0010CC  EF6A  F008         	goto	u1961
  2818   0010D0  EF6C  F008         	goto	u1960
  2819   0010D4                     u1961:
  2820   0010D4  EF50  F008         	goto	l3038
  2821   0010D8                     u1960:
  2822   0010D8                     
  2823                           ; BSR set to: 0
  2824   0010D8  0012               	return		;funcret
  2825   0010DA                     __end_of_fputs:
  2826                           	callstack 0
  2827                           
  2828 ;; *************** function _fputc *****************
  2829 ;; Defined at:
  2830 ;;		line 8 in file "G:\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2831 ;; Parameters:    Size  Location     Type
  2832 ;;  c               2    0[BANK0 ] int 
  2833 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  2834 ;;		 -> NULL(0), 
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;		None
  2837 ;; Return value:  Size  Location     Type
  2838 ;;                  2    0[BANK0 ] int 
  2839 ;; Registers used:
  2840 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2841 ;; Tracked objects:
  2842 ;;		On entry : 0/0
  2843 ;;		On exit  : 0/0
  2844 ;;		Unchanged: 0/0
  2845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2846 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2848 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2849 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2850 ;;Total ram usage:        9 bytes
  2851 ;; Hardware stack levels used: 1
  2852 ;; Hardware stack levels required when called: 6
  2853 ;; This function calls:
  2854 ;;		_putch
  2855 ;; This function is called by:
  2856 ;;		_pad
  2857 ;;		_vfpfcnvrt
  2858 ;;		_fputs
  2859 ;; This function uses a non-reentrant model
  2860 ;;
  2861                           
  2862                           	psect	text11
  2863   000C86                     __ptext11:
  2864                           	callstack 0
  2865   000C86                     _fputc:
  2866                           	callstack 21
  2867   000C86  0100               	movlb	0	; () banked
  2868   000C88  5162               	movf	fputc@fp& (0+255),w,b
  2869   000C8A  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  2870   000C8C  B4D8               	btfsc	status,2,c
  2871   000C8E  EF4B  F006         	goto	u1921
  2872   000C92  EF4D  F006         	goto	u1920
  2873   000C96                     u1921:
  2874   000C96  EF56  F006         	goto	l3026
  2875   000C9A                     u1920:
  2876   000C9A                     
  2877                           ; BSR set to: 0
  2878   000C9A  5162               	movf	fputc@fp& (0+255),w,b
  2879   000C9C  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  2880   000C9E  A4D8               	btfss	status,2,c
  2881   000CA0  EF54  F006         	goto	u1931
  2882   000CA4  EF56  F006         	goto	u1930
  2883   000CA8                     u1931:
  2884   000CA8  EF5B  F006         	goto	l3028
  2885   000CAC                     u1930:
  2886   000CAC                     l3026:
  2887                           
  2888                           ; BSR set to: 0
  2889   000CAC  5160               	movf	fputc@c& (0+255),w,b
  2890   000CAE  EC30  F00A         	call	_putch
  2891   000CB2  EF8E  F006         	goto	l1406
  2892   000CB6                     l3028:
  2893                           
  2894                           ; BSR set to: 0
  2895   000CB6  EE20 F009          	lfsr	2,9
  2896   000CBA  5162               	movf	fputc@fp& (0+255),w,b
  2897   000CBC  26D9               	addwf	fsr2l,f,c
  2898   000CBE  5163               	movf	(fputc@fp+1)& (0+255),w,b
  2899   000CC0  22DA               	addwfc	fsr2h,f,c
  2900   000CC2  50DE               	movf	postinc2,w,c
  2901   000CC4  10DE               	iorwf	postinc2,w,c
  2902   000CC6  B4D8               	btfsc	status,2,c
  2903   000CC8  EF68  F006         	goto	u1941
  2904   000CCC  EF6A  F006         	goto	u1940
  2905   000CD0                     u1941:
  2906   000CD0  EF85  F006         	goto	l3032
  2907   000CD4                     u1940:
  2908   000CD4                     
  2909                           ; BSR set to: 0
  2910   000CD4  EE20 F009          	lfsr	2,9
  2911   000CD8  5162               	movf	fputc@fp& (0+255),w,b
  2912   000CDA  26D9               	addwf	fsr2l,f,c
  2913   000CDC  5163               	movf	(fputc@fp+1)& (0+255),w,b
  2914   000CDE  22DA               	addwfc	fsr2h,f,c
  2915   000CE0  EE10 F003          	lfsr	1,3
  2916   000CE4  5162               	movf	fputc@fp& (0+255),w,b
  2917   000CE6  26E1               	addwf	fsr1l,f,c
  2918   000CE8  5163               	movf	(fputc@fp+1)& (0+255),w,b
  2919   000CEA  22E2               	addwfc	fsr1h,f,c
  2920   000CEC  50DE               	movf	postinc2,w,c
  2921   000CEE  5CE6               	subwf	postinc1,w,c
  2922   000CF0  50E6               	movf	postinc1,w,c
  2923   000CF2  0A80               	xorlw	128
  2924   000CF4  6F68               	movwf	(??_fputc+4)& (0+255),b
  2925   000CF6  50DE               	movf	postinc2,w,c
  2926   000CF8  0A80               	xorlw	128
  2927   000CFA  5968               	subwfb	(??_fputc+4)& (0+255),w,b
  2928   000CFC  B0D8               	btfsc	status,0,c
  2929   000CFE  EF83  F006         	goto	u1951
  2930   000D02  EF85  F006         	goto	u1950
  2931   000D06                     u1951:
  2932   000D06  EF8E  F006         	goto	l1406
  2933   000D0A                     u1950:
  2934   000D0A                     l3032:
  2935                           
  2936                           ; BSR set to: 0
  2937   000D0A  EE20 F003          	lfsr	2,3
  2938   000D0E  5162               	movf	fputc@fp& (0+255),w,b
  2939   000D10  26D9               	addwf	fsr2l,f,c
  2940   000D12  5163               	movf	(fputc@fp+1)& (0+255),w,b
  2941   000D14  22DA               	addwfc	fsr2h,f,c
  2942   000D16  2ADE               	incf	postinc2,f,c
  2943   000D18  0E00               	movlw	0
  2944   000D1A  22DD               	addwfc	postdec2,f,c
  2945   000D1C                     l1406:
  2946   000D1C  0012               	return		;funcret
  2947   000D1E                     __end_of_fputc:
  2948                           	callstack 0
  2949                           
  2950 ;; *************** function _putch *****************
  2951 ;; Defined at:
  2952 ;;		line 201 in file "mcc_generated_files/eusart1.c"
  2953 ;; Parameters:    Size  Location     Type
  2954 ;;  txData          1    wreg     unsigned char 
  2955 ;; Auto vars:     Size  Location     Type
  2956 ;;  txData          1   31[COMRAM] unsigned char 
  2957 ;; Return value:  Size  Location     Type
  2958 ;;                  1    wreg      void 
  2959 ;; Registers used:
  2960 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2961 ;; Tracked objects:
  2962 ;;		On entry : 0/0
  2963 ;;		On exit  : 0/0
  2964 ;;		Unchanged: 0/0
  2965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2967 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2969 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2970 ;;Total ram usage:        1 bytes
  2971 ;; Hardware stack levels used: 1
  2972 ;; Hardware stack levels required when called: 5
  2973 ;; This function calls:
  2974 ;;		_EUSART1_Write
  2975 ;; This function is called by:
  2976 ;;		_fputc
  2977 ;; This function uses a non-reentrant model
  2978 ;;
  2979                           
  2980                           	psect	text12
  2981   001460                     __ptext12:
  2982                           	callstack 0
  2983   001460                     _putch:
  2984                           	callstack 21
  2985                           
  2986                           ;incstack = 0
  2987                           ;putch@txData stored from wreg
  2988   001460  6E20               	movwf	putch@txData^0,c
  2989   001462                     
  2990                           ;mcc_generated_files/eusart1.c: 201: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 202: {;mcc_generated_files/eusart1.c: 203:     EUSART1_Write(txData);
  2991   001462  5020               	movf	putch@txData^0,w,c
  2992   001464  ECA3  F007         	call	_EUSART1_Write
  2993   001468  0012               	return		;funcret
  2994   00146A                     __end_of_putch:
  2995                           	callstack 0
  2996                           
  2997 ;; *************** function _abs *****************
  2998 ;; Defined at:
  2999 ;;		line 1 in file "G:\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  3000 ;; Parameters:    Size  Location     Type
  3001 ;;  a               2   16[BANK0 ] int 
  3002 ;; Auto vars:     Size  Location     Type
  3003 ;;		None
  3004 ;; Return value:  Size  Location     Type
  3005 ;;                  2   16[BANK0 ] int 
  3006 ;; Registers used:
  3007 ;;		wreg, status,2, status,0
  3008 ;; Tracked objects:
  3009 ;;		On entry : 0/0
  3010 ;;		On exit  : 0/0
  3011 ;;		Unchanged: 0/0
  3012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3013 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3015 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3016 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3017 ;;Total ram usage:        4 bytes
  3018 ;; Hardware stack levels used: 1
  3019 ;; Hardware stack levels required when called: 4
  3020 ;; This function calls:
  3021 ;;		Nothing
  3022 ;; This function is called by:
  3023 ;;		_dtoa
  3024 ;; This function uses a non-reentrant model
  3025 ;;
  3026                           
  3027                           	psect	text13
  3028   00111E                     __ptext13:
  3029                           	callstack 0
  3030   00111E                     _abs:
  3031                           	callstack 22
  3032   00111E  0100               	movlb	0	; () banked
  3033   001120  BF71               	btfsc	(abs@a+1)& (0+255),7,b
  3034   001122  EF9D  F008         	goto	u2120
  3035   001126  5171               	movf	(abs@a+1)& (0+255),w,b
  3036   001128  E106               	bnz	u2121
  3037   00112A  0570               	decf	abs@a& (0+255),w,b
  3038   00112C  B0D8               	btfsc	status,0,c
  3039   00112E  EF9B  F008         	goto	u2121
  3040   001132  EF9D  F008         	goto	u2120
  3041   001136                     u2121:
  3042   001136  EFAB  F008         	goto	l1391
  3043   00113A                     u2120:
  3044   00113A                     
  3045                           ; BSR set to: 0
  3046   00113A  C070  F072         	movff	abs@a,??_abs
  3047   00113E  C071  F073         	movff	abs@a+1,??_abs+1
  3048   001142  1F72               	comf	??_abs& (0+255),f,b
  3049   001144  1F73               	comf	(??_abs+1)& (0+255),f,b
  3050   001146  4B72               	infsnz	??_abs& (0+255),f,b
  3051   001148  2B73               	incf	(??_abs+1)& (0+255),f,b
  3052   00114A  C072  F070         	movff	??_abs,?_abs
  3053   00114E  C073  F071         	movff	??_abs+1,?_abs+1
  3054   001152  EFAF  F008         	goto	l1394
  3055   001156                     l1391:
  3056                           
  3057                           ; BSR set to: 0
  3058   001156  C070  F070         	movff	abs@a,?_abs
  3059   00115A  C071  F071         	movff	abs@a+1,?_abs+1
  3060   00115E                     l1394:
  3061                           
  3062                           ; BSR set to: 0
  3063   00115E  0012               	return		;funcret
  3064   001160                     __end_of_abs:
  3065                           	callstack 0
  3066                           
  3067 ;; *************** function ___aomod *****************
  3068 ;; Defined at:
  3069 ;;		line 9 in file "G:\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  3070 ;; Parameters:    Size  Location     Type
  3071 ;;  dividend        8    0[BANK0 ] long long 
  3072 ;;  divisor         8    8[BANK0 ] long long 
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;  sign            1   31[COMRAM] unsigned char 
  3075 ;;  counter         1   30[COMRAM] unsigned char 
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  8    0[BANK0 ] long long 
  3078 ;; Registers used:
  3079 ;;		wreg, status,2, status,0
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3085 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3086 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3088 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3089 ;;Total ram usage:       18 bytes
  3090 ;; Hardware stack levels used: 1
  3091 ;; Hardware stack levels required when called: 4
  3092 ;; This function calls:
  3093 ;;		Nothing
  3094 ;; This function is called by:
  3095 ;;		_dtoa
  3096 ;; This function uses a non-reentrant model
  3097 ;;
  3098                           
  3099                           	psect	text14
  3100   000746                     __ptext14:
  3101                           	callstack 0
  3102   000746                     ___aomod:
  3103                           	callstack 22
  3104   000746  0E00               	movlw	0
  3105   000748  6E20               	movwf	___aomod@sign^0,c
  3106   00074A  0100               	movlb	0	; () banked
  3107   00074C  BF67               	btfsc	(___aomod@dividend+7)& (0+255),7,b
  3108   00074E  EFAD  F003         	goto	u2040
  3109   000752  EFAB  F003         	goto	u2041
  3110   000756                     u2041:
  3111   000756  EFBF  F003         	goto	l3096
  3112   00075A                     u2040:
  3113   00075A                     
  3114                           ; BSR set to: 0
  3115   00075A  1F67               	comf	(___aomod@dividend+7)& (0+255),f,b
  3116   00075C  1F66               	comf	(___aomod@dividend+6)& (0+255),f,b
  3117   00075E  1F65               	comf	(___aomod@dividend+5)& (0+255),f,b
  3118   000760  1F64               	comf	(___aomod@dividend+4)& (0+255),f,b
  3119   000762  1F63               	comf	(___aomod@dividend+3)& (0+255),f,b
  3120   000764  1F62               	comf	(___aomod@dividend+2)& (0+255),f,b
  3121   000766  1F61               	comf	(___aomod@dividend+1)& (0+255),f,b
  3122   000768  6D60               	negf	___aomod@dividend& (0+255),b
  3123   00076A  0E00               	movlw	0
  3124   00076C  2361               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  3125   00076E  2362               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  3126   000770  2363               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  3127   000772  2364               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  3128   000774  2365               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  3129   000776  2366               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  3130   000778  2367               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  3131   00077A                     
  3132                           ; BSR set to: 0
  3133   00077A  0E01               	movlw	1
  3134   00077C  6E20               	movwf	___aomod@sign^0,c
  3135   00077E                     l3096:
  3136                           
  3137                           ; BSR set to: 0
  3138   00077E  BF6F               	btfsc	(___aomod@divisor+7)& (0+255),7,b
  3139   000780  EFC6  F003         	goto	u2050
  3140   000784  EFC4  F003         	goto	u2051
  3141   000788                     u2051:
  3142   000788  EFD6  F003         	goto	l3100
  3143   00078C                     u2050:
  3144   00078C                     
  3145                           ; BSR set to: 0
  3146   00078C  1F6F               	comf	(___aomod@divisor+7)& (0+255),f,b
  3147   00078E  1F6E               	comf	(___aomod@divisor+6)& (0+255),f,b
  3148   000790  1F6D               	comf	(___aomod@divisor+5)& (0+255),f,b
  3149   000792  1F6C               	comf	(___aomod@divisor+4)& (0+255),f,b
  3150   000794  1F6B               	comf	(___aomod@divisor+3)& (0+255),f,b
  3151   000796  1F6A               	comf	(___aomod@divisor+2)& (0+255),f,b
  3152   000798  1F69               	comf	(___aomod@divisor+1)& (0+255),f,b
  3153   00079A  6D68               	negf	___aomod@divisor& (0+255),b
  3154   00079C  0E00               	movlw	0
  3155   00079E  2369               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  3156   0007A0  236A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  3157   0007A2  236B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  3158   0007A4  236C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  3159   0007A6  236D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  3160   0007A8  236E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  3161   0007AA  236F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  3162   0007AC                     l3100:
  3163                           
  3164                           ; BSR set to: 0
  3165   0007AC  5168               	movf	___aomod@divisor& (0+255),w,b
  3166   0007AE  1169               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  3167   0007B0  116A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  3168   0007B2  116B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  3169   0007B4  116C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  3170   0007B6  116D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  3171   0007B8  116E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  3172   0007BA  116F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  3173   0007BC  B4D8               	btfsc	status,2,c
  3174   0007BE  EFE3  F003         	goto	u2061
  3175   0007C2  EFE5  F003         	goto	u2060
  3176   0007C6                     u2061:
  3177   0007C6  EF2D  F004         	goto	l3116
  3178   0007CA                     u2060:
  3179   0007CA                     
  3180                           ; BSR set to: 0
  3181   0007CA  0E01               	movlw	1
  3182   0007CC  6E1F               	movwf	___aomod@counter^0,c
  3183   0007CE  EFF3  F003         	goto	l3106
  3184   0007D2                     l3104:
  3185                           
  3186                           ; BSR set to: 0
  3187   0007D2  90D8               	bcf	status,0,c
  3188   0007D4  3768               	rlcf	___aomod@divisor& (0+255),f,b
  3189   0007D6  3769               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  3190   0007D8  376A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  3191   0007DA  376B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  3192   0007DC  376C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  3193   0007DE  376D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  3194   0007E0  376E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  3195   0007E2  376F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  3196   0007E4  2A1F               	incf	___aomod@counter^0,f,c
  3197   0007E6                     l3106:
  3198                           
  3199                           ; BSR set to: 0
  3200   0007E6  AF6F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  3201   0007E8  EFF8  F003         	goto	u2071
  3202   0007EC  EFFA  F003         	goto	u2070
  3203   0007F0                     u2071:
  3204   0007F0  EFE9  F003         	goto	l3104
  3205   0007F4                     u2070:
  3206   0007F4                     l3108:
  3207                           
  3208                           ; BSR set to: 0
  3209   0007F4  5168               	movf	___aomod@divisor& (0+255),w,b
  3210   0007F6  5D60               	subwf	___aomod@dividend& (0+255),w,b
  3211   0007F8  5169               	movf	(___aomod@divisor+1)& (0+255),w,b
  3212   0007FA  5961               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  3213   0007FC  516A               	movf	(___aomod@divisor+2)& (0+255),w,b
  3214   0007FE  5962               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  3215   000800  516B               	movf	(___aomod@divisor+3)& (0+255),w,b
  3216   000802  5963               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  3217   000804  516C               	movf	(___aomod@divisor+4)& (0+255),w,b
  3218   000806  5964               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  3219   000808  516D               	movf	(___aomod@divisor+5)& (0+255),w,b
  3220   00080A  5965               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  3221   00080C  516E               	movf	(___aomod@divisor+6)& (0+255),w,b
  3222   00080E  5966               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  3223   000810  516F               	movf	(___aomod@divisor+7)& (0+255),w,b
  3224   000812  5967               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  3225   000814  A0D8               	btfss	status,0,c
  3226   000816  EF0F  F004         	goto	u2081
  3227   00081A  EF11  F004         	goto	u2080
  3228   00081E                     u2081:
  3229   00081E  EF21  F004         	goto	l3112
  3230   000822                     u2080:
  3231   000822                     
  3232                           ; BSR set to: 0
  3233   000822  5168               	movf	___aomod@divisor& (0+255),w,b
  3234   000824  5F60               	subwf	___aomod@dividend& (0+255),f,b
  3235   000826  5169               	movf	(___aomod@divisor+1)& (0+255),w,b
  3236   000828  5B61               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  3237   00082A  516A               	movf	(___aomod@divisor+2)& (0+255),w,b
  3238   00082C  5B62               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  3239   00082E  516B               	movf	(___aomod@divisor+3)& (0+255),w,b
  3240   000830  5B63               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  3241   000832  516C               	movf	(___aomod@divisor+4)& (0+255),w,b
  3242   000834  5B64               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  3243   000836  516D               	movf	(___aomod@divisor+5)& (0+255),w,b
  3244   000838  5B65               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  3245   00083A  516E               	movf	(___aomod@divisor+6)& (0+255),w,b
  3246   00083C  5B66               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  3247   00083E  516F               	movf	(___aomod@divisor+7)& (0+255),w,b
  3248   000840  5B67               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  3249   000842                     l3112:
  3250                           
  3251                           ; BSR set to: 0
  3252   000842  90D8               	bcf	status,0,c
  3253   000844  336F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  3254   000846  336E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  3255   000848  336D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  3256   00084A  336C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  3257   00084C  336B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  3258   00084E  336A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  3259   000850  3369               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  3260   000852  3368               	rrcf	___aomod@divisor& (0+255),f,b
  3261   000854                     
  3262                           ; BSR set to: 0
  3263   000854  2E1F               	decfsz	___aomod@counter^0,f,c
  3264   000856  EFFA  F003         	goto	l3108
  3265   00085A                     l3116:
  3266                           
  3267                           ; BSR set to: 0
  3268   00085A  5020               	movf	___aomod@sign^0,w,c
  3269   00085C  B4D8               	btfsc	status,2,c
  3270   00085E  EF33  F004         	goto	u2091
  3271   000862  EF35  F004         	goto	u2090
  3272   000866                     u2091:
  3273   000866  EF45  F004         	goto	l3120
  3274   00086A                     u2090:
  3275   00086A                     
  3276                           ; BSR set to: 0
  3277   00086A  1F67               	comf	(___aomod@dividend+7)& (0+255),f,b
  3278   00086C  1F66               	comf	(___aomod@dividend+6)& (0+255),f,b
  3279   00086E  1F65               	comf	(___aomod@dividend+5)& (0+255),f,b
  3280   000870  1F64               	comf	(___aomod@dividend+4)& (0+255),f,b
  3281   000872  1F63               	comf	(___aomod@dividend+3)& (0+255),f,b
  3282   000874  1F62               	comf	(___aomod@dividend+2)& (0+255),f,b
  3283   000876  1F61               	comf	(___aomod@dividend+1)& (0+255),f,b
  3284   000878  6D60               	negf	___aomod@dividend& (0+255),b
  3285   00087A  0E00               	movlw	0
  3286   00087C  2361               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  3287   00087E  2362               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  3288   000880  2363               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  3289   000882  2364               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  3290   000884  2365               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  3291   000886  2366               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  3292   000888  2367               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  3293   00088A                     l3120:
  3294                           
  3295                           ; BSR set to: 0
  3296   00088A  C060  F060         	movff	___aomod@dividend,?___aomod
  3297   00088E  C061  F061         	movff	___aomod@dividend+1,?___aomod+1
  3298   000892  C062  F062         	movff	___aomod@dividend+2,?___aomod+2
  3299   000896  C063  F063         	movff	___aomod@dividend+3,?___aomod+3
  3300   00089A  C064  F064         	movff	___aomod@dividend+4,?___aomod+4
  3301   00089E  C065  F065         	movff	___aomod@dividend+5,?___aomod+5
  3302   0008A2  C066  F066         	movff	___aomod@dividend+6,?___aomod+6
  3303   0008A6  C067  F067         	movff	___aomod@dividend+7,?___aomod+7
  3304   0008AA                     
  3305                           ; BSR set to: 0
  3306   0008AA  0012               	return		;funcret
  3307   0008AC                     __end_of___aomod:
  3308                           	callstack 0
  3309                           
  3310 ;; *************** function ___aodiv *****************
  3311 ;; Defined at:
  3312 ;;		line 9 in file "G:\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  3313 ;; Parameters:    Size  Location     Type
  3314 ;;  dividend        8    0[BANK0 ] long long 
  3315 ;;  divisor         8    8[BANK0 ] long long 
  3316 ;; Auto vars:     Size  Location     Type
  3317 ;;  quotient        8   18[BANK0 ] long long 
  3318 ;;  sign            1   17[BANK0 ] unsigned char 
  3319 ;;  counter         1   16[BANK0 ] unsigned char 
  3320 ;; Return value:  Size  Location     Type
  3321 ;;                  8    0[BANK0 ] long long 
  3322 ;; Registers used:
  3323 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3324 ;; Tracked objects:
  3325 ;;		On entry : 0/0
  3326 ;;		On exit  : 0/0
  3327 ;;		Unchanged: 0/0
  3328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3329 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3330 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3332 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3333 ;;Total ram usage:       26 bytes
  3334 ;; Hardware stack levels used: 1
  3335 ;; Hardware stack levels required when called: 4
  3336 ;; This function calls:
  3337 ;;		Nothing
  3338 ;; This function is called by:
  3339 ;;		_dtoa
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343                           	psect	text15
  3344   0005BC                     __ptext15:
  3345                           	callstack 0
  3346   0005BC                     ___aodiv:
  3347                           	callstack 22
  3348   0005BC  0E00               	movlw	0
  3349   0005BE  0100               	movlb	0	; () banked
  3350   0005C0  6F71               	movwf	___aodiv@sign& (0+255),b
  3351   0005C2                     
  3352                           ; BSR set to: 0
  3353   0005C2  BF6F               	btfsc	(___aodiv@divisor+7)& (0+255),7,b
  3354   0005C4  EFE8  F002         	goto	u1970
  3355   0005C8  EFE6  F002         	goto	u1971
  3356   0005CC                     u1971:
  3357   0005CC  EFFA  F002         	goto	l3052
  3358   0005D0                     u1970:
  3359   0005D0                     
  3360                           ; BSR set to: 0
  3361   0005D0  1F6F               	comf	(___aodiv@divisor+7)& (0+255),f,b
  3362   0005D2  1F6E               	comf	(___aodiv@divisor+6)& (0+255),f,b
  3363   0005D4  1F6D               	comf	(___aodiv@divisor+5)& (0+255),f,b
  3364   0005D6  1F6C               	comf	(___aodiv@divisor+4)& (0+255),f,b
  3365   0005D8  1F6B               	comf	(___aodiv@divisor+3)& (0+255),f,b
  3366   0005DA  1F6A               	comf	(___aodiv@divisor+2)& (0+255),f,b
  3367   0005DC  1F69               	comf	(___aodiv@divisor+1)& (0+255),f,b
  3368   0005DE  6D68               	negf	___aodiv@divisor& (0+255),b
  3369   0005E0  0E00               	movlw	0
  3370   0005E2  2369               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  3371   0005E4  236A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  3372   0005E6  236B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  3373   0005E8  236C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  3374   0005EA  236D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  3375   0005EC  236E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  3376   0005EE  236F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  3377   0005F0                     
  3378                           ; BSR set to: 0
  3379   0005F0  0E01               	movlw	1
  3380   0005F2  6F71               	movwf	___aodiv@sign& (0+255),b
  3381   0005F4                     l3052:
  3382                           
  3383                           ; BSR set to: 0
  3384   0005F4  BF67               	btfsc	(___aodiv@dividend+7)& (0+255),7,b
  3385   0005F6  EF01  F003         	goto	u1980
  3386   0005FA  EFFF  F002         	goto	u1981
  3387   0005FE                     u1981:
  3388   0005FE  EF13  F003         	goto	l3058
  3389   000602                     u1980:
  3390   000602                     
  3391                           ; BSR set to: 0
  3392   000602  1F67               	comf	(___aodiv@dividend+7)& (0+255),f,b
  3393   000604  1F66               	comf	(___aodiv@dividend+6)& (0+255),f,b
  3394   000606  1F65               	comf	(___aodiv@dividend+5)& (0+255),f,b
  3395   000608  1F64               	comf	(___aodiv@dividend+4)& (0+255),f,b
  3396   00060A  1F63               	comf	(___aodiv@dividend+3)& (0+255),f,b
  3397   00060C  1F62               	comf	(___aodiv@dividend+2)& (0+255),f,b
  3398   00060E  1F61               	comf	(___aodiv@dividend+1)& (0+255),f,b
  3399   000610  6D60               	negf	___aodiv@dividend& (0+255),b
  3400   000612  0E00               	movlw	0
  3401   000614  2361               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  3402   000616  2362               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  3403   000618  2363               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  3404   00061A  2364               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  3405   00061C  2365               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  3406   00061E  2366               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  3407   000620  2367               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  3408   000622                     
  3409                           ; BSR set to: 0
  3410   000622  0E01               	movlw	1
  3411   000624  1B71               	xorwf	___aodiv@sign& (0+255),f,b
  3412   000626                     l3058:
  3413                           
  3414                           ; BSR set to: 0
  3415   000626  EE20  F072         	lfsr	2,___aodiv@quotient
  3416   00062A  0E07               	movlw	7
  3417   00062C                     u1991:
  3418   00062C  6ADE               	clrf	postinc2,c
  3419   00062E  06E8               	decf	wreg,f,c
  3420   000630  E2FD               	bc	u1991
  3421   000632                     
  3422                           ; BSR set to: 0
  3423   000632  5168               	movf	___aodiv@divisor& (0+255),w,b
  3424   000634  1169               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  3425   000636  116A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  3426   000638  116B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  3427   00063A  116C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  3428   00063C  116D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  3429   00063E  116E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  3430   000640  116F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  3431   000642  B4D8               	btfsc	status,2,c
  3432   000644  EF26  F003         	goto	u2001
  3433   000648  EF28  F003         	goto	u2000
  3434   00064C                     u2001:
  3435   00064C  EF7A  F003         	goto	l3080
  3436   000650                     u2000:
  3437   000650                     
  3438                           ; BSR set to: 0
  3439   000650  0E01               	movlw	1
  3440   000652  6F70               	movwf	___aodiv@counter& (0+255),b
  3441   000654  EF36  F003         	goto	l3066
  3442   000658                     l3064:
  3443                           
  3444                           ; BSR set to: 0
  3445   000658  90D8               	bcf	status,0,c
  3446   00065A  3768               	rlcf	___aodiv@divisor& (0+255),f,b
  3447   00065C  3769               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  3448   00065E  376A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  3449   000660  376B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  3450   000662  376C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  3451   000664  376D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  3452   000666  376E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  3453   000668  376F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  3454   00066A  2B70               	incf	___aodiv@counter& (0+255),f,b
  3455   00066C                     l3066:
  3456                           
  3457                           ; BSR set to: 0
  3458   00066C  AF6F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  3459   00066E  EF3B  F003         	goto	u2011
  3460   000672  EF3D  F003         	goto	u2010
  3461   000676                     u2011:
  3462   000676  EF2C  F003         	goto	l3064
  3463   00067A                     u2010:
  3464   00067A                     l3068:
  3465                           
  3466                           ; BSR set to: 0
  3467   00067A  90D8               	bcf	status,0,c
  3468   00067C  3772               	rlcf	___aodiv@quotient& (0+255),f,b
  3469   00067E  3773               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  3470   000680  3774               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  3471   000682  3775               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  3472   000684  3776               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  3473   000686  3777               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  3474   000688  3778               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  3475   00068A  3779               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  3476   00068C                     
  3477                           ; BSR set to: 0
  3478   00068C  5168               	movf	___aodiv@divisor& (0+255),w,b
  3479   00068E  5D60               	subwf	___aodiv@dividend& (0+255),w,b
  3480   000690  5169               	movf	(___aodiv@divisor+1)& (0+255),w,b
  3481   000692  5961               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  3482   000694  516A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  3483   000696  5962               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  3484   000698  516B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  3485   00069A  5963               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  3486   00069C  516C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  3487   00069E  5964               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  3488   0006A0  516D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  3489   0006A2  5965               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  3490   0006A4  516E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  3491   0006A6  5966               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  3492   0006A8  516F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  3493   0006AA  5967               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  3494   0006AC  A0D8               	btfss	status,0,c
  3495   0006AE  EF5B  F003         	goto	u2021
  3496   0006B2  EF5D  F003         	goto	u2020
  3497   0006B6                     u2021:
  3498   0006B6  EF6E  F003         	goto	l3076
  3499   0006BA                     u2020:
  3500   0006BA                     
  3501                           ; BSR set to: 0
  3502   0006BA  5168               	movf	___aodiv@divisor& (0+255),w,b
  3503   0006BC  5F60               	subwf	___aodiv@dividend& (0+255),f,b
  3504   0006BE  5169               	movf	(___aodiv@divisor+1)& (0+255),w,b
  3505   0006C0  5B61               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  3506   0006C2  516A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  3507   0006C4  5B62               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  3508   0006C6  516B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  3509   0006C8  5B63               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  3510   0006CA  516C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  3511   0006CC  5B64               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  3512   0006CE  516D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  3513   0006D0  5B65               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  3514   0006D2  516E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  3515   0006D4  5B66               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  3516   0006D6  516F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  3517   0006D8  5B67               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  3518   0006DA                     
  3519                           ; BSR set to: 0
  3520   0006DA  8172               	bsf	___aodiv@quotient& (0+255),0,b
  3521   0006DC                     l3076:
  3522                           
  3523                           ; BSR set to: 0
  3524   0006DC  90D8               	bcf	status,0,c
  3525   0006DE  336F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  3526   0006E0  336E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  3527   0006E2  336D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  3528   0006E4  336C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  3529   0006E6  336B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  3530   0006E8  336A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  3531   0006EA  3369               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  3532   0006EC  3368               	rrcf	___aodiv@divisor& (0+255),f,b
  3533   0006EE                     
  3534                           ; BSR set to: 0
  3535   0006EE  2F70               	decfsz	___aodiv@counter& (0+255),f,b
  3536   0006F0  EF3D  F003         	goto	l3068
  3537   0006F4                     l3080:
  3538                           
  3539                           ; BSR set to: 0
  3540   0006F4  5171               	movf	___aodiv@sign& (0+255),w,b
  3541   0006F6  B4D8               	btfsc	status,2,c
  3542   0006F8  EF80  F003         	goto	u2031
  3543   0006FC  EF82  F003         	goto	u2030
  3544   000700                     u2031:
  3545   000700  EF92  F003         	goto	l3084
  3546   000704                     u2030:
  3547   000704                     
  3548                           ; BSR set to: 0
  3549   000704  1F79               	comf	(___aodiv@quotient+7)& (0+255),f,b
  3550   000706  1F78               	comf	(___aodiv@quotient+6)& (0+255),f,b
  3551   000708  1F77               	comf	(___aodiv@quotient+5)& (0+255),f,b
  3552   00070A  1F76               	comf	(___aodiv@quotient+4)& (0+255),f,b
  3553   00070C  1F75               	comf	(___aodiv@quotient+3)& (0+255),f,b
  3554   00070E  1F74               	comf	(___aodiv@quotient+2)& (0+255),f,b
  3555   000710  1F73               	comf	(___aodiv@quotient+1)& (0+255),f,b
  3556   000712  6D72               	negf	___aodiv@quotient& (0+255),b
  3557   000714  0E00               	movlw	0
  3558   000716  2373               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  3559   000718  2374               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  3560   00071A  2375               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  3561   00071C  2376               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  3562   00071E  2377               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  3563   000720  2378               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  3564   000722  2379               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  3565   000724                     l3084:
  3566                           
  3567                           ; BSR set to: 0
  3568   000724  C072  F060         	movff	___aodiv@quotient,?___aodiv
  3569   000728  C073  F061         	movff	___aodiv@quotient+1,?___aodiv+1
  3570   00072C  C074  F062         	movff	___aodiv@quotient+2,?___aodiv+2
  3571   000730  C075  F063         	movff	___aodiv@quotient+3,?___aodiv+3
  3572   000734  C076  F064         	movff	___aodiv@quotient+4,?___aodiv+4
  3573   000738  C077  F065         	movff	___aodiv@quotient+5,?___aodiv+5
  3574   00073C  C078  F066         	movff	___aodiv@quotient+6,?___aodiv+6
  3575   000740  C079  F067         	movff	___aodiv@quotient+7,?___aodiv+7
  3576   000744                     
  3577                           ; BSR set to: 0
  3578   000744  0012               	return		;funcret
  3579   000746                     __end_of___aodiv:
  3580                           	callstack 0
  3581                           
  3582 ;; *************** function _SYSTEM_Initialize *****************
  3583 ;; Defined at:
  3584 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3585 ;; Parameters:    Size  Location     Type
  3586 ;;		None
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;		None
  3589 ;; Return value:  Size  Location     Type
  3590 ;;                  1    wreg      void 
  3591 ;; Registers used:
  3592 ;;		wreg, status,2, status,0, cstack
  3593 ;; Tracked objects:
  3594 ;;		On entry : 0/0
  3595 ;;		On exit  : 0/0
  3596 ;;		Unchanged: 0/0
  3597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3602 ;;Total ram usage:        0 bytes
  3603 ;; Hardware stack levels used: 1
  3604 ;; Hardware stack levels required when called: 6
  3605 ;; This function calls:
  3606 ;;		_ADC_Initialize
  3607 ;;		_CCP5_Initialize
  3608 ;;		_EUSART1_Initialize
  3609 ;;		_EXT_INT_Initialize
  3610 ;;		_INTERRUPT_Initialize
  3611 ;;		_OSCILLATOR_Initialize
  3612 ;;		_PIN_MANAGER_Initialize
  3613 ;;		_SPI1_Initialize
  3614 ;;		_TMR0_Initialize
  3615 ;;		_TMR1_Initialize
  3616 ;; This function is called by:
  3617 ;;		_main
  3618 ;; This function uses a non-reentrant model
  3619 ;;
  3620                           
  3621                           	psect	text16
  3622   0012C6                     __ptext16:
  3623                           	callstack 0
  3624   0012C6                     _SYSTEM_Initialize:
  3625                           	callstack 24
  3626   0012C6                     
  3627                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  3628   0012C6  EC1C  F00A         	call	_INTERRUPT_Initialize	;wreg free
  3629   0012CA                     
  3630                           ;mcc_generated_files/mcc.c: 54:     SPI1_Initialize();
  3631   0012CA  EC04  F00A         	call	_SPI1_Initialize	;wreg free
  3632   0012CE                     
  3633                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  3634   0012CE  EC6D  F008         	call	_PIN_MANAGER_Initialize	;wreg free
  3635   0012D2                     
  3636                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  3637   0012D2  EC15  F00A         	call	_OSCILLATOR_Initialize	;wreg free
  3638   0012D6                     
  3639                           ;mcc_generated_files/mcc.c: 57:     CCP5_Initialize();
  3640   0012D6  EC0D  F00A         	call	_CCP5_Initialize	;wreg free
  3641   0012DA                     
  3642                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
  3643   0012DA  ECB6  F009         	call	_ADC_Initialize	;wreg free
  3644   0012DE                     
  3645                           ;mcc_generated_files/mcc.c: 59:     EXT_INT_Initialize();
  3646   0012DE  ECF0  F009         	call	_EXT_INT_Initialize	;wreg free
  3647   0012E2                     
  3648                           ;mcc_generated_files/mcc.c: 60:     TMR1_Initialize();
  3649   0012E2  EC78  F009         	call	_TMR1_Initialize	;wreg free
  3650   0012E6                     
  3651                           ;mcc_generated_files/mcc.c: 61:     TMR0_Initialize();
  3652   0012E6  ECC8  F009         	call	_TMR0_Initialize	;wreg free
  3653   0012EA                     
  3654                           ;mcc_generated_files/mcc.c: 62:     EUSART1_Initialize();
  3655   0012EA  ECCE  F006         	call	_EUSART1_Initialize	;wreg free
  3656   0012EE  0012               	return		;funcret
  3657   0012F0                     __end_of_SYSTEM_Initialize:
  3658                           	callstack 0
  3659                           
  3660 ;; *************** function _TMR1_Initialize *****************
  3661 ;; Defined at:
  3662 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  3663 ;; Parameters:    Size  Location     Type
  3664 ;;		None
  3665 ;; Auto vars:     Size  Location     Type
  3666 ;;		None
  3667 ;; Return value:  Size  Location     Type
  3668 ;;                  1    wreg      void 
  3669 ;; Registers used:
  3670 ;;		wreg, status,2, status,0, cstack
  3671 ;; Tracked objects:
  3672 ;;		On entry : 0/0
  3673 ;;		On exit  : 0/0
  3674 ;;		Unchanged: 0/0
  3675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3680 ;;Total ram usage:        0 bytes
  3681 ;; Hardware stack levels used: 1
  3682 ;; Hardware stack levels required when called: 5
  3683 ;; This function calls:
  3684 ;;		_TMR1_SetInterruptHandler
  3685 ;; This function is called by:
  3686 ;;		_SYSTEM_Initialize
  3687 ;; This function uses a non-reentrant model
  3688 ;;
  3689                           
  3690                           	psect	text17
  3691   0012F0                     __ptext17:
  3692                           	callstack 0
  3693   0012F0                     _TMR1_Initialize:
  3694                           	callstack 24
  3695   0012F0                     
  3696                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  3697   0012F0  0E00               	movlw	0
  3698   0012F2  6ECC               	movwf	204,c	;volatile
  3699                           
  3700                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x0B;
  3701   0012F4  0E0B               	movlw	11
  3702   0012F6  6ECF               	movwf	207,c	;volatile
  3703                           
  3704                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xDC;
  3705   0012F8  0EDC               	movlw	220
  3706   0012FA  6ECE               	movwf	206,c	;volatile
  3707   0012FC                     
  3708                           ;mcc_generated_files/tmr1.c: 78:     timer1ReloadVal=TMR1;
  3709   0012FC  CFCE F035          	movff	4046,_timer1ReloadVal	;volatile
  3710   001300  CFCF F036          	movff	4047,_timer1ReloadVal+1	;volatile
  3711   001304                     
  3712                           ;mcc_generated_files/tmr1.c: 81:     PIR1bits.TMR1IF = 0;
  3713   001304  909E               	bcf	158,0,c	;volatile
  3714   001306                     
  3715                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  3716   001306  809D               	bsf	157,0,c	;volatile
  3717   001308                     
  3718                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  3719   001308  0EEC               	movlw	low _TMR1_DefaultInterruptHandler
  3720   00130A  6E1F               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
  3721   00130C  0E14               	movlw	high _TMR1_DefaultInterruptHandler
  3722   00130E  6E20               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
  3723   001310  EC35  F00A         	call	_TMR1_SetInterruptHandler	;wreg free
  3724   001314                     
  3725                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x31;
  3726   001314  0E31               	movlw	49
  3727   001316  6ECD               	movwf	205,c	;volatile
  3728   001318  0012               	return		;funcret
  3729   00131A                     __end_of_TMR1_Initialize:
  3730                           	callstack 0
  3731                           
  3732 ;; *************** function _TMR1_SetInterruptHandler *****************
  3733 ;; Defined at:
  3734 ;;		line 172 in file "mcc_generated_files/tmr1.c"
  3735 ;; Parameters:    Size  Location     Type
  3736 ;;  InterruptHan    2   30[COMRAM] PTR FTN()void 
  3737 ;;		 -> TMR1_DefaultInterruptHandler(1), TMR1_MyInterruptHandler(1), 
  3738 ;; Auto vars:     Size  Location     Type
  3739 ;;		None
  3740 ;; Return value:  Size  Location     Type
  3741 ;;                  1    wreg      void 
  3742 ;; Registers used:
  3743 ;;		wreg, status,2, status,0
  3744 ;; Tracked objects:
  3745 ;;		On entry : 0/0
  3746 ;;		On exit  : 0/0
  3747 ;;		Unchanged: 0/0
  3748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3749 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3752 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3753 ;;Total ram usage:        2 bytes
  3754 ;; Hardware stack levels used: 1
  3755 ;; Hardware stack levels required when called: 4
  3756 ;; This function calls:
  3757 ;;		Nothing
  3758 ;; This function is called by:
  3759 ;;		_main
  3760 ;;		_TMR1_Initialize
  3761 ;; This function uses a non-reentrant model
  3762 ;;
  3763                           
  3764                           	psect	text18
  3765   00146A                     __ptext18:
  3766                           	callstack 0
  3767   00146A                     _TMR1_SetInterruptHandler:
  3768                           	callstack 26
  3769   00146A                     
  3770                           ;mcc_generated_files/tmr1.c: 173:     TMR1_InterruptHandler = InterruptHandler;
  3771   00146A  C01F  F033         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  3772   00146E  C020  F034         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  3773   001472  0012               	return		;funcret
  3774   001474                     __end_of_TMR1_SetInterruptHandler:
  3775                           	callstack 0
  3776                           
  3777 ;; *************** function _TMR0_Initialize *****************
  3778 ;; Defined at:
  3779 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;		None
  3782 ;; Auto vars:     Size  Location     Type
  3783 ;;		None
  3784 ;; Return value:  Size  Location     Type
  3785 ;;                  1    wreg      void 
  3786 ;; Registers used:
  3787 ;;		wreg, status,2, status,0, cstack
  3788 ;; Tracked objects:
  3789 ;;		On entry : 0/0
  3790 ;;		On exit  : 0/0
  3791 ;;		Unchanged: 0/0
  3792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3797 ;;Total ram usage:        0 bytes
  3798 ;; Hardware stack levels used: 1
  3799 ;; Hardware stack levels required when called: 5
  3800 ;; This function calls:
  3801 ;;		_TMR0_SetInterruptHandler
  3802 ;; This function is called by:
  3803 ;;		_SYSTEM_Initialize
  3804 ;; This function uses a non-reentrant model
  3805 ;;
  3806                           
  3807                           	psect	text19
  3808   001390                     __ptext19:
  3809                           	callstack 0
  3810   001390                     _TMR0_Initialize:
  3811                           	callstack 24
  3812   001390                     
  3813                           ;mcc_generated_files/tmr0.c: 72:     TMR0H = 0x00;
  3814   001390  0E00               	movlw	0
  3815   001392  6ED7               	movwf	215,c	;volatile
  3816                           
  3817                           ;mcc_generated_files/tmr0.c: 75:     TMR0L = 0x3D;
  3818   001394  0E3D               	movlw	61
  3819   001396  6ED6               	movwf	214,c	;volatile
  3820                           
  3821                           ;mcc_generated_files/tmr0.c: 79:     timer0ReloadVal = 61;
  3822   001398  0E3D               	movlw	61
  3823   00139A  6E3D               	movwf	_timer0ReloadVal^0,c	;volatile
  3824   00139C                     
  3825                           ;mcc_generated_files/tmr0.c: 82:     INTCONbits.TMR0IF = 0;
  3826   00139C  94F2               	bcf	242,2,c	;volatile
  3827   00139E                     
  3828                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IE = 1;
  3829   00139E  8AF2               	bsf	242,5,c	;volatile
  3830   0013A0                     
  3831                           ;mcc_generated_files/tmr0.c: 88:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  3832   0013A0  0EEE               	movlw	low _TMR0_DefaultInterruptHandler
  3833   0013A2  6E1F               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  3834   0013A4  0E14               	movlw	high _TMR0_DefaultInterruptHandler
  3835   0013A6  6E20               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  3836   0013A8  EC3A  F00A         	call	_TMR0_SetInterruptHandler	;wreg free
  3837   0013AC                     
  3838                           ;mcc_generated_files/tmr0.c: 91:     T0CON = 0x57;
  3839   0013AC  0E57               	movlw	87
  3840   0013AE  6ED5               	movwf	213,c	;volatile
  3841   0013B0  0012               	return		;funcret
  3842   0013B2                     __end_of_TMR0_Initialize:
  3843                           	callstack 0
  3844                           
  3845 ;; *************** function _TMR0_SetInterruptHandler *****************
  3846 ;; Defined at:
  3847 ;;		line 147 in file "mcc_generated_files/tmr0.c"
  3848 ;; Parameters:    Size  Location     Type
  3849 ;;  InterruptHan    2   30[COMRAM] PTR FTN()void 
  3850 ;;		 -> TMR0_MyInterruptHandler(1), TMR0_DefaultInterruptHandler(1), 
  3851 ;; Auto vars:     Size  Location     Type
  3852 ;;		None
  3853 ;; Return value:  Size  Location     Type
  3854 ;;                  1    wreg      void 
  3855 ;; Registers used:
  3856 ;;		wreg, status,2, status,0
  3857 ;; Tracked objects:
  3858 ;;		On entry : 0/0
  3859 ;;		On exit  : 0/0
  3860 ;;		Unchanged: 0/0
  3861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3862 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3865 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3866 ;;Total ram usage:        2 bytes
  3867 ;; Hardware stack levels used: 1
  3868 ;; Hardware stack levels required when called: 4
  3869 ;; This function calls:
  3870 ;;		Nothing
  3871 ;; This function is called by:
  3872 ;;		_TMR0_Initialize
  3873 ;;		_main
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           
  3877                           	psect	text20
  3878   001474                     __ptext20:
  3879                           	callstack 0
  3880   001474                     _TMR0_SetInterruptHandler:
  3881                           	callstack 26
  3882   001474                     
  3883                           ;mcc_generated_files/tmr0.c: 148:     TMR0_InterruptHandler = InterruptHandler;
  3884   001474  C01F  F037         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  3885   001478  C020  F038         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  3886   00147C  0012               	return		;funcret
  3887   00147E                     __end_of_TMR0_SetInterruptHandler:
  3888                           	callstack 0
  3889                           
  3890 ;; *************** function _SPI1_Initialize *****************
  3891 ;; Defined at:
  3892 ;;		line 62 in file "mcc_generated_files/spi1.c"
  3893 ;; Parameters:    Size  Location     Type
  3894 ;;		None
  3895 ;; Auto vars:     Size  Location     Type
  3896 ;;		None
  3897 ;; Return value:  Size  Location     Type
  3898 ;;                  1    wreg      void 
  3899 ;; Registers used:
  3900 ;;		wreg, status,2
  3901 ;; Tracked objects:
  3902 ;;		On entry : 0/0
  3903 ;;		On exit  : 0/0
  3904 ;;		Unchanged: 0/0
  3905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3910 ;;Total ram usage:        0 bytes
  3911 ;; Hardware stack levels used: 1
  3912 ;; Hardware stack levels required when called: 4
  3913 ;; This function calls:
  3914 ;;		Nothing
  3915 ;; This function is called by:
  3916 ;;		_SYSTEM_Initialize
  3917 ;; This function uses a non-reentrant model
  3918 ;;
  3919                           
  3920                           	psect	text21
  3921   001408                     __ptext21:
  3922                           	callstack 0
  3923   001408                     _SPI1_Initialize:
  3924                           	callstack 25
  3925   001408                     
  3926                           ;mcc_generated_files/spi1.c: 65:     SSP1STAT = 0x40;
  3927   001408  0E40               	movlw	64
  3928   00140A  6EC7               	movwf	199,c	;volatile
  3929                           
  3930                           ;mcc_generated_files/spi1.c: 66:     SSP1CON1 = 0x00;
  3931   00140C  0E00               	movlw	0
  3932   00140E  6EC6               	movwf	198,c	;volatile
  3933                           
  3934                           ;mcc_generated_files/spi1.c: 67:     SSP1ADD = 0x01;
  3935   001410  0E01               	movlw	1
  3936   001412  6EC8               	movwf	200,c	;volatile
  3937   001414                     
  3938                           ;mcc_generated_files/spi1.c: 68:     TRISCbits.TRISC3 = 0;
  3939   001414  9694               	bcf	148,3,c	;volatile
  3940   001416                     
  3941                           ;mcc_generated_files/spi1.c: 69:     SSP1CON1bits.SSPEN = 0;
  3942   001416  9AC6               	bcf	198,5,c	;volatile
  3943   001418  0012               	return		;funcret
  3944   00141A                     __end_of_SPI1_Initialize:
  3945                           	callstack 0
  3946                           
  3947 ;; *************** function _PIN_MANAGER_Initialize *****************
  3948 ;; Defined at:
  3949 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3950 ;; Parameters:    Size  Location     Type
  3951 ;;		None
  3952 ;; Auto vars:     Size  Location     Type
  3953 ;;		None
  3954 ;; Return value:  Size  Location     Type
  3955 ;;                  1    wreg      void 
  3956 ;; Registers used:
  3957 ;;		wreg, status,2
  3958 ;; Tracked objects:
  3959 ;;		On entry : 0/0
  3960 ;;		On exit  : 0/0
  3961 ;;		Unchanged: 0/0
  3962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3967 ;;Total ram usage:        0 bytes
  3968 ;; Hardware stack levels used: 1
  3969 ;; Hardware stack levels required when called: 4
  3970 ;; This function calls:
  3971 ;;		Nothing
  3972 ;; This function is called by:
  3973 ;;		_SYSTEM_Initialize
  3974 ;; This function uses a non-reentrant model
  3975 ;;
  3976                           
  3977                           	psect	text22
  3978   0010DA                     __ptext22:
  3979                           	callstack 0
  3980   0010DA                     _PIN_MANAGER_Initialize:
  3981                           	callstack 25
  3982   0010DA                     
  3983                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  3984   0010DA  0E00               	movlw	0
  3985   0010DC  6E8D               	movwf	141,c	;volatile
  3986                           
  3987                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  3988   0010DE  0E00               	movlw	0
  3989   0010E0  6E8C               	movwf	140,c	;volatile
  3990                           
  3991                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  3992   0010E2  0E00               	movlw	0
  3993   0010E4  6E89               	movwf	137,c	;volatile
  3994                           
  3995                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  3996   0010E6  0E00               	movlw	0
  3997   0010E8  6E8A               	movwf	138,c	;volatile
  3998                           
  3999                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  4000   0010EA  0E00               	movlw	0
  4001   0010EC  6E8B               	movwf	139,c	;volatile
  4002                           
  4003                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  4004   0010EE  0E07               	movlw	7
  4005   0010F0  6E96               	movwf	150,c	;volatile
  4006                           
  4007                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xBF;
  4008   0010F2  0EBF               	movlw	191
  4009   0010F4  6E92               	movwf	146,c	;volatile
  4010                           
  4011                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xC7;
  4012   0010F6  0EC7               	movlw	199
  4013   0010F8  6E93               	movwf	147,c	;volatile
  4014                           
  4015                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x9F;
  4016   0010FA  0E9F               	movlw	159
  4017   0010FC  6E94               	movwf	148,c	;volatile
  4018   0010FE                     
  4019                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  4020   0010FE  6895               	setf	149,c	;volatile
  4021                           
  4022                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x00;
  4023   001100  0E00               	movlw	0
  4024   001102  010F               	movlb	15	; () banked
  4025   001104  6F3B               	movwf	59,b	;volatile
  4026                           
  4027                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x00;
  4028   001106  0E00               	movlw	0
  4029   001108  6F3A               	movwf	58,b	;volatile
  4030                           
  4031                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x06;
  4032   00110A  0E06               	movlw	6
  4033   00110C  6F39               	movwf	57,b	;volatile
  4034                           
  4035                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  4036   00110E  0E07               	movlw	7
  4037   001110  6F3C               	movwf	60,b	;volatile
  4038                           
  4039                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x2F;
  4040   001112  0E2F               	movlw	47
  4041   001114  6F38               	movwf	56,b	;volatile
  4042                           
  4043                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
  4044   001116  0E00               	movlw	0
  4045   001118  6E61               	movwf	97,c	;volatile
  4046   00111A                     
  4047                           ; BSR set to: 15
  4048                           ;mcc_generated_files/pin_manager.c: 88:     INTCON2bits.nRBPU = 0;
  4049   00111A  9EF1               	bcf	241,7,c	;volatile
  4050   00111C                     
  4051                           ; BSR set to: 15
  4052   00111C  0012               	return		;funcret
  4053   00111E                     __end_of_PIN_MANAGER_Initialize:
  4054                           	callstack 0
  4055                           
  4056 ;; *************** function _OSCILLATOR_Initialize *****************
  4057 ;; Defined at:
  4058 ;;		line 65 in file "mcc_generated_files/mcc.c"
  4059 ;; Parameters:    Size  Location     Type
  4060 ;;		None
  4061 ;; Auto vars:     Size  Location     Type
  4062 ;;		None
  4063 ;; Return value:  Size  Location     Type
  4064 ;;                  1    wreg      void 
  4065 ;; Registers used:
  4066 ;;		wreg, status,2
  4067 ;; Tracked objects:
  4068 ;;		On entry : 0/0
  4069 ;;		On exit  : 0/0
  4070 ;;		Unchanged: 0/0
  4071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4076 ;;Total ram usage:        0 bytes
  4077 ;; Hardware stack levels used: 1
  4078 ;; Hardware stack levels required when called: 4
  4079 ;; This function calls:
  4080 ;;		Nothing
  4081 ;; This function is called by:
  4082 ;;		_SYSTEM_Initialize
  4083 ;; This function uses a non-reentrant model
  4084 ;;
  4085                           
  4086                           	psect	text23
  4087   00142A                     __ptext23:
  4088                           	callstack 0
  4089   00142A                     _OSCILLATOR_Initialize:
  4090                           	callstack 25
  4091   00142A                     
  4092                           ;mcc_generated_files/mcc.c: 68:     OSCCON = 0x30;
  4093   00142A  0E30               	movlw	48
  4094   00142C  6ED3               	movwf	211,c	;volatile
  4095                           
  4096                           ;mcc_generated_files/mcc.c: 70:     OSCCON2 = 0x04;
  4097   00142E  0E04               	movlw	4
  4098   001430  6ED2               	movwf	210,c	;volatile
  4099                           
  4100                           ;mcc_generated_files/mcc.c: 72:     OSCTUNE = 0x00;
  4101   001432  0E00               	movlw	0
  4102   001434  6E9B               	movwf	155,c	;volatile
  4103   001436  0012               	return		;funcret
  4104   001438                     __end_of_OSCILLATOR_Initialize:
  4105                           	callstack 0
  4106                           
  4107 ;; *************** function _INTERRUPT_Initialize *****************
  4108 ;; Defined at:
  4109 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4110 ;; Parameters:    Size  Location     Type
  4111 ;;		None
  4112 ;; Auto vars:     Size  Location     Type
  4113 ;;		None
  4114 ;; Return value:  Size  Location     Type
  4115 ;;                  1    wreg      void 
  4116 ;; Registers used:
  4117 ;;		None
  4118 ;; Tracked objects:
  4119 ;;		On entry : 0/0
  4120 ;;		On exit  : 0/0
  4121 ;;		Unchanged: 0/0
  4122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4127 ;;Total ram usage:        0 bytes
  4128 ;; Hardware stack levels used: 1
  4129 ;; Hardware stack levels required when called: 4
  4130 ;; This function calls:
  4131 ;;		Nothing
  4132 ;; This function is called by:
  4133 ;;		_SYSTEM_Initialize
  4134 ;; This function uses a non-reentrant model
  4135 ;;
  4136                           
  4137                           	psect	text24
  4138   001438                     __ptext24:
  4139                           	callstack 0
  4140   001438                     _INTERRUPT_Initialize:
  4141                           	callstack 25
  4142   001438                     
  4143                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 1;
  4144   001438  8ED0               	bsf	208,7,c	;volatile
  4145                           
  4146                           ;mcc_generated_files/interrupt_manager.c: 60:     IPR1bits.ADIP = 1;
  4147   00143A  8C9F               	bsf	159,6,c	;volatile
  4148                           
  4149                           ;mcc_generated_files/interrupt_manager.c: 63:     INTCON2bits.TMR0IP = 1;
  4150   00143C  84F1               	bsf	241,2,c	;volatile
  4151                           
  4152                           ;mcc_generated_files/interrupt_manager.c: 68:     IPR1bits.TX1IP = 1;
  4153   00143E  889F               	bsf	159,4,c	;volatile
  4154                           
  4155                           ;mcc_generated_files/interrupt_manager.c: 71:     IPR1bits.RC1IP = 1;
  4156   001440  8A9F               	bsf	159,5,c	;volatile
  4157                           
  4158                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR1bits.TMR1IP = 1;
  4159   001442  809F               	bsf	159,0,c	;volatile
  4160   001444  0012               	return		;funcret
  4161   001446                     __end_of_INTERRUPT_Initialize:
  4162                           	callstack 0
  4163                           
  4164 ;; *************** function _EXT_INT_Initialize *****************
  4165 ;; Defined at:
  4166 ;;		line 59 in file "mcc_generated_files/ext_int.c"
  4167 ;; Parameters:    Size  Location     Type
  4168 ;;		None
  4169 ;; Auto vars:     Size  Location     Type
  4170 ;;		None
  4171 ;; Return value:  Size  Location     Type
  4172 ;;                  1    wreg      void 
  4173 ;; Registers used:
  4174 ;;		wreg, status,2, status,0, cstack
  4175 ;; Tracked objects:
  4176 ;;		On entry : 0/0
  4177 ;;		On exit  : 0/0
  4178 ;;		Unchanged: 0/0
  4179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4184 ;;Total ram usage:        0 bytes
  4185 ;; Hardware stack levels used: 1
  4186 ;; Hardware stack levels required when called: 5
  4187 ;; This function calls:
  4188 ;;		_INT0_SetInterruptHandler
  4189 ;; This function is called by:
  4190 ;;		_SYSTEM_Initialize
  4191 ;; This function uses a non-reentrant model
  4192 ;;
  4193                           
  4194                           	psect	text25
  4195   0013E0                     __ptext25:
  4196                           	callstack 0
  4197   0013E0                     _EXT_INT_Initialize:
  4198                           	callstack 24
  4199   0013E0                     
  4200                           ;mcc_generated_files/ext_int.c: 64:     (INTCONbits.INT0IF = 0);
  4201   0013E0  92F2               	bcf	242,1,c	;volatile
  4202                           
  4203                           ;mcc_generated_files/ext_int.c: 65:     (INTCON2bits.INTEDG0 = 0);
  4204   0013E2  9CF1               	bcf	241,6,c	;volatile
  4205   0013E4                     
  4206                           ;mcc_generated_files/ext_int.c: 67:     INT0_SetInterruptHandler(INT0_DefaultInterruptHa
      +                          ndler);
  4207   0013E4  0EF0               	movlw	low _INT0_DefaultInterruptHandler
  4208   0013E6  6E1F               	movwf	INT0_SetInterruptHandler@InterruptHandler^0,c
  4209   0013E8  0E14               	movlw	high _INT0_DefaultInterruptHandler
  4210   0013EA  6E20               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,c
  4211   0013EC  EC3F  F00A         	call	_INT0_SetInterruptHandler	;wreg free
  4212   0013F0                     
  4213                           ;mcc_generated_files/ext_int.c: 68:     (INTCONbits.INT0IE = 1);
  4214   0013F0  88F2               	bsf	242,4,c	;volatile
  4215   0013F2  0012               	return		;funcret
  4216   0013F4                     __end_of_EXT_INT_Initialize:
  4217                           	callstack 0
  4218                           
  4219 ;; *************** function _INT0_SetInterruptHandler *****************
  4220 ;; Defined at:
  4221 ;;		line 50 in file "mcc_generated_files/ext_int.c"
  4222 ;; Parameters:    Size  Location     Type
  4223 ;;  InterruptHan    2   30[COMRAM] PTR FTN()void 
  4224 ;;		 -> INT0_MyInterruptHandler(1), INT0_DefaultInterruptHandler(1), 
  4225 ;; Auto vars:     Size  Location     Type
  4226 ;;		None
  4227 ;; Return value:  Size  Location     Type
  4228 ;;                  1    wreg      void 
  4229 ;; Registers used:
  4230 ;;		wreg, status,2, status,0
  4231 ;; Tracked objects:
  4232 ;;		On entry : 0/0
  4233 ;;		On exit  : 0/0
  4234 ;;		Unchanged: 0/0
  4235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4236 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4239 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4240 ;;Total ram usage:        2 bytes
  4241 ;; Hardware stack levels used: 1
  4242 ;; Hardware stack levels required when called: 4
  4243 ;; This function calls:
  4244 ;;		Nothing
  4245 ;; This function is called by:
  4246 ;;		_EXT_INT_Initialize
  4247 ;;		_main
  4248 ;; This function uses a non-reentrant model
  4249 ;;
  4250                           
  4251                           	psect	text26
  4252   00147E                     __ptext26:
  4253                           	callstack 0
  4254   00147E                     _INT0_SetInterruptHandler:
  4255                           	callstack 24
  4256   00147E                     
  4257                           ;mcc_generated_files/ext_int.c: 51:     INT0_InterruptHandler = InterruptHandler;
  4258   00147E  C01F  F039         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  4259   001482  C020  F03A         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  4260   001486  0012               	return		;funcret
  4261   001488                     __end_of_INT0_SetInterruptHandler:
  4262                           	callstack 0
  4263                           
  4264 ;; *************** function _EUSART1_Initialize *****************
  4265 ;; Defined at:
  4266 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  4267 ;; Parameters:    Size  Location     Type
  4268 ;;		None
  4269 ;; Auto vars:     Size  Location     Type
  4270 ;;		None
  4271 ;; Return value:  Size  Location     Type
  4272 ;;                  1    wreg      void 
  4273 ;; Registers used:
  4274 ;;		wreg, status,2, status,0, cstack
  4275 ;; Tracked objects:
  4276 ;;		On entry : 0/0
  4277 ;;		On exit  : 0/0
  4278 ;;		Unchanged: 0/0
  4279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4284 ;;Total ram usage:        0 bytes
  4285 ;; Hardware stack levels used: 1
  4286 ;; Hardware stack levels required when called: 5
  4287 ;; This function calls:
  4288 ;;		_EUSART1_SetErrorHandler
  4289 ;;		_EUSART1_SetFramingErrorHandler
  4290 ;;		_EUSART1_SetOverrunErrorHandler
  4291 ;;		_EUSART1_SetRxInterruptHandler
  4292 ;;		_EUSART1_SetTxInterruptHandler
  4293 ;; This function is called by:
  4294 ;;		_SYSTEM_Initialize
  4295 ;; This function uses a non-reentrant model
  4296 ;;
  4297                           
  4298                           	psect	text27
  4299   000D9C                     __ptext27:
  4300                           	callstack 0
  4301   000D9C                     _EUSART1_Initialize:
  4302                           	callstack 24
  4303   000D9C                     
  4304                           ;mcc_generated_files/eusart1.c: 91:     PIE1bits.RC1IE = 0;
  4305   000D9C  9A9D               	bcf	157,5,c	;volatile
  4306   000D9E                     
  4307                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  4308   000D9E  0E10               	movlw	low _EUSART1_Receive_ISR
  4309   000DA0  6E1F               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  4310   000DA2  0E0B               	movlw	high _EUSART1_Receive_ISR
  4311   000DA4  6E20               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  4312   000DA6  EC49  F00A         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  4313   000DAA                     
  4314                           ;mcc_generated_files/eusart1.c: 93:     PIE1bits.TX1IE = 0;
  4315   000DAA  989D               	bcf	157,4,c	;volatile
  4316                           
  4317                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  4318   000DAC  0E60               	movlw	low _EUSART1_Transmit_ISR
  4319   000DAE  6E1F               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
  4320   000DB0  0E11               	movlw	high _EUSART1_Transmit_ISR
  4321   000DB2  6E20               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
  4322   000DB4  EC44  F00A         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  4323   000DB8                     
  4324                           ;mcc_generated_files/eusart1.c: 98:     BAUDCON1 = 0x08;
  4325   000DB8  0E08               	movlw	8
  4326   000DBA  6EB8               	movwf	184,c	;volatile
  4327   000DBC                     
  4328                           ;mcc_generated_files/eusart1.c: 101:     RCSTA1 = 0x90;
  4329   000DBC  0E90               	movlw	144
  4330   000DBE  6EAB               	movwf	171,c	;volatile
  4331   000DC0                     
  4332                           ;mcc_generated_files/eusart1.c: 104:     TXSTA1 = 0x24;
  4333   000DC0  0E24               	movlw	36
  4334   000DC2  6EAC               	movwf	172,c	;volatile
  4335   000DC4                     
  4336                           ;mcc_generated_files/eusart1.c: 107:     SPBRG1 = 0xCF;
  4337   000DC4  0ECF               	movlw	207
  4338   000DC6  6EAF               	movwf	175,c	;volatile
  4339   000DC8                     
  4340                           ;mcc_generated_files/eusart1.c: 110:     SPBRGH1 = 0x00;
  4341   000DC8  0E00               	movlw	0
  4342   000DCA  6EB0               	movwf	176,c	;volatile
  4343   000DCC                     
  4344                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  4345   000DCC  0EF2               	movlw	low _EUSART1_DefaultFramingErrorHandler
  4346   000DCE  6E1F               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  4347   000DD0  0E14               	movlw	high _EUSART1_DefaultFramingErrorHandler
  4348   000DD2  6E20               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  4349   000DD4  EC53  F00A         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  4350   000DD8                     
  4351                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  4352   000DD8  0ECC               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  4353   000DDA  6E1F               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  4354   000DDC  0E14               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  4355   000DDE  6E20               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  4356   000DE0  EC4E  F00A         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  4357   000DE4                     
  4358                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  4359   000DE4  0ED2               	movlw	low _EUSART1_DefaultErrorHandler
  4360   000DE6  6E1F               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  4361   000DE8  0E14               	movlw	high _EUSART1_DefaultErrorHandler
  4362   000DEA  6E20               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  4363   000DEC  EC58  F00A         	call	_EUSART1_SetErrorHandler	;wreg free
  4364                           
  4365                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  4366   000DF0  0E00               	movlw	0
  4367   000DF2  6E2D               	movwf	_eusart1RxLastError^0,c	;volatile
  4368                           
  4369                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  4370   000DF4  0E00               	movlw	0
  4371   000DF6  6E32               	movwf	_eusart1TxHead^0,c	;volatile
  4372                           
  4373                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  4374   000DF8  0E00               	movlw	0
  4375   000DFA  6E31               	movwf	_eusart1TxTail^0,c	;volatile
  4376                           
  4377                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  4378   000DFC  0E08               	movlw	8
  4379   000DFE  6E3E               	movwf	_eusart1TxBufferRemaining^0,c	;volatile
  4380                           
  4381                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  4382   000E00  0E00               	movlw	0
  4383   000E02  6E30               	movwf	_eusart1RxHead^0,c	;volatile
  4384                           
  4385                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  4386   000E04  0E00               	movlw	0
  4387   000E06  6E2F               	movwf	_eusart1RxTail^0,c	;volatile
  4388                           
  4389                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  4390   000E08  0E00               	movlw	0
  4391   000E0A  6E2E               	movwf	_eusart1RxCount^0,c	;volatile
  4392   000E0C                     
  4393                           ;mcc_generated_files/eusart1.c: 129:     PIE1bits.RC1IE = 1;
  4394   000E0C  8A9D               	bsf	157,5,c	;volatile
  4395   000E0E  0012               	return		;funcret
  4396   000E10                     __end_of_EUSART1_Initialize:
  4397                           	callstack 0
  4398                           
  4399 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  4400 ;; Defined at:
  4401 ;;		line 285 in file "mcc_generated_files/eusart1.c"
  4402 ;; Parameters:    Size  Location     Type
  4403 ;;  interruptHan    2   30[COMRAM] PTR FTN()void 
  4404 ;;		 -> EUSART1_Transmit_ISR(1), 
  4405 ;; Auto vars:     Size  Location     Type
  4406 ;;		None
  4407 ;; Return value:  Size  Location     Type
  4408 ;;                  1    wreg      void 
  4409 ;; Registers used:
  4410 ;;		wreg, status,2, status,0
  4411 ;; Tracked objects:
  4412 ;;		On entry : 0/0
  4413 ;;		On exit  : 0/0
  4414 ;;		Unchanged: 0/0
  4415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4416 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4419 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4420 ;;Total ram usage:        2 bytes
  4421 ;; Hardware stack levels used: 1
  4422 ;; Hardware stack levels required when called: 4
  4423 ;; This function calls:
  4424 ;;		Nothing
  4425 ;; This function is called by:
  4426 ;;		_EUSART1_Initialize
  4427 ;; This function uses a non-reentrant model
  4428 ;;
  4429                           
  4430                           	psect	text28
  4431   001488                     __ptext28:
  4432                           	callstack 0
  4433   001488                     _EUSART1_SetTxInterruptHandler:
  4434                           	callstack 24
  4435   001488                     
  4436                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  4437   001488  C01F  F0FB         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  4438   00148C  C020  F0FC         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  4439   001490  0012               	return		;funcret
  4440   001492                     __end_of_EUSART1_SetTxInterruptHandler:
  4441                           	callstack 0
  4442                           
  4443 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  4444 ;; Defined at:
  4445 ;;		line 289 in file "mcc_generated_files/eusart1.c"
  4446 ;; Parameters:    Size  Location     Type
  4447 ;;  interruptHan    2   30[COMRAM] PTR FTN()void 
  4448 ;;		 -> EUSART1_Receive_ISR(1), 
  4449 ;; Auto vars:     Size  Location     Type
  4450 ;;		None
  4451 ;; Return value:  Size  Location     Type
  4452 ;;                  1    wreg      void 
  4453 ;; Registers used:
  4454 ;;		wreg, status,2, status,0
  4455 ;; Tracked objects:
  4456 ;;		On entry : 0/0
  4457 ;;		On exit  : 0/0
  4458 ;;		Unchanged: 0/0
  4459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4460 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4463 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4464 ;;Total ram usage:        2 bytes
  4465 ;; Hardware stack levels used: 1
  4466 ;; Hardware stack levels required when called: 4
  4467 ;; This function calls:
  4468 ;;		Nothing
  4469 ;; This function is called by:
  4470 ;;		_EUSART1_Initialize
  4471 ;; This function uses a non-reentrant model
  4472 ;;
  4473                           
  4474                           	psect	text29
  4475   001492                     __ptext29:
  4476                           	callstack 0
  4477   001492                     _EUSART1_SetRxInterruptHandler:
  4478                           	callstack 24
  4479   001492                     
  4480                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  4481   001492  C01F  F0F9         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  4482   001496  C020  F0FA         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  4483   00149A  0012               	return		;funcret
  4484   00149C                     __end_of_EUSART1_SetRxInterruptHandler:
  4485                           	callstack 0
  4486                           
  4487 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  4488 ;; Defined at:
  4489 ;;		line 277 in file "mcc_generated_files/eusart1.c"
  4490 ;; Parameters:    Size  Location     Type
  4491 ;;  interruptHan    2   30[COMRAM] PTR FTN()void 
  4492 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  4493 ;; Auto vars:     Size  Location     Type
  4494 ;;		None
  4495 ;; Return value:  Size  Location     Type
  4496 ;;                  1    wreg      void 
  4497 ;; Registers used:
  4498 ;;		wreg, status,2, status,0
  4499 ;; Tracked objects:
  4500 ;;		On entry : 0/0
  4501 ;;		On exit  : 0/0
  4502 ;;		Unchanged: 0/0
  4503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4504 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4507 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4508 ;;Total ram usage:        2 bytes
  4509 ;; Hardware stack levels used: 1
  4510 ;; Hardware stack levels required when called: 4
  4511 ;; This function calls:
  4512 ;;		Nothing
  4513 ;; This function is called by:
  4514 ;;		_EUSART1_Initialize
  4515 ;; This function uses a non-reentrant model
  4516 ;;
  4517                           
  4518                           	psect	text30
  4519   00149C                     __ptext30:
  4520                           	callstack 0
  4521   00149C                     _EUSART1_SetOverrunErrorHandler:
  4522                           	callstack 24
  4523   00149C                     
  4524                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
  4525   00149C  C01F  F0F5         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  4526   0014A0  C020  F0F6         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  4527   0014A4  0012               	return		;funcret
  4528   0014A6                     __end_of_EUSART1_SetOverrunErrorHandler:
  4529                           	callstack 0
  4530                           
  4531 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  4532 ;; Defined at:
  4533 ;;		line 273 in file "mcc_generated_files/eusart1.c"
  4534 ;; Parameters:    Size  Location     Type
  4535 ;;  interruptHan    2   30[COMRAM] PTR FTN()void 
  4536 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  4537 ;; Auto vars:     Size  Location     Type
  4538 ;;		None
  4539 ;; Return value:  Size  Location     Type
  4540 ;;                  1    wreg      void 
  4541 ;; Registers used:
  4542 ;;		wreg, status,2, status,0
  4543 ;; Tracked objects:
  4544 ;;		On entry : 0/0
  4545 ;;		On exit  : 0/0
  4546 ;;		Unchanged: 0/0
  4547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4548 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4551 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4552 ;;Total ram usage:        2 bytes
  4553 ;; Hardware stack levels used: 1
  4554 ;; Hardware stack levels required when called: 4
  4555 ;; This function calls:
  4556 ;;		Nothing
  4557 ;; This function is called by:
  4558 ;;		_EUSART1_Initialize
  4559 ;; This function uses a non-reentrant model
  4560 ;;
  4561                           
  4562                           	psect	text31
  4563   0014A6                     __ptext31:
  4564                           	callstack 0
  4565   0014A6                     _EUSART1_SetFramingErrorHandler:
  4566                           	callstack 24
  4567   0014A6                     
  4568                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
  4569   0014A6  C01F  F0F7         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  4570   0014AA  C020  F0F8         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  4571   0014AE  0012               	return		;funcret
  4572   0014B0                     __end_of_EUSART1_SetFramingErrorHandler:
  4573                           	callstack 0
  4574                           
  4575 ;; *************** function _EUSART1_SetErrorHandler *****************
  4576 ;; Defined at:
  4577 ;;		line 281 in file "mcc_generated_files/eusart1.c"
  4578 ;; Parameters:    Size  Location     Type
  4579 ;;  interruptHan    2   30[COMRAM] PTR FTN()void 
  4580 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  4581 ;; Auto vars:     Size  Location     Type
  4582 ;;		None
  4583 ;; Return value:  Size  Location     Type
  4584 ;;                  1    wreg      void 
  4585 ;; Registers used:
  4586 ;;		wreg, status,2, status,0
  4587 ;; Tracked objects:
  4588 ;;		On entry : 0/0
  4589 ;;		On exit  : 0/0
  4590 ;;		Unchanged: 0/0
  4591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4592 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4595 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4596 ;;Total ram usage:        2 bytes
  4597 ;; Hardware stack levels used: 1
  4598 ;; Hardware stack levels required when called: 4
  4599 ;; This function calls:
  4600 ;;		Nothing
  4601 ;; This function is called by:
  4602 ;;		_EUSART1_Initialize
  4603 ;; This function uses a non-reentrant model
  4604 ;;
  4605                           
  4606                           	psect	text32
  4607   0014B0                     __ptext32:
  4608                           	callstack 0
  4609   0014B0                     _EUSART1_SetErrorHandler:
  4610                           	callstack 24
  4611   0014B0                     
  4612                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
  4613   0014B0  C01F  F0F3         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  4614   0014B4  C020  F0F4         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  4615   0014B8  0012               	return		;funcret
  4616   0014BA                     __end_of_EUSART1_SetErrorHandler:
  4617                           	callstack 0
  4618                           
  4619 ;; *************** function _CCP5_Initialize *****************
  4620 ;; Defined at:
  4621 ;;		line 49 in file "mcc_generated_files/ccp5.c"
  4622 ;; Parameters:    Size  Location     Type
  4623 ;;		None
  4624 ;; Auto vars:     Size  Location     Type
  4625 ;;		None
  4626 ;; Return value:  Size  Location     Type
  4627 ;;                  1    wreg      void 
  4628 ;; Registers used:
  4629 ;;		wreg, status,2
  4630 ;; Tracked objects:
  4631 ;;		On entry : 0/0
  4632 ;;		On exit  : 0/0
  4633 ;;		Unchanged: 0/0
  4634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4639 ;;Total ram usage:        0 bytes
  4640 ;; Hardware stack levels used: 1
  4641 ;; Hardware stack levels required when called: 4
  4642 ;; This function calls:
  4643 ;;		Nothing
  4644 ;; This function is called by:
  4645 ;;		_SYSTEM_Initialize
  4646 ;; This function uses a non-reentrant model
  4647 ;;
  4648                           
  4649                           	psect	text33
  4650   00141A                     __ptext33:
  4651                           	callstack 0
  4652   00141A                     _CCP5_Initialize:
  4653                           	callstack 25
  4654   00141A                     
  4655                           ;mcc_generated_files/ccp5.c: 53:  CCP5CON = 0x00;
  4656   00141A  0E00               	movlw	0
  4657   00141C  010F               	movlb	15	; () banked
  4658   00141E  6F54               	movwf	84,b	;volatile
  4659                           
  4660                           ;mcc_generated_files/ccp5.c: 56:  CCPR5L = 0x00;
  4661   001420  0E00               	movlw	0
  4662   001422  6F55               	movwf	85,b	;volatile
  4663                           
  4664                           ;mcc_generated_files/ccp5.c: 59:  CCPR5H = 0x00;
  4665   001424  0E00               	movlw	0
  4666   001426  6F56               	movwf	86,b	;volatile
  4667   001428                     
  4668                           ; BSR set to: 15
  4669   001428  0012               	return		;funcret
  4670   00142A                     __end_of_CCP5_Initialize:
  4671                           	callstack 0
  4672                           
  4673 ;; *************** function _ADC_Initialize *****************
  4674 ;; Defined at:
  4675 ;;		line 62 in file "mcc_generated_files/adc.c"
  4676 ;; Parameters:    Size  Location     Type
  4677 ;;		None
  4678 ;; Auto vars:     Size  Location     Type
  4679 ;;		None
  4680 ;; Return value:  Size  Location     Type
  4681 ;;                  1    wreg      void 
  4682 ;; Registers used:
  4683 ;;		wreg, status,2, status,0, cstack
  4684 ;; Tracked objects:
  4685 ;;		On entry : 0/0
  4686 ;;		On exit  : 0/0
  4687 ;;		Unchanged: 0/0
  4688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4693 ;;Total ram usage:        0 bytes
  4694 ;; Hardware stack levels used: 1
  4695 ;; Hardware stack levels required when called: 5
  4696 ;; This function calls:
  4697 ;;		_ADC_SetInterruptHandler
  4698 ;; This function is called by:
  4699 ;;		_SYSTEM_Initialize
  4700 ;; This function uses a non-reentrant model
  4701 ;;
  4702                           
  4703                           	psect	text34
  4704   00136C                     __ptext34:
  4705                           	callstack 0
  4706   00136C                     _ADC_Initialize:
  4707                           	callstack 24
  4708   00136C                     
  4709                           ;mcc_generated_files/adc.c: 67:     ADCON0 = 0x01;
  4710   00136C  0E01               	movlw	1
  4711   00136E  6EC2               	movwf	194,c	;volatile
  4712                           
  4713                           ;mcc_generated_files/adc.c: 70:     ADCON1 = 0x00;
  4714   001370  0E00               	movlw	0
  4715   001372  6EC1               	movwf	193,c	;volatile
  4716                           
  4717                           ;mcc_generated_files/adc.c: 73:     ADCON2 = 0x8C;
  4718   001374  0E8C               	movlw	140
  4719   001376  6EC0               	movwf	192,c	;volatile
  4720                           
  4721                           ;mcc_generated_files/adc.c: 76:     ADRESL = 0x00;
  4722   001378  0E00               	movlw	0
  4723   00137A  6EC3               	movwf	195,c	;volatile
  4724                           
  4725                           ;mcc_generated_files/adc.c: 79:     ADRESH = 0x00;
  4726   00137C  0E00               	movlw	0
  4727   00137E  6EC4               	movwf	196,c	;volatile
  4728   001380                     
  4729                           ;mcc_generated_files/adc.c: 82:     PIE1bits.ADIE = 1;
  4730   001380  8C9D               	bsf	157,6,c	;volatile
  4731   001382                     
  4732                           ;mcc_generated_files/adc.c: 85:     ADC_SetInterruptHandler(ADC_DefaultInterruptHandler)
      +                          ;
  4733   001382  0EF4               	movlw	low _ADC_DefaultInterruptHandler
  4734   001384  6E1F               	movwf	ADC_SetInterruptHandler@InterruptHandler^0,c
  4735   001386  0E14               	movlw	high _ADC_DefaultInterruptHandler
  4736   001388  6E20               	movwf	(ADC_SetInterruptHandler@InterruptHandler+1)^0,c
  4737   00138A  EC5D  F00A         	call	_ADC_SetInterruptHandler	;wreg free
  4738   00138E  0012               	return		;funcret
  4739   001390                     __end_of_ADC_Initialize:
  4740                           	callstack 0
  4741                           
  4742 ;; *************** function _ADC_SetInterruptHandler *****************
  4743 ;; Defined at:
  4744 ;;		line 151 in file "mcc_generated_files/adc.c"
  4745 ;; Parameters:    Size  Location     Type
  4746 ;;  InterruptHan    2   30[COMRAM] PTR FTN()void 
  4747 ;;		 -> ADC_MyInterruptHandler(1), ADC_DefaultInterruptHandler(1), 
  4748 ;; Auto vars:     Size  Location     Type
  4749 ;;		None
  4750 ;; Return value:  Size  Location     Type
  4751 ;;                  1    wreg      void 
  4752 ;; Registers used:
  4753 ;;		wreg, status,2, status,0
  4754 ;; Tracked objects:
  4755 ;;		On entry : 0/0
  4756 ;;		On exit  : 0/0
  4757 ;;		Unchanged: 0/0
  4758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4759 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4762 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4763 ;;Total ram usage:        2 bytes
  4764 ;; Hardware stack levels used: 1
  4765 ;; Hardware stack levels required when called: 4
  4766 ;; This function calls:
  4767 ;;		Nothing
  4768 ;; This function is called by:
  4769 ;;		_ADC_Initialize
  4770 ;;		_main
  4771 ;; This function uses a non-reentrant model
  4772 ;;
  4773                           
  4774                           	psect	text35
  4775   0014BA                     __ptext35:
  4776                           	callstack 0
  4777   0014BA                     _ADC_SetInterruptHandler:
  4778                           	callstack 24
  4779   0014BA                     
  4780                           ;mcc_generated_files/adc.c: 152:     ADC_InterruptHandler = InterruptHandler;
  4781   0014BA  C01F  F03B         	movff	ADC_SetInterruptHandler@InterruptHandler,_ADC_InterruptHandler
  4782   0014BE  C020  F03C         	movff	ADC_SetInterruptHandler@InterruptHandler+1,_ADC_InterruptHandler+1
  4783   0014C2  0012               	return		;funcret
  4784   0014C4                     __end_of_ADC_SetInterruptHandler:
  4785                           	callstack 0
  4786                           
  4787 ;; *************** function _CheckUSART *****************
  4788 ;; Defined at:
  4789 ;;		line 231 in file "main.c"
  4790 ;; Parameters:    Size  Location     Type
  4791 ;;		None
  4792 ;; Auto vars:     Size  Location     Type
  4793 ;;		None
  4794 ;; Return value:  Size  Location     Type
  4795 ;;                  1    wreg      void 
  4796 ;; Registers used:
  4797 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4798 ;; Tracked objects:
  4799 ;;		On entry : 0/0
  4800 ;;		On exit  : 0/0
  4801 ;;		Unchanged: 0/0
  4802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4807 ;;Total ram usage:        0 bytes
  4808 ;; Hardware stack levels used: 1
  4809 ;; Hardware stack levels required when called: 5
  4810 ;; This function calls:
  4811 ;;		_EUSART1_Read
  4812 ;;		_EUSART1_Write
  4813 ;;		_EUSART1_is_rx_ready
  4814 ;; This function is called by:
  4815 ;;		_main
  4816 ;; This function uses a non-reentrant model
  4817 ;;
  4818                           
  4819                           	psect	text36
  4820   000E10                     __ptext36:
  4821                           	callstack 0
  4822   000E10                     _CheckUSART:
  4823                           	callstack 25
  4824   000E10                     
  4825                           ;main.c: 232:     if (EUSART1_is_rx_ready()) {
  4826   000E10  ECE5  F009         	call	_EUSART1_is_rx_ready	;wreg free
  4827   000E14  0900               	iorlw	0
  4828   000E16  B4D8               	btfsc	status,2,c
  4829   000E18  EF10  F007         	goto	u2271
  4830   000E1C  EF12  F007         	goto	u2270
  4831   000E20                     u2271:
  4832   000E20  EF3D  F007         	goto	l586
  4833   000E24                     u2270:
  4834   000E24                     
  4835                           ;main.c: 233:         rxData = EUSART1_Read();
  4836   000E24  EC21  F008         	call	_EUSART1_Read	;wreg free
  4837   000E28  6E2C               	movwf	_rxData^0,c
  4838                           
  4839                           ;main.c: 234:         EUSART1_Write(rxData);
  4840   000E2A  502C               	movf	_rxData^0,w,c
  4841   000E2C  ECA3  F007         	call	_EUSART1_Write
  4842   000E30                     
  4843                           ;main.c: 235:         if ((rxData >= '0' && rxData <= '9') || rxData == 13)
  4844   000E30  0E2F               	movlw	47
  4845   000E32  642C               	cpfsgt	_rxData^0,c
  4846   000E34  EF1E  F007         	goto	u2281
  4847   000E38  EF20  F007         	goto	u2280
  4848   000E3C                     u2281:
  4849   000E3C  EF28  F007         	goto	l3338
  4850   000E40                     u2280:
  4851   000E40  0E39               	movlw	57
  4852   000E42  642C               	cpfsgt	_rxData^0,c
  4853   000E44  EF26  F007         	goto	u2291
  4854   000E48  EF28  F007         	goto	u2290
  4855   000E4C                     u2291:
  4856   000E4C  EF31  F007         	goto	l3340
  4857   000E50                     u2290:
  4858   000E50                     l3338:
  4859   000E50  0E0D               	movlw	13
  4860   000E52  182C               	xorwf	_rxData^0,w,c
  4861   000E54  A4D8               	btfss	status,2,c
  4862   000E56  EF2F  F007         	goto	u2301
  4863   000E5A  EF31  F007         	goto	u2300
  4864   000E5E                     u2301:
  4865   000E5E  EF38  F007         	goto	l3344
  4866   000E62                     u2300:
  4867   000E62                     l3340:
  4868                           
  4869                           ;main.c: 236:         {;main.c: 237:             carater_recebido = 1;
  4870   000E62  0E01               	movlw	1
  4871   000E64  0100               	movlb	0	; () banked
  4872   000E66  6FFE               	movwf	_carater_recebido& (0+255),b
  4873   000E68                     
  4874                           ; BSR set to: 0
  4875                           ;main.c: 238:             menu = rxData;
  4876   000E68  C02C  F0FF         	movff	_rxData,_menu
  4877                           
  4878                           ;main.c: 239:         } else {
  4879   000E6C  EF3D  F007         	goto	l586
  4880   000E70                     l3344:
  4881                           
  4882                           ;main.c: 240:             carater_recebido = 0;
  4883   000E70  0E00               	movlw	0
  4884   000E72  0100               	movlb	0	; () banked
  4885   000E74  6FFE               	movwf	_carater_recebido& (0+255),b
  4886                           
  4887                           ;main.c: 241:             menu = '0';
  4888   000E76  0E30               	movlw	48
  4889   000E78  6FFF               	movwf	_menu& (0+255),b
  4890   000E7A                     l586:
  4891   000E7A  0012               	return		;funcret
  4892   000E7C                     __end_of_CheckUSART:
  4893                           	callstack 0
  4894                           
  4895 ;; *************** function _EUSART1_is_rx_ready *****************
  4896 ;; Defined at:
  4897 ;;		line 137 in file "mcc_generated_files/eusart1.c"
  4898 ;; Parameters:    Size  Location     Type
  4899 ;;		None
  4900 ;; Auto vars:     Size  Location     Type
  4901 ;;		None
  4902 ;; Return value:  Size  Location     Type
  4903 ;;                  1    wreg      _Bool 
  4904 ;; Registers used:
  4905 ;;		wreg, status,2
  4906 ;; Tracked objects:
  4907 ;;		On entry : 0/0
  4908 ;;		On exit  : 0/0
  4909 ;;		Unchanged: 0/0
  4910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4915 ;;Total ram usage:        0 bytes
  4916 ;; Hardware stack levels used: 1
  4917 ;; Hardware stack levels required when called: 4
  4918 ;; This function calls:
  4919 ;;		Nothing
  4920 ;; This function is called by:
  4921 ;;		_CheckUSART
  4922 ;; This function uses a non-reentrant model
  4923 ;;
  4924                           
  4925                           	psect	text37
  4926   0013CA                     __ptext37:
  4927                           	callstack 0
  4928   0013CA                     _EUSART1_is_rx_ready:
  4929                           	callstack 25
  4930   0013CA                     
  4931                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
  4932   0013CA  502E               	movf	_eusart1RxCount^0,w,c	;volatile
  4933   0013CC  A4D8               	btfss	status,2,c
  4934   0013CE  EFEB  F009         	goto	u1471
  4935   0013D2  EFEE  F009         	goto	u1470
  4936   0013D6                     u1471:
  4937   0013D6  0E01               	movlw	1
  4938   0013D8  EFEF  F009         	goto	u1480
  4939   0013DC                     u1470:
  4940   0013DC  0E00               	movlw	0
  4941   0013DE                     u1480:
  4942   0013DE  0012               	return		;funcret
  4943   0013E0                     __end_of_EUSART1_is_rx_ready:
  4944                           	callstack 0
  4945                           
  4946 ;; *************** function _EUSART1_Write *****************
  4947 ;; Defined at:
  4948 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  4949 ;; Parameters:    Size  Location     Type
  4950 ;;  txData          1    wreg     unsigned char 
  4951 ;; Auto vars:     Size  Location     Type
  4952 ;;  txData          1   30[COMRAM] unsigned char 
  4953 ;; Return value:  Size  Location     Type
  4954 ;;                  1    wreg      void 
  4955 ;; Registers used:
  4956 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4957 ;; Tracked objects:
  4958 ;;		On entry : 0/0
  4959 ;;		On exit  : 0/0
  4960 ;;		Unchanged: 0/0
  4961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4963 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4965 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4966 ;;Total ram usage:        1 bytes
  4967 ;; Hardware stack levels used: 1
  4968 ;; Hardware stack levels required when called: 4
  4969 ;; This function calls:
  4970 ;;		Nothing
  4971 ;; This function is called by:
  4972 ;;		_putch
  4973 ;;		_ShowMenuInTerminal
  4974 ;;		_CheckUSART
  4975 ;; This function uses a non-reentrant model
  4976 ;;
  4977                           
  4978                           	psect	text38
  4979   000F46                     __ptext38:
  4980                           	callstack 0
  4981   000F46                     _EUSART1_Write:
  4982                           	callstack 21
  4983                           
  4984                           ;incstack = 0
  4985                           ;EUSART1_Write@txData stored from wreg
  4986   000F46  6E1F               	movwf	EUSART1_Write@txData^0,c
  4987   000F48                     l3004:
  4988                           
  4989                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
  4990   000F48  503E               	movf	_eusart1TxBufferRemaining^0,w,c	;volatile
  4991   000F4A  B4D8               	btfsc	status,2,c
  4992   000F4C  EFAA  F007         	goto	u1891
  4993   000F50  EFAC  F007         	goto	u1890
  4994   000F54                     u1891:
  4995   000F54  EFA4  F007         	goto	l3004
  4996   000F58                     u1890:
  4997   000F58                     
  4998                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE1bits.TX1IE)
  4999   000F58  B89D               	btfsc	157,4,c	;volatile
  5000   000F5A  EFB1  F007         	goto	u1901
  5001   000F5E  EFB3  F007         	goto	u1900
  5002   000F62                     u1901:
  5003   000F62  EFB7  F007         	goto	l249
  5004   000F66                     u1900:
  5005   000F66                     
  5006                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          XREG1 = txData;
  5007   000F66  C01F  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  5008                           
  5009                           ;mcc_generated_files/eusart1.c: 182:     }
  5010   000F6A  EFCC  F007         	goto	l3018
  5011   000F6E                     l249:
  5012                           
  5013                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE1bits.TX1IE = 0;
  5014   000F6E  989D               	bcf	157,4,c	;volatile
  5015   000F70                     
  5016                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
  5017   000F70  0EC3               	movlw	low _eusart1TxBuffer
  5018   000F72  2432               	addwf	_eusart1TxHead^0,w,c	;volatile
  5019   000F74  6ED9               	movwf	fsr2l,c
  5020   000F76  6ADA               	clrf	fsr2h,c
  5021   000F78  0E00               	movlw	high _eusart1TxBuffer
  5022   000F7A  22DA               	addwfc	fsr2h,f,c
  5023   000F7C  C01F  FFDF         	movff	EUSART1_Write@txData,indf2
  5024   000F80  2A32               	incf	_eusart1TxHead^0,f,c	;volatile
  5025   000F82                     
  5026                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
  5027   000F82  0E07               	movlw	7
  5028   000F84  6432               	cpfsgt	_eusart1TxHead^0,c	;volatile
  5029   000F86  EFC7  F007         	goto	u1911
  5030   000F8A  EFC9  F007         	goto	u1910
  5031   000F8E                     u1911:
  5032   000F8E  EFCB  F007         	goto	l3016
  5033   000F92                     u1910:
  5034   000F92                     
  5035                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
  5036   000F92  0E00               	movlw	0
  5037   000F94  6E32               	movwf	_eusart1TxHead^0,c	;volatile
  5038   000F96                     l3016:
  5039                           
  5040                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
  5041   000F96  063E               	decf	_eusart1TxBufferRemaining^0,f,c	;volatile
  5042   000F98                     l3018:
  5043                           
  5044                           ;mcc_generated_files/eusart1.c: 193:     PIE1bits.TX1IE = 1;
  5045   000F98  889D               	bsf	157,4,c	;volatile
  5046   000F9A  0012               	return		;funcret
  5047   000F9C                     __end_of_EUSART1_Write:
  5048                           	callstack 0
  5049                           
  5050 ;; *************** function _EUSART1_Read *****************
  5051 ;; Defined at:
  5052 ;;		line 151 in file "mcc_generated_files/eusart1.c"
  5053 ;; Parameters:    Size  Location     Type
  5054 ;;		None
  5055 ;; Auto vars:     Size  Location     Type
  5056 ;;  readValue       1   30[COMRAM] unsigned char 
  5057 ;; Return value:  Size  Location     Type
  5058 ;;                  1    wreg      unsigned char 
  5059 ;; Registers used:
  5060 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5061 ;; Tracked objects:
  5062 ;;		On entry : 0/0
  5063 ;;		On exit  : 0/0
  5064 ;;		Unchanged: 0/0
  5065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5067 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5069 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5070 ;;Total ram usage:        1 bytes
  5071 ;; Hardware stack levels used: 1
  5072 ;; Hardware stack levels required when called: 4
  5073 ;; This function calls:
  5074 ;;		Nothing
  5075 ;; This function is called by:
  5076 ;;		_CheckUSART
  5077 ;;		_getch
  5078 ;; This function uses a non-reentrant model
  5079 ;;
  5080                           
  5081                           	psect	text39
  5082   001042                     __ptext39:
  5083                           	callstack 0
  5084   001042                     _EUSART1_Read:
  5085                           	callstack 25
  5086   001042                     l2638:
  5087                           
  5088                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
  5089   001042  502E               	movf	_eusart1RxCount^0,w,c	;volatile
  5090   001044  B4D8               	btfsc	status,2,c
  5091   001046  EF27  F008         	goto	u1491
  5092   00104A  EF29  F008         	goto	u1490
  5093   00104E                     u1491:
  5094   00104E  EF21  F008         	goto	l2638
  5095   001052                     u1490:
  5096   001052                     
  5097                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
  5098   001052  0EB3               	movlw	low _eusart1RxStatusBuffer
  5099   001054  242F               	addwf	_eusart1RxTail^0,w,c	;volatile
  5100   001056  6ED9               	movwf	fsr2l,c
  5101   001058  6ADA               	clrf	fsr2h,c
  5102   00105A  0E00               	movlw	high _eusart1RxStatusBuffer
  5103   00105C  22DA               	addwfc	fsr2h,f,c
  5104   00105E  50DF               	movf	indf2,w,c
  5105   001060  6E2D               	movwf	_eusart1RxLastError^0,c	;volatile
  5106                           
  5107                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
  5108   001062  0EBB               	movlw	low _eusart1RxBuffer
  5109   001064  242F               	addwf	_eusart1RxTail^0,w,c	;volatile
  5110   001066  6ED9               	movwf	fsr2l,c
  5111   001068  6ADA               	clrf	fsr2h,c
  5112   00106A  0E00               	movlw	high _eusart1RxBuffer
  5113   00106C  22DA               	addwfc	fsr2h,f,c
  5114   00106E  50DF               	movf	indf2,w,c
  5115   001070  6E1F               	movwf	EUSART1_Read@readValue^0,c
  5116   001072  2A2F               	incf	_eusart1RxTail^0,f,c	;volatile
  5117   001074                     
  5118                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  5119   001074  0E07               	movlw	7
  5120   001076  642F               	cpfsgt	_eusart1RxTail^0,c	;volatile
  5121   001078  EF40  F008         	goto	u1501
  5122   00107C  EF42  F008         	goto	u1500
  5123   001080                     u1501:
  5124   001080  EF44  F008         	goto	l2648
  5125   001084                     u1500:
  5126   001084                     
  5127                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
  5128   001084  0E00               	movlw	0
  5129   001086  6E2F               	movwf	_eusart1RxTail^0,c	;volatile
  5130   001088                     l2648:
  5131                           
  5132                           ;mcc_generated_files/eusart1.c: 166:     PIE1bits.RC1IE = 0;
  5133   001088  9A9D               	bcf	157,5,c	;volatile
  5134   00108A                     
  5135                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
  5136   00108A  062E               	decf	_eusart1RxCount^0,f,c	;volatile
  5137   00108C                     
  5138                           ;mcc_generated_files/eusart1.c: 168:     PIE1bits.RC1IE = 1;
  5139   00108C  8A9D               	bsf	157,5,c	;volatile
  5140   00108E                     
  5141                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
  5142   00108E  501F               	movf	EUSART1_Read@readValue^0,w,c
  5143   001090  0012               	return		;funcret
  5144   001092                     __end_of_EUSART1_Read:
  5145                           	callstack 0
  5146                           
  5147 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  5148 ;; Defined at:
  5149 ;;		line 79 in file "mcc_generated_files/interrupt_manager.c"
  5150 ;; Parameters:    Size  Location     Type
  5151 ;;		None
  5152 ;; Auto vars:     Size  Location     Type
  5153 ;;		None
  5154 ;; Return value:  Size  Location     Type
  5155 ;;                  1    wreg      void 
  5156 ;; Registers used:
  5157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5158 ;; Tracked objects:
  5159 ;;		On entry : 0/0
  5160 ;;		On exit  : 0/0
  5161 ;;		Unchanged: 0/0
  5162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5165 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5166 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5167 ;;Total ram usage:        4 bytes
  5168 ;; Hardware stack levels used: 1
  5169 ;; Hardware stack levels required when called: 3
  5170 ;; This function calls:
  5171 ;;		Absolute function
  5172 ;;		_ADC_ISR
  5173 ;;		_EUSART1_Receive_ISR
  5174 ;;		_EUSART1_Transmit_ISR
  5175 ;;		_INT0_ISR
  5176 ;;		_TMR0_ISR
  5177 ;;		_TMR1_ISR
  5178 ;; This function is called by:
  5179 ;;		Interrupt level 2
  5180 ;; This function uses a non-reentrant model
  5181 ;;
  5182                           
  5183                           	psect	intcode
  5184   000008                     __pintcode:
  5185                           	callstack 0
  5186   000008                     _INTERRUPT_InterruptManagerHigh:
  5187                           	callstack 17
  5188                           
  5189                           ;incstack = 0
  5190   000008  8241               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5191   00000A  CFFA F01B          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
  5192   00000E  CFFB F01C          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
  5193   000012  CFD9 F01D          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+2
  5194   000016  CFDA F01E          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+3
  5195   00001A                     
  5196                           ;mcc_generated_files/interrupt_manager.c: 82:     if(PIE1bits.ADIE == 1 && PIR1bits.ADIF
      +                           == 1)
  5197   00001A  AC9D               	btfss	157,6,c	;volatile
  5198   00001C  EF12  F000         	goto	i2u172_41
  5199   000020  EF14  F000         	goto	i2u172_40
  5200   000024                     i2u172_41:
  5201   000024  EF1F  F000         	goto	i2l331
  5202   000028                     i2u172_40:
  5203   000028  AC9E               	btfss	158,6,c	;volatile
  5204   00002A  EF19  F000         	goto	i2u173_41
  5205   00002E  EF1B  F000         	goto	i2u173_40
  5206   000032                     i2u173_41:
  5207   000032  EF1F  F000         	goto	i2l331
  5208   000036                     i2u173_40:
  5209   000036                     
  5210                           ;mcc_generated_files/interrupt_manager.c: 83:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 84:         ADC_ISR();
  5211   000036  EC21  F009         	call	_ADC_ISR	;wreg free
  5212                           
  5213                           ;mcc_generated_files/interrupt_manager.c: 85:     }
  5214   00003A  EF8F  F000         	goto	i2l343
  5215   00003E                     i2l331:
  5216   00003E  AAF2               	btfss	242,5,c	;volatile
  5217   000040  EF24  F000         	goto	i2u174_41
  5218   000044  EF26  F000         	goto	i2u174_40
  5219   000048                     i2u174_41:
  5220   000048  EF31  F000         	goto	i2l333
  5221   00004C                     i2u174_40:
  5222   00004C  A4F2               	btfss	242,2,c	;volatile
  5223   00004E  EF2B  F000         	goto	i2u175_41
  5224   000052  EF2D  F000         	goto	i2u175_40
  5225   000056                     i2u175_41:
  5226   000056  EF31  F000         	goto	i2l333
  5227   00005A                     i2u175_40:
  5228   00005A                     
  5229                           ;mcc_generated_files/interrupt_manager.c: 87:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 88:         TMR0_ISR();
  5230   00005A  EC08  F009         	call	_TMR0_ISR	;wreg free
  5231                           
  5232                           ;mcc_generated_files/interrupt_manager.c: 89:     }
  5233   00005E  EF8F  F000         	goto	i2l343
  5234   000062                     i2l333:
  5235   000062  A8F2               	btfss	242,4,c	;volatile
  5236   000064  EF36  F000         	goto	i2u176_41
  5237   000068  EF38  F000         	goto	i2u176_40
  5238   00006C                     i2u176_41:
  5239   00006C  EF43  F000         	goto	i2l335
  5240   000070                     i2u176_40:
  5241   000070  A2F2               	btfss	242,1,c	;volatile
  5242   000072  EF3D  F000         	goto	i2u177_41
  5243   000076  EF3F  F000         	goto	i2u177_40
  5244   00007A                     i2u177_41:
  5245   00007A  EF43  F000         	goto	i2l335
  5246   00007E                     i2u177_40:
  5247   00007E                     
  5248                           ;mcc_generated_files/interrupt_manager.c: 91:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 92:         INT0_ISR();
  5249   00007E  EC62  F00A         	call	_INT0_ISR	;wreg free
  5250                           
  5251                           ;mcc_generated_files/interrupt_manager.c: 93:     }
  5252   000082  EF8F  F000         	goto	i2l343
  5253   000086                     i2l335:
  5254   000086  A89D               	btfss	157,4,c	;volatile
  5255   000088  EF48  F000         	goto	i2u178_41
  5256   00008C  EF4A  F000         	goto	i2u178_40
  5257   000090                     i2u178_41:
  5258   000090  EF60  F000         	goto	i2l337
  5259   000094                     i2u178_40:
  5260   000094  A89E               	btfss	158,4,c	;volatile
  5261   000096  EF4F  F000         	goto	i2u179_41
  5262   00009A  EF51  F000         	goto	i2u179_40
  5263   00009E                     i2u179_41:
  5264   00009E  EF60  F000         	goto	i2l337
  5265   0000A2                     i2u179_40:
  5266   0000A2                     
  5267                           ;mcc_generated_files/interrupt_manager.c: 95:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 96:         EUSART1_TxDefaultInterruptHandler();
  5268   0000A2  D802               	call	i2u180_48
  5269   0000A4  EF5E  F000         	goto	i2u180_49
  5270   0000A8                     i2u180_48:
  5271   0000A8  0005               	push	
  5272   0000AA  6EFA               	movwf	pclath,c
  5273   0000AC  0100               	movlb	0	; () banked
  5274   0000AE  51FB               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
  5275   0000B0  6EFD               	movwf	tosl,c
  5276   0000B2  51FC               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
  5277   0000B4  6EFE               	movwf	tosh,c
  5278   0000B6  6AFF               	clrf	tosu,c
  5279   0000B8  50FA               	movf	pclath,w,c
  5280   0000BA  0012               	return		;indir
  5281   0000BC                     i2u180_49:
  5282                           
  5283                           ;mcc_generated_files/interrupt_manager.c: 97:     }
  5284   0000BC  EF8F  F000         	goto	i2l343
  5285   0000C0                     i2l337:
  5286   0000C0  AA9D               	btfss	157,5,c	;volatile
  5287   0000C2  EF65  F000         	goto	i2u181_41
  5288   0000C6  EF67  F000         	goto	i2u181_40
  5289   0000CA                     i2u181_41:
  5290   0000CA  EF7D  F000         	goto	i2l339
  5291   0000CE                     i2u181_40:
  5292   0000CE  AA9E               	btfss	158,5,c	;volatile
  5293   0000D0  EF6C  F000         	goto	i2u182_41
  5294   0000D4  EF6E  F000         	goto	i2u182_40
  5295   0000D8                     i2u182_41:
  5296   0000D8  EF7D  F000         	goto	i2l339
  5297   0000DC                     i2u182_40:
  5298   0000DC                     
  5299                           ;mcc_generated_files/interrupt_manager.c: 99:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 100:         EUSART1_RxDefaultInterruptHandler();
  5300   0000DC  D802               	call	i2u183_48
  5301   0000DE  EF7B  F000         	goto	i2u183_49
  5302   0000E2                     i2u183_48:
  5303   0000E2  0005               	push	
  5304   0000E4  6EFA               	movwf	pclath,c
  5305   0000E6  0100               	movlb	0	; () banked
  5306   0000E8  51F9               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
  5307   0000EA  6EFD               	movwf	tosl,c
  5308   0000EC  51FA               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
  5309   0000EE  6EFE               	movwf	tosh,c
  5310   0000F0  6AFF               	clrf	tosu,c
  5311   0000F2  50FA               	movf	pclath,w,c
  5312   0000F4  0012               	return		;indir
  5313   0000F6                     i2u183_49:
  5314                           
  5315                           ;mcc_generated_files/interrupt_manager.c: 101:     }
  5316   0000F6  EF8F  F000         	goto	i2l343
  5317   0000FA                     i2l339:
  5318   0000FA  A09D               	btfss	157,0,c	;volatile
  5319   0000FC  EF82  F000         	goto	i2u184_41
  5320   000100  EF84  F000         	goto	i2u184_40
  5321   000104                     i2u184_41:
  5322   000104  EF8F  F000         	goto	i2l338
  5323   000108                     i2u184_40:
  5324   000108  A09E               	btfss	158,0,c	;volatile
  5325   00010A  EF89  F000         	goto	i2u185_41
  5326   00010E  EF8B  F000         	goto	i2u185_40
  5327   000112                     i2u185_41:
  5328   000112  EF8F  F000         	goto	i2l338
  5329   000116                     i2u185_40:
  5330   000116                     
  5331                           ;mcc_generated_files/interrupt_manager.c: 103:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 104:         TMR1_ISR();
  5332   000116  ECD0  F008         	call	_TMR1_ISR	;wreg free
  5333                           
  5334                           ;mcc_generated_files/interrupt_manager.c: 105:     }
  5335   00011A  EF8F  F000         	goto	i2l343
  5336   00011E                     i2l338:
  5337   00011E                     i2l343:
  5338   00011E  C01E  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr2h
  5339   000122  C01D  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr2l
  5340   000126  C01C  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
  5341   00012A  C01B  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
  5342   00012E  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5343   000130  0011               	retfie		f
  5344   000132                     __end_of_INTERRUPT_InterruptManagerHigh:
  5345                           	callstack 0
  5346                           
  5347 ;; *************** function _TMR1_ISR *****************
  5348 ;; Defined at:
  5349 ;;		line 158 in file "mcc_generated_files/tmr1.c"
  5350 ;; Parameters:    Size  Location     Type
  5351 ;;		None
  5352 ;; Auto vars:     Size  Location     Type
  5353 ;;		None
  5354 ;; Return value:  Size  Location     Type
  5355 ;;                  1    wreg      void 
  5356 ;; Registers used:
  5357 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5358 ;; Tracked objects:
  5359 ;;		On entry : 0/0
  5360 ;;		On exit  : 0/0
  5361 ;;		Unchanged: 0/0
  5362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5367 ;;Total ram usage:        0 bytes
  5368 ;; Hardware stack levels used: 1
  5369 ;; Hardware stack levels required when called: 1
  5370 ;; This function calls:
  5371 ;;		Absolute function
  5372 ;;		_TMR1_DefaultInterruptHandler
  5373 ;;		_TMR1_MyInterruptHandler
  5374 ;;		_TMR1_WriteTimer
  5375 ;; This function is called by:
  5376 ;;		_INTERRUPT_InterruptManagerHigh
  5377 ;; This function uses a non-reentrant model
  5378 ;;
  5379                           
  5380                           	psect	text41
  5381   0011A0                     __ptext41:
  5382                           	callstack 0
  5383   0011A0                     _TMR1_ISR:
  5384                           	callstack 18
  5385   0011A0                     
  5386                           ;mcc_generated_files/tmr1.c: 162:     PIR1bits.TMR1IF = 0;
  5387   0011A0  909E               	bcf	158,0,c	;volatile
  5388   0011A2                     
  5389                           ;mcc_generated_files/tmr1.c: 163:     TMR1_WriteTimer(timer1ReloadVal);
  5390   0011A2  C035  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
  5391   0011A6  C036  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
  5392   0011AA  ECA2  F009         	call	_TMR1_WriteTimer	;wreg free
  5393   0011AE                     
  5394                           ;mcc_generated_files/tmr1.c: 165:     if(TMR1_InterruptHandler)
  5395   0011AE  5033               	movf	_TMR1_InterruptHandler^0,w,c
  5396   0011B0  1034               	iorwf	(_TMR1_InterruptHandler+1)^0,w,c
  5397   0011B2  B4D8               	btfsc	status,2,c
  5398   0011B4  EFDE  F008         	goto	i2u166_41
  5399   0011B8  EFE0  F008         	goto	i2u166_40
  5400   0011BC                     i2u166_41:
  5401   0011BC  EFEC  F008         	goto	i2l642
  5402   0011C0                     i2u166_40:
  5403   0011C0                     
  5404                           ;mcc_generated_files/tmr1.c: 166:     {;mcc_generated_files/tmr1.c: 167:         TMR1_In
      +                          terruptHandler();
  5405   0011C0  D802               	call	i2u167_48
  5406   0011C2  EFEC  F008         	goto	i2u167_49
  5407   0011C6                     i2u167_48:
  5408   0011C6  0005               	push	
  5409   0011C8  6EFA               	movwf	pclath,c
  5410   0011CA  5033               	movf	_TMR1_InterruptHandler^0,w,c
  5411   0011CC  6EFD               	movwf	tosl,c
  5412   0011CE  5034               	movf	(_TMR1_InterruptHandler+1)^0,w,c
  5413   0011D0  6EFE               	movwf	tosh,c
  5414   0011D2  6AFF               	clrf	tosu,c
  5415   0011D4  50FA               	movf	pclath,w,c
  5416   0011D6  0012               	return		;indir
  5417   0011D8                     i2u167_49:
  5418   0011D8                     i2l642:
  5419   0011D8  0012               	return		;funcret
  5420   0011DA                     __end_of_TMR1_ISR:
  5421                           	callstack 0
  5422                           
  5423 ;; *************** function _TMR1_WriteTimer *****************
  5424 ;; Defined at:
  5425 ;;		line 121 in file "mcc_generated_files/tmr1.c"
  5426 ;; Parameters:    Size  Location     Type
  5427 ;;  timerVal        2    0[COMRAM] unsigned short 
  5428 ;; Auto vars:     Size  Location     Type
  5429 ;;		None
  5430 ;; Return value:  Size  Location     Type
  5431 ;;                  1    wreg      void 
  5432 ;; Registers used:
  5433 ;;		wreg, status,2
  5434 ;; Tracked objects:
  5435 ;;		On entry : 0/0
  5436 ;;		On exit  : 0/0
  5437 ;;		Unchanged: 0/0
  5438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5439 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5442 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5443 ;;Total ram usage:        2 bytes
  5444 ;; Hardware stack levels used: 1
  5445 ;; This function calls:
  5446 ;;		Nothing
  5447 ;; This function is called by:
  5448 ;;		_TMR1_ISR
  5449 ;;		_TMR1_Reload
  5450 ;; This function uses a non-reentrant model
  5451 ;;
  5452                           
  5453                           	psect	text42
  5454   001344                     __ptext42:
  5455                           	callstack 0
  5456   001344                     _TMR1_WriteTimer:
  5457                           	callstack 18
  5458   001344                     
  5459                           ;mcc_generated_files/tmr1.c: 121: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 122: {;mcc_generated_files/tmr1.c: 123:     if (T1CONbits.T1SYNC == 1)
  5460   001344  A4CD               	btfss	205,2,c	;volatile
  5461   001346  EFA7  F009         	goto	i2u153_41
  5462   00134A  EFA9  F009         	goto	i2u153_40
  5463   00134E                     i2u153_41:
  5464   00134E  EFB1  F009         	goto	i2l2720
  5465   001352                     i2u153_40:
  5466   001352                     
  5467                           ;mcc_generated_files/tmr1.c: 124:     {;mcc_generated_files/tmr1.c: 126:         T1CONbi
      +                          ts.TMR1ON = 0;
  5468   001352  90CD               	bcf	205,0,c	;volatile
  5469   001354                     
  5470                           ;mcc_generated_files/tmr1.c: 129:         TMR1H = (timerVal >> 8);
  5471   001354  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  5472   001356  6ECF               	movwf	207,c	;volatile
  5473   001358                     
  5474                           ;mcc_generated_files/tmr1.c: 130:         TMR1L = (uint8_t) timerVal;
  5475   001358  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  5476   00135C                     
  5477                           ;mcc_generated_files/tmr1.c: 133:         T1CONbits.TMR1ON =1;
  5478   00135C  80CD               	bsf	205,0,c	;volatile
  5479                           
  5480                           ;mcc_generated_files/tmr1.c: 134:     }
  5481   00135E  EFB5  F009         	goto	i2l629
  5482   001362                     i2l2720:
  5483                           
  5484                           ;mcc_generated_files/tmr1.c: 136:     {;mcc_generated_files/tmr1.c: 138:         TMR1H =
      +                           (timerVal >> 8);
  5485   001362  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  5486   001364  6ECF               	movwf	207,c	;volatile
  5487   001366                     
  5488                           ;mcc_generated_files/tmr1.c: 139:         TMR1L = (uint8_t) timerVal;
  5489   001366  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  5490   00136A                     i2l629:
  5491   00136A  0012               	return		;funcret
  5492   00136C                     __end_of_TMR1_WriteTimer:
  5493                           	callstack 0
  5494                           
  5495 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  5496 ;; Defined at:
  5497 ;;		line 176 in file "mcc_generated_files/tmr1.c"
  5498 ;; Parameters:    Size  Location     Type
  5499 ;;		None
  5500 ;; Auto vars:     Size  Location     Type
  5501 ;;		None
  5502 ;; Return value:  Size  Location     Type
  5503 ;;                  1    wreg      void 
  5504 ;; Registers used:
  5505 ;;		None
  5506 ;; Tracked objects:
  5507 ;;		On entry : 0/0
  5508 ;;		On exit  : 0/0
  5509 ;;		Unchanged: 0/0
  5510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5515 ;;Total ram usage:        0 bytes
  5516 ;; Hardware stack levels used: 1
  5517 ;; This function calls:
  5518 ;;		Nothing
  5519 ;; This function is called by:
  5520 ;;		_TMR1_Initialize
  5521 ;;		_TMR1_ISR
  5522 ;; This function uses a non-reentrant model
  5523 ;;
  5524                           
  5525                           	psect	text43
  5526   0014EC                     __ptext43:
  5527                           	callstack 0
  5528   0014EC                     _TMR1_DefaultInterruptHandler:
  5529                           	callstack 18
  5530   0014EC  0012               	return		;funcret
  5531   0014EE                     __end_of_TMR1_DefaultInterruptHandler:
  5532                           	callstack 0
  5533                           
  5534 ;; *************** function _TMR1_MyInterruptHandler *****************
  5535 ;; Defined at:
  5536 ;;		line 82 in file "main.c"
  5537 ;; Parameters:    Size  Location     Type
  5538 ;;		None
  5539 ;; Auto vars:     Size  Location     Type
  5540 ;;		None
  5541 ;; Return value:  Size  Location     Type
  5542 ;;                  1    wreg      void 
  5543 ;; Registers used:
  5544 ;;		wreg, status,2, status,0
  5545 ;; Tracked objects:
  5546 ;;		On entry : 0/0
  5547 ;;		On exit  : 0/0
  5548 ;;		Unchanged: 0/0
  5549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5552 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5553 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5554 ;;Total ram usage:        1 bytes
  5555 ;; Hardware stack levels used: 1
  5556 ;; This function calls:
  5557 ;;		Nothing
  5558 ;; This function is called by:
  5559 ;;		_main
  5560 ;;		_TMR1_ISR
  5561 ;; This function uses a non-reentrant model
  5562 ;;
  5563                           
  5564                           	psect	text44
  5565   0011DA                     __ptext44:
  5566                           	callstack 0
  5567   0011DA                     _TMR1_MyInterruptHandler:
  5568                           	callstack 18
  5569   0011DA                     
  5570                           ;main.c: 84:     if (SistemaControloLigado) {
  5571   0011DA  0100               	movlb	0	; () banked
  5572   0011DC  51FD               	movf	_SistemaControloLigado& (0+255),w,b	;volatile
  5573   0011DE  B4D8               	btfsc	status,2,c
  5574   0011E0  EFF4  F008         	goto	i2u151_41
  5575   0011E4  EFF6  F008         	goto	i2u151_40
  5576   0011E8                     i2u151_41:
  5577   0011E8  EF07  F009         	goto	i2l526
  5578   0011EC                     i2u151_40:
  5579   0011EC                     
  5580                           ; BSR set to: 0
  5581   0011EC  B88A               	btfsc	138,4,c	;volatile
  5582   0011EE  EFFB  F008         	goto	i2u152_41
  5583   0011F2  EFFE  F008         	goto	i2u152_40
  5584   0011F6                     i2u152_41:
  5585   0011F6  0E01               	movlw	1
  5586   0011F8  EFFF  F008         	goto	i2u152_46
  5587   0011FC                     i2u152_40:
  5588   0011FC  0E00               	movlw	0
  5589   0011FE                     i2u152_46:
  5590   0011FE  0AFF               	xorlw	255
  5591   001200  6E01               	movwf	??_TMR1_MyInterruptHandler^0,c
  5592   001202  3A01               	swapf	??_TMR1_MyInterruptHandler^0,f,c
  5593   001204  508A               	movf	138,w,c	;volatile
  5594   001206  1801               	xorwf	??_TMR1_MyInterruptHandler^0,w,c
  5595   001208  0BEF               	andlw	-17
  5596   00120A  1801               	xorwf	??_TMR1_MyInterruptHandler^0,w,c
  5597   00120C  6E8A               	movwf	138,c	;volatile
  5598   00120E                     i2l526:
  5599                           
  5600                           ; BSR set to: 0
  5601   00120E  0012               	return		;funcret
  5602   001210                     __end_of_TMR1_MyInterruptHandler:
  5603                           	callstack 0
  5604                           
  5605 ;; *************** function _TMR0_ISR *****************
  5606 ;; Defined at:
  5607 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  5608 ;; Parameters:    Size  Location     Type
  5609 ;;		None
  5610 ;; Auto vars:     Size  Location     Type
  5611 ;;		None
  5612 ;; Return value:  Size  Location     Type
  5613 ;;                  1    wreg      void 
  5614 ;; Registers used:
  5615 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5616 ;; Tracked objects:
  5617 ;;		On entry : 0/0
  5618 ;;		On exit  : 0/0
  5619 ;;		Unchanged: 0/0
  5620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5625 ;;Total ram usage:        0 bytes
  5626 ;; Hardware stack levels used: 1
  5627 ;; Hardware stack levels required when called: 2
  5628 ;; This function calls:
  5629 ;;		Absolute function
  5630 ;;		_TMR0_DefaultInterruptHandler
  5631 ;;		_TMR0_MyInterruptHandler
  5632 ;; This function is called by:
  5633 ;;		_INTERRUPT_InterruptManagerHigh
  5634 ;; This function uses a non-reentrant model
  5635 ;;
  5636                           
  5637                           	psect	text45
  5638   001210                     __ptext45:
  5639                           	callstack 0
  5640   001210                     _TMR0_ISR:
  5641                           	callstack 17
  5642   001210                     
  5643                           ;mcc_generated_files/tmr0.c: 133:     INTCONbits.TMR0IF = 0;
  5644   001210  94F2               	bcf	242,2,c	;volatile
  5645                           
  5646                           ;mcc_generated_files/tmr0.c: 136:     TMR0L = timer0ReloadVal;
  5647   001212  C03D  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  5648   001216                     
  5649                           ;mcc_generated_files/tmr0.c: 138:     if(TMR0_InterruptHandler)
  5650   001216  5037               	movf	_TMR0_InterruptHandler^0,w,c
  5651   001218  1038               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  5652   00121A  B4D8               	btfsc	status,2,c
  5653   00121C  EF12  F009         	goto	i2u164_41
  5654   001220  EF14  F009         	goto	i2u164_40
  5655   001224                     i2u164_41:
  5656   001224  EF20  F009         	goto	i2l457
  5657   001228                     i2u164_40:
  5658   001228                     
  5659                           ;mcc_generated_files/tmr0.c: 139:     {;mcc_generated_files/tmr0.c: 140:         TMR0_In
      +                          terruptHandler();
  5660   001228  D802               	call	i2u165_48
  5661   00122A  EF20  F009         	goto	i2u165_49
  5662   00122E                     i2u165_48:
  5663   00122E  0005               	push	
  5664   001230  6EFA               	movwf	pclath,c
  5665   001232  5037               	movf	_TMR0_InterruptHandler^0,w,c
  5666   001234  6EFD               	movwf	tosl,c
  5667   001236  5038               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  5668   001238  6EFE               	movwf	tosh,c
  5669   00123A  6AFF               	clrf	tosu,c
  5670   00123C  50FA               	movf	pclath,w,c
  5671   00123E  0012               	return		;indir
  5672   001240                     i2u165_49:
  5673   001240                     i2l457:
  5674   001240  0012               	return		;funcret
  5675   001242                     __end_of_TMR0_ISR:
  5676                           	callstack 0
  5677                           
  5678 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  5679 ;; Defined at:
  5680 ;;		line 151 in file "mcc_generated_files/tmr0.c"
  5681 ;; Parameters:    Size  Location     Type
  5682 ;;		None
  5683 ;; Auto vars:     Size  Location     Type
  5684 ;;		None
  5685 ;; Return value:  Size  Location     Type
  5686 ;;                  1    wreg      void 
  5687 ;; Registers used:
  5688 ;;		None
  5689 ;; Tracked objects:
  5690 ;;		On entry : 0/0
  5691 ;;		On exit  : 0/0
  5692 ;;		Unchanged: 0/0
  5693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5698 ;;Total ram usage:        0 bytes
  5699 ;; Hardware stack levels used: 1
  5700 ;; This function calls:
  5701 ;;		Nothing
  5702 ;; This function is called by:
  5703 ;;		_TMR0_Initialize
  5704 ;;		_TMR0_ISR
  5705 ;; This function uses a non-reentrant model
  5706 ;;
  5707                           
  5708                           	psect	text46
  5709   0014EE                     __ptext46:
  5710                           	callstack 0
  5711   0014EE                     _TMR0_DefaultInterruptHandler:
  5712                           	callstack 18
  5713   0014EE  0012               	return		;funcret
  5714   0014F0                     __end_of_TMR0_DefaultInterruptHandler:
  5715                           	callstack 0
  5716                           
  5717 ;; *************** function _TMR0_MyInterruptHandler *****************
  5718 ;; Defined at:
  5719 ;;		line 77 in file "main.c"
  5720 ;; Parameters:    Size  Location     Type
  5721 ;;		None
  5722 ;; Auto vars:     Size  Location     Type
  5723 ;;		None
  5724 ;; Return value:  Size  Location     Type
  5725 ;;                  1    wreg      void 
  5726 ;; Registers used:
  5727 ;;		wreg, status,2, status,0, cstack
  5728 ;; Tracked objects:
  5729 ;;		On entry : 0/0
  5730 ;;		On exit  : 0/0
  5731 ;;		Unchanged: 0/0
  5732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5737 ;;Total ram usage:        0 bytes
  5738 ;; Hardware stack levels used: 1
  5739 ;; Hardware stack levels required when called: 1
  5740 ;; This function calls:
  5741 ;;		_ADC_SelectChannel
  5742 ;;		_ADC_StartConversion
  5743 ;; This function is called by:
  5744 ;;		_main
  5745 ;;		_TMR0_ISR
  5746 ;; This function uses a non-reentrant model
  5747 ;;
  5748                           
  5749                           	psect	text47
  5750   001454                     __ptext47:
  5751                           	callstack 0
  5752   001454                     _TMR0_MyInterruptHandler:
  5753                           	callstack 17
  5754   001454                     
  5755                           ;main.c: 78:     ADC_SelectChannel(channel_AN0);
  5756   001454  0E00               	movlw	0
  5757   001456  ECD9  F009         	call	_ADC_SelectChannel
  5758   00145A                     
  5759                           ;main.c: 79:     ADC_StartConversion();
  5760   00145A  EC72  F00A         	call	_ADC_StartConversion	;wreg free
  5761   00145E  0012               	return		;funcret
  5762   001460                     __end_of_TMR0_MyInterruptHandler:
  5763                           	callstack 0
  5764                           
  5765 ;; *************** function _ADC_StartConversion *****************
  5766 ;; Defined at:
  5767 ;;		line 96 in file "mcc_generated_files/adc.c"
  5768 ;; Parameters:    Size  Location     Type
  5769 ;;		None
  5770 ;; Auto vars:     Size  Location     Type
  5771 ;;		None
  5772 ;; Return value:  Size  Location     Type
  5773 ;;                  1    wreg      void 
  5774 ;; Registers used:
  5775 ;;		None
  5776 ;; Tracked objects:
  5777 ;;		On entry : 0/0
  5778 ;;		On exit  : 0/0
  5779 ;;		Unchanged: 0/0
  5780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5785 ;;Total ram usage:        0 bytes
  5786 ;; Hardware stack levels used: 1
  5787 ;; This function calls:
  5788 ;;		Nothing
  5789 ;; This function is called by:
  5790 ;;		_TMR0_MyInterruptHandler
  5791 ;; This function uses a non-reentrant model
  5792 ;;
  5793                           
  5794                           	psect	text48
  5795   0014E4                     __ptext48:
  5796                           	callstack 0
  5797   0014E4                     _ADC_StartConversion:
  5798                           	callstack 17
  5799   0014E4                     
  5800                           ;mcc_generated_files/adc.c: 99:     ADCON0bits.GO_nDONE = 1;
  5801   0014E4  82C2               	bsf	194,1,c	;volatile
  5802   0014E6  0012               	return		;funcret
  5803   0014E8                     __end_of_ADC_StartConversion:
  5804                           	callstack 0
  5805                           
  5806 ;; *************** function _INT0_ISR *****************
  5807 ;; Defined at:
  5808 ;;		line 32 in file "mcc_generated_files/ext_int.c"
  5809 ;; Parameters:    Size  Location     Type
  5810 ;;		None
  5811 ;; Auto vars:     Size  Location     Type
  5812 ;;		None
  5813 ;; Return value:  Size  Location     Type
  5814 ;;                  1    wreg      void 
  5815 ;; Registers used:
  5816 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5817 ;; Tracked objects:
  5818 ;;		On entry : 0/0
  5819 ;;		On exit  : 0/0
  5820 ;;		Unchanged: 0/0
  5821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5826 ;;Total ram usage:        0 bytes
  5827 ;; Hardware stack levels used: 1
  5828 ;; Hardware stack levels required when called: 2
  5829 ;; This function calls:
  5830 ;;		_INT0_CallBack
  5831 ;; This function is called by:
  5832 ;;		_INTERRUPT_InterruptManagerHigh
  5833 ;; This function uses a non-reentrant model
  5834 ;;
  5835                           
  5836                           	psect	text49
  5837   0014C4                     __ptext49:
  5838                           	callstack 0
  5839   0014C4                     _INT0_ISR:
  5840                           	callstack 17
  5841   0014C4                     
  5842                           ;mcc_generated_files/ext_int.c: 34:     (INTCONbits.INT0IF = 0);
  5843   0014C4  92F2               	bcf	242,1,c	;volatile
  5844   0014C6                     
  5845                           ;mcc_generated_files/ext_int.c: 37:     INT0_CallBack();
  5846   0014C6  EC38  F009         	call	_INT0_CallBack	;wreg free
  5847   0014CA  0012               	return		;funcret
  5848   0014CC                     __end_of_INT0_ISR:
  5849                           	callstack 0
  5850                           
  5851 ;; *************** function _INT0_CallBack *****************
  5852 ;; Defined at:
  5853 ;;		line 41 in file "mcc_generated_files/ext_int.c"
  5854 ;; Parameters:    Size  Location     Type
  5855 ;;		None
  5856 ;; Auto vars:     Size  Location     Type
  5857 ;;		None
  5858 ;; Return value:  Size  Location     Type
  5859 ;;                  1    wreg      void 
  5860 ;; Registers used:
  5861 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5862 ;; Tracked objects:
  5863 ;;		On entry : 0/0
  5864 ;;		On exit  : 0/0
  5865 ;;		Unchanged: 0/0
  5866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5871 ;;Total ram usage:        0 bytes
  5872 ;; Hardware stack levels used: 1
  5873 ;; Hardware stack levels required when called: 1
  5874 ;; This function calls:
  5875 ;;		Absolute function
  5876 ;;		_INT0_DefaultInterruptHandler
  5877 ;;		_INT0_MyInterruptHandler
  5878 ;; This function is called by:
  5879 ;;		_INT0_ISR
  5880 ;; This function uses a non-reentrant model
  5881 ;;
  5882                           
  5883                           	psect	text50
  5884   001270                     __ptext50:
  5885                           	callstack 0
  5886   001270                     _INT0_CallBack:
  5887                           	callstack 17
  5888   001270                     
  5889                           ;mcc_generated_files/ext_int.c: 44:     if(INT0_InterruptHandler)
  5890   001270  5039               	movf	_INT0_InterruptHandler^0,w,c
  5891   001272  103A               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
  5892   001274  B4D8               	btfsc	status,2,c
  5893   001276  EF3F  F009         	goto	i2u145_41
  5894   00127A  EF41  F009         	goto	i2u145_40
  5895   00127E                     i2u145_41:
  5896   00127E  EF4D  F009         	goto	i2l140
  5897   001282                     i2u145_40:
  5898   001282                     
  5899                           ;mcc_generated_files/ext_int.c: 45:     {;mcc_generated_files/ext_int.c: 46:         INT
      +                          0_InterruptHandler();
  5900   001282  D802               	call	i2u146_48
  5901   001284  EF4D  F009         	goto	i2u146_49
  5902   001288                     i2u146_48:
  5903   001288  0005               	push	
  5904   00128A  6EFA               	movwf	pclath,c
  5905   00128C  5039               	movf	_INT0_InterruptHandler^0,w,c
  5906   00128E  6EFD               	movwf	tosl,c
  5907   001290  503A               	movf	(_INT0_InterruptHandler+1)^0,w,c
  5908   001292  6EFE               	movwf	tosh,c
  5909   001294  6AFF               	clrf	tosu,c
  5910   001296  50FA               	movf	pclath,w,c
  5911   001298  0012               	return		;indir
  5912   00129A                     i2u146_49:
  5913   00129A                     i2l140:
  5914   00129A  0012               	return		;funcret
  5915   00129C                     __end_of_INT0_CallBack:
  5916                           	callstack 0
  5917                           
  5918 ;; *************** function _INT0_DefaultInterruptHandler *****************
  5919 ;; Defined at:
  5920 ;;		line 54 in file "mcc_generated_files/ext_int.c"
  5921 ;; Parameters:    Size  Location     Type
  5922 ;;		None
  5923 ;; Auto vars:     Size  Location     Type
  5924 ;;		None
  5925 ;; Return value:  Size  Location     Type
  5926 ;;                  1    wreg      void 
  5927 ;; Registers used:
  5928 ;;		None
  5929 ;; Tracked objects:
  5930 ;;		On entry : 0/0
  5931 ;;		On exit  : 0/0
  5932 ;;		Unchanged: 0/0
  5933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5938 ;;Total ram usage:        0 bytes
  5939 ;; Hardware stack levels used: 1
  5940 ;; This function calls:
  5941 ;;		Nothing
  5942 ;; This function is called by:
  5943 ;;		_EXT_INT_Initialize
  5944 ;;		_INT0_CallBack
  5945 ;; This function uses a non-reentrant model
  5946 ;;
  5947                           
  5948                           	psect	text51
  5949   0014F0                     __ptext51:
  5950                           	callstack 0
  5951   0014F0                     _INT0_DefaultInterruptHandler:
  5952                           	callstack 17
  5953   0014F0  0012               	return		;funcret
  5954   0014F2                     __end_of_INT0_DefaultInterruptHandler:
  5955                           	callstack 0
  5956                           
  5957 ;; *************** function _INT0_MyInterruptHandler *****************
  5958 ;; Defined at:
  5959 ;;		line 57 in file "main.c"
  5960 ;; Parameters:    Size  Location     Type
  5961 ;;		None
  5962 ;; Auto vars:     Size  Location     Type
  5963 ;;		None
  5964 ;; Return value:  Size  Location     Type
  5965 ;;                  1    wreg      void 
  5966 ;; Registers used:
  5967 ;;		wreg, status,2
  5968 ;; Tracked objects:
  5969 ;;		On entry : 0/0
  5970 ;;		On exit  : 0/0
  5971 ;;		Unchanged: 0/0
  5972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5977 ;;Total ram usage:        0 bytes
  5978 ;; Hardware stack levels used: 1
  5979 ;; This function calls:
  5980 ;;		Nothing
  5981 ;; This function is called by:
  5982 ;;		_main
  5983 ;;		_INT0_CallBack
  5984 ;; This function uses a non-reentrant model
  5985 ;;
  5986                           
  5987                           	psect	text52
  5988   001446                     __ptext52:
  5989                           	callstack 0
  5990   001446                     _INT0_MyInterruptHandler:
  5991                           	callstack 17
  5992   001446                     
  5993                           ;main.c: 59:     BombaLigada = 0;
  5994   001446  0E00               	movlw	0
  5995   001448  0100               	movlb	0	; () banked
  5996   00144A  6FD2               	movwf	_BombaLigada& (0+255),b	;volatile
  5997                           
  5998                           ;main.c: 60:     SistemaControloLigado = 0;
  5999   00144C  0E00               	movlw	0
  6000   00144E  6FFD               	movwf	_SistemaControloLigado& (0+255),b	;volatile
  6001   001450                     
  6002                           ; BSR set to: 0
  6003                           ;main.c: 62:     (INTCONbits.INT0IF = 0);
  6004   001450  92F2               	bcf	242,1,c	;volatile
  6005   001452                     
  6006                           ; BSR set to: 0
  6007   001452  0012               	return		;funcret
  6008   001454                     __end_of_INT0_MyInterruptHandler:
  6009                           	callstack 0
  6010                           
  6011 ;; *************** function _EUSART1_Transmit_ISR *****************
  6012 ;; Defined at:
  6013 ;;		line 206 in file "mcc_generated_files/eusart1.c"
  6014 ;; Parameters:    Size  Location     Type
  6015 ;;		None
  6016 ;; Auto vars:     Size  Location     Type
  6017 ;;		None
  6018 ;; Return value:  Size  Location     Type
  6019 ;;                  1    wreg      void 
  6020 ;; Registers used:
  6021 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6022 ;; Tracked objects:
  6023 ;;		On entry : 0/0
  6024 ;;		On exit  : 0/0
  6025 ;;		Unchanged: 0/0
  6026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6031 ;;Total ram usage:        0 bytes
  6032 ;; Hardware stack levels used: 1
  6033 ;; This function calls:
  6034 ;;		Nothing
  6035 ;; This function is called by:
  6036 ;;		_EUSART1_Initialize
  6037 ;;		_INTERRUPT_InterruptManagerHigh
  6038 ;; This function uses a non-reentrant model
  6039 ;;
  6040                           
  6041                           	psect	text53
  6042   001160                     __ptext53:
  6043                           	callstack 0
  6044   001160                     _EUSART1_Transmit_ISR:
  6045                           	callstack 19
  6046   001160                     
  6047                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  6048   001160  0E08               	movlw	8
  6049   001162  603E               	cpfslt	_eusart1TxBufferRemaining^0,c	;volatile
  6050   001164  EFB6  F008         	goto	i2u156_41
  6051   001168  EFB8  F008         	goto	i2u156_40
  6052   00116C                     i2u156_41:
  6053   00116C  EFCE  F008         	goto	i2l261
  6054   001170                     i2u156_40:
  6055   001170                     
  6056                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          XREG1 = eusart1TxBuffer[eusart1TxTail++];
  6057   001170  0EC3               	movlw	low _eusart1TxBuffer
  6058   001172  2431               	addwf	_eusart1TxTail^0,w,c	;volatile
  6059   001174  6ED9               	movwf	fsr2l,c
  6060   001176  6ADA               	clrf	fsr2h,c
  6061   001178  0E00               	movlw	high _eusart1TxBuffer
  6062   00117A  22DA               	addwfc	fsr2h,f,c
  6063   00117C  50DF               	movf	indf2,w,c
  6064   00117E  6EAD               	movwf	173,c	;volatile
  6065   001180  2A31               	incf	_eusart1TxTail^0,f,c	;volatile
  6066   001182                     
  6067                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  6068   001182  0E07               	movlw	7
  6069   001184  6431               	cpfsgt	_eusart1TxTail^0,c	;volatile
  6070   001186  EFC7  F008         	goto	i2u157_41
  6071   00118A  EFC9  F008         	goto	i2u157_40
  6072   00118E                     i2u157_41:
  6073   00118E  EFCB  F008         	goto	i2l2744
  6074   001192                     i2u157_40:
  6075   001192                     
  6076                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
  6077   001192  0E00               	movlw	0
  6078   001194  6E31               	movwf	_eusart1TxTail^0,c	;volatile
  6079   001196                     i2l2744:
  6080                           
  6081                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
  6082   001196  2A3E               	incf	_eusart1TxBufferRemaining^0,f,c	;volatile
  6083                           
  6084                           ;mcc_generated_files/eusart1.c: 218:     }
  6085   001198  EFCF  F008         	goto	i2l264
  6086   00119C                     i2l261:
  6087                           
  6088                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE1bits.TX1IE = 0;
  6089   00119C  989D               	bcf	157,4,c	;volatile
  6090   00119E                     i2l264:
  6091   00119E  0012               	return		;funcret
  6092   0011A0                     __end_of_EUSART1_Transmit_ISR:
  6093                           	callstack 0
  6094                           
  6095 ;; *************** function _EUSART1_Receive_ISR *****************
  6096 ;; Defined at:
  6097 ;;		line 225 in file "mcc_generated_files/eusart1.c"
  6098 ;; Parameters:    Size  Location     Type
  6099 ;;		None
  6100 ;; Auto vars:     Size  Location     Type
  6101 ;;		None
  6102 ;; Return value:  Size  Location     Type
  6103 ;;                  1    wreg      void 
  6104 ;; Registers used:
  6105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6106 ;; Tracked objects:
  6107 ;;		On entry : 0/0
  6108 ;;		On exit  : 0/0
  6109 ;;		Unchanged: 0/0
  6110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6115 ;;Total ram usage:        0 bytes
  6116 ;; Hardware stack levels used: 1
  6117 ;; Hardware stack levels required when called: 2
  6118 ;; This function calls:
  6119 ;;		Absolute function
  6120 ;;		_EUSART1_DefaultErrorHandler
  6121 ;;		_EUSART1_DefaultFramingErrorHandler
  6122 ;;		_EUSART1_DefaultOverrunErrorHandler
  6123 ;;		_EUSART1_RxDataHandler
  6124 ;; This function is called by:
  6125 ;;		_EUSART1_Initialize
  6126 ;;		_INTERRUPT_InterruptManagerHigh
  6127 ;; This function uses a non-reentrant model
  6128 ;;
  6129                           
  6130                           	psect	text54
  6131   000B10                     __ptext54:
  6132                           	callstack 0
  6133   000B10                     _EUSART1_Receive_ISR:
  6134                           	callstack 17
  6135   000B10                     
  6136                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  6137   000B10  0EB3               	movlw	low _eusart1RxStatusBuffer
  6138   000B12  2430               	addwf	_eusart1RxHead^0,w,c	;volatile
  6139   000B14  6ED9               	movwf	fsr2l,c
  6140   000B16  6ADA               	clrf	fsr2h,c
  6141   000B18  0E00               	movlw	high _eusart1RxStatusBuffer
  6142   000B1A  22DA               	addwfc	fsr2h,f,c
  6143   000B1C  0E00               	movlw	0
  6144   000B1E  6EDF               	movwf	indf2,c
  6145   000B20                     
  6146                           ;mcc_generated_files/eusart1.c: 230:     if(RCSTA1bits.FERR){
  6147   000B20  A4AB               	btfss	171,2,c	;volatile
  6148   000B22  EF95  F005         	goto	i2u158_41
  6149   000B26  EF97  F005         	goto	i2u158_40
  6150   000B2A                     i2u158_41:
  6151   000B2A  EFAB  F005         	goto	i2l2754
  6152   000B2E                     i2u158_40:
  6153   000B2E                     
  6154                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  6155   000B2E  0EB3               	movlw	low _eusart1RxStatusBuffer
  6156   000B30  2430               	addwf	_eusart1RxHead^0,w,c	;volatile
  6157   000B32  6ED9               	movwf	fsr2l,c
  6158   000B34  6ADA               	clrf	fsr2h,c
  6159   000B36  0E00               	movlw	high _eusart1RxStatusBuffer
  6160   000B38  22DA               	addwfc	fsr2h,f,c
  6161   000B3A  0100               	movlb	0	; () banked
  6162   000B3C  82DF               	bsf	indf2,1,c
  6163   000B3E                     
  6164                           ; BSR set to: 0
  6165                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
  6166   000B3E  D802               	call	i2u159_48
  6167   000B40  EFAB  F005         	goto	i2u159_49
  6168   000B44                     i2u159_48:
  6169   000B44  0005               	push	
  6170   000B46  6EFA               	movwf	pclath,c
  6171   000B48  51F7               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
  6172   000B4A  6EFD               	movwf	tosl,c
  6173   000B4C  51F8               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
  6174   000B4E  6EFE               	movwf	tosh,c
  6175   000B50  6AFF               	clrf	tosu,c
  6176   000B52  50FA               	movf	pclath,w,c
  6177   000B54  0012               	return		;indir
  6178   000B56                     i2u159_49:
  6179   000B56                     i2l2754:
  6180                           
  6181                           ;mcc_generated_files/eusart1.c: 235:     if(RCSTA1bits.OERR){
  6182   000B56  A2AB               	btfss	171,1,c	;volatile
  6183   000B58  EFB0  F005         	goto	i2u160_41
  6184   000B5C  EFB2  F005         	goto	i2u160_40
  6185   000B60                     i2u160_41:
  6186   000B60  EFC6  F005         	goto	i2l2760
  6187   000B64                     i2u160_40:
  6188   000B64                     
  6189                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  6190   000B64  0EB3               	movlw	low _eusart1RxStatusBuffer
  6191   000B66  2430               	addwf	_eusart1RxHead^0,w,c	;volatile
  6192   000B68  6ED9               	movwf	fsr2l,c
  6193   000B6A  6ADA               	clrf	fsr2h,c
  6194   000B6C  0E00               	movlw	high _eusart1RxStatusBuffer
  6195   000B6E  22DA               	addwfc	fsr2h,f,c
  6196   000B70  0100               	movlb	0	; () banked
  6197   000B72  84DF               	bsf	indf2,2,c
  6198   000B74                     
  6199                           ; BSR set to: 0
  6200                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
  6201   000B74  D802               	call	i2u161_48
  6202   000B76  EFC6  F005         	goto	i2u161_49
  6203   000B7A                     i2u161_48:
  6204   000B7A  0005               	push	
  6205   000B7C  6EFA               	movwf	pclath,c
  6206   000B7E  51F5               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
  6207   000B80  6EFD               	movwf	tosl,c
  6208   000B82  51F6               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
  6209   000B84  6EFE               	movwf	tosh,c
  6210   000B86  6AFF               	clrf	tosu,c
  6211   000B88  50FA               	movf	pclath,w,c
  6212   000B8A  0012               	return		;indir
  6213   000B8C                     i2u161_49:
  6214   000B8C                     i2l2760:
  6215                           
  6216                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  6217   000B8C  0EB3               	movlw	low _eusart1RxStatusBuffer
  6218   000B8E  2430               	addwf	_eusart1RxHead^0,w,c	;volatile
  6219   000B90  6ED9               	movwf	fsr2l,c
  6220   000B92  6ADA               	clrf	fsr2h,c
  6221   000B94  0E00               	movlw	high _eusart1RxStatusBuffer
  6222   000B96  22DA               	addwfc	fsr2h,f,c
  6223   000B98  50DF               	movf	indf2,w,c
  6224   000B9A  B4D8               	btfsc	status,2,c
  6225   000B9C  EFD2  F005         	goto	i2u162_41
  6226   000BA0  EFD4  F005         	goto	i2u162_40
  6227   000BA4                     i2u162_41:
  6228   000BA4  EFE3  F005         	goto	i2l2764
  6229   000BA8                     i2u162_40:
  6230   000BA8                     
  6231                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
  6232   000BA8  D802               	call	i2u163_48
  6233   000BAA  EFE1  F005         	goto	i2u163_49
  6234   000BAE                     i2u163_48:
  6235   000BAE  0005               	push	
  6236   000BB0  6EFA               	movwf	pclath,c
  6237   000BB2  0100               	movlb	0	; () banked
  6238   000BB4  51F3               	movf	_EUSART1_ErrorHandler& (0+255),w,b
  6239   000BB6  6EFD               	movwf	tosl,c
  6240   000BB8  51F4               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
  6241   000BBA  6EFE               	movwf	tosh,c
  6242   000BBC  6AFF               	clrf	tosu,c
  6243   000BBE  50FA               	movf	pclath,w,c
  6244   000BC0  0012               	return		;indir
  6245   000BC2                     i2u163_49:
  6246                           
  6247                           ;mcc_generated_files/eusart1.c: 242:     } else {
  6248   000BC2  EFE5  F005         	goto	i2l271
  6249   000BC6                     i2l2764:
  6250                           
  6251                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
  6252   000BC6  EC8D  F009         	call	_EUSART1_RxDataHandler	;wreg free
  6253   000BCA                     i2l271:
  6254   000BCA  0012               	return		;funcret
  6255   000BCC                     __end_of_EUSART1_Receive_ISR:
  6256                           	callstack 0
  6257                           
  6258 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  6259 ;; Defined at:
  6260 ;;		line 261 in file "mcc_generated_files/eusart1.c"
  6261 ;; Parameters:    Size  Location     Type
  6262 ;;		None
  6263 ;; Auto vars:     Size  Location     Type
  6264 ;;		None
  6265 ;; Return value:  Size  Location     Type
  6266 ;;                  1    wreg      void 
  6267 ;; Registers used:
  6268 ;;		None
  6269 ;; Tracked objects:
  6270 ;;		On entry : 0/0
  6271 ;;		On exit  : 0/0
  6272 ;;		Unchanged: 0/0
  6273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6278 ;;Total ram usage:        0 bytes
  6279 ;; Hardware stack levels used: 1
  6280 ;; This function calls:
  6281 ;;		Nothing
  6282 ;; This function is called by:
  6283 ;;		_EUSART1_Initialize
  6284 ;;		_EUSART1_Receive_ISR
  6285 ;; This function uses a non-reentrant model
  6286 ;;
  6287                           
  6288                           	psect	text55
  6289   0014CC                     __ptext55:
  6290                           	callstack 0
  6291   0014CC                     _EUSART1_DefaultOverrunErrorHandler:
  6292                           	callstack 18
  6293   0014CC                     
  6294                           ;mcc_generated_files/eusart1.c: 264:     RCSTA1bits.CREN = 0;
  6295   0014CC  98AB               	bcf	171,4,c	;volatile
  6296                           
  6297                           ;mcc_generated_files/eusart1.c: 265:     RCSTA1bits.CREN = 1;
  6298   0014CE  88AB               	bsf	171,4,c	;volatile
  6299   0014D0  0012               	return		;funcret
  6300   0014D2                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  6301                           	callstack 0
  6302                           
  6303 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  6304 ;; Defined at:
  6305 ;;		line 259 in file "mcc_generated_files/eusart1.c"
  6306 ;; Parameters:    Size  Location     Type
  6307 ;;		None
  6308 ;; Auto vars:     Size  Location     Type
  6309 ;;		None
  6310 ;; Return value:  Size  Location     Type
  6311 ;;                  1    wreg      void 
  6312 ;; Registers used:
  6313 ;;		None
  6314 ;; Tracked objects:
  6315 ;;		On entry : 0/0
  6316 ;;		On exit  : 0/0
  6317 ;;		Unchanged: 0/0
  6318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6323 ;;Total ram usage:        0 bytes
  6324 ;; Hardware stack levels used: 1
  6325 ;; This function calls:
  6326 ;;		Nothing
  6327 ;; This function is called by:
  6328 ;;		_EUSART1_Initialize
  6329 ;;		_EUSART1_Receive_ISR
  6330 ;; This function uses a non-reentrant model
  6331 ;;
  6332                           
  6333                           	psect	text56
  6334   0014F2                     __ptext56:
  6335                           	callstack 0
  6336   0014F2                     _EUSART1_DefaultFramingErrorHandler:
  6337                           	callstack 18
  6338   0014F2  0012               	return		;funcret
  6339   0014F4                     __end_of_EUSART1_DefaultFramingErrorHandler:
  6340                           	callstack 0
  6341                           
  6342 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  6343 ;; Defined at:
  6344 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  6345 ;; Parameters:    Size  Location     Type
  6346 ;;		None
  6347 ;; Auto vars:     Size  Location     Type
  6348 ;;		None
  6349 ;; Return value:  Size  Location     Type
  6350 ;;                  1    wreg      void 
  6351 ;; Registers used:
  6352 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6353 ;; Tracked objects:
  6354 ;;		On entry : 0/0
  6355 ;;		On exit  : 0/0
  6356 ;;		Unchanged: 0/0
  6357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6362 ;;Total ram usage:        0 bytes
  6363 ;; Hardware stack levels used: 1
  6364 ;; Hardware stack levels required when called: 1
  6365 ;; This function calls:
  6366 ;;		_EUSART1_RxDataHandler
  6367 ;; This function is called by:
  6368 ;;		_EUSART1_Initialize
  6369 ;;		_EUSART1_Receive_ISR
  6370 ;; This function uses a non-reentrant model
  6371 ;;
  6372                           
  6373                           	psect	text57
  6374   0014D2                     __ptext57:
  6375                           	callstack 0
  6376   0014D2                     _EUSART1_DefaultErrorHandler:
  6377                           	callstack 17
  6378   0014D2                     
  6379                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
  6380   0014D2  EC8D  F009         	call	_EUSART1_RxDataHandler	;wreg free
  6381   0014D6  0012               	return		;funcret
  6382   0014D8                     __end_of_EUSART1_DefaultErrorHandler:
  6383                           	callstack 0
  6384                           
  6385 ;; *************** function _EUSART1_RxDataHandler *****************
  6386 ;; Defined at:
  6387 ;;		line 249 in file "mcc_generated_files/eusart1.c"
  6388 ;; Parameters:    Size  Location     Type
  6389 ;;		None
  6390 ;; Auto vars:     Size  Location     Type
  6391 ;;		None
  6392 ;; Return value:  Size  Location     Type
  6393 ;;                  1    wreg      void 
  6394 ;; Registers used:
  6395 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6396 ;; Tracked objects:
  6397 ;;		On entry : 0/0
  6398 ;;		On exit  : 0/0
  6399 ;;		Unchanged: 0/0
  6400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6405 ;;Total ram usage:        0 bytes
  6406 ;; Hardware stack levels used: 1
  6407 ;; This function calls:
  6408 ;;		Nothing
  6409 ;; This function is called by:
  6410 ;;		_EUSART1_Receive_ISR
  6411 ;;		_EUSART1_DefaultErrorHandler
  6412 ;; This function uses a non-reentrant model
  6413 ;;
  6414                           
  6415                           	psect	text58
  6416   00131A                     __ptext58:
  6417                           	callstack 0
  6418   00131A                     _EUSART1_RxDataHandler:
  6419                           	callstack 18
  6420   00131A                     
  6421                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  6422   00131A  0EBB               	movlw	low _eusart1RxBuffer
  6423   00131C  2430               	addwf	_eusart1RxHead^0,w,c	;volatile
  6424   00131E  6ED9               	movwf	fsr2l,c
  6425   001320  6ADA               	clrf	fsr2h,c
  6426   001322  0E00               	movlw	high _eusart1RxBuffer
  6427   001324  22DA               	addwfc	fsr2h,f,c
  6428   001326  CFAE FFDF          	movff	4014,indf2	;volatile
  6429   00132A  2A30               	incf	_eusart1RxHead^0,f,c	;volatile
  6430   00132C                     
  6431                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  6432   00132C  0E07               	movlw	7
  6433   00132E  6430               	cpfsgt	_eusart1RxHead^0,c	;volatile
  6434   001330  EF9C  F009         	goto	i2u135_41
  6435   001334  EF9E  F009         	goto	i2u135_40
  6436   001338                     i2u135_41:
  6437   001338  EFA0  F009         	goto	i2l2510
  6438   00133C                     i2u135_40:
  6439   00133C                     
  6440                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
  6441   00133C  0E00               	movlw	0
  6442   00133E  6E30               	movwf	_eusart1RxHead^0,c	;volatile
  6443   001340                     i2l2510:
  6444                           
  6445                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
  6446   001340  2A2E               	incf	_eusart1RxCount^0,f,c	;volatile
  6447   001342  0012               	return		;funcret
  6448   001344                     __end_of_EUSART1_RxDataHandler:
  6449                           	callstack 0
  6450                           
  6451 ;; *************** function _ADC_ISR *****************
  6452 ;; Defined at:
  6453 ;;		line 140 in file "mcc_generated_files/adc.c"
  6454 ;; Parameters:    Size  Location     Type
  6455 ;;		None
  6456 ;; Auto vars:     Size  Location     Type
  6457 ;;		None
  6458 ;; Return value:  Size  Location     Type
  6459 ;;                  1    wreg      void 
  6460 ;; Registers used:
  6461 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6462 ;; Tracked objects:
  6463 ;;		On entry : 0/0
  6464 ;;		On exit  : 0/0
  6465 ;;		Unchanged: 0/0
  6466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6471 ;;Total ram usage:        0 bytes
  6472 ;; Hardware stack levels used: 1
  6473 ;; Hardware stack levels required when called: 2
  6474 ;; This function calls:
  6475 ;;		Absolute function
  6476 ;;		_ADC_DefaultInterruptHandler
  6477 ;;		_ADC_MyInterruptHandler
  6478 ;; This function is called by:
  6479 ;;		_INTERRUPT_InterruptManagerHigh
  6480 ;; This function uses a non-reentrant model
  6481 ;;
  6482                           
  6483                           	psect	text59
  6484   001242                     __ptext59:
  6485                           	callstack 0
  6486   001242                     _ADC_ISR:
  6487                           	callstack 17
  6488   001242                     
  6489                           ;mcc_generated_files/adc.c: 143:     PIR1bits.ADIF = 0;
  6490   001242  9C9E               	bcf	158,6,c	;volatile
  6491   001244                     
  6492                           ;mcc_generated_files/adc.c: 145:  if(ADC_InterruptHandler)
  6493   001244  503B               	movf	_ADC_InterruptHandler^0,w,c
  6494   001246  103C               	iorwf	(_ADC_InterruptHandler+1)^0,w,c
  6495   001248  B4D8               	btfsc	status,2,c
  6496   00124A  EF29  F009         	goto	i2u154_41
  6497   00124E  EF2B  F009         	goto	i2u154_40
  6498   001252                     i2u154_41:
  6499   001252  EF37  F009         	goto	i2l119
  6500   001256                     i2u154_40:
  6501   001256                     
  6502                           ;mcc_generated_files/adc.c: 146:     {;mcc_generated_files/adc.c: 147:         ADC_Inter
      +                          ruptHandler();
  6503   001256  D802               	call	i2u155_48
  6504   001258  EF37  F009         	goto	i2u155_49
  6505   00125C                     i2u155_48:
  6506   00125C  0005               	push	
  6507   00125E  6EFA               	movwf	pclath,c
  6508   001260  503B               	movf	_ADC_InterruptHandler^0,w,c
  6509   001262  6EFD               	movwf	tosl,c
  6510   001264  503C               	movf	(_ADC_InterruptHandler+1)^0,w,c
  6511   001266  6EFE               	movwf	tosh,c
  6512   001268  6AFF               	clrf	tosu,c
  6513   00126A  50FA               	movf	pclath,w,c
  6514   00126C  0012               	return		;indir
  6515   00126E                     i2u155_49:
  6516   00126E                     i2l119:
  6517   00126E  0012               	return		;funcret
  6518   001270                     __end_of_ADC_ISR:
  6519                           	callstack 0
  6520                           
  6521 ;; *************** function _ADC_DefaultInterruptHandler *****************
  6522 ;; Defined at:
  6523 ;;		line 155 in file "mcc_generated_files/adc.c"
  6524 ;; Parameters:    Size  Location     Type
  6525 ;;		None
  6526 ;; Auto vars:     Size  Location     Type
  6527 ;;		None
  6528 ;; Return value:  Size  Location     Type
  6529 ;;                  1    wreg      void 
  6530 ;; Registers used:
  6531 ;;		None
  6532 ;; Tracked objects:
  6533 ;;		On entry : 0/0
  6534 ;;		On exit  : 0/0
  6535 ;;		Unchanged: 0/0
  6536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6541 ;;Total ram usage:        0 bytes
  6542 ;; Hardware stack levels used: 1
  6543 ;; This function calls:
  6544 ;;		Nothing
  6545 ;; This function is called by:
  6546 ;;		_ADC_Initialize
  6547 ;;		_ADC_ISR
  6548 ;; This function uses a non-reentrant model
  6549 ;;
  6550                           
  6551                           	psect	text60
  6552   0014F4                     __ptext60:
  6553                           	callstack 0
  6554   0014F4                     _ADC_DefaultInterruptHandler:
  6555                           	callstack 18
  6556   0014F4  0012               	return		;funcret
  6557   0014F6                     __end_of_ADC_DefaultInterruptHandler:
  6558                           	callstack 0
  6559                           
  6560 ;; *************** function _ADC_MyInterruptHandler *****************
  6561 ;; Defined at:
  6562 ;;		line 68 in file "main.c"
  6563 ;; Parameters:    Size  Location     Type
  6564 ;;		None
  6565 ;; Auto vars:     Size  Location     Type
  6566 ;;		None
  6567 ;; Return value:  Size  Location     Type
  6568 ;;                  1    wreg      void 
  6569 ;; Registers used:
  6570 ;;		wreg, status,2, status,0, cstack
  6571 ;; Tracked objects:
  6572 ;;		On entry : 0/0
  6573 ;;		On exit  : 0/0
  6574 ;;		Unchanged: 0/0
  6575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6580 ;;Total ram usage:        0 bytes
  6581 ;; Hardware stack levels used: 1
  6582 ;; Hardware stack levels required when called: 1
  6583 ;; This function calls:
  6584 ;;		_ADC_GetConversionResult
  6585 ;;		_ADC_SelectChannel
  6586 ;;		___aldiv
  6587 ;;		___lmul
  6588 ;; This function is called by:
  6589 ;;		_main
  6590 ;;		_ADC_ISR
  6591 ;; This function uses a non-reentrant model
  6592 ;;
  6593                           
  6594                           	psect	text61
  6595   000EE6                     __ptext61:
  6596                           	callstack 0
  6597   000EE6                     _ADC_MyInterruptHandler:
  6598                           	callstack 17
  6599   000EE6                     
  6600                           ;main.c: 69:     ADC_SelectChannel(channel_AN0);
  6601   000EE6  0E00               	movlw	0
  6602   000EE8  ECD9  F009         	call	_ADC_SelectChannel
  6603                           
  6604                           ;main.c: 70:     convertedValue = ADC_GetConversionResult();
  6605   000EEC  ECFA  F009         	call	_ADC_GetConversionResult	;wreg free
  6606   000EF0  C001  F028         	movff	?_ADC_GetConversionResult,_convertedValue
  6607   000EF4  C002  F029         	movff	?_ADC_GetConversionResult+1,_convertedValue+1
  6608                           
  6609                           ;main.c: 71:     nivel_agua = (long)convertedValue * 100 / 1023;
  6610   000EF8  C028  F001         	movff	_convertedValue,___lmul@multiplier
  6611   000EFC  C029  F002         	movff	_convertedValue+1,___lmul@multiplier+1
  6612   000F00  6A03               	clrf	(___lmul@multiplier+2)^0,c
  6613   000F02  6A04               	clrf	(___lmul@multiplier+3)^0,c
  6614   000F04  0E64               	movlw	100
  6615   000F06  6E05               	movwf	___lmul@multiplicand^0,c
  6616   000F08  0E00               	movlw	0
  6617   000F0A  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  6618   000F0C  0E00               	movlw	0
  6619   000F0E  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  6620   000F10  0E00               	movlw	0
  6621   000F12  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  6622   000F14  EC3E  F007         	call	___lmul	;wreg free
  6623   000F18  C001  F00D         	movff	?___lmul,___aldiv@dividend
  6624   000F1C  C002  F00E         	movff	?___lmul+1,___aldiv@dividend+1
  6625   000F20  C003  F00F         	movff	?___lmul+2,___aldiv@dividend+2
  6626   000F24  C004  F010         	movff	?___lmul+3,___aldiv@dividend+3
  6627   000F28  0EFF               	movlw	255
  6628   000F2A  6E11               	movwf	___aldiv@divisor^0,c
  6629   000F2C  0E03               	movlw	3
  6630   000F2E  6E12               	movwf	(___aldiv@divisor+1)^0,c
  6631   000F30  0E00               	movlw	0
  6632   000F32  6E13               	movwf	(___aldiv@divisor+2)^0,c
  6633   000F34  0E00               	movlw	0
  6634   000F36  6E14               	movwf	(___aldiv@divisor+3)^0,c
  6635   000F38  EC02  F005         	call	___aldiv	;wreg free
  6636   000F3C  C00D  F0CF         	movff	?___aldiv,_nivel_agua
  6637   000F40  C00E  F0D0         	movff	?___aldiv+1,_nivel_agua+1
  6638   000F44  0012               	return		;funcret
  6639   000F46                     __end_of_ADC_MyInterruptHandler:
  6640                           	callstack 0
  6641                           
  6642 ;; *************** function ___lmul *****************
  6643 ;; Defined at:
  6644 ;;		line 15 in file "G:\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  6645 ;; Parameters:    Size  Location     Type
  6646 ;;  multiplier      4    0[COMRAM] unsigned long 
  6647 ;;  multiplicand    4    4[COMRAM] unsigned long 
  6648 ;; Auto vars:     Size  Location     Type
  6649 ;;  product         4    8[COMRAM] unsigned long 
  6650 ;; Return value:  Size  Location     Type
  6651 ;;                  4    0[COMRAM] unsigned long 
  6652 ;; Registers used:
  6653 ;;		wreg, status,2, status,0
  6654 ;; Tracked objects:
  6655 ;;		On entry : 0/0
  6656 ;;		On exit  : 0/0
  6657 ;;		Unchanged: 0/0
  6658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6659 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6660 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6662 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6663 ;;Total ram usage:       12 bytes
  6664 ;; Hardware stack levels used: 1
  6665 ;; This function calls:
  6666 ;;		Nothing
  6667 ;; This function is called by:
  6668 ;;		_ADC_MyInterruptHandler
  6669 ;; This function uses a non-reentrant model
  6670 ;;
  6671                           
  6672                           	psect	text62
  6673   000E7C                     __ptext62:
  6674                           	callstack 0
  6675   000E7C                     ___lmul:
  6676                           	callstack 17
  6677   000E7C  0E00               	movlw	0
  6678   000E7E  6E09               	movwf	___lmul@product^0,c
  6679   000E80  0E00               	movlw	0
  6680   000E82  6E0A               	movwf	(___lmul@product+1)^0,c
  6681   000E84  0E00               	movlw	0
  6682   000E86  6E0B               	movwf	(___lmul@product+2)^0,c
  6683   000E88  0E00               	movlw	0
  6684   000E8A  6E0C               	movwf	(___lmul@product+3)^0,c
  6685   000E8C                     i2l2522:
  6686   000E8C  A001               	btfss	___lmul@multiplier^0,0,c
  6687   000E8E  EF4B  F007         	goto	i2u136_41
  6688   000E92  EF4D  F007         	goto	i2u136_40
  6689   000E96                     i2u136_41:
  6690   000E96  EF55  F007         	goto	i2l2526
  6691   000E9A                     i2u136_40:
  6692   000E9A  5005               	movf	___lmul@multiplicand^0,w,c
  6693   000E9C  2609               	addwf	___lmul@product^0,f,c
  6694   000E9E  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  6695   000EA0  220A               	addwfc	(___lmul@product+1)^0,f,c
  6696   000EA2  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  6697   000EA4  220B               	addwfc	(___lmul@product+2)^0,f,c
  6698   000EA6  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  6699   000EA8  220C               	addwfc	(___lmul@product+3)^0,f,c
  6700   000EAA                     i2l2526:
  6701   000EAA  90D8               	bcf	status,0,c
  6702   000EAC  3605               	rlcf	___lmul@multiplicand^0,f,c
  6703   000EAE  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  6704   000EB0  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  6705   000EB2  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  6706   000EB4  90D8               	bcf	status,0,c
  6707   000EB6  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  6708   000EB8  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  6709   000EBA  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  6710   000EBC  3201               	rrcf	___lmul@multiplier^0,f,c
  6711   000EBE  5001               	movf	___lmul@multiplier^0,w,c
  6712   000EC0  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  6713   000EC2  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  6714   000EC4  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  6715   000EC6  A4D8               	btfss	status,2,c
  6716   000EC8  EF68  F007         	goto	i2u137_41
  6717   000ECC  EF6A  F007         	goto	i2u137_40
  6718   000ED0                     i2u137_41:
  6719   000ED0  EF46  F007         	goto	i2l2522
  6720   000ED4                     i2u137_40:
  6721   000ED4  C009  F001         	movff	___lmul@product,?___lmul
  6722   000ED8  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  6723   000EDC  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  6724   000EE0  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  6725   000EE4  0012               	return		;funcret
  6726   000EE6                     __end_of___lmul:
  6727                           	callstack 0
  6728                           
  6729 ;; *************** function ___aldiv *****************
  6730 ;; Defined at:
  6731 ;;		line 7 in file "G:\Microchip\xc8\v2.40\pic\sources\c99\common\aldiv.c"
  6732 ;; Parameters:    Size  Location     Type
  6733 ;;  dividend        4   12[COMRAM] long 
  6734 ;;  divisor         4   16[COMRAM] long 
  6735 ;; Auto vars:     Size  Location     Type
  6736 ;;  quotient        4   22[COMRAM] long 
  6737 ;;  sign            1   21[COMRAM] unsigned char 
  6738 ;;  counter         1   20[COMRAM] unsigned char 
  6739 ;; Return value:  Size  Location     Type
  6740 ;;                  4   12[COMRAM] long 
  6741 ;; Registers used:
  6742 ;;		wreg, status,2, status,0
  6743 ;; Tracked objects:
  6744 ;;		On entry : 0/0
  6745 ;;		On exit  : 0/0
  6746 ;;		Unchanged: 0/0
  6747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6748 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6749 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6751 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6752 ;;Total ram usage:       14 bytes
  6753 ;; Hardware stack levels used: 1
  6754 ;; This function calls:
  6755 ;;		Nothing
  6756 ;; This function is called by:
  6757 ;;		_ADC_MyInterruptHandler
  6758 ;; This function uses a non-reentrant model
  6759 ;;
  6760                           
  6761                           	psect	text63
  6762   000A04                     __ptext63:
  6763                           	callstack 0
  6764   000A04                     ___aldiv:
  6765                           	callstack 17
  6766   000A04  0E00               	movlw	0
  6767   000A06  6E16               	movwf	___aldiv@sign^0,c
  6768   000A08  BE14               	btfsc	(___aldiv@divisor+3)^0,7,c
  6769   000A0A  EF0B  F005         	goto	i2u138_40
  6770   000A0E  EF09  F005         	goto	i2u138_41
  6771   000A12                     i2u138_41:
  6772   000A12  EF15  F005         	goto	i2l2538
  6773   000A16                     i2u138_40:
  6774   000A16  1E14               	comf	(___aldiv@divisor+3)^0,f,c
  6775   000A18  1E13               	comf	(___aldiv@divisor+2)^0,f,c
  6776   000A1A  1E12               	comf	(___aldiv@divisor+1)^0,f,c
  6777   000A1C  6C11               	negf	___aldiv@divisor^0,c
  6778   000A1E  0E00               	movlw	0
  6779   000A20  2212               	addwfc	(___aldiv@divisor+1)^0,f,c
  6780   000A22  2213               	addwfc	(___aldiv@divisor+2)^0,f,c
  6781   000A24  2214               	addwfc	(___aldiv@divisor+3)^0,f,c
  6782   000A26  0E01               	movlw	1
  6783   000A28  6E16               	movwf	___aldiv@sign^0,c
  6784   000A2A                     i2l2538:
  6785   000A2A  BE10               	btfsc	(___aldiv@dividend+3)^0,7,c
  6786   000A2C  EF1C  F005         	goto	i2u139_40
  6787   000A30  EF1A  F005         	goto	i2u139_41
  6788   000A34                     i2u139_41:
  6789   000A34  EF26  F005         	goto	i2l2544
  6790   000A38                     i2u139_40:
  6791   000A38  1E10               	comf	(___aldiv@dividend+3)^0,f,c
  6792   000A3A  1E0F               	comf	(___aldiv@dividend+2)^0,f,c
  6793   000A3C  1E0E               	comf	(___aldiv@dividend+1)^0,f,c
  6794   000A3E  6C0D               	negf	___aldiv@dividend^0,c
  6795   000A40  0E00               	movlw	0
  6796   000A42  220E               	addwfc	(___aldiv@dividend+1)^0,f,c
  6797   000A44  220F               	addwfc	(___aldiv@dividend+2)^0,f,c
  6798   000A46  2210               	addwfc	(___aldiv@dividend+3)^0,f,c
  6799   000A48  0E01               	movlw	1
  6800   000A4A  1A16               	xorwf	___aldiv@sign^0,f,c
  6801   000A4C                     i2l2544:
  6802   000A4C  0E00               	movlw	0
  6803   000A4E  6E17               	movwf	___aldiv@quotient^0,c
  6804   000A50  0E00               	movlw	0
  6805   000A52  6E18               	movwf	(___aldiv@quotient+1)^0,c
  6806   000A54  0E00               	movlw	0
  6807   000A56  6E19               	movwf	(___aldiv@quotient+2)^0,c
  6808   000A58  0E00               	movlw	0
  6809   000A5A  6E1A               	movwf	(___aldiv@quotient+3)^0,c
  6810   000A5C  5011               	movf	___aldiv@divisor^0,w,c
  6811   000A5E  1012               	iorwf	(___aldiv@divisor+1)^0,w,c
  6812   000A60  1013               	iorwf	(___aldiv@divisor+2)^0,w,c
  6813   000A62  1014               	iorwf	(___aldiv@divisor+3)^0,w,c
  6814   000A64  B4D8               	btfsc	status,2,c
  6815   000A66  EF37  F005         	goto	i2u140_41
  6816   000A6A  EF39  F005         	goto	i2u140_40
  6817   000A6E                     i2u140_41:
  6818   000A6E  EF6F  F005         	goto	i2l2566
  6819   000A72                     i2u140_40:
  6820   000A72  0E01               	movlw	1
  6821   000A74  6E15               	movwf	___aldiv@counter^0,c
  6822   000A76  EF43  F005         	goto	i2l2552
  6823   000A7A                     i2l2550:
  6824   000A7A  90D8               	bcf	status,0,c
  6825   000A7C  3611               	rlcf	___aldiv@divisor^0,f,c
  6826   000A7E  3612               	rlcf	(___aldiv@divisor+1)^0,f,c
  6827   000A80  3613               	rlcf	(___aldiv@divisor+2)^0,f,c
  6828   000A82  3614               	rlcf	(___aldiv@divisor+3)^0,f,c
  6829   000A84  2A15               	incf	___aldiv@counter^0,f,c
  6830   000A86                     i2l2552:
  6831   000A86  AE14               	btfss	(___aldiv@divisor+3)^0,7,c
  6832   000A88  EF48  F005         	goto	i2u141_41
  6833   000A8C  EF4A  F005         	goto	i2u141_40
  6834   000A90                     i2u141_41:
  6835   000A90  EF3D  F005         	goto	i2l2550
  6836   000A94                     i2u141_40:
  6837   000A94                     i2l2554:
  6838   000A94  90D8               	bcf	status,0,c
  6839   000A96  3617               	rlcf	___aldiv@quotient^0,f,c
  6840   000A98  3618               	rlcf	(___aldiv@quotient+1)^0,f,c
  6841   000A9A  3619               	rlcf	(___aldiv@quotient+2)^0,f,c
  6842   000A9C  361A               	rlcf	(___aldiv@quotient+3)^0,f,c
  6843   000A9E  5011               	movf	___aldiv@divisor^0,w,c
  6844   000AA0  5C0D               	subwf	___aldiv@dividend^0,w,c
  6845   000AA2  5012               	movf	(___aldiv@divisor+1)^0,w,c
  6846   000AA4  580E               	subwfb	(___aldiv@dividend+1)^0,w,c
  6847   000AA6  5013               	movf	(___aldiv@divisor+2)^0,w,c
  6848   000AA8  580F               	subwfb	(___aldiv@dividend+2)^0,w,c
  6849   000AAA  5014               	movf	(___aldiv@divisor+3)^0,w,c
  6850   000AAC  5810               	subwfb	(___aldiv@dividend+3)^0,w,c
  6851   000AAE  A0D8               	btfss	status,0,c
  6852   000AB0  EF5C  F005         	goto	i2u142_41
  6853   000AB4  EF5E  F005         	goto	i2u142_40
  6854   000AB8                     i2u142_41:
  6855   000AB8  EF67  F005         	goto	i2l2562
  6856   000ABC                     i2u142_40:
  6857   000ABC  5011               	movf	___aldiv@divisor^0,w,c
  6858   000ABE  5E0D               	subwf	___aldiv@dividend^0,f,c
  6859   000AC0  5012               	movf	(___aldiv@divisor+1)^0,w,c
  6860   000AC2  5A0E               	subwfb	(___aldiv@dividend+1)^0,f,c
  6861   000AC4  5013               	movf	(___aldiv@divisor+2)^0,w,c
  6862   000AC6  5A0F               	subwfb	(___aldiv@dividend+2)^0,f,c
  6863   000AC8  5014               	movf	(___aldiv@divisor+3)^0,w,c
  6864   000ACA  5A10               	subwfb	(___aldiv@dividend+3)^0,f,c
  6865   000ACC  8017               	bsf	___aldiv@quotient^0,0,c
  6866   000ACE                     i2l2562:
  6867   000ACE  90D8               	bcf	status,0,c
  6868   000AD0  3214               	rrcf	(___aldiv@divisor+3)^0,f,c
  6869   000AD2  3213               	rrcf	(___aldiv@divisor+2)^0,f,c
  6870   000AD4  3212               	rrcf	(___aldiv@divisor+1)^0,f,c
  6871   000AD6  3211               	rrcf	___aldiv@divisor^0,f,c
  6872   000AD8  2E15               	decfsz	___aldiv@counter^0,f,c
  6873   000ADA  EF4A  F005         	goto	i2l2554
  6874   000ADE                     i2l2566:
  6875   000ADE  5016               	movf	___aldiv@sign^0,w,c
  6876   000AE0  B4D8               	btfsc	status,2,c
  6877   000AE2  EF75  F005         	goto	i2u143_41
  6878   000AE6  EF77  F005         	goto	i2u143_40
  6879   000AEA                     i2u143_41:
  6880   000AEA  EF7F  F005         	goto	i2l2570
  6881   000AEE                     i2u143_40:
  6882   000AEE  1E1A               	comf	(___aldiv@quotient+3)^0,f,c
  6883   000AF0  1E19               	comf	(___aldiv@quotient+2)^0,f,c
  6884   000AF2  1E18               	comf	(___aldiv@quotient+1)^0,f,c
  6885   000AF4  6C17               	negf	___aldiv@quotient^0,c
  6886   000AF6  0E00               	movlw	0
  6887   000AF8  2218               	addwfc	(___aldiv@quotient+1)^0,f,c
  6888   000AFA  2219               	addwfc	(___aldiv@quotient+2)^0,f,c
  6889   000AFC  221A               	addwfc	(___aldiv@quotient+3)^0,f,c
  6890   000AFE                     i2l2570:
  6891   000AFE  C017  F00D         	movff	___aldiv@quotient,?___aldiv
  6892   000B02  C018  F00E         	movff	___aldiv@quotient+1,?___aldiv+1
  6893   000B06  C019  F00F         	movff	___aldiv@quotient+2,?___aldiv+2
  6894   000B0A  C01A  F010         	movff	___aldiv@quotient+3,?___aldiv+3
  6895   000B0E  0012               	return		;funcret
  6896   000B10                     __end_of___aldiv:
  6897                           	callstack 0
  6898                           
  6899 ;; *************** function _ADC_SelectChannel *****************
  6900 ;; Defined at:
  6901 ;;		line 88 in file "mcc_generated_files/adc.c"
  6902 ;; Parameters:    Size  Location     Type
  6903 ;;  channel         1    wreg     enum E6010
  6904 ;; Auto vars:     Size  Location     Type
  6905 ;;  channel         1    1[COMRAM] enum E6010
  6906 ;; Return value:  Size  Location     Type
  6907 ;;                  1    wreg      void 
  6908 ;; Registers used:
  6909 ;;		wreg, status,2, status,0
  6910 ;; Tracked objects:
  6911 ;;		On entry : 0/0
  6912 ;;		On exit  : 0/0
  6913 ;;		Unchanged: 0/0
  6914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6916 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6917 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6918 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6919 ;;Total ram usage:        2 bytes
  6920 ;; Hardware stack levels used: 1
  6921 ;; This function calls:
  6922 ;;		Nothing
  6923 ;; This function is called by:
  6924 ;;		_ADC_MyInterruptHandler
  6925 ;;		_TMR0_MyInterruptHandler
  6926 ;; This function uses a non-reentrant model
  6927 ;;
  6928                           
  6929                           	psect	text64
  6930   0013B2                     __ptext64:
  6931                           	callstack 0
  6932   0013B2                     _ADC_SelectChannel:
  6933                           	callstack 17
  6934                           
  6935                           ;incstack = 0
  6936                           ;ADC_SelectChannel@channel stored from wreg
  6937   0013B2  6E02               	movwf	ADC_SelectChannel@channel^0,c
  6938   0013B4                     
  6939                           ;mcc_generated_files/adc.c: 88: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 89: {;mcc_generated_files/adc.c: 91:     ADCON0bits.CHS = channel;
  6940   0013B4  C002  F001         	movff	ADC_SelectChannel@channel,??_ADC_SelectChannel
  6941   0013B8  4601               	rlncf	??_ADC_SelectChannel^0,f,c
  6942   0013BA  4601               	rlncf	??_ADC_SelectChannel^0,f,c
  6943   0013BC  50C2               	movf	194,w,c	;volatile
  6944   0013BE  1801               	xorwf	??_ADC_SelectChannel^0,w,c
  6945   0013C0  0B83               	andlw	-125
  6946   0013C2  1801               	xorwf	??_ADC_SelectChannel^0,w,c
  6947   0013C4  6EC2               	movwf	194,c	;volatile
  6948   0013C6                     
  6949                           ;mcc_generated_files/adc.c: 93:     ADCON0bits.ADON = 1;
  6950   0013C6  80C2               	bsf	194,0,c	;volatile
  6951   0013C8  0012               	return		;funcret
  6952   0013CA                     __end_of_ADC_SelectChannel:
  6953                           	callstack 0
  6954                           
  6955 ;; *************** function _ADC_GetConversionResult *****************
  6956 ;; Defined at:
  6957 ;;		line 109 in file "mcc_generated_files/adc.c"
  6958 ;; Parameters:    Size  Location     Type
  6959 ;;		None
  6960 ;; Auto vars:     Size  Location     Type
  6961 ;;		None
  6962 ;; Return value:  Size  Location     Type
  6963 ;;                  2    0[COMRAM] unsigned short 
  6964 ;; Registers used:
  6965 ;;		wreg, status,2, status,0
  6966 ;; Tracked objects:
  6967 ;;		On entry : 0/0
  6968 ;;		On exit  : 0/0
  6969 ;;		Unchanged: 0/0
  6970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6971 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6973 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6974 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6975 ;;Total ram usage:        4 bytes
  6976 ;; Hardware stack levels used: 1
  6977 ;; This function calls:
  6978 ;;		Nothing
  6979 ;; This function is called by:
  6980 ;;		_ADC_MyInterruptHandler
  6981 ;; This function uses a non-reentrant model
  6982 ;;
  6983                           
  6984                           	psect	text65
  6985   0013F4                     __ptext65:
  6986                           	callstack 0
  6987   0013F4                     _ADC_GetConversionResult:
  6988                           	callstack 17
  6989   0013F4                     
  6990                           ;mcc_generated_files/adc.c: 112:      return ((adc_result_t)((ADRESH << 8) + ADRESL));
  6991   0013F4  50C4               	movf	196,w,c	;volatile
  6992   0013F6  6E04               	movwf	(??_ADC_GetConversionResult+1)^0,c
  6993   0013F8  6A03               	clrf	??_ADC_GetConversionResult^0,c
  6994   0013FA  50C3               	movf	195,w,c	;volatile
  6995   0013FC  2403               	addwf	??_ADC_GetConversionResult^0,w,c
  6996   0013FE  6E01               	movwf	?_ADC_GetConversionResult^0,c
  6997   001400  0E00               	movlw	0
  6998   001402  2004               	addwfc	(??_ADC_GetConversionResult+1)^0,w,c
  6999   001404  6E02               	movwf	(?_ADC_GetConversionResult+1)^0,c
  7000   001406  0012               	return		;funcret
  7001   001408                     __end_of_ADC_GetConversionResult:
  7002                           	callstack 0
  7003                           
  7004                           	psect	text66
  7005   000000                     __ptext66:
  7006                           	callstack 0
  7007   000000                     
  7008                           	psect	rparam
  7009   000000                     
  7010                           	psect	temp
  7011   000041                     btemp:
  7012                           	callstack 0
  7013   000041                     	ds	1
  7014   000000                     int$flags	set	btemp
  7015   000000                     wtemp8	set	btemp+1
  7016   000000                     ttemp5	set	btemp+1
  7017   000000                     ttemp6	set	btemp+4
  7018   000000                     ttemp7	set	btemp+8
  7019                           
  7020                           	psect	idloc
  7021                           
  7022                           ;Config register IDLOC0 @ 0x200000
  7023                           ;	unspecified, using default values
  7024   200000                     	org	2097152
  7025   200000  FF                 	db	255
  7026                           
  7027                           ;Config register IDLOC1 @ 0x200001
  7028                           ;	unspecified, using default values
  7029   200001                     	org	2097153
  7030   200001  FF                 	db	255
  7031                           
  7032                           ;Config register IDLOC2 @ 0x200002
  7033                           ;	unspecified, using default values
  7034   200002                     	org	2097154
  7035   200002  FF                 	db	255
  7036                           
  7037                           ;Config register IDLOC3 @ 0x200003
  7038                           ;	unspecified, using default values
  7039   200003                     	org	2097155
  7040   200003  FF                 	db	255
  7041                           
  7042                           ;Config register IDLOC4 @ 0x200004
  7043                           ;	unspecified, using default values
  7044   200004                     	org	2097156
  7045   200004  FF                 	db	255
  7046                           
  7047                           ;Config register IDLOC5 @ 0x200005
  7048                           ;	unspecified, using default values
  7049   200005                     	org	2097157
  7050   200005  FF                 	db	255
  7051                           
  7052                           ;Config register IDLOC6 @ 0x200006
  7053                           ;	unspecified, using default values
  7054   200006                     	org	2097158
  7055   200006  FF                 	db	255
  7056                           
  7057                           ;Config register IDLOC7 @ 0x200007
  7058                           ;	unspecified, using default values
  7059   200007                     	org	2097159
  7060   200007  FF                 	db	255
  7061                           
  7062                           	psect	config
  7063                           
  7064                           ; Padding undefined space
  7065   300000                     	org	3145728
  7066   300000  FF                 	db	255
  7067                           
  7068                           ;Config register CONFIG1H @ 0x300001
  7069                           ;	Oscillator Selection bits
  7070                           ;	FOSC = ECMP, EC oscillator, CLKOUT function on OSC2 (medium power, 500 kHz-16 MHz)
  7071                           ;	4X PLL Enable
  7072                           ;	PLLCFG = OFF, Oscillator used directly
  7073                           ;	Primary clock enable bit
  7074                           ;	PRICLKEN = ON, Primary clock is always enabled
  7075                           ;	Fail-Safe Clock Monitor Enable bit
  7076                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7077                           ;	Internal/External Oscillator Switchover bit
  7078                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7079   300001                     	org	3145729
  7080   300001  2A                 	db	42
  7081                           
  7082                           ;Config register CONFIG2L @ 0x300002
  7083                           ;	Power-up Timer Enable bit
  7084                           ;	PWRTEN = OFF, Power up timer disabled
  7085                           ;	Brown-out Reset Enable bits
  7086                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  7087                           ;	Brown Out Reset Voltage bits
  7088                           ;	BORV = 190, VBOR set to 1.90 V nominal
  7089   300002                     	org	3145730
  7090   300002  1F                 	db	31
  7091                           
  7092                           ;Config register CONFIG2H @ 0x300003
  7093                           ;	Watchdog Timer Enable bits
  7094                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  7095                           ;	Watchdog Timer Postscale Select bits
  7096                           ;	WDTPS = 32768, 1:32768
  7097   300003                     	org	3145731
  7098   300003  3C                 	db	60
  7099                           
  7100                           ; Padding undefined space
  7101   300004                     	org	3145732
  7102   300004  FF                 	db	255
  7103                           
  7104                           ;Config register CONFIG3H @ 0x300005
  7105                           ;	CCP2 MUX bit
  7106                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  7107                           ;	PORTB A/D Enable bit
  7108                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  7109                           ;	P3A/CCP3 Mux bit
  7110                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  7111                           ;	HFINTOSC Fast Start-up
  7112                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  7113                           ;	Timer3 Clock input mux bit
  7114                           ;	T3CMX = PORTC0, T3CKI is on RC0
  7115                           ;	ECCP2 B output mux bit
  7116                           ;	P2BMX = PORTD2, P2B is on RD2
  7117                           ;	MCLR Pin Enable bit
  7118                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  7119   300005                     	org	3145733
  7120   300005  BF                 	db	191
  7121                           
  7122                           ;Config register CONFIG4L @ 0x300006
  7123                           ;	Stack Full/Underflow Reset Enable bit
  7124                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7125                           ;	Single-Supply ICSP Enable bit
  7126                           ;	LVP = OFF, Single-Supply ICSP disabled
  7127                           ;	Extended Instruction Set Enable bit
  7128                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7129                           ;	Background Debug
  7130                           ;	DEBUG = OFF, Disabled
  7131   300006                     	org	3145734
  7132   300006  81                 	db	129
  7133                           
  7134                           ; Padding undefined space
  7135   300007                     	org	3145735
  7136   300007  FF                 	db	255
  7137                           
  7138                           ;Config register CONFIG5L @ 0x300008
  7139                           ;	Code Protection Block 0
  7140                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  7141                           ;	Code Protection Block 1
  7142                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  7143                           ;	Code Protection Block 2
  7144                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  7145                           ;	Code Protection Block 3
  7146                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  7147   300008                     	org	3145736
  7148   300008  0F                 	db	15
  7149                           
  7150                           ;Config register CONFIG5H @ 0x300009
  7151                           ;	Boot Block Code Protection bit
  7152                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  7153                           ;	Data EEPROM Code Protection bit
  7154                           ;	CPD = OFF, Data EEPROM not code-protected
  7155   300009                     	org	3145737
  7156   300009  C0                 	db	192
  7157                           
  7158                           ;Config register CONFIG6L @ 0x30000A
  7159                           ;	Write Protection Block 0
  7160                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  7161                           ;	Write Protection Block 1
  7162                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  7163                           ;	Write Protection Block 2
  7164                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  7165                           ;	Write Protection Block 3
  7166                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  7167   30000A                     	org	3145738
  7168   30000A  0F                 	db	15
  7169                           
  7170                           ;Config register CONFIG6H @ 0x30000B
  7171                           ;	Configuration Register Write Protection bit
  7172                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  7173                           ;	Boot Block Write Protection bit
  7174                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  7175                           ;	Data EEPROM Write Protection bit
  7176                           ;	WRTD = OFF, Data EEPROM not write-protected
  7177   30000B                     	org	3145739
  7178   30000B  E0                 	db	224
  7179                           
  7180                           ;Config register CONFIG7L @ 0x30000C
  7181                           ;	Table Read Protection Block 0
  7182                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  7183                           ;	Table Read Protection Block 1
  7184                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  7185                           ;	Table Read Protection Block 2
  7186                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  7187                           ;	Table Read Protection Block 3
  7188                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  7189   30000C                     	org	3145740
  7190   30000C  0F                 	db	15
  7191                           
  7192                           ;Config register CONFIG7H @ 0x30000D
  7193                           ;	Boot Block Table Read Protection bit
  7194                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  7195   30000D                     	org	3145741
  7196   30000D  40                 	db	64
  7197                           tosu	equ	0xFFF
  7198                           tosh	equ	0xFFE
  7199                           tosl	equ	0xFFD
  7200                           stkptr	equ	0xFFC
  7201                           pclatu	equ	0xFFB
  7202                           pclath	equ	0xFFA
  7203                           pcl	equ	0xFF9
  7204                           tblptru	equ	0xFF8
  7205                           tblptrh	equ	0xFF7
  7206                           tblptrl	equ	0xFF6
  7207                           tablat	equ	0xFF5
  7208                           prodh	equ	0xFF4
  7209                           prodl	equ	0xFF3
  7210                           indf0	equ	0xFEF
  7211                           postinc0	equ	0xFEE
  7212                           postdec0	equ	0xFED
  7213                           preinc0	equ	0xFEC
  7214                           plusw0	equ	0xFEB
  7215                           fsr0h	equ	0xFEA
  7216                           fsr0l	equ	0xFE9
  7217                           wreg	equ	0xFE8
  7218                           indf1	equ	0xFE7
  7219                           postinc1	equ	0xFE6
  7220                           postdec1	equ	0xFE5
  7221                           preinc1	equ	0xFE4
  7222                           plusw1	equ	0xFE3
  7223                           fsr1h	equ	0xFE2
  7224                           fsr1l	equ	0xFE1
  7225                           bsr	equ	0xFE0
  7226                           indf2	equ	0xFDF
  7227                           postinc2	equ	0xFDE
  7228                           postdec2	equ	0xFDD
  7229                           preinc2	equ	0xFDC
  7230                           plusw2	equ	0xFDB
  7231                           fsr2h	equ	0xFDA
  7232                           fsr2l	equ	0xFD9
  7233                           status	equ	0xFD8

Data Sizes:
    Strings     450
    Constant    4
    Data        4
    BSS         81
    Persistent  23
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     33      64
    BANK0           160     83     160
    BANK1           256     12      12
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2008$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S2008$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 48
		 -> STR_25(CODE[40]), STR_24(CODE[17]), STR_23(CODE[10]), STR_22(CODE[31]), 
		 -> STR_21(CODE[10]), STR_20(CODE[31]), STR_19(CODE[10]), STR_18(CODE[31]), 
		 -> STR_17(CODE[11]), STR_16(CODE[35]), STR_15(CODE[10]), STR_14(CODE[31]), 
		 -> STR_13(CODE[36]), STR_12(CODE[10]), STR_11(CODE[31]), STR_10(CODE[26]), 
		 -> STR_9(CODE[10]), STR_8(CODE[31]), STR_7(CODE[41]), STR_6(CODE[39]), 
		 -> STR_5(CODE[48]), STR_4(CODE[39]), STR_3(CODE[29]), STR_2(CODE[17]), 
		 -> STR_1(CODE[31]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 48
		 -> STR_25(CODE[40]), STR_24(CODE[17]), STR_23(CODE[10]), STR_22(CODE[31]), 
		 -> STR_21(CODE[10]), STR_20(CODE[31]), STR_19(CODE[10]), STR_18(CODE[31]), 
		 -> STR_17(CODE[11]), STR_16(CODE[35]), STR_15(CODE[10]), STR_14(CODE[31]), 
		 -> STR_13(CODE[36]), STR_12(CODE[10]), STR_11(CODE[31]), STR_10(CODE[26]), 
		 -> STR_9(CODE[10]), STR_8(CODE[31]), STR_7(CODE[41]), STR_6(CODE[39]), 
		 -> STR_5(CODE[48]), STR_4(CODE[39]), STR_3(CODE[29]), STR_2(CODE[17]), 
		 -> STR_1(CODE[31]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 48
		 -> STR_25(CODE[40]), STR_24(CODE[17]), STR_23(CODE[10]), STR_22(CODE[31]), 
		 -> STR_21(CODE[10]), STR_20(CODE[31]), STR_19(CODE[10]), STR_18(CODE[31]), 
		 -> STR_17(CODE[11]), STR_16(CODE[35]), STR_15(CODE[10]), STR_14(CODE[31]), 
		 -> STR_13(CODE[36]), STR_12(CODE[10]), STR_11(CODE[31]), STR_10(CODE[26]), 
		 -> STR_9(CODE[10]), STR_8(CODE[31]), STR_7(CODE[41]), STR_6(CODE[39]), 
		 -> STR_5(CODE[48]), STR_4(CODE[39]), STR_3(CODE[29]), STR_2(CODE[17]), 
		 -> STR_1(CODE[31]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2048$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 48
		 -> STR_25(CODE[40]), STR_24(CODE[17]), STR_23(CODE[10]), STR_22(CODE[31]), 
		 -> STR_21(CODE[10]), STR_20(CODE[31]), STR_19(CODE[10]), STR_18(CODE[31]), 
		 -> STR_17(CODE[11]), STR_16(CODE[35]), STR_15(CODE[10]), STR_14(CODE[31]), 
		 -> STR_13(CODE[36]), STR_12(CODE[10]), STR_11(CODE[31]), STR_10(CODE[26]), 
		 -> STR_9(CODE[10]), STR_8(CODE[31]), STR_7(CODE[41]), STR_6(CODE[39]), 
		 -> STR_5(CODE[48]), STR_4(CODE[39]), STR_3(CODE[29]), STR_2(CODE[17]), 
		 -> STR_1(CODE[31]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR1_MyInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR1_MyInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_MyInterruptHandler(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_MyInterruptHandler(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), Absolute function(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), Absolute function(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_MyInterruptHandler(), INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_MyInterruptHandler(), INT0_DefaultInterruptHandler(), Absolute function(), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_MyInterruptHandler(), ADC_DefaultInterruptHandler(), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_MyInterruptHandler(), Absolute function(), ADC_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _dtoa->_pad
    _fputc->_putch
    _putch->_EUSART1_Write
    _abs->___aomod
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ADC_Initialize->_ADC_SetInterruptHandler
    _CheckUSART->_EUSART1_Read
    _CheckUSART->_EUSART1_Write

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _TMR1_ISR->_TMR1_WriteTimer
    _TMR0_MyInterruptHandler->_ADC_SelectChannel
    _ADC_MyInterruptHandler->___aldiv
    ___aldiv->___lmul

Critical Paths under _main in BANK0

    _main->_printf
    _ShowMenuInTerminal->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_ShowMenuInTerminal
    _ShowMenuInTerminal->_printf
    _printf->_vfprintf

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   20352
            _ADC_SetInterruptHandler
                         _CheckUSART
           _INT0_SetInterruptHandler
                  _SYSTEM_Initialize
                 _ShowMenuInTerminal
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
                     _TMR1_StopTimer
                             _printf
 ---------------------------------------------------------------------------------
 (1) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ShowMenuInTerminal                                   2     2      0    9223
                                             10 BANK1      2     2      0
                      _EUSART1_Write
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    9161
                                             81 BANK0      2     2      0
                                              6 BANK1      4     0      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6830
                                             79 BANK0      2     2      0
                                              0 BANK1      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    6369
                                             61 BANK0     18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4802
                                             26 BANK0     35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2533
                                             32 COMRAM     1     1      0
                                             16 BANK0     10     4      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1177
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     857
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      93
                                             31 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             16 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             30 COMRAM     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1186
                     _ADC_Initialize
                    _CCP5_Initialize
                 _EUSART1_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                             30 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                             30 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     174
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2     174
                                             30 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                             30 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                             30 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             30 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             30 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             30 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0     174
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADC_SetInterruptHandler                              2     0      2     174
                                             30 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _CheckUSART                                           0     0      0      86
                       _EUSART1_Read
                      _EUSART1_Write
                _EUSART1_is_rx_ready
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      62
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      24
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManagerHigh                      4     4      0    1106
                                             26 COMRAM     4     4      0
                   Absolute function *
                            _ADC_ISR
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _INT0_ISR
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR1_ISR                                            0     0      0     240
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
            _TMR1_MyInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) _TMR1_MyInterruptHandler                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            0     0      0      22
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
            _TMR0_MyInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _TMR0_MyInterruptHandler                             0     0      0      22
                  _ADC_SelectChannel
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (14) _ADC_StartConversion                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
            _INT0_MyInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT0_MyInterruptHandler                             0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ADC_ISR                                             0     0      0     844
                   Absolute function *
        _ADC_DefaultInterruptHandler *
             _ADC_MyInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _ADC_MyInterruptHandler                              0     0      0     844
            _ADC_GetConversionResult
                  _ADC_SelectChannel
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (14) ___lmul                                             12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (14) ___aldiv                                            14     6      8     452
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (14) _ADC_SelectChannel                                   2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (14) _ADC_GetConversionResult                             4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (13) _ADC_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_SetInterruptHandler
   _CheckUSART
     _EUSART1_Read
     _EUSART1_Write
     _EUSART1_is_rx_ready
   _INT0_SetInterruptHandler
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _CCP5_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   _ShowMenuInTerminal
     _EUSART1_Write
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
           _fputc
   _TMR0_SetInterruptHandler
   _TMR0_StartTimer
   _TMR1_SetInterruptHandler
   _TMR1_StartTimer
   _TMR1_StopTimer
   _printf

 _INTERRUPT_InterruptManagerHigh (ROOT)
   Absolute function(Fake) *
   _ADC_ISR *
     Absolute function(Fake) *
     _ADC_DefaultInterruptHandler *
     _ADC_MyInterruptHandler *
       _ADC_GetConversionResult
       _ADC_SelectChannel
       ___aldiv
         ___lmul (ARG)
       ___lmul
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _INT0_ISR *
     _INT0_CallBack
       Absolute function(Fake) *
       _INT0_DefaultInterruptHandler *
       _INT0_MyInterruptHandler *
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _TMR0_MyInterruptHandler *
       _ADC_SelectChannel
       _ADC_StartConversion
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_MyInterruptHandler *
     _TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      51        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      C       C       7        4.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     53      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     21      40       1       68.1%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRhllllh     27      0       0      47        0.0%
BITBIGSFRhhlhhh     19      0       0      37        0.0%
BITBIGSFRlh         17      0       0      49        0.0%
BITBIGSFRhhh         D      0       0      36        0.0%
BITBIGSFRhlhhll      B      0       0      43        0.0%
BITBIGSFRhlllll      A      0       0      48        0.0%
BITBIGSFRhlhhll      7      0       0      42        0.0%
BITBIGSFRhlhhlh      7      0       0      41        0.0%
BITBIGSFRhlhllh      4      0       0      45        0.0%
BITBIGSFRhllhl       4      0       0      46        0.0%
BITBIGSFRhhlll       2      0       0      40        0.0%
BITBIGSFRhlhlh       1      0       0      44        0.0%
BITBIGSFRhhlhhl      1      0       0      38        0.0%
BITBIGSFRhhlhl       1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      EC      50        0.0%
DATA                 0      0      EC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Dec 13 16:43:14 2023

                      _eusart1TxBufferRemaining 003E                                               l9 1428  
                                             _s 0022                                              l30 1418  
                                            l94 138E                        ?_INT0_MyInterruptHandler 0001  
                           ?_ShowMenuInTerminal 0001                                 _timer0ReloadVal 003D  
                     fp__ADC_MyInterruptHandler 0000                                             l122 14C2  
                                           l230 13DE                                             l143 1486  
                                           l224 0E0E                                             l243 1090  
                                           l252 0F9A                                             l149 13F2  
                                           l326 1444                                             l414 111C  
                                           l248 0F58                                             l249 0F6E  
                                           l441 14E2                                             l290 14A4  
                                           l258 1468                                             l460 147C  
                                           l372 12EE                                             l293 14B8  
                                           l621 14DA                                             l438 13B0  
                                           l287 14AE                                             l375 1436  
                                           l615 1318                                             l296 1490  
                                           l618 14DE                                             l299 149A  
                                           l555 0C58                                             l645 1472  
                                           l558 0C5E                                             l575 05BA  
                                           l586 0E7A                                             l765 0744  
                                           l778 08AA                      ??_INT0_SetInterruptHandler 0021  
                               _timer1ReloadVal 0035                                             _abs 111E  
                                           _pad 0D1E                                 __end_of_ADC_ISR 1270  
               __end_of_ADC_SetInterruptHandler 14C4                                             tosl 000FFD  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                 _INT0_CallBack 1270                                      _CheckUSART 0E10  
                  ?_ADC_DefaultInterruptHandler 0001                        ?_TMR1_MyInterruptHandler 0001  
                               _CCP5_Initialize 141A                                            ?_abs 0070  
                                          l3010 0F80                                            l3002 0F48  
                                          l3012 0F82                                            l3004 0F48  
                                          l3100 07AC                                            l3020 1462  
                                          l3014 0F92                                            l3006 0F66  
                                          l3110 0822                                            l3102 07CA  
                                          l3030 0CD4                                            l1406 0D1C  
                                          l3022 0C86                                            l1414 10D8  
                                          l1351 0D42                                            l3016 0F96  
                                          l3008 0F70                                            l3120 088A  
                                          l3112 0842                                            l3104 07D2  
                                          l3032 0D0A                                            l3024 0C9A  
                                          l3040 10B2                                            l1360 01C2  
                                          l3200 08EE                                            l1329 12C4  
                                          l3018 0F98                                            l3050 05F0  
                                          l3114 0854                                            l3106 07E6  
                                          l3026 0CAC                                            l3042 10B8  
                                          l3130 0D4E                                            l1362 01CA  
                                          l3210 0994                                            l3202 08F2  
                                          l1355 0D9A                                            l1363 0210  
                                          l2500 14B0                                            l3060 0632  
                                          l3052 05F4                                            l3044 05BC  
                                          l3108 07F4                                            l3116 085A  
                                          l3140 113A                                            l3028 0CB6  
                                          l3036 1092                                            l3132 0D62  
                                          l3124 0D1E                                            l3204 0902  
                                          l3300 050E                                            l1381 0A02  
                                          l3070 068C                                            l3062 0650  
                                          l3054 0602                                            l3046 05C2  
                                          l3118 086A                                            l3038 10A0  
                                          l3134 0D68                                            l3126 0D2E  
                                          l1374 03B4                                            l3150 019C  
                                          l3142 0136                                            l3214 09C4  
                                          l3206 0920                                            l3230 0FE4  
                                          l1391 1156                                            l2512 1474  
                                          l3072 06BA                                            l3064 0658  
                                          l3080 06F4                                            l3056 0622  
                                          l3048 05D0                                            l3136 0D86  
                                          l3128 0D3A                                            l3160 01F8  
                                          l3152 01B6                                            l3144 0156  
                                          l3208 093E                                            l3224 0F9C  
                                          l3312 0546                                            l3304 0520  
                                          l3240 03B6                                            l3330 0E10  
                                          l2610 0D9E                                            l2602 13E0  
                                          l3082 0704                                            l3074 06DA  
                                          l3066 066C                                            l3058 0626  
                                          l3090 074A                                            l1394 115E  
                                          l3138 111E                                            l3170 0226  
                                          l3162 0204                                            l3154 01D2  
                                          l3146 016C                                            l3218 09D6  
                                          l3226 0FA8                                            l3234 129C  
                                          l3314 054C                                            l3306 0526  
                                          l3250 03EA                                            l3242 03BA  
                                          l3322 056C                                            l1387 0FEE  
                                          l3340 0E62                                            l3332 0E24  
                                          l2620 0DC4                                            l2612 0DAA  
                                          l2604 13E4                                            l3084 0724  
                                          l3076 06DC                                            l3068 067A  
                                          l3092 075A                                            l3180 0336  
                                          l3172 02AA                                            l3164 020C  
                                          l3156 01E2                                            l3148 017C  
                                          l3228 0FC6                                            l3236 12A6  
                                          l3316 055A                                            l3308 0534  
                                          l3260 0430                                            l3252 03F8  
                                          l3244 03C0                                            l3342 0E68  
                                          l3334 0E30                                            l2630 0E0C  
                                          l2622 0DC8                                            l2614 0DB8  
                                          l2606 13F0                                            l2518 146A  
                                          l3078 06EE                                            l3094 077A  
                                          l3190 0394                                            l3182 0354  
                                          l3174 02B0                                            l3166 0218  
                                          l3158 01E8                                            l3270 046A  
                                          l3262 043A                                            l3254 0406  
                                          l3246 03CE                                            l3350 0BD0  
                                          l2640 1052                                            l2632 13CA  
                                          l3344 0E70                                            l3336 0E40  
                                          l2624 0DCC                                            l2616 0DBC  
                                          l2608 0D9C                                            l3096 077E  
                                          l3088 0746                                            l3184 036E  
                                          l3176 02B6                                            l3168 0220  
                                          l3416 0584                                            l3280 0496  
                                          l3264 0440                                            l3256 0414  
                                          l3248 03DC                                            l2800 14E0  
                                          l3360 0C0E                                            l3352 0BD2  
                                          l2650 108A                                            l2642 1072  
                                          l3338 0E50                                            l2626 0DD8  
                                          l2618 0DC0                                            l2490 147E  
                                          l3098 078C                                            l3186 037E  
                                          l3178 031A                                            l3194 08AC  
                                          l3290 04DA                                            l3274 0474  
                                          l3266 044E                                            l3258 0422  
                                          l2802 14DC                                            l3370 0C3A  
                                          l3362 0C1C                                            l3354 0BD4  
                                          l2652 108C                                            l2644 1074  
                                          l2636 1042                                            l2492 1492  
                                          l2628 0DE4                                            l3188 0384  
                                          l3196 08D2                                            l3292 04E8  
                                          l3284 04A8                                            l3276 047A  
                                          l3268 045C                                            l2804 14D8  
                                          l3380 0C70                                            l3372 0C40  
                                          l3364 0C22                                            l3356 0BFA  
                                          l3348 0BCC                                            l2654 108E  
                                          l2646 1084                                            l2638 1042  
                                          l2478 14BA                                            l2494 1488  
                                          l2662 1438                                            l2670 142A  
                                          l2590 1416                                            l3198 08E0  
                                          l3286 04AE                                            l3278 0488  
                                          l3382 0C74                                            l3374 0C44  
                                          l3366 0C34                                            l3358 0BFE  
                                          l2648 1088                                            l2592 136C  
                                          l2584 141A                                            l2496 14A6  
                                          l2664 10DA                                            l2680 1308  
                                          l2672 12F0                                            l3296 04FA  
                                          l3288 04C4                                            l3384 0C7A  
                                          l3376 0C46                                            l3368 0C38  
                                          l2594 1380                                            l2498 149C  
                                          l2666 10FE                                            l2586 1408  
                                          l2690 13A0                                            l2682 1314  
                                          l2674 12FC                                            l3298 0500  
                                          l3378 0C60                                            l2596 1382  
                                          l2668 111A                                            l2588 1414  
                                          l2692 13AC                                            l2684 1390  
                                          l2676 1304                                            l2780 12C6  
                                          l2686 139C                                            l2678 1306  
                                          l2790 12DA                                            l2782 12CA  
                                          ?_pad 0070                                            l2688 139E  
                                          l2792 12DE                                            l2784 12CE  
                                          l2794 12E2                                            l2786 12D2  
                                          l2796 12E6                                            l2788 12D6  
                                          l2798 12EA                                            STR_1 FF53  
                                          STR_2 FFC8                                            STR_3 FF91  
                                          STR_4 FEE5                                            STR_5 FE3D  
                                          STR_6 FEBE                                            STR_7 FE6D  
                                          STR_8 FF72                                            STR_9 FFF5  
                                          u2000 0650                                            u2001 064C  
                                          u2010 067A                                            u2011 0676  
                                          u2020 06BA                                            u2100 0D2E  
                                          u2021 06B6                                            u2101 0D2A  
                                          u2030 0704                                            u2110 0D86  
                                          u2031 0700                                            u2111 0D82  
                                          u2040 075A                                            u2120 113A  
                                          u2200 0354                                            u2041 0756  
                                          u2121 1136                                            u2201 0350  
                                          u2050 078C                                            u2210 036E  
                                          u2130 0168                                            u2051 0788  
                                          u2211 036A                                            u2131 0162  
                                          u1500 1084                                            u2300 0E62  
                                          u2060 07CA                                            u2220 037E  
                                          u2140 016A                                            u1501 1080  
                                          u2301 0E5E                                            u2061 07C6  
                                          u2221 037A                                            _LATA 000F89  
                                          u2070 07F4                                            u2150 017C  
                                          u2230 08D2                                            u2310 0C34  
                                          _LATB 000F8A                                            u2071 07F0  
                                          u2151 0178                                            u2231 08CE  
                                          u2311 0C30                                            _LATC 000F8B  
                                          u2080 0822                                            u2160 01B6  
                                          u2240 0920                                            u2320 0C58  
                                          _LATD 000F8C                                            u2081 081E  
                                          u2161 01B2                                            u2241 091C  
                                          u2321 0C54                                            _LATE 000F8D  
                                          u2090 086A                                            u2170 01E2  
                                          u2250 093E                                            u2330 0C70  
                                          u2091 0866                                            u2171 01DE  
                                          u2251 093A                                            u2331 0C6C  
                                          u2180 01F8                                            u2260 0FE4  
                                          u2181 01F4                                            u2261 0FE0  
                                          u1470 13DC                                            u2270 0E24  
                                          u2190 0336                                            u1471 13D6  
                                          u2271 0E20                                            u2191 0332  
                                          u1480 13DE                                            u2280 0E40  
                                          u2281 0E3C                                            u1490 1052  
                                          u2290 0E50                                            u1491 104E  
                                          u2291 0E4C                                            u1900 0F66  
                                          u1901 0F62                                            u1910 0F92  
                                          u1911 0F8E                                            u1920 0C9A  
                                          u1921 0C96                                            u1930 0CAC  
                                          u1931 0CA8                                            u1940 0CD4  
                                          u1941 0CD0                                            u1950 0D0A  
                                          u1951 0D06                                            u1960 10D8  
                                          u1961 10D4                                            u1890 0F58  
                                          u1970 05D0                                            u1891 0F54  
                                          u1971 05CC                                            u1980 0602  
                                          u1981 05FE                                            u1991 062C  
                                          i2l97 13C8                                            _TMR1 000FCE  
                                          _WPUB 000F61                            ??_ShowMenuInTerminal 010A  
                                 _EUSART1_Write 0F46                                            abs@a 0070  
                                          _dbuf 00D3                                            _main 0BCC  
                                          _dtoa 0136                                            _menu 00FF  
                                 ?_EUSART1_Read 0001                                            _prec 00CD  
                               _TMR0_StartTimer 14E0                                            pad@i 0076  
                                          pad@p 0074                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 0078  
                                          fsr2l 000FD9                                            btemp 0041  
                                          start 0132                      ??_TMR1_SetInterruptHandler 0021  
                fp__EUSART1_DefaultErrorHandler 0000                                    ___param_bank 000000  
                       ?_ADC_MyInterruptHandler 0001                                           ??_abs 0072  
                                         ??_pad 0021                         __end_of_TMR0_Initialize 13B2  
                              __end_of_INT0_ISR 14CC                  ??_TMR0_DefaultInterruptHandler 0001  
                 __end_of_OSCILLATOR_Initialize 1438                           _eusart1RxStatusBuffer 00B3  
                               __end_of___aldiv 0B10                                 __end_of___aodiv 0746  
                                         ?_main 0001                                           ?_dtoa 007A  
                               __end_of___aomod 08AC                                           STR_10 FFAE  
                                         STR_11 FF72                                           STR_12 FFF5  
                                         STR_20 FF72                                           STR_21 FFF5  
                                         STR_13 FF0C                                           STR_22 FF72  
                                         STR_14 FF72                                           STR_23 FFF5  
                                         STR_15 FFF5                                           STR_24 FFD9  
                                         STR_16 FF30                                           STR_17 FFEA  
                                         STR_25 FE96                                           STR_18 FF72  
                                         STR_19 FFF5                                 _TMR1_StartTimer 14DC  
                                         _T0CON 000FD5                                           _T1CON 000FCD  
                                         i2l100 14E6                                           i2l106 1406  
                                         i2l140 129A                                           i2l125 14F4  
                                         i2l119 126E                                           i2l136 14CA  
                                         i2l146 14F0                                           i2l331 003E  
                                         i2l261 119C                                           i2l333 0062  
                                         i2l271 0BCA                                           i2l335 0086  
                                         i2l343 011E                                           i2l264 119E  
                                         i2l520 145E                                           i2l281 14D0  
                                         i2l337 00C0                                           i2l514 1452  
                                         i2l338 011E                                           i2l275 1342  
                                         i2l339 00FA                                           i2l284 14D6  
                                         i2l517 0F44                                           i2l278 14F2  
                                         i2l526 120E                                           i2l463 14EE  
                                         i2l457 1240                                           i2l730 0B0E  
                                         i2l642 11D8                                           i2l629 136A  
                                         i2l662 0ED4                                           i2l663 0EE4  
                                         i2l648 14EC                                    vfpfcnvrt@fmt 009F  
                                         _TMR0H 000FD7                                           _TMR1H 000FCF  
                                         _TMR0L 000FD6                                           _TMR1L 000FCE  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                ?_INT0_CallBack 0001                                           _TRISC 000F94  
                                         _TRISD 000F95                                           _TRISE 000F96  
                           ___lmul@multiplicand 0005                       ?_TMR0_SetInterruptHandler 001F  
                          _EUSART1_Transmit_ISR 1160                                __end_of_TMR0_ISR 1242  
                              __end_of_TMR1_ISR 11DA                                           _flags 00D1  
                                         _fputc 0C86                                           _fputs 1092  
                                         pad@fp 0070                                           _width 00CB  
                                         _putch 1460                                           dtoa@d 007C  
                                         dtoa@i 009B                                           dtoa@n 0092  
                                         dtoa@p 008E                                           dtoa@s 009A  
                                         dtoa@w 0090                                  ?_EUSART1_Write 0001  
                       __end_of_TMR1_Initialize 131A                                           pclath 000FFA  
                                         pclatu 000FFB                                           tablat 000FF5  
                                ??_EUSART1_Read 001F                                           ttemp5 0042  
                                         ttemp6 0045                                           ttemp7 0049  
                                         status 000FD8                                           wtemp8 0042  
         fp__EUSART1_DefaultFramingErrorHandler 0000      __end_of_EUSART1_DefaultFramingErrorHandler 14F4  
          ??_EUSART1_DefaultFramingErrorHandler 0001             ?_EUSART1_DefaultFramingErrorHandler 0001  
            _EUSART1_DefaultFramingErrorHandler 14F2                                 _TMR1_WriteTimer 1344  
                __end_of_ADC_MyInterruptHandler 0F46                                 __initialization 0FF0  
               __end_of_INT0_MyInterruptHandler 1454                      __end_of_EUSART1_Initialize 0E10  
                                  __end_of_main 0C86                                    __end_of_dtoa 03B6  
                                   _BombaLigada 00D2                                       ??_ADC_ISR 001B  
                                        ??_main 0022                                          ??_dtoa 0084  
                       __end_of_CCP5_Initialize 142A                 __end_of_TMR1_MyInterruptHandler 1210  
                                 __activetblptr 000003                           ?_EUSART1_Transmit_ISR 0001  
                                _convertedValue 0028                                     ?_CheckUSART 0001  
                       __end_of_TMR0_StartTimer 14E4                                          _ADCON0 000FC2  
                                        _ADCON1 000FC1                                          _ADCON2 000FC0  
                                        ?_fputc 0060                                          ?_fputs 0069  
                                        _ADRESH 000FC4                                          _ADRESL 000FC3  
                                        _CCPR5H 000F56                                          _CCPR5L 000F55  
                                        _ANSELA 000F38                                          ?_putch 0001  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                                        _ANSELD 000F3B                                          _ANSELE 000F3C  
                                        _T1GCON 000FCC                         TMR1_WriteTimer@timerVal 0001  
                                        i2l2510 1340                                          i2l2502 131A  
                                        i2l2520 0E7C                                          i2l2504 132A  
                                        i2l2600 1282                                          i2l2530 0A04  
                                        i2l2522 0E8C                                          i2l2506 132C  
                                        i2l2514 1446                                          i2l2540 0A38  
                                        i2l2532 0A08                                          i2l2524 0E9A  
                                        i2l2508 133C                                          i2l2516 1450  
                                        i2l2700 11DA                                          i2l2550 0A7A  
                                        i2l2542 0A48                                          i2l2534 0A16  
                                        i2l2526 0EAA                                          i2l2702 11EC  
                                        i2l2710 1344                                          i2l2480 13B4  
                                        i2l2560 0ACC                                          i2l2552 0A86  
                                        i2l2544 0A4C                                          i2l2536 0A26  
                                        i2l2528 0EB4                                          i2l2712 1352  
                                        i2l2720 1362                                          i2l2482 13C6  
                                        i2l2570 0AFE                                          i2l2562 0ACE  
                                        i2l2554 0A94                                          i2l2546 0A5C  
                                        i2l2538 0A2A                                          i2l2730 14C4  
                                        i2l2722 1366                                          i2l2714 1354  
                                        i2l2564 0AD8                                          i2l2556 0A9E  
                                        i2l2548 0A72                                          i2l2724 1242  
                                        i2l2660 14D2                                          i2l2740 1182  
                                        i2l2732 14C6                                          i2l2484 14E4  
                                        i2l2716 1358                                          i2l2486 13F4  
                                        i2l2558 0ABC                                          i2l2566 0ADE  
                                        i2l2726 1244                                          i2l2750 0B2E  
                                        i2l2742 1192                                          i2l2734 1160  
                                        i2l2718 135C                                          i2l2568 0AEE  
                                        i2l2728 1256                                          i2l2760 0B8C  
                                        i2l2752 0B3E                                          i2l2744 1196  
                                        i2l2736 1170                                          i2l2920 0036  
                                        i2l2658 14CC                                          i2l2762 0BA8  
                                        i2l2754 0B56                                          i2l2746 0B10  
                                        i2l2738 1180                                          i2l2770 1228  
                                        i2l2930 0094                                          i2l2922 004C  
                                        i2l2764 0BC6                                          i2l2756 0B64  
                                        i2l2748 0B20                                          i2l2772 11A0  
                                        i2l2940 0116                                          i2l2932 00A2  
                                        i2l2924 005A                                          i2l2916 001A  
                                        i2l2694 0EE6                                          i2l2758 0B74  
                                        i2l2598 1270                                          i2l2766 1210  
                                        i2l2774 11A2                                          i2l2934 00CE  
                                        i2l2926 0070                                          i2l2918 0028  
                                        i2l2696 1454                                          i2l2768 1216  
                                        i2l2776 11AE                                          i2l2936 00DC  
                                        i2l2928 007E                                          i2l2698 145A  
                                        i2l2778 11C0                                          i2l2938 0108  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _SPBRG1 000FAF  
                                        _TXREG1 000FAD                                          _TXSTA1 000FAC  
          __end_of_TMR1_DefaultInterruptHandler 14EE                    _TMR1_DefaultInterruptHandler 14EC  
                                  vfprintf@cfmt 00AF                                          ___lmul 0E7C  
                       __end_of_TMR1_StartTimer 14E0                                       ??___aldiv 0015  
                                     ??___aodiv 001F                                       ??___aomod 001F  
                      ?_EUSART1_SetErrorHandler 001F                                ?_TMR0_Initialize 0001  
                                        clear_0 1026                                          clear_1 1032  
                                        _rxData 002C                                          isa$std 000001  
                                        _printf 129C                                          pad@buf 0072  
              ??_EUSART1_SetOverrunErrorHandler 0021                 ?_EUSART1_SetOverrunErrorHandler 001F  
                               ??_INT0_CallBack 0001                                          dtoa@fp 007A  
                                        fputc@c 0060                                          fputs@c 006D  
                                        fputs@i 006E                                    __pdataCOMRAM 003F  
                                        fputs@s 0069                                    __mediumconst FE38  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                __end_of_vfprintf 0FF0  
                               ??_EUSART1_Write 001F        TMR1_SetInterruptHandler@InterruptHandler 001F  
      TMR0_SetInterruptHandler@InterruptHandler 001F        INT0_SetInterruptHandler@InterruptHandler 001F  
       ADC_SetInterruptHandler@InterruptHandler 001F                         __end_of_TMR1_WriteTimer 136C  
                               _eusart1RxBuffer 00BB                                 _eusart1TxBuffer 00C3  
                              ?_TMR1_Initialize 0001                ??_INTERRUPT_InterruptManagerHigh 001B  
               ?_INTERRUPT_InterruptManagerHigh 0001                               _SYSTEM_Initialize 12C6  
                                    __accesstop 0060                         __end_of__initialization 1038  
                                     ?_INT0_ISR 0001                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                   __end_of_EUSART1_RxDataHandler 1344  
                                __pcstackCOMRAM 0001                                    __pidataBANK0 14EA  
                           ??_SYSTEM_Initialize 0021                                       ?_TMR0_ISR 0001  
                                     ?_TMR1_ISR 0001                 fp__TMR1_DefaultInterruptHandler 0000  
                 ?_TMR1_DefaultInterruptHandler 0001                                   __end_of_fputc 0D1E  
                                 __end_of_fputs 10DA                               ??_SPI1_Initialize 001F  
                                 __end_of_putch 146A                                _carater_recebido 00FE  
                          __end_of_EUSART1_Read 1092                                ?_CCP5_Initialize 0001  
                        ??_EUSART1_Transmit_ISR 0001                         _ADC_GetConversionResult 13F4  
                            _spi1_configuration FE39                     __end_of_EUSART1_Receive_ISR 0BCC  
                              ?_TMR0_StartTimer 0001                                         ??_fputc 0064  
                     __end_of_SYSTEM_Initialize 12F0                                         ??_fputs 0021  
                                       ??_putch 0020                                   _eusart1RxHead 0030  
                                 _eusart1TxHead 0032                                   _eusart1RxTail 002F  
                                    __pbssBANK0 00B3                                   _eusart1TxTail 0031  
             _EUSART1_TxDefaultInterruptHandler 00FB                 ??_EUSART1_SetRxInterruptHandler 0021  
                         _INT0_InterruptHandler 0039                                      ??_INT0_ISR 0001  
                                    __pnvCOMRAM 0033                 __end_of_EUSART1_SetErrorHandler 14BA  
              __end_of_TMR0_SetInterruptHandler 147E                                         ?___lmul 0001  
                              ?_TMR1_StartTimer 0001                                      ??_TMR0_ISR 0003  
                                    ??_TMR1_ISR 0003                                         _CCP5CON 000F54  
                                       _ADC_ISR 1242                                  ___lmul@product 0009  
                                       ?_printf 0106          __end_of_EUSART1_SetFramingErrorHandler 14B0  
                _EUSART1_SetFramingErrorHandler 14A6                    ?_EUSART1_DefaultErrorHandler 0001  
                                       _OSCCON2 000FD2                        ?_TMR0_MyInterruptHandler 0001  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000FB0  
                                       _SSP1ADD 000FC8                                         _SSP1BUF 000FC9  
                              ?_TMR1_WriteTimer 0001                       ?_INT0_SetInterruptHandler 001F  
                          _ADC_InterruptHandler 003B                                         __Hparam 0000  
                       _ADC_SetInterruptHandler 14BA                                         __Lparam 0000  
                                       ___aldiv 0A04                                         ___aodiv 05BC  
                                       ___aomod 0746                                       ?_vfprintf 0100  
                           _EUSART1_is_rx_ready 13CA                       ??_ADC_GetConversionResult 0003  
                                       __pcinit 0FF0                                         __ramtop 1000  
                                       __ptext0 0BCC                                         __ptext1 14D8  
                                       __ptext2 14DC                                         __ptext3 14E0  
                                       __ptext4 03B6                                         __ptext5 129C  
                                       __ptext6 0F9C                                         __ptext7 08AC  
                                       __ptext8 0136                                         __ptext9 0D1E  
                                     _T0CONbits 000FD5                  ??_TMR1_DefaultInterruptHandler 0001  
                                     _T1CONbits 000FCD                           _OSCILLATOR_Initialize 142A  
                              ___aldiv@dividend 000D                              _EUSART1_Initialize 0D9C  
                      ??_PIN_MANAGER_Initialize 001F                       ?_TMR1_SetInterruptHandler 001F  
                                  ??_CheckUSART 0020                   ??_EUSART1_DefaultErrorHandler 0001  
                          end_of_initialization 1038                            ?_EUSART1_is_rx_ready 0001  
                           ?_EUSART1_Initialize 0001                                      _nivel_agua 00CF  
                                       fputc@fp 0062                     _EUSART1_OverrunErrorHandler 00F5  
                                       fputs@fp 006B           __end_of_EUSART1_SetRxInterruptHandler 149C  
                 _EUSART1_SetRxInterruptHandler 1492                               __end_of_vfpfcnvrt 0A04  
                              ___aldiv@quotient 0017                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                                vfpfcnvrt@convarg 00A5  
                            __end_of_CheckUSART 0E7C                                      ??_vfprintf 0022  
                          ??_EUSART1_Initialize 0021                        _TMR0_SetInterruptHandler 1474  
               __end_of_TMR0_MyInterruptHandler 1460             __end_of_ADC_DefaultInterruptHandler 14F6  
                   _ADC_DefaultInterruptHandler 14F4                                       _TRISCbits 000F94  
                           _ADC_StartConversion 14E4                         fp__EUSART1_Transmit_ISR 0000  
                       _INT0_MyInterruptHandler 1446                      fp__INT0_MyInterruptHandler 0000  
                           EUSART1_Write@txData 001F                           ??_EUSART1_is_rx_ready 001F  
                 ??_ADC_DefaultInterruptHandler 0001                       ??_ADC_SetInterruptHandler 0021  
                               _SPI1_Initialize 1408                                    _EUSART1_Read 1042  
                       _TMR1_MyInterruptHandler 11DA                      fp__TMR1_MyInterruptHandler 0000  
                          ?_ADC_StartConversion 0001                    __end_of_INTERRUPT_Initialize 1446  
          __end_of_INT0_DefaultInterruptHandler 14F2                    _INT0_DefaultInterruptHandler 14F0  
                                __end_of___lmul 0EE6                                     vfpfcnvrt@ap 00A1  
                                   vfpfcnvrt@cp 00AD                                     vfpfcnvrt@fp 009D  
                                 __pidataCOMRAM 14E8                                  _ADC_Initialize 136C  
                                _TMR1_StopTimer 14D8                          ?_OSCILLATOR_Initialize 0001  
                                __end_of_printf 12C6                           __end_of_INT0_CallBack 129C  
                           start_initialization 0FF0                                     __end_of_abs 1160  
                                   __end_of_pad 0D9C   EUSART1_SetRxInterruptHandler@interruptHandler 001F  
 EUSART1_SetTxInterruptHandler@interruptHandler 001F                                     putch@txData 0020  
                         __end_of_EUSART1_Write 0F9C                        ??_ADC_MyInterruptHandler 001B  
                        fp__EUSART1_Receive_ISR 0000                           ??_ADC_StartConversion 0001  
                                   vfprintf@fmt 0102                                        ??___lmul 0009  
                         _EUSART1_RxDataHandler 131A                  ?_EUSART1_SetRxInterruptHandler 001F  
                        __end_of_ADC_Initialize 1390                          __end_of_TMR1_StopTimer 14DC  
                                   __pdataBANK0 00FE                                        ?_ADC_ISR 0001  
                    __end_of_EXT_INT_Initialize 13F4                 fp__INT0_DefaultInterruptHandler 0000  
                 ?_INT0_DefaultInterruptHandler 0001                                        ??_printf 0022  
                                _eusart1RxCount 002E                       ??_INT0_MyInterruptHandler 0001  
                                   __pbssCOMRAM 0022               _EUSART1_RxDefaultInterruptHandler 00F9  
              __end_of_INT0_SetInterruptHandler 1488                                   __pcstackBANK0 0060  
                                 __pcstackBANK1 0100                                ___aodiv@dividend 0060  
                       __end_of_SPI1_Initialize 141A                       ??_TMR1_MyInterruptHandler 0001  
               ??_EUSART1_SetTxInterruptHandler 0021                ??_EUSART1_SetFramingErrorHandler 0021  
               ?_EUSART1_SetFramingErrorHandler 001F                           _TMR0_InterruptHandler 0037  
                                     __pnvBANK0 00F3                          _PIN_MANAGER_Initialize 10DA  
                                     _dtoa$2076 008C                                       __pintcode 0008  
                             _ADC_SelectChannel 13B2                __end_of_TMR1_SetInterruptHandler 1474  
                                 __pmediumconst FE38                                        ?___aldiv 000D  
                                      ?___aodiv 0060                                        ?___aomod 0060  
                              ___aodiv@quotient 0072                                 ?_ADC_Initialize 0001  
                               ?_TMR1_StopTimer 0001                              ?_ADC_SelectChannel 0001  
                                      _BAUDCON1 000FB8           fp__EUSART1_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART1_DefaultOverrunErrorHandler 14D2            ??_EUSART1_DefaultOverrunErrorHandler 0001  
           ?_EUSART1_DefaultOverrunErrorHandler 0001              _EUSART1_DefaultOverrunErrorHandler 14CC  
                           ??_ADC_SelectChannel 0001                            _EUSART1_ErrorHandler 00F3  
                       _EUSART1_SetErrorHandler 14B0                      __end_of_ShowMenuInTerminal 05BC  
                          _INTERRUPT_Initialize 1438                                 ___aldiv@divisor 0011  
                             ??_TMR0_Initialize 0021                                 ___aldiv@counter 0015  
                                      _INT0_ISR 14C4         EUSART1_SetErrorHandler@interruptHandler 001F  
                                      _LATBbits 000F8A                                        _IPR1bits 000F9F  
                                      _PIE1bits 000F9D                       __end_of_ADC_SelectChannel 13CA  
                                      i2u140_40 0A72                                        i2u140_41 0A6E  
                                      i2u141_40 0A94                                        i2u141_41 0A90  
                                      i2u142_40 0ABC                                        i2u142_41 0AB8  
                                      i2u143_40 0AEE                                        i2u135_40 133C  
                                      i2u151_40 11EC                                        i2u143_41 0AEA  
                                      i2u135_41 1338                                        i2u151_41 11E8  
                                      i2u136_40 0E9A                                        i2u160_40 0B64  
                                      i2u152_40 11FC                                        i2u136_41 0E96  
                                      i2u160_41 0B60                                        i2u152_41 11F6  
                                      i2u152_46 11FE                                        i2u137_40 0ED4  
                                      i2u145_40 1282                                        i2u153_40 1352  
                                      i2u137_41 0ED0                                        i2u145_41 127E  
                                      i2u153_41 134E                                        i2u138_40 0A16  
                                      i2u154_40 1256                                        i2u162_40 0BA8  
                                      i2u161_48 0B7A                                        i2u138_41 0A12  
                                      i2u154_41 1252                                        i2u162_41 0BA4  
                                      i2u161_49 0B8C                                        i2u139_40 0A38  
                                      i2u146_48 1288                                        i2u139_41 0A34  
                                      i2u146_49 129A                                        i2u155_48 125C  
                                      i2u163_48 0BAE                                        i2u156_40 1170  
                                      i2u164_40 1228                                        i2u172_40 0028  
                                      i2u155_49 126E                                        i2u163_49 0BC2  
                                      i2u156_41 116C                                        i2u164_41 1224  
                                      i2u172_41 0024                                        i2u157_40 1192  
                                      i2u181_40 00CE                                        i2u180_48 00A8  
                                      i2u173_40 0036                      ??_TMR0_SetInterruptHandler 0021  
                                      i2u157_41 118E                                        i2u181_41 00CA  
                                      i2u180_49 00BC                                        i2u173_41 0032  
                                      i2u158_40 0B2E                                        i2u165_48 122E  
                                      i2u166_40 11C0                                        i2u182_40 00DC  
                                      i2u174_40 004C                                        i2u158_41 0B2A  
                                      i2u165_49 1240                                        i2u166_41 11BC  
                                      i2u182_41 00D8                                        i2u174_41 0048  
                                      i2u175_40 005A                                        i2u175_41 0056  
                                      i2u159_48 0B44                                        i2u167_48 11C6  
                                      i2u184_40 0108                                        i2u183_48 00E2  
                                      i2u176_40 0070                                        i2u159_49 0B56  
                                      i2u167_49 11D8                                        i2u184_41 0104  
                                      i2u183_49 00F6                                        i2u176_41 006C  
                                      i2u185_40 0116                                        i2u177_40 007E  
                                      i2u185_41 0112                                        i2u177_41 007A  
                                      _PIR1bits 000F9E                                        i2u178_40 0094  
                                      i2u178_41 0090                                        i2u179_40 00A2  
                                      i2u179_41 009E                          ?_EUSART1_RxDataHandler 0001  
                                      _RCONbits 000FD0                  fp__ADC_DefaultInterruptHandler 0000  
                                      _SSP1CON1 000FC6                                        _SSP1CON2 000FC5  
                                      _TMR0_ISR 1210                           _SistemaControloLigado 00FD  
                                      _TMR1_ISR 11A0                                        _SSP1STAT 000FC7  
                                     _vfpfcnvrt 08AC                               ??_TMR1_Initialize 0021  
                                    _ADCON0bits 000FC2                        ADC_SelectChannel@channel 0002  
                ??_INT0_DefaultInterruptHandler 0001                                ?_SPI1_Initialize 0001  
                             ___lmul@multiplier 0001                                     _INTCON2bits 000FF1  
                         ?_INTERRUPT_Initialize 0001                        _INT0_SetInterruptHandler 147E  
                         EUSART1_Read@readValue 001F                               ??_CCP5_Initialize 001F  
         __end_of_EUSART1_SetTxInterruptHandler 1492                   _EUSART1_SetTxInterruptHandler 1488  
                                      __Hrparam 0000                                      vfprintf@ap 0104  
                                      __Lrparam 0000                                      vfprintf@fp 0100  
                      ?_ADC_GetConversionResult 0001                         ??_OSCILLATOR_Initialize 001F  
                             ??_TMR0_StartTimer 001F                          _ADC_MyInterruptHandler 0EE6  
                                    ?_vfpfcnvrt 009D                                 ___aodiv@divisor 0068  
                      _TMR1_SetInterruptHandler 146A                                 ___aodiv@counter 0070  
                         _TMR1_InterruptHandler 0033                       ??_EUSART1_SetErrorHandler 0021  
           __end_of_EUSART1_DefaultErrorHandler 14D8                     _EUSART1_DefaultErrorHandler 14D2  
                   __end_of_EUSART1_is_rx_ready 13E0                                        __ptext10 1092  
                                      __ptext11 0C86                                        __ptext20 1474  
                                      __ptext12 1460                                        __ptext21 1408  
                                      __ptext13 111E                                      _T1GCONbits 000FCC  
                                      __ptext30 149C                                        __ptext22 10DA  
                                      __ptext14 0746                                        __ptext31 14A6  
                                      __ptext23 142A                                        __ptext15 05BC  
                                      __ptext32 14B0                                        __ptext24 1438  
                                      __ptext16 12C6                                        __ptext41 11A0  
                                      __ptext33 141A                                        __ptext25 13E0  
                                      __ptext17 12F0                                        __ptext50 1270  
                                      __ptext42 1344                                        __ptext34 136C  
                                      __ptext26 147E                                        __ptext18 146A  
                                      __ptext51 14F0                                        __ptext43 14EC  
                                      __ptext35 14BA                                        __ptext27 0D9C  
                                      __ptext19 1390                                        __ptext60 14F4  
                                      __ptext52 1446                                        __ptext44 11DA  
                                      __ptext36 0E10                                        __ptext28 1488  
                                      __ptext61 0EE6                                        __ptext53 1160  
                                      __ptext45 1210                                        __ptext37 13CA  
                                      __ptext29 1492                                        __ptext62 0E7C  
                                      __ptext54 0B10                                        __ptext46 14EE  
                                      __ptext38 0F46                                        __ptext63 0A04  
                                      __ptext55 14CC                                        __ptext47 1454  
                                      __ptext39 1042                                        __ptext64 13B2  
                                      __ptext56 14F2                                        __ptext48 14E4  
                                      __ptext65 13F4                                        __ptext57 14D2  
                                      __ptext49 14C4                                        __ptext66 0000  
                                      __ptext58 131A                                        __ptext59 1242  
                                  _SSP1CON1bits 000FC6                                        _cnt_char 002B  
                             ??_TMR1_StartTimer 001F                                _nivel_referencia 0026  
                       _TMR0_MyInterruptHandler 1454                      fp__TMR0_MyInterruptHandler 0000  
          __end_of_TMR0_DefaultInterruptHandler 14F0                    _TMR0_DefaultInterruptHandler 14EE  
EUSART1_SetOverrunErrorHandler@interruptHandler 001F                                        isa$xinst 000000  
                                      int$flags 0041                                        _vfprintf 0F9C  
                                     printf@fmt 0106                               ??_TMR1_WriteTimer 0003  
                                   _intro_valor 002A                     _EUSART1_FramingErrorHandler 00F7  
                           _EUSART1_Receive_ISR 0B10                                ___aomod@dividend 0060  
                                    _INTCONbits 000FF2                          ??_INTERRUPT_Initialize 001F  
                            _EXT_INT_Initialize 13E0                        ?_ADC_SetInterruptHandler 001F  
                                      intlevel2 0000                            ?_EUSART1_Receive_ISR 0001  
                   __end_of_ADC_StartConversion 14E8                         ?_PIN_MANAGER_Initialize 0001  
               __end_of_ADC_GetConversionResult 1408                             ?_EXT_INT_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 14A6                  _EUSART1_SetOverrunErrorHandler 149C  
                                    _RCSTA1bits 000FAB                    __end_of_EUSART1_Transmit_ISR 11A0  
                              ??_ADC_Initialize 0021                                ??_TMR1_StopTimer 001F  
               fp__TMR0_DefaultInterruptHandler 0000                   ?_TMR0_DefaultInterruptHandler 0001  
                                      printf@ap 00B1  EUSART1_SetFramingErrorHandler@interruptHandler 001F  
                ?_EUSART1_SetTxInterruptHandler 001F                                 ___aomod@divisor 0068  
                                   ??_vfpfcnvrt 00A3                                 ___aomod@counter 001F  
                            _eusart1RxLastError 002D          __end_of_INTERRUPT_InterruptManagerHigh 0132  
                _INTERRUPT_InterruptManagerHigh 0008                            ??_EXT_INT_Initialize 0021  
                                   _temperatura 003F                                 _TMR0_Initialize 1390  
                                  ___aldiv@sign 0016                                    ___aodiv@sign 0071  
                         ??_EUSART1_Receive_ISR 0001                  __end_of_PIN_MANAGER_Initialize 111E  
                     ??_TMR0_MyInterruptHandler 0003                         ??_EUSART1_RxDataHandler 0001  
                                  ___aomod@sign 0020                                 _TMR1_Initialize 12F0  
                    __end_of_spi1_configuration FE3D                              _ShowMenuInTerminal 03B6  
