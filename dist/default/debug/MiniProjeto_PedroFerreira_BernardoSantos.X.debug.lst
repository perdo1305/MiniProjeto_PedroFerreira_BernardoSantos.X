

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Dec 08 19:35:26 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1
    86                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    89                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    90                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    91                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    92   000000                     
    93                           ; Version 2.40
    94                           ; Generated 17/11/2021 GMT
    95                           ; 
    96                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    97                           ; All rights reserved.
    98                           ; 
    99                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   100                           ; 
   101                           ; Redistribution and use in source and binary forms, with or without modification, are
   102                           ; permitted provided that the following conditions are met:
   103                           ; 
   104                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   105                           ;        conditions and the following disclaimer.
   106                           ; 
   107                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   108                           ;        of conditions and the following disclaimer in the documentation and/or other
   109                           ;        materials provided with the distribution. Publication is not required when
   110                           ;        this file is used in an embedded application.
   111                           ; 
   112                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   113                           ;        software without specific prior written permission.
   114                           ; 
   115                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   116                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   117                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   118                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   119                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   120                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   121                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   122                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   123                           ; 
   124                           ; 
   125                           ; Code-generator required, PIC18F46K22 Definitions
   126                           ; 
   127                           ; SFR Addresses
   128   000000                     
   129                           	psect	idataBANK0
   130   001CD4                     __pidataBANK0:
   131                           	callstack 0
   132                           
   133                           ;initializer for _temperatura
   134   001CD4  0012               	dw	18
   135                           
   136                           ;initializer for _carater_recebido
   137   001CD6  01                 	db	1
   138                           
   139                           ;initializer for _menu
   140   001CD7  30                 	db	48
   141                           
   142                           	psect	mediumconst
   143   00FE32                     __pmediumconst:
   144                           	callstack 0
   145   00FE32  00                 	db	0
   146   00FE33                     _spi1_configuration:
   147                           	callstack 0
   148   00FE33  00                 	db	0
   149   00FE34  40                 	db	64
   150   00FE35  01                 	db	1
   151   00FE36  00                 	db	0
   152   00FE37                     __end_of_spi1_configuration:
   153                           	callstack 0
   154   000000                     _ANSELA	set	3896
   155   000000                     _ANSELB	set	3897
   156   000000                     _ANSELC	set	3898
   157   000000                     _ANSELD	set	3899
   158   000000                     _TRISD	set	3989
   159   000000                     _TRISB	set	3987
   160   000000                     _TRISE	set	3990
   161   000000                     _LATC	set	3979
   162   000000                     _LATB	set	3978
   163   000000                     _OSCTUNE	set	3995
   164   000000                     _RCREG1	set	4014
   165   000000                     _TXREG1	set	4013
   166   000000                     _SPBRG1	set	4015
   167   000000                     _TXSTA1	set	4012
   168   000000                     _PIE1bits	set	3997
   169   000000                     _ADRESH	set	4036
   170   000000                     _ADRESL	set	4035
   171   000000                     _PIR1bits	set	3998
   172   000000                     _SSP1CON2	set	4037
   173   000000                     _CCP5CON	set	3924
   174   00FE37                     STR_6:
   175   00FE37  0D                 	db	13
   176   00FE38  0A                 	db	10
   177   00FE39  33                 	db	51	;'3'
   178   00FE3A  20                 	db	32
   179   00FE3B  2D                 	db	45
   180   00FE3C  20                 	db	32
   181   00FE3D  56                 	db	86	;'V'
   182   00FE3E  69                 	db	105	;'i'
   183   00FE3F  73                 	db	115	;'s'
   184   00FE40  75                 	db	117	;'u'
   185   00FE41  61                 	db	97	;'a'
   186   00FE42  6C                 	db	108	;'l'
   187   00FE43  69                 	db	105	;'i'
   188   00FE44  7A                 	db	122	;'z'
   189   00FE45  61                 	db	97	;'a'
   190   00FE46  72                 	db	114	;'r'
   191   00FE47  20                 	db	32
   192   00FE48  61                 	db	97	;'a'
   193   00FE49  20                 	db	32
   194   00FE4A  70                 	db	112	;'p'
   195   00FE4B  65                 	db	101	;'e'
   196   00FE4C  72                 	db	114	;'r'
   197   00FE4D  63                 	db	99	;'c'
   198   00FE4E  65                 	db	101	;'e'
   199   00FE4F  6E                 	db	110	;'n'
   200   00FE50  74                 	db	116	;'t'
   201   00FE51  61                 	db	97	;'a'
   202   00FE52  67                 	db	103	;'g'
   203   00FE53  65                 	db	101	;'e'
   204   00FE54  6D                 	db	109	;'m'
   205   00FE55  20                 	db	32
   206   00FE56  64                 	db	100	;'d'
   207   00FE57  6F                 	db	111	;'o'
   208   00FE58  20                 	db	32
   209   00FE59  6E                 	db	110	;'n'
   210   00FE5A  69                 	db	105	;'i'
   211   00FE5B  76                 	db	118	;'v'
   212   00FE5C  65                 	db	101	;'e'
   213   00FE5D  6C                 	db	108	;'l'
   214   00FE5E  20                 	db	32
   215   00FE5F  64                 	db	100	;'d'
   216   00FE60  65                 	db	101	;'e'
   217   00FE61  20                 	db	32
   218   00FE62  61                 	db	97	;'a'
   219   00FE63  67                 	db	103	;'g'
   220   00FE64  75                 	db	117	;'u'
   221   00FE65  61                 	db	97	;'a'
   222   00FE66  00                 	db	0
   223   00FE67                     STR_8:
   224   00FE67  0D                 	db	13
   225   00FE68  0A                 	db	10
   226   00FE69  35                 	db	53	;'5'
   227   00FE6A  20                 	db	32
   228   00FE6B  2D                 	db	45
   229   00FE6C  20                 	db	32
   230   00FE6D  50                 	db	80	;'P'
   231   00FE6E  72                 	db	114	;'r'
   232   00FE6F  6F                 	db	111	;'o'
   233   00FE70  67                 	db	103	;'g'
   234   00FE71  72                 	db	114	;'r'
   235   00FE72  61                 	db	97	;'a'
   236   00FE73  6D                 	db	109	;'m'
   237   00FE74  61                 	db	97	;'a'
   238   00FE75  72                 	db	114	;'r'
   239   00FE76  20                 	db	32
   240   00FE77  6E                 	db	110	;'n'
   241   00FE78  6F                 	db	111	;'o'
   242   00FE79  76                 	db	118	;'v'
   243   00FE7A  6F                 	db	111	;'o'
   244   00FE7B  20                 	db	32
   245   00FE7C  76                 	db	118	;'v'
   246   00FE7D  61                 	db	97	;'a'
   247   00FE7E  6C                 	db	108	;'l'
   248   00FE7F  6F                 	db	111	;'o'
   249   00FE80  72                 	db	114	;'r'
   250   00FE81  20                 	db	32
   251   00FE82  64                 	db	100	;'d'
   252   00FE83  65                 	db	101	;'e'
   253   00FE84  20                 	db	32
   254   00FE85  72                 	db	114	;'r'
   255   00FE86  65                 	db	101	;'e'
   256   00FE87  66                 	db	102	;'f'
   257   00FE88  65                 	db	101	;'e'
   258   00FE89  72                 	db	114	;'r'
   259   00FE8A  65                 	db	101	;'e'
   260   00FE8B  6E                 	db	110	;'n'
   261   00FE8C  63                 	db	99	;'c'
   262   00FE8D  69                 	db	105	;'i'
   263   00FE8E  61                 	db	97	;'a'
   264   00FE8F  00                 	db	0
   265   00FE90                     STR_16:
   266   00FE90  0D                 	db	13
   267   00FE91  0A                 	db	10
   268   00FE92  50                 	db	80	;'P'
   269   00FE93  72                 	db	114	;'r'
   270   00FE94  69                 	db	105	;'i'
   271   00FE95  6D                 	db	109	;'m'
   272   00FE96  61                 	db	97	;'a'
   273   00FE97  20                 	db	32
   274   00FE98  30                 	db	48	;'0'
   275   00FE99  20                 	db	32
   276   00FE9A  70                 	db	112	;'p'
   277   00FE9B  61                 	db	97	;'a'
   278   00FE9C  72                 	db	114	;'r'
   279   00FE9D  61                 	db	97	;'a'
   280   00FE9E  20                 	db	32
   281   00FE9F  76                 	db	118	;'v'
   282   00FEA0  6F                 	db	111	;'o'
   283   00FEA1  6C                 	db	108	;'l'
   284   00FEA2  74                 	db	116	;'t'
   285   00FEA3  61                 	db	97	;'a'
   286   00FEA4  72                 	db	114	;'r'
   287   00FEA5  20                 	db	32
   288   00FEA6  61                 	db	97	;'a'
   289   00FEA7  6F                 	db	111	;'o'
   290   00FEA8  20                 	db	32
   291   00FEA9  4D                 	db	77	;'M'
   292   00FEAA  65                 	db	101	;'e'
   293   00FEAB  6E                 	db	110	;'n'
   294   00FEAC  75                 	db	117	;'u'
   295   00FEAD  20                 	db	32
   296   00FEAE  50                 	db	80	;'P'
   297   00FEAF  72                 	db	114	;'r'
   298   00FEB0  69                 	db	105	;'i'
   299   00FEB1  6E                 	db	110	;'n'
   300   00FEB2  63                 	db	99	;'c'
   301   00FEB3  69                 	db	105	;'i'
   302   00FEB4  70                 	db	112	;'p'
   303   00FEB5  61                 	db	97	;'a'
   304   00FEB6  6C                 	db	108	;'l'
   305   00FEB7  00                 	db	0
   306   00FEB8                     STR_7:
   307   00FEB8  0D                 	db	13
   308   00FEB9  0A                 	db	10
   309   00FEBA  34                 	db	52	;'4'
   310   00FEBB  20                 	db	32
   311   00FEBC  2D                 	db	45
   312   00FEBD  20                 	db	32
   313   00FEBE  56                 	db	86	;'V'
   314   00FEBF  69                 	db	105	;'i'
   315   00FEC0  73                 	db	115	;'s'
   316   00FEC1  75                 	db	117	;'u'
   317   00FEC2  61                 	db	97	;'a'
   318   00FEC3  6C                 	db	108	;'l'
   319   00FEC4  69                 	db	105	;'i'
   320   00FEC5  7A                 	db	122	;'z'
   321   00FEC6  61                 	db	97	;'a'
   322   00FEC7  72                 	db	114	;'r'
   323   00FEC8  20                 	db	32
   324   00FEC9  6F                 	db	111	;'o'
   325   00FECA  20                 	db	32
   326   00FECB  6E                 	db	110	;'n'
   327   00FECC  69                 	db	105	;'i'
   328   00FECD  76                 	db	118	;'v'
   329   00FECE  65                 	db	101	;'e'
   330   00FECF  6C                 	db	108	;'l'
   331   00FED0  20                 	db	32
   332   00FED1  64                 	db	100	;'d'
   333   00FED2  65                 	db	101	;'e'
   334   00FED3  20                 	db	32
   335   00FED4  72                 	db	114	;'r'
   336   00FED5  65                 	db	101	;'e'
   337   00FED6  66                 	db	102	;'f'
   338   00FED7  65                 	db	101	;'e'
   339   00FED8  72                 	db	114	;'r'
   340   00FED9  65                 	db	101	;'e'
   341   00FEDA  6E                 	db	110	;'n'
   342   00FEDB  63                 	db	99	;'c'
   343   00FEDC  69                 	db	105	;'i'
   344   00FEDD  61                 	db	97	;'a'
   345   00FEDE  00                 	db	0
   346   00FEDF                     STR_5:
   347   00FEDF  0D                 	db	13
   348   00FEE0  0A                 	db	10
   349   00FEE1  32                 	db	50	;'2'
   350   00FEE2  20                 	db	32
   351   00FEE3  2D                 	db	45
   352   00FEE4  20                 	db	32
   353   00FEE5  41                 	db	65	;'A'
   354   00FEE6  74                 	db	116	;'t'
   355   00FEE7  69                 	db	105	;'i'
   356   00FEE8  76                 	db	118	;'v'
   357   00FEE9  61                 	db	97	;'a'
   358   00FEEA  72                 	db	114	;'r'
   359   00FEEB  20                 	db	32
   360   00FEEC  63                 	db	99	;'c'
   361   00FEED  6F                 	db	111	;'o'
   362   00FEEE  6D                 	db	109	;'m'
   363   00FEEF  74                 	db	116	;'t'
   364   00FEF0  72                 	db	114	;'r'
   365   00FEF1  6F                 	db	111	;'o'
   366   00FEF2  6C                 	db	108	;'l'
   367   00FEF3  6F                 	db	111	;'o'
   368   00FEF4  20                 	db	32
   369   00FEF5  64                 	db	100	;'d'
   370   00FEF6  6F                 	db	111	;'o'
   371   00FEF7  20                 	db	32
   372   00FEF8  6E                 	db	110	;'n'
   373   00FEF9  69                 	db	105	;'i'
   374   00FEFA  76                 	db	118	;'v'
   375   00FEFB  65                 	db	101	;'e'
   376   00FEFC  6C                 	db	108	;'l'
   377   00FEFD  20                 	db	32
   378   00FEFE  64                 	db	100	;'d'
   379   00FEFF  65                 	db	101	;'e'
   380   00FF00  20                 	db	32
   381   00FF01  61                 	db	97	;'a'
   382   00FF02  67                 	db	103	;'g'
   383   00FF03  75                 	db	117	;'u'
   384   00FF04  61                 	db	97	;'a'
   385   00FF05  00                 	db	0
   386   00FF06                     STR_12:
   387   00FF06  0D                 	db	13
   388   00FF07  0A                 	db	10
   389   00FF08  43                 	db	67	;'C'
   390   00FF09  6F                 	db	111	;'o'
   391   00FF0A  6E                 	db	110	;'n'
   392   00FF0B  74                 	db	116	;'t'
   393   00FF0C  72                 	db	114	;'r'
   394   00FF0D  6F                 	db	111	;'o'
   395   00FF0E  6C                 	db	108	;'l'
   396   00FF0F  6F                 	db	111	;'o'
   397   00FF10  20                 	db	32
   398   00FF11  64                 	db	100	;'d'
   399   00FF12  6F                 	db	111	;'o'
   400   00FF13  20                 	db	32
   401   00FF14  6E                 	db	110	;'n'
   402   00FF15  69                 	db	105	;'i'
   403   00FF16  76                 	db	118	;'v'
   404   00FF17  65                 	db	101	;'e'
   405   00FF18  6C                 	db	108	;'l'
   406   00FF19  20                 	db	32
   407   00FF1A  64                 	db	100	;'d'
   408   00FF1B  65                 	db	101	;'e'
   409   00FF1C  20                 	db	32
   410   00FF1D  61                 	db	97	;'a'
   411   00FF1E  67                 	db	103	;'g'
   412   00FF1F  75                 	db	117	;'u'
   413   00FF20  61                 	db	97	;'a'
   414   00FF21  20                 	db	32
   415   00FF22  61                 	db	97	;'a'
   416   00FF23  74                 	db	116	;'t'
   417   00FF24  69                 	db	105	;'i'
   418   00FF25  76                 	db	118	;'v'
   419   00FF26  61                 	db	97	;'a'
   420   00FF27  64                 	db	100	;'d'
   421   00FF28  6F                 	db	111	;'o'
   422   00FF29  00                 	db	0
   423   00FF2A                     STR_13:
   424   00FF2A  0D                 	db	13
   425   00FF2B  0A                 	db	10
   426   00FF2C  50                 	db	80	;'P'
   427   00FF2D  65                 	db	101	;'e'
   428   00FF2E  72                 	db	114	;'r'
   429   00FF2F  63                 	db	99	;'c'
   430   00FF30  65                 	db	101	;'e'
   431   00FF31  6E                 	db	110	;'n'
   432   00FF32  74                 	db	116	;'t'
   433   00FF33  61                 	db	97	;'a'
   434   00FF34  67                 	db	103	;'g'
   435   00FF35  65                 	db	101	;'e'
   436   00FF36  6D                 	db	109	;'m'
   437   00FF37  20                 	db	32
   438   00FF38  64                 	db	100	;'d'
   439   00FF39  6F                 	db	111	;'o'
   440   00FF3A  20                 	db	32
   441   00FF3B  6E                 	db	110	;'n'
   442   00FF3C  69                 	db	105	;'i'
   443   00FF3D  76                 	db	118	;'v'
   444   00FF3E  65                 	db	101	;'e'
   445   00FF3F  6C                 	db	108	;'l'
   446   00FF40  20                 	db	32
   447   00FF41  64                 	db	100	;'d'
   448   00FF42  65                 	db	101	;'e'
   449   00FF43  20                 	db	32
   450   00FF44  61                 	db	97	;'a'
   451   00FF45  67                 	db	103	;'g'
   452   00FF46  75                 	db	117	;'u'
   453   00FF47  61                 	db	97	;'a'
   454   00FF48  3A                 	db	58	;':'
   455   00FF49  20                 	db	32
   456   00FF4A  25                 	db	37
   457   00FF4B  64                 	db	100	;'d'
   458   00FF4C  00                 	db	0
   459   00FF4D                     STR_2:
   460   00FF4D  53                 	db	83	;'S'
   461   00FF4E  45                 	db	69	;'E'
   462   00FF4F  54                 	db	84	;'T'
   463   00FF50  55                 	db	85	;'U'
   464   00FF51  50                 	db	80	;'P'
   465   00FF52  20                 	db	32
   466   00FF53  43                 	db	67	;'C'
   467   00FF54  4F                 	db	79	;'O'
   468   00FF55  4D                 	db	77	;'M'
   469   00FF56  50                 	db	80	;'P'
   470   00FF57  4C                 	db	76	;'L'
   471   00FF58  45                 	db	69	;'E'
   472   00FF59  54                 	db	84	;'T'
   473   00FF5A  45                 	db	69	;'E'
   474   00FF5B  44                 	db	68	;'D'
   475   00FF5C  20                 	db	32
   476   00FF5D  53                 	db	83	;'S'
   477   00FF5E  55                 	db	85	;'U'
   478   00FF5F  43                 	db	67	;'C'
   479   00FF60  43                 	db	67	;'C'
   480   00FF61  45                 	db	69	;'E'
   481   00FF62  53                 	db	83	;'S'
   482   00FF63  53                 	db	83	;'S'
   483   00FF64  46                 	db	70	;'F'
   484   00FF65  55                 	db	85	;'U'
   485   00FF66  4C                 	db	76	;'L'
   486   00FF67  4C                 	db	76	;'L'
   487   00FF68  59                 	db	89	;'Y'
   488   00FF69  0D                 	db	13
   489   00FF6A  0A                 	db	10
   490   00FF6B  00                 	db	0
   491   00FF6C                     STR_9:
   492   00FF6C  0D                 	db	13
   493   00FF6D  0A                 	db	10
   494   00FF6E  30                 	db	48	;'0'
   495   00FF6F  20                 	db	32
   496   00FF70  2D                 	db	45
   497   00FF71  20                 	db	32
   498   00FF72  56                 	db	86	;'V'
   499   00FF73  6F                 	db	111	;'o'
   500   00FF74  6C                 	db	108	;'l'
   501   00FF75  74                 	db	116	;'t'
   502   00FF76  61                 	db	97	;'a'
   503   00FF77  72                 	db	114	;'r'
   504   00FF78  20                 	db	32
   505   00FF79  61                 	db	97	;'a'
   506   00FF7A  6F                 	db	111	;'o'
   507   00FF7B  20                 	db	32
   508   00FF7C  4D                 	db	77	;'M'
   509   00FF7D  65                 	db	101	;'e'
   510   00FF7E  6E                 	db	110	;'n'
   511   00FF7F  75                 	db	117	;'u'
   512   00FF80  20                 	db	32
   513   00FF81  50                 	db	80	;'P'
   514   00FF82  72                 	db	114	;'r'
   515   00FF83  69                 	db	105	;'i'
   516   00FF84  6E                 	db	110	;'n'
   517   00FF85  63                 	db	99	;'c'
   518   00FF86  69                 	db	105	;'i'
   519   00FF87  70                 	db	112	;'p'
   520   00FF88  61                 	db	97	;'a'
   521   00FF89  6C                 	db	108	;'l'
   522   00FF8A  00                 	db	0
   523   00FF8B                     STR_4:
   524   00FF8B  0D                 	db	13
   525   00FF8C  0A                 	db	10
   526   00FF8D  31                 	db	49	;'1'
   527   00FF8E  20                 	db	32
   528   00FF8F  2D                 	db	45
   529   00FF90  20                 	db	32
   530   00FF91  44                 	db	68	;'D'
   531   00FF92  65                 	db	101	;'e'
   532   00FF93  73                 	db	115	;'s'
   533   00FF94  6C                 	db	108	;'l'
   534   00FF95  69                 	db	105	;'i'
   535   00FF96  67                 	db	103	;'g'
   536   00FF97  61                 	db	97	;'a'
   537   00FF98  72                 	db	114	;'r'
   538   00FF99  20                 	db	32
   539   00FF9A  62                 	db	98	;'b'
   540   00FF9B  6F                 	db	111	;'o'
   541   00FF9C  6D                 	db	109	;'m'
   542   00FF9D  62                 	db	98	;'b'
   543   00FF9E  61                 	db	97	;'a'
   544   00FF9F  20                 	db	32
   545   00FFA0  64                 	db	100	;'d'
   546   00FFA1  65                 	db	101	;'e'
   547   00FFA2  20                 	db	32
   548   00FFA3  61                 	db	97	;'a'
   549   00FFA4  67                 	db	103	;'g'
   550   00FFA5  75                 	db	117	;'u'
   551   00FFA6  61                 	db	97	;'a'
   552   00FFA7  00                 	db	0
   553   00FFA8                     STR_11:
   554   00FFA8  0D                 	db	13
   555   00FFA9  0A                 	db	10
   556   00FFAA  42                 	db	66	;'B'
   557   00FFAB  6F                 	db	111	;'o'
   558   00FFAC  6D                 	db	109	;'m'
   559   00FFAD  62                 	db	98	;'b'
   560   00FFAE  61                 	db	97	;'a'
   561   00FFAF  20                 	db	32
   562   00FFB0  64                 	db	100	;'d'
   563   00FFB1  65                 	db	101	;'e'
   564   00FFB2  20                 	db	32
   565   00FFB3  61                 	db	97	;'a'
   566   00FFB4  67                 	db	103	;'g'
   567   00FFB5  75                 	db	117	;'u'
   568   00FFB6  61                 	db	97	;'a'
   569   00FFB7  20                 	db	32
   570   00FFB8  64                 	db	100	;'d'
   571   00FFB9  65                 	db	101	;'e'
   572   00FFBA  73                 	db	115	;'s'
   573   00FFBB  6C                 	db	108	;'l'
   574   00FFBC  69                 	db	105	;'i'
   575   00FFBD  67                 	db	103	;'g'
   576   00FFBE  61                 	db	97	;'a'
   577   00FFBF  64                 	db	100	;'d'
   578   00FFC0  61                 	db	97	;'a'
   579   00FFC1  00                 	db	0
   580   00FFC2                     STR_3:
   581   00FFC2  0D                 	db	13
   582   00FFC3  0A                 	db	10
   583   00FFC4  4D                 	db	77	;'M'
   584   00FFC5  45                 	db	69	;'E'
   585   00FFC6  4E                 	db	78	;'N'
   586   00FFC7  55                 	db	85	;'U'
   587   00FFC8  20                 	db	32
   588   00FFC9  50                 	db	80	;'P'
   589   00FFCA  52                 	db	82	;'R'
   590   00FFCB  49                 	db	73	;'I'
   591   00FFCC  4E                 	db	78	;'N'
   592   00FFCD  43                 	db	67	;'C'
   593   00FFCE  49                 	db	73	;'I'
   594   00FFCF  50                 	db	80	;'P'
   595   00FFD0  41                 	db	65	;'A'
   596   00FFD1  4C                 	db	76	;'L'
   597   00FFD2  00                 	db	0
   598   00FFD3                     STR_15:
   599   00FFD3  0D                 	db	13
   600   00FFD4  0A                 	db	10
   601   00FFD5  4F                 	db	79	;'O'
   602   00FFD6  70                 	db	112	;'p'
   603   00FFD7  63                 	db	99	;'c'
   604   00FFD8  61                 	db	97	;'a'
   605   00FFD9  6F                 	db	111	;'o'
   606   00FFDA  20                 	db	32
   607   00FFDB  49                 	db	73	;'I'
   608   00FFDC  6E                 	db	110	;'n'
   609   00FFDD  76                 	db	118	;'v'
   610   00FFDE  61                 	db	97	;'a'
   611   00FFDF  6C                 	db	108	;'l'
   612   00FFE0  69                 	db	105	;'i'
   613   00FFE1  64                 	db	100	;'d'
   614   00FFE2  61                 	db	97	;'a'
   615   00FFE3  00                 	db	0
   616   00FFE4                     STR_14:
   617   00FFE4  0D                 	db	13
   618   00FFE5  0A                 	db	10
   619   00FFE6  62                 	db	98	;'b'
   620   00FFE7  69                 	db	105	;'i'
   621   00FFE8  74                 	db	116	;'t'
   622   00FFE9  73                 	db	115	;'s'
   623   00FFEA  3A                 	db	58	;':'
   624   00FFEB  20                 	db	32
   625   00FFEC  25                 	db	37
   626   00FFED  64                 	db	100	;'d'
   627   00FFEE  00                 	db	0
   628   00FFEF                     STR_10:
   629   00FFEF  0D                 	db	13
   630   00FFF0  0A                 	db	10
   631   00FFF1  4F                 	db	79	;'O'
   632   00FFF2  70                 	db	112	;'p'
   633   00FFF3  63                 	db	99	;'c'
   634   00FFF4  61                 	db	97	;'a'
   635   00FFF5  6F                 	db	111	;'o'
   636   00FFF6  3A                 	db	58	;':'
   637   00FFF7  20                 	db	32
   638   00FFF8  00                 	db	0
   639   00FFF9                     STR_1:
   640   00FFF9  6F                 	db	111	;'o'
   641   00FFFA  6C                 	db	108	;'l'
   642   00FFFB  61                 	db	97	;'a'
   643   00FFFC  0D                 	db	13
   644   00FFFD  0A                 	db	10
   645   00FFFE  00                 	db	0
   646   00FFFF  00                 	db	0	; dummy byte at the end
   647   000000                     
   648                           	psect	nvBANK0
   649   0000E9                     __pnvBANK0:
   650                           	callstack 0
   651   0000E9                     _TMR0_InterruptHandler:
   652                           	callstack 0
   653   0000E9                     	ds	2
   654   0000EB                     _INT0_InterruptHandler:
   655                           	callstack 0
   656   0000EB                     	ds	2
   657   0000ED                     _ADC_InterruptHandler:
   658                           	callstack 0
   659   0000ED                     	ds	2
   660   0000EF                     _timer0ReloadVal:
   661                           	callstack 0
   662   0000EF                     	ds	1
   663   0000F0                     _eusart1TxBufferRemaining:
   664                           	callstack 0
   665   0000F0                     	ds	1
   666                           
   667                           	psect	nvBANK1
   668   000128                     __pnvBANK1:
   669                           	callstack 0
   670   000128                     _EUSART1_ErrorHandler:
   671                           	callstack 0
   672   000128                     	ds	2
   673   00012A                     _EUSART1_OverrunErrorHandler:
   674                           	callstack 0
   675   00012A                     	ds	2
   676   00012C                     _EUSART1_FramingErrorHandler:
   677                           	callstack 0
   678   00012C                     	ds	2
   679   00012E                     _EUSART1_RxDefaultInterruptHandler:
   680                           	callstack 0
   681   00012E                     	ds	2
   682   000130                     _EUSART1_TxDefaultInterruptHandler:
   683                           	callstack 0
   684   000130                     	ds	2
   685   000000                     _LATBbits	set	3978
   686   000000                     _T0CONbits	set	4053
   687   000000                     _TRISC	set	3988
   688   000000                     _RCSTA1bits	set	4011
   689   000000                     _TXSTA1bits	set	4012
   690   000000                     _ADCON0bits	set	4034
   691   000000                     _SSP1CON1bits	set	4038
   692   000000                     _WPUB	set	3937
   693   000000                     _LATA	set	3977
   694   000000                     _LATD	set	3980
   695   000000                     _LATE	set	3981
   696   000000                     _TRISCbits	set	3988
   697   000000                     _SSP1CON1	set	4038
   698   000000                     _SSP1STAT	set	4039
   699   000000                     _CCPR5H	set	3926
   700   000000                     _CCPR5L	set	3925
   701   000000                     _RCONbits	set	4048
   702   000000                     _INTCON2bits	set	4081
   703   000000                     _INTCONbits	set	4082
   704   000000                     _SSP1BUF	set	4041
   705   000000                     _SSP1ADD	set	4040
   706   000000                     _IPR1bits	set	3999
   707   000000                     _RCSTA1	set	4011
   708   000000                     _BAUDCON1	set	4024
   709   000000                     _ADCON2	set	4032
   710   000000                     _ADCON1	set	4033
   711   000000                     _ADCON0	set	4034
   712   000000                     _SPBRGH1	set	4016
   713   000000                     _OSCCON2	set	4050
   714   000000                     _OSCCON	set	4051
   715   000000                     _T0CON	set	4053
   716   000000                     _TMR0L	set	4054
   717   000000                     _TMR0H	set	4055
   718   000000                     _TRISA	set	3986
   719   000000                     _ANSELE	set	3900
   720                           
   721                           ; #config settings
   722                           
   723                           	psect	cinit
   724   001932                     __pcinit:
   725                           	callstack 0
   726   001932                     start_initialization:
   727                           	callstack 0
   728   001932                     __initialization:
   729                           	callstack 0
   730                           
   731                           ; Initialize objects allocated to BANK0 (4 bytes)
   732                           ; load TBLPTR registers with __pidataBANK0
   733   001932  0ED4               	movlw	low __pidataBANK0
   734   001934  6EF6               	movwf	tblptrl,c
   735   001936  0E1C               	movlw	high __pidataBANK0
   736   001938  6EF7               	movwf	tblptrh,c
   737   00193A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   738   00193C  6EF8               	movwf	tblptru,c
   739   00193E  EE00  F0F1         	lfsr	0,__pdataBANK0
   740   001942  EE10 F004          	lfsr	1,4
   741   001946                     copy_data0:
   742   001946  0009               	tblrd		*+
   743   001948  CFF5 FFEE          	movff	tablat,postinc0
   744   00194C  50E5               	movf	postdec1,w,c
   745   00194E  50E1               	movf	fsr1l,w,c
   746   001950  E1FA               	bnz	copy_data0
   747                           
   748                           ; Clear objects allocated to BANK1 (40 bytes)
   749   001952  EE01  F000         	lfsr	0,__pbssBANK1
   750   001956  0E28               	movlw	40
   751   001958                     clear_0:
   752   001958  6AEE               	clrf	postinc0,c
   753   00195A  06E8               	decf	wreg,f,c
   754   00195C  E1FD               	bnz	clear_0
   755                           
   756                           ; Clear objects allocated to BANK0 (38 bytes)
   757   00195E  EE00  F0C3         	lfsr	0,__pbssBANK0
   758   001962  0E26               	movlw	38
   759   001964                     clear_1:
   760   001964  6AEE               	clrf	postinc0,c
   761   001966  06E8               	decf	wreg,f,c
   762   001968  E1FD               	bnz	clear_1
   763   00196A                     end_of_initialization:
   764                           	callstack 0
   765   00196A                     __end_of__initialization:
   766                           	callstack 0
   767   00196A  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   768   00196C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   769   00196E  0100               	movlb	0
   770   001970  EF5D  F00A         	goto	_main	;jump to C main() function
   771                           
   772                           	psect	bssBANK0
   773   0000C3                     __pbssBANK0:
   774                           	callstack 0
   775   0000C3                     _eusart1RxStatusBuffer:
   776                           	callstack 0
   777   0000C3                     	ds	8
   778   0000CB                     _eusart1TxBuffer:
   779                           	callstack 0
   780   0000CB                     	ds	8
   781   0000D3                     _s:
   782                           	callstack 0
   783   0000D3                     	ds	4
   784   0000D7                     _width:
   785                           	callstack 0
   786   0000D7                     	ds	2
   787   0000D9                     _prec:
   788                           	callstack 0
   789   0000D9                     	ds	2
   790   0000DB                     _nivel_agua:
   791                           	callstack 0
   792   0000DB                     	ds	2
   793   0000DD                     _convertedValue:
   794                           	callstack 0
   795   0000DD                     	ds	2
   796   0000DF                     _flags:
   797                           	callstack 0
   798   0000DF                     	ds	1
   799   0000E0                     _intro_valor:
   800                           	callstack 0
   801   0000E0                     	ds	1
   802   0000E1                     _cnt_char:
   803                           	callstack 0
   804   0000E1                     	ds	1
   805   0000E2                     _rxData:
   806                           	callstack 0
   807   0000E2                     	ds	1
   808   0000E3                     _eusart1RxLastError:
   809                           	callstack 0
   810   0000E3                     	ds	1
   811   0000E4                     _eusart1RxCount:
   812                           	callstack 0
   813   0000E4                     	ds	1
   814   0000E5                     _eusart1RxTail:
   815                           	callstack 0
   816   0000E5                     	ds	1
   817   0000E6                     _eusart1RxHead:
   818                           	callstack 0
   819   0000E6                     	ds	1
   820   0000E7                     _eusart1TxTail:
   821                           	callstack 0
   822   0000E7                     	ds	1
   823   0000E8                     _eusart1TxHead:
   824                           	callstack 0
   825   0000E8                     	ds	1
   826                           
   827                           	psect	dataBANK0
   828   0000F1                     __pdataBANK0:
   829                           	callstack 0
   830   0000F1                     _temperatura:
   831                           	callstack 0
   832   0000F1                     	ds	2
   833   0000F3                     _carater_recebido:
   834                           	callstack 0
   835   0000F3                     	ds	1
   836   0000F4                     _menu:
   837                           	callstack 0
   838   0000F4                     	ds	1
   839                           
   840                           	psect	bssBANK1
   841   000100                     __pbssBANK1:
   842                           	callstack 0
   843   000100                     _eusart1RxBuffer:
   844                           	callstack 0
   845   000100                     	ds	8
   846   000108                     _dbuf:
   847                           	callstack 0
   848   000108                     	ds	32
   849                           
   850                           	psect	cstackBANK1
   851   000132                     __pcstackBANK1:
   852                           	callstack 0
   853   000132                     vfprintf@cfmt:
   854                           	callstack 0
   855                           
   856                           ; 2 bytes @ 0x0
   857   000132                     	ds	2
   858   000134                     ?_printf:
   859                           	callstack 0
   860   000134                     printf@fmt:
   861                           	callstack 0
   862                           
   863                           ; 2 bytes @ 0x2
   864   000134                     	ds	4
   865   000138                     printf@ap:
   866                           	callstack 0
   867                           
   868                           ; 2 bytes @ 0x6
   869   000138                     	ds	2
   870   00013A                     ??_ShowMenuInTerminal:
   871                           
   872                           ; 1 bytes @ 0x8
   873   00013A                     	ds	2
   874                           
   875                           	psect	cstackBANK0
   876   000060                     __pcstackBANK0:
   877                           	callstack 0
   878   000060                     ??_INT0_MyInterruptHandler:
   879                           
   880                           ; 1 bytes @ 0x0
   881   000060                     	ds	1
   882   000061                     ??_INTERRUPT_InterruptManagerHigh:
   883                           
   884                           ; 1 bytes @ 0x1
   885   000061                     	ds	10
   886   00006B                     ?___aodiv:
   887                           	callstack 0
   888   00006B                     ?___aomod:
   889                           	callstack 0
   890   00006B                     EUSART1_Read@readValue:
   891                           	callstack 0
   892   00006B                     EUSART1_Write@txData:
   893                           	callstack 0
   894   00006B                     ADC_SetInterruptHandler@InterruptHandler:
   895                           	callstack 0
   896   00006B                     INT0_SetInterruptHandler@InterruptHandler:
   897                           	callstack 0
   898   00006B                     EUSART1_SetFramingErrorHandler@interruptHandler:
   899                           	callstack 0
   900   00006B                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   901                           	callstack 0
   902   00006B                     EUSART1_SetErrorHandler@interruptHandler:
   903                           	callstack 0
   904   00006B                     EUSART1_SetTxInterruptHandler@interruptHandler:
   905                           	callstack 0
   906   00006B                     EUSART1_SetRxInterruptHandler@interruptHandler:
   907                           	callstack 0
   908   00006B                     TMR0_SetInterruptHandler@InterruptHandler:
   909                           	callstack 0
   910   00006B                     ___aodiv@dividend:
   911                           	callstack 0
   912   00006B                     ___aomod@dividend:
   913                           	callstack 0
   914                           
   915                           ; 8 bytes @ 0xB
   916   00006B                     	ds	1
   917   00006C                     putch@txData:
   918                           	callstack 0
   919                           
   920                           ; 1 bytes @ 0xC
   921   00006C                     	ds	1
   922   00006D                     fputc@c:
   923                           	callstack 0
   924                           
   925                           ; 2 bytes @ 0xD
   926   00006D                     	ds	2
   927   00006F                     fputc@fp:
   928                           	callstack 0
   929                           
   930                           ; 2 bytes @ 0xF
   931   00006F                     	ds	2
   932   000071                     ??_fputc:
   933                           
   934                           ; 1 bytes @ 0x11
   935   000071                     	ds	2
   936   000073                     ___aodiv@divisor:
   937                           	callstack 0
   938   000073                     ___aomod@divisor:
   939                           	callstack 0
   940                           
   941                           ; 8 bytes @ 0x13
   942   000073                     	ds	3
   943   000076                     fputs@s:
   944                           	callstack 0
   945                           
   946                           ; 2 bytes @ 0x16
   947   000076                     	ds	2
   948   000078                     fputs@fp:
   949                           	callstack 0
   950                           
   951                           ; 2 bytes @ 0x18
   952   000078                     	ds	2
   953   00007A                     fputs@c:
   954                           	callstack 0
   955                           
   956                           ; 1 bytes @ 0x1A
   957   00007A                     	ds	1
   958   00007B                     ___aodiv@counter:
   959                           	callstack 0
   960   00007B                     ___aomod@counter:
   961                           	callstack 0
   962   00007B                     fputs@i:
   963                           	callstack 0
   964                           
   965                           ; 2 bytes @ 0x1B
   966   00007B                     	ds	1
   967   00007C                     ___aodiv@sign:
   968                           	callstack 0
   969   00007C                     ___aomod@sign:
   970                           	callstack 0
   971                           
   972                           ; 1 bytes @ 0x1C
   973   00007C                     	ds	1
   974   00007D                     ?_abs:
   975                           	callstack 0
   976   00007D                     pad@fp:
   977                           	callstack 0
   978   00007D                     abs@a:
   979                           	callstack 0
   980   00007D                     ___aodiv@quotient:
   981                           	callstack 0
   982                           
   983                           ; 8 bytes @ 0x1D
   984   00007D                     	ds	2
   985   00007F                     ??_abs:
   986   00007F                     pad@buf:
   987                           	callstack 0
   988                           
   989                           ; 2 bytes @ 0x1F
   990   00007F                     	ds	2
   991   000081                     pad@p:
   992                           	callstack 0
   993                           
   994                           ; 2 bytes @ 0x21
   995   000081                     	ds	2
   996   000083                     ??_pad:
   997                           
   998                           ; 1 bytes @ 0x23
   999   000083                     	ds	1
  1000   000084                     pad@i:
  1001                           	callstack 0
  1002                           
  1003                           ; 2 bytes @ 0x24
  1004   000084                     	ds	2
  1005   000086                     pad@w:
  1006                           	callstack 0
  1007                           
  1008                           ; 2 bytes @ 0x26
  1009   000086                     	ds	2
  1010   000088                     dtoa@fp:
  1011                           	callstack 0
  1012                           
  1013                           ; 2 bytes @ 0x28
  1014   000088                     	ds	2
  1015   00008A                     dtoa@d:
  1016                           	callstack 0
  1017                           
  1018                           ; 8 bytes @ 0x2A
  1019   00008A                     	ds	8
  1020   000092                     ??_dtoa:
  1021                           
  1022                           ; 1 bytes @ 0x32
  1023   000092                     	ds	8
  1024   00009A                     _dtoa$1855:
  1025                           	callstack 0
  1026                           
  1027                           ; 2 bytes @ 0x3A
  1028   00009A                     	ds	2
  1029   00009C                     dtoa@p:
  1030                           	callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x3C
  1033   00009C                     	ds	2
  1034   00009E                     dtoa@w:
  1035                           	callstack 0
  1036                           
  1037                           ; 2 bytes @ 0x3E
  1038   00009E                     	ds	2
  1039   0000A0                     dtoa@n:
  1040                           	callstack 0
  1041                           
  1042                           ; 8 bytes @ 0x40
  1043   0000A0                     	ds	8
  1044   0000A8                     dtoa@s:
  1045                           	callstack 0
  1046                           
  1047                           ; 1 bytes @ 0x48
  1048   0000A8                     	ds	1
  1049   0000A9                     dtoa@i:
  1050                           	callstack 0
  1051                           
  1052                           ; 2 bytes @ 0x49
  1053   0000A9                     	ds	2
  1054   0000AB                     vfpfcnvrt@fp:
  1055                           	callstack 0
  1056                           
  1057                           ; 2 bytes @ 0x4B
  1058   0000AB                     	ds	2
  1059   0000AD                     vfpfcnvrt@fmt:
  1060                           	callstack 0
  1061                           
  1062                           ; 2 bytes @ 0x4D
  1063   0000AD                     	ds	2
  1064   0000AF                     vfpfcnvrt@ap:
  1065                           	callstack 0
  1066                           
  1067                           ; 2 bytes @ 0x4F
  1068   0000AF                     	ds	2
  1069   0000B1                     ??_vfpfcnvrt:
  1070                           
  1071                           ; 1 bytes @ 0x51
  1072   0000B1                     	ds	2
  1073   0000B3                     vfpfcnvrt@convarg:
  1074                           	callstack 0
  1075                           
  1076                           ; 8 bytes @ 0x53
  1077   0000B3                     	ds	8
  1078   0000BB                     vfpfcnvrt@cp:
  1079                           	callstack 0
  1080                           
  1081                           ; 2 bytes @ 0x5B
  1082   0000BB                     	ds	2
  1083   0000BD                     ?_vfprintf:
  1084                           	callstack 0
  1085   0000BD                     vfprintf@fp:
  1086                           	callstack 0
  1087                           
  1088                           ; 2 bytes @ 0x5D
  1089   0000BD                     	ds	2
  1090   0000BF                     vfprintf@fmt:
  1091                           	callstack 0
  1092                           
  1093                           ; 2 bytes @ 0x5F
  1094   0000BF                     	ds	2
  1095   0000C1                     vfprintf@ap:
  1096                           	callstack 0
  1097                           
  1098                           ; 2 bytes @ 0x61
  1099   0000C1                     	ds	2
  1100   0000C3                     
  1101                           ; 1 bytes @ 0x63
  1102                           
  1103                           	psect	cstackCOMRAM
  1104   000001                     __pcstackCOMRAM:
  1105                           	callstack 0
  1106   000001                     ??_ADC_SelectChannel:
  1107   000001                     ?_ADC_GetConversionResult:
  1108                           	callstack 0
  1109   000001                     ?___lmul:
  1110                           	callstack 0
  1111   000001                     ?i2___aodiv:
  1112                           	callstack 0
  1113   000001                     ?i2___aomod:
  1114                           	callstack 0
  1115   000001                     i2EUSART1_Write@txData:
  1116                           	callstack 0
  1117   000001                     ___lmul@multiplier:
  1118                           	callstack 0
  1119   000001                     i2___aodiv@dividend:
  1120                           	callstack 0
  1121   000001                     i2___aomod@dividend:
  1122                           	callstack 0
  1123                           
  1124                           ; 8 bytes @ 0x0
  1125   000001                     	ds	1
  1126   000002                     ADC_SelectChannel@channel:
  1127                           	callstack 0
  1128   000002                     i2putch@txData:
  1129                           	callstack 0
  1130                           
  1131                           ; 1 bytes @ 0x1
  1132   000002                     	ds	1
  1133   000003                     ??_ADC_GetConversionResult:
  1134   000003                     i2fputc@c:
  1135                           	callstack 0
  1136                           
  1137                           ; 2 bytes @ 0x2
  1138   000003                     	ds	2
  1139   000005                     i2fputc@fp:
  1140                           	callstack 0
  1141   000005                     ___lmul@multiplicand:
  1142                           	callstack 0
  1143                           
  1144                           ; 4 bytes @ 0x4
  1145   000005                     	ds	2
  1146   000007                     ??i2_fputc:
  1147                           
  1148                           ; 1 bytes @ 0x6
  1149   000007                     	ds	2
  1150   000009                     ___lmul@product:
  1151                           	callstack 0
  1152   000009                     i2___aodiv@divisor:
  1153                           	callstack 0
  1154   000009                     i2___aomod@divisor:
  1155                           	callstack 0
  1156                           
  1157                           ; 8 bytes @ 0x8
  1158   000009                     	ds	3
  1159   00000C                     i2fputs@s:
  1160                           	callstack 0
  1161                           
  1162                           ; 2 bytes @ 0xB
  1163   00000C                     	ds	1
  1164   00000D                     ?___aldiv:
  1165                           	callstack 0
  1166   00000D                     ___aldiv@dividend:
  1167                           	callstack 0
  1168                           
  1169                           ; 4 bytes @ 0xC
  1170   00000D                     	ds	1
  1171   00000E                     i2fputs@fp:
  1172                           	callstack 0
  1173                           
  1174                           ; 2 bytes @ 0xD
  1175   00000E                     	ds	2
  1176   000010                     i2fputs@c:
  1177                           	callstack 0
  1178                           
  1179                           ; 1 bytes @ 0xF
  1180   000010                     	ds	1
  1181   000011                     i2___aodiv@counter:
  1182                           	callstack 0
  1183   000011                     i2___aomod@counter:
  1184                           	callstack 0
  1185   000011                     i2fputs@i:
  1186                           	callstack 0
  1187   000011                     ___aldiv@divisor:
  1188                           	callstack 0
  1189                           
  1190                           ; 4 bytes @ 0x10
  1191   000011                     	ds	1
  1192   000012                     i2___aodiv@sign:
  1193                           	callstack 0
  1194   000012                     i2___aomod@sign:
  1195                           	callstack 0
  1196                           
  1197                           ; 1 bytes @ 0x11
  1198   000012                     	ds	1
  1199   000013                     ?i2_abs:
  1200                           	callstack 0
  1201   000013                     i2pad@fp:
  1202                           	callstack 0
  1203   000013                     i2abs@a:
  1204                           	callstack 0
  1205   000013                     i2___aodiv@quotient:
  1206                           	callstack 0
  1207                           
  1208                           ; 8 bytes @ 0x12
  1209   000013                     	ds	2
  1210   000015                     ??i2_abs:
  1211   000015                     ___aldiv@counter:
  1212                           	callstack 0
  1213   000015                     i2pad@buf:
  1214                           	callstack 0
  1215                           
  1216                           ; 2 bytes @ 0x14
  1217   000015                     	ds	1
  1218   000016                     ___aldiv@sign:
  1219                           	callstack 0
  1220                           
  1221                           ; 1 bytes @ 0x15
  1222   000016                     	ds	1
  1223   000017                     i2pad@p:
  1224                           	callstack 0
  1225   000017                     ___aldiv@quotient:
  1226                           	callstack 0
  1227                           
  1228                           ; 4 bytes @ 0x16
  1229   000017                     	ds	2
  1230   000019                     ??i2_pad:
  1231                           
  1232                           ; 1 bytes @ 0x18
  1233   000019                     	ds	1
  1234   00001A                     i2pad@i:
  1235                           	callstack 0
  1236                           
  1237                           ; 2 bytes @ 0x19
  1238   00001A                     	ds	1
  1239   00001B                     
  1240                           ; 1 bytes @ 0x1A
  1241   00001B                     	ds	1
  1242   00001C                     i2pad@w:
  1243                           	callstack 0
  1244                           
  1245                           ; 2 bytes @ 0x1B
  1246   00001C                     	ds	2
  1247   00001E                     i2dtoa@fp:
  1248                           	callstack 0
  1249                           
  1250                           ; 2 bytes @ 0x1D
  1251   00001E                     	ds	2
  1252   000020                     i2dtoa@d:
  1253                           	callstack 0
  1254                           
  1255                           ; 8 bytes @ 0x1F
  1256   000020                     	ds	8
  1257   000028                     ??i2_dtoa:
  1258                           
  1259                           ; 1 bytes @ 0x27
  1260   000028                     	ds	8
  1261   000030                     i2_dtoa$1855:
  1262                           	callstack 0
  1263                           
  1264                           ; 2 bytes @ 0x2F
  1265   000030                     	ds	2
  1266   000032                     i2dtoa@p:
  1267                           	callstack 0
  1268                           
  1269                           ; 2 bytes @ 0x31
  1270   000032                     	ds	2
  1271   000034                     i2dtoa@w:
  1272                           	callstack 0
  1273                           
  1274                           ; 2 bytes @ 0x33
  1275   000034                     	ds	2
  1276   000036                     i2dtoa@n:
  1277                           	callstack 0
  1278                           
  1279                           ; 8 bytes @ 0x35
  1280   000036                     	ds	8
  1281   00003E                     i2dtoa@s:
  1282                           	callstack 0
  1283                           
  1284                           ; 1 bytes @ 0x3D
  1285   00003E                     	ds	1
  1286   00003F                     i2dtoa@i:
  1287                           	callstack 0
  1288                           
  1289                           ; 2 bytes @ 0x3E
  1290   00003F                     	ds	2
  1291   000041                     i2vfpfcnvrt@fp:
  1292                           	callstack 0
  1293                           
  1294                           ; 2 bytes @ 0x40
  1295   000041                     	ds	2
  1296   000043                     i2vfpfcnvrt@fmt:
  1297                           	callstack 0
  1298                           
  1299                           ; 2 bytes @ 0x42
  1300   000043                     	ds	2
  1301   000045                     i2vfpfcnvrt@ap:
  1302                           	callstack 0
  1303                           
  1304                           ; 2 bytes @ 0x44
  1305   000045                     	ds	2
  1306   000047                     ??i2_vfpfcnvrt:
  1307                           
  1308                           ; 1 bytes @ 0x46
  1309   000047                     	ds	2
  1310   000049                     i2vfpfcnvrt@convarg:
  1311                           	callstack 0
  1312                           
  1313                           ; 8 bytes @ 0x48
  1314   000049                     	ds	8
  1315   000051                     i2vfpfcnvrt@cp:
  1316                           	callstack 0
  1317                           
  1318                           ; 2 bytes @ 0x50
  1319   000051                     	ds	2
  1320   000053                     ?i2_vfprintf:
  1321                           	callstack 0
  1322   000053                     i2vfprintf@fp:
  1323                           	callstack 0
  1324                           
  1325                           ; 2 bytes @ 0x52
  1326   000053                     	ds	2
  1327   000055                     i2vfprintf@fmt:
  1328                           	callstack 0
  1329                           
  1330                           ; 2 bytes @ 0x54
  1331   000055                     	ds	2
  1332   000057                     i2vfprintf@ap:
  1333                           	callstack 0
  1334                           
  1335                           ; 2 bytes @ 0x56
  1336   000057                     	ds	2
  1337   000059                     i2vfprintf@cfmt:
  1338                           	callstack 0
  1339                           
  1340                           ; 2 bytes @ 0x58
  1341   000059                     	ds	2
  1342   00005B                     ?i2_printf:
  1343                           	callstack 0
  1344   00005B                     i2printf@fmt:
  1345                           	callstack 0
  1346                           
  1347                           ; 2 bytes @ 0x5A
  1348   00005B                     	ds	2
  1349   00005D                     i2printf@ap:
  1350                           	callstack 0
  1351                           
  1352                           ; 2 bytes @ 0x5C
  1353   00005D                     	ds	2
  1354   00005F                     
  1355                           ; 1 bytes @ 0x5E
  1356 ;;
  1357 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1358 ;;
  1359 ;; *************** function _main *****************
  1360 ;; Defined at:
  1361 ;;		line 83 in file "main.c"
  1362 ;; Parameters:    Size  Location     Type
  1363 ;;		None
  1364 ;; Auto vars:     Size  Location     Type
  1365 ;;		None
  1366 ;; Return value:  Size  Location     Type
  1367 ;;                  1    wreg      void 
  1368 ;; Registers used:
  1369 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1370 ;; Tracked objects:
  1371 ;;		On entry : 0/0
  1372 ;;		On exit  : 0/0
  1373 ;;		Unchanged: 0/0
  1374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1379 ;;Total ram usage:        0 bytes
  1380 ;; Hardware stack levels required when called: 23
  1381 ;; This function calls:
  1382 ;;		_ADC_SetInterruptHandler
  1383 ;;		_CheckUSART
  1384 ;;		_INT0_SetInterruptHandler
  1385 ;;		_SYSTEM_Initialize
  1386 ;;		_ShowMenuInTerminal
  1387 ;;		_TMR0_SetInterruptHandler
  1388 ;;		_TMR0_StartTimer
  1389 ;;		_printf
  1390 ;; This function is called by:
  1391 ;;		Startup code after reset
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395                           	psect	text0
  1396   0014BA                     __ptext0:
  1397                           	callstack 0
  1398   0014BA                     _main:
  1399                           	callstack 8
  1400   0014BA                     
  1401                           ;main.c: 85:     SYSTEM_Initialize();
  1402   0014BA  EC90  F00D         	call	_SYSTEM_Initialize	;wreg free
  1403   0014BE                     
  1404                           ;main.c: 92:     (INTCONbits.GIEH = 1);
  1405   0014BE  8EF2               	bsf	242,7,c	;volatile
  1406   0014C0                     
  1407                           ;main.c: 95:     (INTCONbits.GIEL = 1);
  1408   0014C0  8CF2               	bsf	242,6,c	;volatile
  1409   0014C2                     
  1410                           ;main.c: 104:     (INTCONbits.PEIE = 1);
  1411   0014C2  8CF2               	bsf	242,6,c	;volatile
  1412                           
  1413                           ;main.c: 109:     INT0_SetInterruptHandler(INT0_MyInterruptHandler);
  1414   0014C4  0EBA               	movlw	low _INT0_MyInterruptHandler
  1415   0014C6  0100               	movlb	0	; () banked
  1416   0014C8  6F6B               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  1417   0014CA  0E16               	movlw	high _INT0_MyInterruptHandler
  1418   0014CC  6F6C               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  1419   0014CE  EC38  F00E         	call	_INT0_SetInterruptHandler	;wreg free
  1420                           
  1421                           ;main.c: 110:     ADC_SetInterruptHandler(ADC_MyInterruptHandler);
  1422   0014D2  0E00               	movlw	low _ADC_MyInterruptHandler
  1423   0014D4  0100               	movlb	0	; () banked
  1424   0014D6  6F6B               	movwf	ADC_SetInterruptHandler@InterruptHandler& (0+255),b
  1425   0014D8  0E16               	movlw	high _ADC_MyInterruptHandler
  1426   0014DA  6F6C               	movwf	(ADC_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  1427   0014DC  EC56  F00E         	call	_ADC_SetInterruptHandler	;wreg free
  1428                           
  1429                           ;main.c: 111:     TMR0_SetInterruptHandler(TMR0_MyInterruptHandler);
  1430   0014E0  0E5A               	movlw	low _TMR0_MyInterruptHandler
  1431   0014E2  0100               	movlb	0	; () banked
  1432   0014E4  6F6B               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  1433   0014E6  0E1C               	movlw	high _TMR0_MyInterruptHandler
  1434   0014E8  6F6C               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  1435   0014EA  EC33  F00E         	call	_TMR0_SetInterruptHandler	;wreg free
  1436   0014EE                     
  1437                           ;main.c: 112:     TMR0_StartTimer();
  1438   0014EE  EC6C  F00E         	call	_TMR0_StartTimer	;wreg free
  1439   0014F2                     
  1440                           ;main.c: 114:     printf("SETUP COMPLETED SUCCESSFULLY\r\n");
  1441   0014F2  0E4D               	movlw	low STR_2
  1442   0014F4  0101               	movlb	1	; () banked
  1443   0014F6  6F34               	movwf	printf@fmt& (0+255),b
  1444   0014F8  0EFF               	movlw	high STR_2
  1445   0014FA  6F35               	movwf	(printf@fmt+1)& (0+255),b
  1446   0014FC  EC7B  F00D         	call	_printf	;wreg free
  1447   001500                     l3814:
  1448   001500  8A8A               	bsf	138,5,c	;volatile
  1449   001502                     
  1450                           ;main.c: 120:         if (carater_recebido) {
  1451   001502  0100               	movlb	0	; () banked
  1452   001504  51F3               	movf	_carater_recebido& (0+255),w,b
  1453   001506  B4D8               	btfsc	status,2,c
  1454   001508  EF88  F00A         	goto	u3471
  1455   00150C  EF8A  F00A         	goto	u3470
  1456   001510                     u3471:
  1457   001510  EF8F  F00A         	goto	l3822
  1458   001514                     u3470:
  1459   001514                     
  1460                           ; BSR set to: 0
  1461                           ;main.c: 121:             ShowMenuInTerminal();
  1462   001514  ECAA  F004         	call	_ShowMenuInTerminal	;wreg free
  1463   001518                     
  1464                           ;main.c: 122:             carater_recebido = 0;
  1465   001518  0E00               	movlw	0
  1466   00151A  0100               	movlb	0	; () banked
  1467   00151C  6FF3               	movwf	_carater_recebido& (0+255),b
  1468   00151E                     l3822:
  1469                           
  1470                           ; BSR set to: 0
  1471                           ;main.c: 124:         CheckUSART();
  1472   00151E  EC95  F00A         	call	_CheckUSART	;wreg free
  1473   001522  EF80  F00A         	goto	l3814
  1474   001526  EF9F  F000         	goto	start
  1475   00152A                     __end_of_main:
  1476                           	callstack 0
  1477                           
  1478 ;; *************** function _TMR0_StartTimer *****************
  1479 ;; Defined at:
  1480 ;;		line 94 in file "mcc_generated_files/tmr0.c"
  1481 ;; Parameters:    Size  Location     Type
  1482 ;;		None
  1483 ;; Auto vars:     Size  Location     Type
  1484 ;;		None
  1485 ;; Return value:  Size  Location     Type
  1486 ;;                  1    wreg      void 
  1487 ;; Registers used:
  1488 ;;		None
  1489 ;; Tracked objects:
  1490 ;;		On entry : 0/0
  1491 ;;		On exit  : 0/0
  1492 ;;		Unchanged: 0/0
  1493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1498 ;;Total ram usage:        0 bytes
  1499 ;; Hardware stack levels used: 1
  1500 ;; Hardware stack levels required when called: 13
  1501 ;; This function calls:
  1502 ;;		Nothing
  1503 ;; This function is called by:
  1504 ;;		_main
  1505 ;; This function uses a non-reentrant model
  1506 ;;
  1507                           
  1508                           	psect	text1
  1509   001CD8                     __ptext1:
  1510                           	callstack 0
  1511   001CD8                     _TMR0_StartTimer:
  1512                           	callstack 17
  1513   001CD8                     
  1514                           ;mcc_generated_files/tmr0.c: 97:     T0CONbits.TMR0ON = 1;
  1515   001CD8  8ED5               	bsf	213,7,c	;volatile
  1516   001CDA  0012               	return		;funcret
  1517   001CDC                     __end_of_TMR0_StartTimer:
  1518                           	callstack 0
  1519                           
  1520 ;; *************** function _ShowMenuInTerminal *****************
  1521 ;; Defined at:
  1522 ;;		line 133 in file "main.c"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;		None
  1525 ;; Auto vars:     Size  Location     Type
  1526 ;;		None
  1527 ;; Return value:  Size  Location     Type
  1528 ;;                  1    wreg      void 
  1529 ;; Registers used:
  1530 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1531 ;; Tracked objects:
  1532 ;;		On entry : 0/0
  1533 ;;		On exit  : 0/0
  1534 ;;		Unchanged: 0/0
  1535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1538 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1539 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1540 ;;Total ram usage:        2 bytes
  1541 ;; Hardware stack levels used: 1
  1542 ;; Hardware stack levels required when called: 22
  1543 ;; This function calls:
  1544 ;;		_EUSART1_Write
  1545 ;;		_printf
  1546 ;; This function is called by:
  1547 ;;		_main
  1548 ;; This function uses a non-reentrant model
  1549 ;;
  1550                           
  1551                           	psect	text2
  1552   000954                     __ptext2:
  1553                           	callstack 0
  1554   000954                     _ShowMenuInTerminal:
  1555                           	callstack 8
  1556   000954                     
  1557                           ;main.c: 134:     switch (menu) {
  1558   000954  EF3F  F005         	goto	l3754
  1559   000958                     l3694:
  1560                           
  1561                           ; BSR set to: 1
  1562                           ;main.c: 136:             EUSART1_Write(12);
  1563   000958  0E0C               	movlw	12
  1564   00095A  EC30  F00B         	call	_EUSART1_Write
  1565   00095E                     
  1566                           ;main.c: 137:             printf("\r\nMENU PRINCIPAL");
  1567   00095E  0EC2               	movlw	low STR_3
  1568   000960  0101               	movlb	1	; () banked
  1569   000962  6F34               	movwf	printf@fmt& (0+255),b
  1570   000964  0EFF               	movlw	high STR_3
  1571   000966  6F35               	movwf	(printf@fmt+1)& (0+255),b
  1572   000968  EC7B  F00D         	call	_printf	;wreg free
  1573   00096C                     
  1574                           ;main.c: 138:             printf("\r\n1 - Desligar bomba de agua");
  1575   00096C  0E8B               	movlw	low STR_4
  1576   00096E  0101               	movlb	1	; () banked
  1577   000970  6F34               	movwf	printf@fmt& (0+255),b
  1578   000972  0EFF               	movlw	high STR_4
  1579   000974  6F35               	movwf	(printf@fmt+1)& (0+255),b
  1580   000976  EC7B  F00D         	call	_printf	;wreg free
  1581   00097A                     
  1582                           ;main.c: 139:             printf("\r\n2 - Ativar comtrolo do nivel de agua");
  1583   00097A  0EDF               	movlw	low STR_5
  1584   00097C  0101               	movlb	1	; () banked
  1585   00097E  6F34               	movwf	printf@fmt& (0+255),b
  1586   000980  0EFE               	movlw	high STR_5
  1587   000982  6F35               	movwf	(printf@fmt+1)& (0+255),b
  1588   000984  EC7B  F00D         	call	_printf	;wreg free
  1589   000988                     
  1590                           ;main.c: 140:             printf("\r\n3 - Visualizar a percentagem do nivel de agua");
  1591   000988  0E37               	movlw	low STR_6
  1592   00098A  0101               	movlb	1	; () banked
  1593   00098C  6F34               	movwf	printf@fmt& (0+255),b
  1594   00098E  0EFE               	movlw	high STR_6
  1595   000990  6F35               	movwf	(printf@fmt+1)& (0+255),b
  1596   000992  EC7B  F00D         	call	_printf	;wreg free
  1597   000996                     
  1598                           ;main.c: 141:             printf("\r\n4 - Visualizar o nivel de referencia");
  1599   000996  0EB8               	movlw	low STR_7
  1600   000998  0101               	movlb	1	; () banked
  1601   00099A  6F34               	movwf	printf@fmt& (0+255),b
  1602   00099C  0EFE               	movlw	high STR_7
  1603   00099E  6F35               	movwf	(printf@fmt+1)& (0+255),b
  1604   0009A0  EC7B  F00D         	call	_printf	;wreg free
  1605   0009A4                     
  1606                           ;main.c: 142:             printf("\r\n5 - Programar novo valor de referencia");
  1607   0009A4  0E67               	movlw	low STR_8
  1608   0009A6  0101               	movlb	1	; () banked
  1609   0009A8  6F34               	movwf	printf@fmt& (0+255),b
  1610   0009AA  0EFE               	movlw	high STR_8
  1611   0009AC  6F35               	movwf	(printf@fmt+1)& (0+255),b
  1612   0009AE  EC7B  F00D         	call	_printf	;wreg free
  1613   0009B2                     
  1614                           ;main.c: 143:             printf("\r\n0 - Voltar ao Menu Principal");
  1615   0009B2  0E6C               	movlw	low STR_9
  1616   0009B4  0101               	movlb	1	; () banked
  1617   0009B6  6F34               	movwf	printf@fmt& (0+255),b
  1618   0009B8  0EFF               	movlw	high STR_9
  1619   0009BA  6F35               	movwf	(printf@fmt+1)& (0+255),b
  1620   0009BC  EC7B  F00D         	call	_printf	;wreg free
  1621   0009C0                     
  1622                           ;main.c: 144:             printf("\r\nOpcao: ");
  1623   0009C0  0EEF               	movlw	low STR_10
  1624   0009C2  0101               	movlb	1	; () banked
  1625   0009C4  6F34               	movwf	printf@fmt& (0+255),b
  1626   0009C6  0EFF               	movlw	high STR_10
  1627   0009C8  6F35               	movwf	(printf@fmt+1)& (0+255),b
  1628   0009CA  EC7B  F00D         	call	_printf	;wreg free
  1629   0009CE                     l3712:
  1630                           
  1631                           ;main.c: 145:             menu = 0;
  1632   0009CE  0E00               	movlw	0
  1633   0009D0  0100               	movlb	0	; () banked
  1634   0009D2  6FF4               	movwf	_menu& (0+255),b
  1635                           
  1636                           ;main.c: 146:             break;
  1637   0009D4  EF66  F005         	goto	l543
  1638   0009D8                     l3714:
  1639                           
  1640                           ; BSR set to: 1
  1641                           ;main.c: 148:             EUSART1_Write(12);
  1642   0009D8  0E0C               	movlw	12
  1643   0009DA  EC30  F00B         	call	_EUSART1_Write
  1644   0009DE                     
  1645                           ;main.c: 150:             printf("\r\nBomba de agua desligada");
  1646   0009DE  0EA8               	movlw	low STR_11
  1647   0009E0  0101               	movlb	1	; () banked
  1648   0009E2  6F34               	movwf	printf@fmt& (0+255),b
  1649   0009E4  0EFF               	movlw	high STR_11
  1650   0009E6  6F35               	movwf	(printf@fmt+1)& (0+255),b
  1651   0009E8  EC7B  F00D         	call	_printf	;wreg free
  1652   0009EC                     
  1653                           ;main.c: 151:             cnt_char = 0;
  1654   0009EC  0E00               	movlw	0
  1655   0009EE  0100               	movlb	0	; () banked
  1656   0009F0  6FE1               	movwf	_cnt_char& (0+255),b
  1657   0009F2  EFE7  F004         	goto	l3712
  1658   0009F6                     l3722:
  1659                           
  1660                           ; BSR set to: 1
  1661                           ;main.c: 155:             EUSART1_Write(12);
  1662   0009F6  0E0C               	movlw	12
  1663   0009F8  EC30  F00B         	call	_EUSART1_Write
  1664   0009FC                     
  1665                           ;main.c: 157:             printf("\r\nControlo do nivel de agua ativado");
  1666   0009FC  0E06               	movlw	low STR_12
  1667   0009FE  0101               	movlb	1	; () banked
  1668   000A00  6F34               	movwf	printf@fmt& (0+255),b
  1669   000A02  0EFF               	movlw	high STR_12
  1670   000A04  6F35               	movwf	(printf@fmt+1)& (0+255),b
  1671   000A06  EC7B  F00D         	call	_printf	;wreg free
  1672   000A0A  EFE7  F004         	goto	l3712
  1673   000A0E                     l3728:
  1674                           
  1675                           ; BSR set to: 1
  1676                           ;main.c: 161:             EUSART1_Write(12);
  1677   000A0E  0E0C               	movlw	12
  1678   000A10  EC30  F00B         	call	_EUSART1_Write
  1679   000A14                     
  1680                           ;main.c: 163:             printf("\r\nPercentagem do nivel de agua: %d", nivel_agua);
  1681   000A14  0E2A               	movlw	low STR_13
  1682   000A16  0101               	movlb	1	; () banked
  1683   000A18  6F34               	movwf	printf@fmt& (0+255),b
  1684   000A1A  0EFF               	movlw	high STR_13
  1685   000A1C  6F35               	movwf	(printf@fmt+1)& (0+255),b
  1686   000A1E  C0DB  F136         	movff	_nivel_agua,?_printf+2
  1687   000A22  C0DC  F137         	movff	_nivel_agua+1,?_printf+3
  1688   000A26  EC7B  F00D         	call	_printf	;wreg free
  1689   000A2A                     
  1690                           ;main.c: 164:             printf("\r\nbits: %d", convertedValue);
  1691   000A2A  0EE4               	movlw	low STR_14
  1692   000A2C  0101               	movlb	1	; () banked
  1693   000A2E  6F34               	movwf	printf@fmt& (0+255),b
  1694   000A30  0EFF               	movlw	high STR_14
  1695   000A32  6F35               	movwf	(printf@fmt+1)& (0+255),b
  1696   000A34  C0DD  F136         	movff	_convertedValue,?_printf+2
  1697   000A38  C0DE  F137         	movff	_convertedValue+1,?_printf+3
  1698   000A3C  EC7B  F00D         	call	_printf	;wreg free
  1699   000A40  EFE7  F004         	goto	l3712
  1700   000A44                     l3736:
  1701                           
  1702                           ; BSR set to: 1
  1703                           ;main.c: 168:             EUSART1_Write(12);
  1704   000A44  0E0C               	movlw	12
  1705   000A46  EC30  F00B         	call	_EUSART1_Write
  1706   000A4A  EFE7  F004         	goto	l3712
  1707   000A4E                     l3740:
  1708                           
  1709                           ; BSR set to: 1
  1710                           ;main.c: 173:             EUSART1_Write(12);
  1711   000A4E  0E0C               	movlw	12
  1712   000A50  EC30  F00B         	call	_EUSART1_Write
  1713   000A54  EFE7  F004         	goto	l3712
  1714   000A58                     l3744:
  1715                           
  1716                           ; BSR set to: 1
  1717                           ;main.c: 178:             EUSART1_Write(12);
  1718   000A58  0E0C               	movlw	12
  1719   000A5A  EC30  F00B         	call	_EUSART1_Write
  1720   000A5E                     
  1721                           ;main.c: 179:             printf("\r\nOpcao Invalida");
  1722   000A5E  0ED3               	movlw	low STR_15
  1723   000A60  0101               	movlb	1	; () banked
  1724   000A62  6F34               	movwf	printf@fmt& (0+255),b
  1725   000A64  0EFF               	movlw	high STR_15
  1726   000A66  6F35               	movwf	(printf@fmt+1)& (0+255),b
  1727   000A68  EC7B  F00D         	call	_printf	;wreg free
  1728   000A6C                     
  1729                           ;main.c: 180:             printf("\r\nPrima 0 para voltar ao Menu Principal");
  1730   000A6C  0E90               	movlw	low STR_16
  1731   000A6E  0101               	movlb	1	; () banked
  1732   000A70  6F34               	movwf	printf@fmt& (0+255),b
  1733   000A72  0EFE               	movlw	high STR_16
  1734   000A74  6F35               	movwf	(printf@fmt+1)& (0+255),b
  1735   000A76  EC7B  F00D         	call	_printf	;wreg free
  1736   000A7A  EFE7  F004         	goto	l3712
  1737   000A7E                     l3754:
  1738   000A7E  0100               	movlb	0	; () banked
  1739   000A80  51F4               	movf	_menu& (0+255),w,b
  1740   000A82  0101               	movlb	1	; () banked
  1741   000A84  6F3A               	movwf	??_ShowMenuInTerminal& (0+255),b
  1742   000A86  6B3B               	clrf	(??_ShowMenuInTerminal+1)& (0+255),b
  1743                           
  1744                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1745                           ; Switch size 1, requested type "simple"
  1746                           ; Number of cases is 1, Range of values is 0 to 0
  1747                           ; switch strategies available:
  1748                           ; Name         Instructions Cycles
  1749                           ; simple_byte            4     3 (average)
  1750                           ;	Chosen strategy is simple_byte
  1751   000A88  513B               	movf	(??_ShowMenuInTerminal+1)& (0+255),w,b
  1752   000A8A  0A00               	xorlw	0	; case 0
  1753   000A8C  B4D8               	btfsc	status,2,c
  1754   000A8E  EF4B  F005         	goto	l3854
  1755   000A92  EF2C  F005         	goto	l3744
  1756   000A96                     l3854:
  1757                           
  1758                           ; BSR set to: 1
  1759                           ; Switch size 1, requested type "simple"
  1760                           ; Number of cases is 6, Range of values is 48 to 53
  1761                           ; switch strategies available:
  1762                           ; Name         Instructions Cycles
  1763                           ; simple_byte           19    10 (average)
  1764                           ;	Chosen strategy is simple_byte
  1765   000A96  513A               	movf	??_ShowMenuInTerminal& (0+255),w,b
  1766   000A98  0A30               	xorlw	48	; case 48
  1767   000A9A  B4D8               	btfsc	status,2,c
  1768   000A9C  EFAC  F004         	goto	l3694
  1769   000AA0  0A01               	xorlw	1	; case 49
  1770   000AA2  B4D8               	btfsc	status,2,c
  1771   000AA4  EFEC  F004         	goto	l3714
  1772   000AA8  0A03               	xorlw	3	; case 50
  1773   000AAA  B4D8               	btfsc	status,2,c
  1774   000AAC  EFFB  F004         	goto	l3722
  1775   000AB0  0A01               	xorlw	1	; case 51
  1776   000AB2  B4D8               	btfsc	status,2,c
  1777   000AB4  EF07  F005         	goto	l3728
  1778   000AB8  0A07               	xorlw	7	; case 52
  1779   000ABA  B4D8               	btfsc	status,2,c
  1780   000ABC  EF22  F005         	goto	l3736
  1781   000AC0  0A01               	xorlw	1	; case 53
  1782   000AC2  B4D8               	btfsc	status,2,c
  1783   000AC4  EF27  F005         	goto	l3740
  1784   000AC8  EF2C  F005         	goto	l3744
  1785   000ACC                     l543:
  1786                           
  1787                           ; BSR set to: 0
  1788   000ACC  0012               	return		;funcret
  1789   000ACE                     __end_of_ShowMenuInTerminal:
  1790                           	callstack 0
  1791                           
  1792 ;; *************** function _printf *****************
  1793 ;; Defined at:
  1794 ;;		line 5 in file "G:\Microchip\xc8\v2.40\pic\sources\c99\common\printf.c"
  1795 ;; Parameters:    Size  Location     Type
  1796 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  1797 ;;		 -> STR_16(40), STR_15(17), STR_14(11), STR_13(35), 
  1798 ;;		 -> STR_12(36), STR_11(26), STR_10(10), STR_9(31), 
  1799 ;;		 -> STR_8(41), STR_7(39), STR_6(48), STR_5(39), 
  1800 ;;		 -> STR_4(29), STR_3(17), STR_2(31), STR_1(6), 
  1801 ;; Auto vars:     Size  Location     Type
  1802 ;;  ap              2    6[BANK1 ] PTR void [1]
  1803 ;;		 -> ?_printf(2), 
  1804 ;;  ret             2    0        int 
  1805 ;; Return value:  Size  Location     Type
  1806 ;;                  2    2[BANK1 ] int 
  1807 ;; Registers used:
  1808 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/0
  1811 ;;		On exit  : 0/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1814 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1815 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1817 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1818 ;;Total ram usage:        6 bytes
  1819 ;; Hardware stack levels used: 1
  1820 ;; Hardware stack levels required when called: 21
  1821 ;; This function calls:
  1822 ;;		_vfprintf
  1823 ;; This function is called by:
  1824 ;;		_main
  1825 ;;		_ShowMenuInTerminal
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828                           
  1829                           	psect	text3
  1830   001AF6                     __ptext3:
  1831                           	callstack 0
  1832   001AF6                     _printf:
  1833                           	callstack 9
  1834   001AF6  0E36               	movlw	low (?_printf+2)
  1835   001AF8  0101               	movlb	1	; () banked
  1836   001AFA  6F38               	movwf	printf@ap& (0+255),b
  1837   001AFC  0E01               	movlw	high (?_printf+2)
  1838   001AFE  6F39               	movwf	(printf@ap+1)& (0+255),b
  1839   001B00                     
  1840                           ; BSR set to: 1
  1841   001B00  0E00               	movlw	0
  1842   001B02  0100               	movlb	0	; () banked
  1843   001B04  6FBD               	movwf	vfprintf@fp& (0+255),b
  1844   001B06  0E00               	movlw	0
  1845   001B08  6FBE               	movwf	(vfprintf@fp+1)& (0+255),b
  1846   001B0A  C134  F0BF         	movff	printf@fmt,vfprintf@fmt
  1847   001B0E  C135  F0C0         	movff	printf@fmt+1,vfprintf@fmt+1
  1848   001B12  0E38               	movlw	low printf@ap
  1849   001B14  6FC1               	movwf	vfprintf@ap& (0+255),b
  1850   001B16  0E01               	movlw	high printf@ap
  1851   001B18  6FC2               	movwf	(vfprintf@ap+1)& (0+255),b
  1852   001B1A  ECB6  F00B         	call	_vfprintf	;wreg free
  1853   001B1E  0012               	return		;funcret
  1854   001B20                     __end_of_printf:
  1855                           	callstack 0
  1856                           
  1857 ;; *************** function _vfprintf *****************
  1858 ;; Defined at:
  1859 ;;		line 1520 in file "G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1860 ;; Parameters:    Size  Location     Type
  1861 ;;  fp              2   93[BANK0 ] PTR struct _IO_FILE
  1862 ;;		 -> NULL(0), 
  1863 ;;  fmt             2   95[BANK0 ] PTR const unsigned char 
  1864 ;;		 -> STR_16(40), STR_15(17), STR_14(11), STR_13(35), 
  1865 ;;		 -> STR_12(36), STR_11(26), STR_10(10), STR_9(31), 
  1866 ;;		 -> STR_8(41), STR_7(39), STR_6(48), STR_5(39), 
  1867 ;;		 -> STR_4(29), STR_3(17), STR_2(31), STR_1(6), 
  1868 ;;  ap              2   97[BANK0 ] PTR PTR void 
  1869 ;;		 -> printf@ap(2), 
  1870 ;; Auto vars:     Size  Location     Type
  1871 ;;  cfmt            2    0[BANK1 ] PTR unsigned char 
  1872 ;;		 -> STR_16(40), STR_15(17), STR_14(11), STR_13(35), 
  1873 ;;		 -> STR_12(36), STR_11(26), STR_10(10), STR_9(31), 
  1874 ;;		 -> STR_8(41), STR_7(39), STR_6(48), STR_5(39), 
  1875 ;;		 -> STR_4(29), STR_3(17), STR_2(31), STR_1(6), 
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  2   93[BANK0 ] int 
  1878 ;; Registers used:
  1879 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1885 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1886 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1888 ;;      Totals:         0       6       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1889 ;;Total ram usage:        8 bytes
  1890 ;; Hardware stack levels used: 1
  1891 ;; Hardware stack levels required when called: 20
  1892 ;; This function calls:
  1893 ;;		_vfpfcnvrt
  1894 ;; This function is called by:
  1895 ;;		_printf
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899                           	psect	text4
  1900   00176C                     __ptext4:
  1901                           	callstack 0
  1902   00176C                     _vfprintf:
  1903                           	callstack 9
  1904   00176C                     
  1905                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprintf(FILE *fp, co
      +                          nst char *fmt, va_list ap);G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1521:
      +                           {;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1523:     char *cfmt;;G:\Micr
      +                          ochip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1906   00176C  C0BF  F132         	movff	vfprintf@fmt,vfprintf@cfmt
  1907   001770  C0C0  F133         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1908                           
  1909                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (*cfmt) {
  1910   001774  EFCB  F00B         	goto	l3672
  1911   001778                     l3670:
  1912                           
  1913                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvrt(fp, &cfmt, a
      +                          p);
  1914   001778  C0BD  F0AB         	movff	vfprintf@fp,vfpfcnvrt@fp
  1915   00177C  C0BE  F0AC         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1916   001780  0E32               	movlw	low vfprintf@cfmt
  1917   001782  0100               	movlb	0	; () banked
  1918   001784  6FAD               	movwf	vfpfcnvrt@fmt& (0+255),b
  1919   001786  0E01               	movlw	high vfprintf@cfmt
  1920   001788  6FAE               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1921   00178A  C0C1  F0AF         	movff	vfprintf@ap,vfpfcnvrt@ap
  1922   00178E  C0C2  F0B0         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1923   001792  ECCC  F006         	call	_vfpfcnvrt	;wreg free
  1924   001796                     l3672:
  1925                           
  1926                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (*cfmt) {
  1927   001796  C132  FFF6         	movff	vfprintf@cfmt,tblptrl
  1928   00179A  C133  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1929   00179E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1930   00179E  6AF8               	clrf	tblptru,c
  1931   0017A0                     	endif
  1932   0017A0                     	if	0	;tblptru may be non-zero
  1933   0017A0                     	endif
  1934   0017A0  0008               	tblrd		*
  1935   0017A2  50F5               	movf	tablat,w,c
  1936   0017A4  0900               	iorlw	0
  1937   0017A6  A4D8               	btfss	status,2,c
  1938   0017A8  EFD8  F00B         	goto	u3281
  1939   0017AC  EFDA  F00B         	goto	u3280
  1940   0017B0                     u3281:
  1941   0017B0  EFBC  F00B         	goto	l3670
  1942   0017B4                     u3280:
  1943   0017B4                     
  1944                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1945   0017B4  0E00               	movlw	0
  1946   0017B6  0100               	movlb	0	; () banked
  1947   0017B8  6FBE               	movwf	(?_vfprintf+1)& (0+255),b
  1948   0017BA  0E00               	movlw	0
  1949   0017BC  6FBD               	movwf	?_vfprintf& (0+255),b
  1950   0017BE                     
  1951                           ; BSR set to: 0
  1952   0017BE  0012               	return		;funcret
  1953   0017C0                     __end_of_vfprintf:
  1954                           	callstack 0
  1955                           
  1956 ;; *************** function _vfpfcnvrt *****************
  1957 ;; Defined at:
  1958 ;;		line 1007 in file "G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1959 ;; Parameters:    Size  Location     Type
  1960 ;;  fp              2   75[BANK0 ] PTR struct _IO_FILE
  1961 ;;		 -> NULL(0), 
  1962 ;;  fmt             2   77[BANK0 ] PTR PTR unsigned char 
  1963 ;;		 -> vfprintf@cfmt(2), 
  1964 ;;  ap              2   79[BANK0 ] PTR PTR void 
  1965 ;;		 -> printf@ap(2), 
  1966 ;; Auto vars:     Size  Location     Type
  1967 ;;  convarg         8   83[BANK0 ] struct .
  1968 ;;  cp              2   91[BANK0 ] PTR unsigned char 
  1969 ;;		 -> STR_16(40), STR_15(17), STR_14(11), STR_13(35), 
  1970 ;;		 -> STR_12(36), STR_11(26), STR_10(10), STR_9(31), 
  1971 ;;		 -> STR_8(41), STR_7(39), STR_6(48), STR_5(39), 
  1972 ;;		 -> STR_4(29), STR_3(17), STR_2(31), STR_1(6), 
  1973 ;;  i               2    0        int 
  1974 ;;  done            2    0        int 
  1975 ;;  c               1    0        unsigned char 
  1976 ;; Return value:  Size  Location     Type
  1977 ;;                  1    wreg      void 
  1978 ;; Registers used:
  1979 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1980 ;; Tracked objects:
  1981 ;;		On entry : 0/0
  1982 ;;		On exit  : 0/0
  1983 ;;		Unchanged: 0/0
  1984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1985 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1986 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1987 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1988 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1989 ;;Total ram usage:       18 bytes
  1990 ;; Hardware stack levels used: 1
  1991 ;; Hardware stack levels required when called: 19
  1992 ;; This function calls:
  1993 ;;		_dtoa
  1994 ;;		_fputc
  1995 ;; This function is called by:
  1996 ;;		_vfprintf
  1997 ;; This function uses a non-reentrant model
  1998 ;;
  1999                           
  2000                           	psect	text5
  2001   000D98                     __ptext5:
  2002                           	callstack 0
  2003   000D98                     _vfpfcnvrt:
  2004                           	callstack 9
  2005   000D98                     
  2006                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(FILE *fp, char 
      +                          *fmt[], va_list ap);G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1008: {;G:\M
      +                          icrochip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1009:     char c, *cp;;G:\Microchip\
      +                          xc8\v2.40\pic\sources\c99\common\doprnt.c: 1010:     int done, i;;G:\Microchip\xc8\v2.40
      +                          \pic\sources\c99\common\doprnt.c: 1016:  } convarg;;G:\Microchip\xc8\v2.40\pic\sources\c
      +                          99\common\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2007   000D98  C0AD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2008   000D9C  C0AE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2009   000DA0  CFDE FFF6          	movff	postinc2,tblptrl
  2010   000DA4  CFDD FFF7          	movff	postdec2,tblptrh
  2011   000DA8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2012   000DA8  6AF8               	clrf	tblptru,c
  2013   000DAA                     	endif
  2014   000DAA                     	if	0	;tblptru may be non-zero
  2015   000DAA                     	endif
  2016   000DAA  0008               	tblrd		*
  2017   000DAC  50F5               	movf	tablat,w,c
  2018   000DAE  0A25               	xorlw	37
  2019   000DB0  A4D8               	btfss	status,2,c
  2020   000DB2  EFDD  F006         	goto	u3231
  2021   000DB6  EFDF  F006         	goto	u3230
  2022   000DBA                     u3231:
  2023   000DBA  EF61  F007         	goto	l3650
  2024   000DBE                     u3230:
  2025   000DBE                     
  2026                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*fmt;
  2027   000DBE  C0AD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2028   000DC2  C0AE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2029   000DC6  2ADE               	incf	postinc2,f,c
  2030   000DC8  0E00               	movlw	0
  2031   000DCA  22DD               	addwfc	postdec2,f,c
  2032   000DCC                     
  2033                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         flags = width = 0
      +                          ;
  2034   000DCC  0E00               	movlw	0
  2035   000DCE  0100               	movlb	0	; () banked
  2036   000DD0  6FD8               	movwf	(_width+1)& (0+255),b
  2037   000DD2  0E00               	movlw	0
  2038   000DD4  6FD7               	movwf	_width& (0+255),b
  2039   000DD6  C0D7  F0DF         	movff	_width,_flags
  2040   000DDA                     
  2041                           ; BSR set to: 0
  2042                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         prec = -1;
  2043   000DDA  69D9               	setf	_prec& (0+255),b
  2044   000DDC  69DA               	setf	(_prec+1)& (0+255),b
  2045   000DDE                     
  2046                           ; BSR set to: 0
  2047                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt;
  2048   000DDE  C0AD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2049   000DE2  C0AE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2050   000DE6  CFDE F0BB          	movff	postinc2,vfpfcnvrt@cp
  2051   000DEA  CFDD F0BC          	movff	postdec2,vfpfcnvrt@cp+1
  2052   000DEE                     
  2053                           ; BSR set to: 0
  2054                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp == 'd' || *cp =
      +                          = 'i') {
  2055   000DEE  C0BB  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2056   000DF2  C0BC  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2057   000DF6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2058   000DF6  6AF8               	clrf	tblptru,c
  2059   000DF8                     	endif
  2060   000DF8                     	if	0	;tblptru may be non-zero
  2061   000DF8                     	endif
  2062   000DF8  0008               	tblrd		*
  2063   000DFA  50F5               	movf	tablat,w,c
  2064   000DFC  0A64               	xorlw	100
  2065   000DFE  B4D8               	btfsc	status,2,c
  2066   000E00  EF04  F007         	goto	u3241
  2067   000E04  EF06  F007         	goto	u3240
  2068   000E08                     u3241:
  2069   000E08  EF15  F007         	goto	l3640
  2070   000E0C                     u3240:
  2071   000E0C                     
  2072                           ; BSR set to: 0
  2073   000E0C  C0BB  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2074   000E10  C0BC  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2075   000E14                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2076   000E14  6AF8               	clrf	tblptru,c
  2077   000E16                     	endif
  2078   000E16                     	if	0	;tblptru may be non-zero
  2079   000E16                     	endif
  2080   000E16  0008               	tblrd		*
  2081   000E18  50F5               	movf	tablat,w,c
  2082   000E1A  0A69               	xorlw	105
  2083   000E1C  A4D8               	btfss	status,2,c
  2084   000E1E  EF13  F007         	goto	u3251
  2085   000E22  EF15  F007         	goto	u3250
  2086   000E26                     u3251:
  2087   000E26  EF58  F007         	goto	l3646
  2088   000E2A                     u3250:
  2089   000E2A                     l3640:
  2090                           
  2091                           ; BSR set to: 0
  2092                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.ll = (long lon
      +                          g)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2093   000E2A  C0AF  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2094   000E2E  C0B0  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2095   000E32  CFDF F0B1          	movff	indf2,??_vfpfcnvrt
  2096   000E36  0E02               	movlw	2
  2097   000E38  26DE               	addwf	postinc2,f,c
  2098   000E3A  CFDF F0B2          	movff	indf2,??_vfpfcnvrt+1
  2099   000E3E  0E00               	movlw	0
  2100   000E40  22DD               	addwfc	postdec2,f,c
  2101   000E42  C0B1  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2102   000E46  C0B2  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2103   000E4A  CFDE F0B3          	movff	postinc2,vfpfcnvrt@convarg
  2104   000E4E  CFDD F0B4          	movff	postdec2,vfpfcnvrt@convarg+1
  2105   000E52  0E00               	movlw	0
  2106   000E54  BFB4               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  2107   000E56  0EFF               	movlw	-1
  2108   000E58  6FB5               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  2109   000E5A  6FB6               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  2110   000E5C  6FB7               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  2111   000E5E  6FB8               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  2112   000E60  6FB9               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  2113   000E62  6FBA               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  2114                           
  2115                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = cp+1;
  2116   000E64  0E01               	movlw	1
  2117   000E66  25BB               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2118   000E68  6FB1               	movwf	??_vfpfcnvrt& (0+255),b
  2119   000E6A  0E00               	movlw	0
  2120   000E6C  21BC               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2121   000E6E  6FB2               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2122   000E70  C0AD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2123   000E74  C0AE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2124   000E78  C0B1  FFDE         	movff	??_vfpfcnvrt,postinc2
  2125   000E7C  C0B2  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2126   000E80                     
  2127                           ; BSR set to: 0
  2128                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (void) dtoa(fp,
      +                           convarg.ll);;	Return value of _vfpfcnvrt is never used
  2129   000E80  C0AB  F088         	movff	vfpfcnvrt@fp,dtoa@fp
  2130   000E84  C0AC  F089         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2131   000E88  C0B3  F08A         	movff	vfpfcnvrt@convarg,dtoa@d
  2132   000E8C  C0B4  F08B         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2133   000E90  C0B5  F08C         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2134   000E94  C0B6  F08D         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2135   000E98  C0B7  F08E         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2136   000E9C  C0B8  F08F         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2137   000EA0  C0B9  F090         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2138   000EA4  C0BA  F091         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2139   000EA8  ECA1  F000         	call	_dtoa	;wreg free
  2140   000EAC  EF77  F007         	goto	l1287
  2141   000EB0                     l3646:
  2142                           
  2143                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*fmt;
  2144   000EB0  C0AD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2145   000EB4  C0AE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2146   000EB8  2ADE               	incf	postinc2,f,c
  2147   000EBA  0E00               	movlw	0
  2148   000EBC  22DD               	addwfc	postdec2,f,c
  2149   000EBE  EF77  F007         	goto	l1287
  2150   000EC2                     l3650:
  2151                           
  2152                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((int)(*fmt)[0],
      +                           fp);
  2153   000EC2  C0AD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2154   000EC6  C0AE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2155   000ECA  CFDE FFF6          	movff	postinc2,tblptrl
  2156   000ECE  CFDD FFF7          	movff	postdec2,tblptrh
  2157   000ED2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2158   000ED2  6AF8               	clrf	tblptru,c
  2159   000ED4                     	endif
  2160   000ED4                     	if	0	;tblptru may be non-zero
  2161   000ED4                     	endif
  2162   000ED4  0008               	tblrd		*
  2163   000ED6  50F5               	movf	tablat,w,c
  2164   000ED8  0100               	movlb	0	; () banked
  2165   000EDA  6F6D               	movwf	fputc@c& (0+255),b
  2166   000EDC  6B6E               	clrf	(fputc@c+1)& (0+255),b
  2167   000EDE  C0AB  F06F         	movff	vfpfcnvrt@fp,fputc@fp
  2168   000EE2  C0AC  F070         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2169   000EE6  EC0A  F009         	call	_fputc	;wreg free
  2170   000EEA  EF58  F007         	goto	l3646
  2171   000EEE                     l1287:
  2172   000EEE  0012               	return		;funcret
  2173   000EF0                     __end_of_vfpfcnvrt:
  2174                           	callstack 0
  2175                           
  2176 ;; *************** function _dtoa *****************
  2177 ;; Defined at:
  2178 ;;		line 443 in file "G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;  fp              2   40[BANK0 ] PTR struct _IO_FILE
  2181 ;;		 -> NULL(0), 
  2182 ;;  d               8   42[BANK0 ] long long 
  2183 ;; Auto vars:     Size  Location     Type
  2184 ;;  n               8   64[BANK0 ] long long 
  2185 ;;  i               2   73[BANK0 ] int 
  2186 ;;  w               2   62[BANK0 ] int 
  2187 ;;  p               2   60[BANK0 ] int 
  2188 ;;  s               1   72[BANK0 ] unsigned char 
  2189 ;; Return value:  Size  Location     Type
  2190 ;;                  1    wreg      void 
  2191 ;; Registers used:
  2192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2198 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2199 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2200 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2201 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2202 ;;Total ram usage:       35 bytes
  2203 ;; Hardware stack levels used: 1
  2204 ;; Hardware stack levels required when called: 18
  2205 ;; This function calls:
  2206 ;;		___aodiv
  2207 ;;		___aomod
  2208 ;;		_abs
  2209 ;;		_pad
  2210 ;; This function is called by:
  2211 ;;		_vfpfcnvrt
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215                           	psect	text6
  2216   000142                     __ptext6:
  2217                           	callstack 0
  2218   000142                     _dtoa:
  2219                           	callstack 9
  2220   000142                     
  2221                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void dtoa(FILE *fp,
      +                           long long d);G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 444: {;G:\Microchi
      +                          p\xc8\v2.40\pic\sources\c99\common\doprnt.c: 445:  char s;;G:\Microchip\xc8\v2.40\pic\so
      +                          urces\c99\common\doprnt.c: 446:     int i, p, w;;G:\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 447:     long long n;;G:\Microchip\xc8\v2.40\pic\sources\c99\common\dop
      +                          rnt.c: 450:     n = d;
  2222   000142  C08A  F0A0         	movff	dtoa@d,dtoa@n
  2223   000146  C08B  F0A1         	movff	dtoa@d+1,dtoa@n+1
  2224   00014A  C08C  F0A2         	movff	dtoa@d+2,dtoa@n+2
  2225   00014E  C08D  F0A3         	movff	dtoa@d+3,dtoa@n+3
  2226   000152  C08E  F0A4         	movff	dtoa@d+4,dtoa@n+4
  2227   000156  C08F  F0A5         	movff	dtoa@d+5,dtoa@n+5
  2228   00015A  C090  F0A6         	movff	dtoa@d+6,dtoa@n+6
  2229   00015E  C091  F0A7         	movff	dtoa@d+7,dtoa@n+7
  2230   000162                     
  2231                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 0 ? 1 : 0;
  2232   000162  0100               	movlb	0	; () banked
  2233   000164  BFA7               	btfsc	(dtoa@n+7)& (0+255),7,b
  2234   000166  EFB7  F000         	goto	u3121
  2235   00016A  EFBA  F000         	goto	u3120
  2236   00016E                     u3121:
  2237   00016E  0E01               	movlw	1
  2238   000170  EFBB  F000         	goto	u3130
  2239   000174                     u3120:
  2240   000174  0E00               	movlw	0
  2241   000176                     u3130:
  2242   000176  6FA8               	movwf	dtoa@s& (0+255),b
  2243   000178                     
  2244                           ; BSR set to: 0
  2245                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  2246   000178  51A8               	movf	dtoa@s& (0+255),w,b
  2247   00017A  B4D8               	btfsc	status,2,c
  2248   00017C  EFC2  F000         	goto	u3141
  2249   000180  EFC4  F000         	goto	u3140
  2250   000184                     u3141:
  2251   000184  EFD4  F000         	goto	l3572
  2252   000188                     u3140:
  2253   000188                     
  2254                           ; BSR set to: 0
  2255                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = -n;
  2256   000188  1FA7               	comf	(dtoa@n+7)& (0+255),f,b
  2257   00018A  1FA6               	comf	(dtoa@n+6)& (0+255),f,b
  2258   00018C  1FA5               	comf	(dtoa@n+5)& (0+255),f,b
  2259   00018E  1FA4               	comf	(dtoa@n+4)& (0+255),f,b
  2260   000190  1FA3               	comf	(dtoa@n+3)& (0+255),f,b
  2261   000192  1FA2               	comf	(dtoa@n+2)& (0+255),f,b
  2262   000194  1FA1               	comf	(dtoa@n+1)& (0+255),f,b
  2263   000196  6DA0               	negf	dtoa@n& (0+255),b
  2264   000198  0E00               	movlw	0
  2265   00019A  23A1               	addwfc	(dtoa@n+1)& (0+255),f,b
  2266   00019C  23A2               	addwfc	(dtoa@n+2)& (0+255),f,b
  2267   00019E  23A3               	addwfc	(dtoa@n+3)& (0+255),f,b
  2268   0001A0  23A4               	addwfc	(dtoa@n+4)& (0+255),f,b
  2269   0001A2  23A5               	addwfc	(dtoa@n+5)& (0+255),f,b
  2270   0001A4  23A6               	addwfc	(dtoa@n+6)& (0+255),f,b
  2271   0001A6  23A7               	addwfc	(dtoa@n+7)& (0+255),f,b
  2272   0001A8                     l3572:
  2273                           
  2274                           ; BSR set to: 0
  2275                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 < prec) ? prec 
      +                          : 1;
  2276   0001A8  BFDA               	btfsc	(_prec+1)& (0+255),7,b
  2277   0001AA  EFE1  F000         	goto	u3150
  2278   0001AE  51DA               	movf	(_prec+1)& (0+255),w,b
  2279   0001B0  E106               	bnz	u3151
  2280   0001B2  05D9               	decf	_prec& (0+255),w,b
  2281   0001B4  B0D8               	btfsc	status,0,c
  2282   0001B6  EFDF  F000         	goto	u3151
  2283   0001BA  EFE1  F000         	goto	u3150
  2284   0001BE                     u3151:
  2285   0001BE  EFE7  F000         	goto	l1266
  2286   0001C2                     u3150:
  2287   0001C2                     
  2288                           ; BSR set to: 0
  2289   0001C2  0E00               	movlw	0
  2290   0001C4  6F9D               	movwf	(dtoa@p+1)& (0+255),b
  2291   0001C6  0E01               	movlw	1
  2292   0001C8  6F9C               	movwf	dtoa@p& (0+255),b
  2293   0001CA  EFEB  F000         	goto	l1268
  2294   0001CE                     l1266:
  2295                           
  2296                           ; BSR set to: 0
  2297   0001CE  C0D9  F09C         	movff	_prec,dtoa@p
  2298   0001D2  C0DA  F09D         	movff	_prec+1,dtoa@p+1
  2299   0001D6                     l1268:
  2300                           
  2301                           ; BSR set to: 0
  2302                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = width;
  2303   0001D6  C0D7  F09E         	movff	_width,dtoa@w
  2304   0001DA  C0D8  F09F         	movff	_width+1,dtoa@w+1
  2305   0001DE                     
  2306                           ; BSR set to: 0
  2307                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  2308   0001DE  51A8               	movf	dtoa@s& (0+255),w,b
  2309   0001E0  B4D8               	btfsc	status,2,c
  2310   0001E2  EFF5  F000         	goto	u3161
  2311   0001E6  EFF7  F000         	goto	u3160
  2312   0001EA                     u3161:
  2313   0001EA  EF0E  F001         	goto	l1269
  2314   0001EE                     u3160:
  2315   0001EE                     
  2316                           ; BSR set to: 0
  2317                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;G:\Microchip\xc8\v
      +                          2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  2318   0001EE  079E               	decf	dtoa@w& (0+255),f,b
  2319   0001F0  A0D8               	btfss	status,0,c
  2320   0001F2  079F               	decf	(dtoa@w+1)& (0+255),f,b
  2321   0001F4                     
  2322                           ; BSR set to: 0
  2323                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-' : '+';
  2324   0001F4  51A8               	movf	dtoa@s& (0+255),w,b
  2325   0001F6  A4D8               	btfss	status,2,c
  2326   0001F8  EF00  F001         	goto	u3171
  2327   0001FC  EF02  F001         	goto	u3170
  2328   000200                     u3171:
  2329   000200  EF08  F001         	goto	l3584
  2330   000204                     u3170:
  2331   000204                     
  2332                           ; BSR set to: 0
  2333   000204  0E00               	movlw	0
  2334   000206  6F9B               	movwf	(_dtoa$1855+1)& (0+255),b
  2335   000208  0E2B               	movlw	43
  2336   00020A  6F9A               	movwf	_dtoa$1855& (0+255),b
  2337   00020C  EF0C  F001         	goto	l3586
  2338   000210                     l3584:
  2339                           
  2340                           ; BSR set to: 0
  2341   000210  0E00               	movlw	0
  2342   000212  6F9B               	movwf	(_dtoa$1855+1)& (0+255),b
  2343   000214  0E2D               	movlw	45
  2344   000216  6F9A               	movwf	_dtoa$1855& (0+255),b
  2345   000218                     l3586:
  2346                           
  2347                           ; BSR set to: 0
  2348   000218  C09A  F0A8         	movff	_dtoa$1855,dtoa@s
  2349   00021C                     l1269:
  2350                           
  2351                           ; BSR set to: 0
  2352                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = sizeof(dbuf) - 1;
  2353   00021C  0E00               	movlw	0
  2354   00021E  6FAA               	movwf	(dtoa@i+1)& (0+255),b
  2355   000220  0E1F               	movlw	31
  2356   000222  6FA9               	movwf	dtoa@i& (0+255),b
  2357   000224                     
  2358                           ; BSR set to: 0
  2359                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] = '\0';
  2360   000224  0E00               	movlw	0
  2361   000226  0101               	movlb	1	; () banked
  2362   000228  6F27               	movwf	(_dbuf+31)& (0+255),b
  2363                           
  2364                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!(i < 1) && (n 
      +                          || (0 < p)
  2365   00022A  EF94  F001         	goto	l3600
  2366   00022E                     l3590:
  2367                           
  2368                           ; BSR set to: 0
  2369                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;G:\Microchip\xc8\
      +                          v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  2370   00022E  07A9               	decf	dtoa@i& (0+255),f,b
  2371   000230  A0D8               	btfss	status,0,c
  2372   000232  07AA               	decf	(dtoa@i+1)& (0+255),f,b
  2373   000234                     
  2374                           ; BSR set to: 0
  2375                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf[i] = (char)((
      +                          int)'0' + abs(n % 10));
  2376   000234  0E08               	movlw	low _dbuf
  2377   000236  25A9               	addwf	dtoa@i& (0+255),w,b
  2378   000238  6ED9               	movwf	fsr2l,c
  2379   00023A  0E01               	movlw	high _dbuf
  2380   00023C  21AA               	addwfc	(dtoa@i+1)& (0+255),w,b
  2381   00023E  6EDA               	movwf	fsr2h,c
  2382   000240  C0A0  F06B         	movff	dtoa@n,___aomod@dividend
  2383   000244  C0A1  F06C         	movff	dtoa@n+1,___aomod@dividend+1
  2384   000248  C0A2  F06D         	movff	dtoa@n+2,___aomod@dividend+2
  2385   00024C  C0A3  F06E         	movff	dtoa@n+3,___aomod@dividend+3
  2386   000250  C0A4  F06F         	movff	dtoa@n+4,___aomod@dividend+4
  2387   000254  C0A5  F070         	movff	dtoa@n+5,___aomod@dividend+5
  2388   000258  C0A6  F071         	movff	dtoa@n+6,___aomod@dividend+6
  2389   00025C  C0A7  F072         	movff	dtoa@n+7,___aomod@dividend+7
  2390   000260  0E0A               	movlw	10
  2391   000262  6F73               	movwf	___aomod@divisor& (0+255),b
  2392   000264  0E00               	movlw	0
  2393   000266  6F74               	movwf	(___aomod@divisor+1)& (0+255),b
  2394   000268  0E00               	movlw	0
  2395   00026A  6F75               	movwf	(___aomod@divisor+2)& (0+255),b
  2396   00026C  0E00               	movlw	0
  2397   00026E  6F76               	movwf	(___aomod@divisor+3)& (0+255),b
  2398   000270  0E00               	movlw	0
  2399   000272  6F77               	movwf	(___aomod@divisor+4)& (0+255),b
  2400   000274  0E00               	movlw	0
  2401   000276  6F78               	movwf	(___aomod@divisor+5)& (0+255),b
  2402   000278  0E00               	movlw	0
  2403   00027A  6F79               	movwf	(___aomod@divisor+6)& (0+255),b
  2404   00027C  0E00               	movlw	0
  2405   00027E  6F7A               	movwf	(___aomod@divisor+7)& (0+255),b
  2406   000280  EC67  F005         	call	___aomod	;wreg free
  2407   000284  C06B  F092         	movff	?___aomod,??_dtoa
  2408   000288  C06C  F093         	movff	?___aomod+1,??_dtoa+1
  2409   00028C  C06D  F094         	movff	?___aomod+2,??_dtoa+2
  2410   000290  C06E  F095         	movff	?___aomod+3,??_dtoa+3
  2411   000294  C06F  F096         	movff	?___aomod+4,??_dtoa+4
  2412   000298  C070  F097         	movff	?___aomod+5,??_dtoa+5
  2413   00029C  C071  F098         	movff	?___aomod+6,??_dtoa+6
  2414   0002A0  C072  F099         	movff	?___aomod+7,??_dtoa+7
  2415   0002A4  C092  F07D         	movff	??_dtoa,abs@a
  2416   0002A8  C093  F07E         	movff	??_dtoa+1,abs@a+1
  2417   0002AC  ECBA  F00C         	call	_abs	;wreg free
  2418   0002B0  0100               	movlb	0	; () banked
  2419   0002B2  517D               	movf	?_abs& (0+255),w,b
  2420   0002B4  0F30               	addlw	48
  2421   0002B6  6EDF               	movwf	indf2,c
  2422   0002B8                     
  2423                           ; BSR set to: 0
  2424                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  2425   0002B8  079C               	decf	dtoa@p& (0+255),f,b
  2426   0002BA  A0D8               	btfss	status,0,c
  2427   0002BC  079D               	decf	(dtoa@p+1)& (0+255),f,b
  2428   0002BE                     
  2429                           ; BSR set to: 0
  2430                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  2431   0002BE  079E               	decf	dtoa@w& (0+255),f,b
  2432   0002C0  A0D8               	btfss	status,0,c
  2433   0002C2  079F               	decf	(dtoa@w+1)& (0+255),f,b
  2434   0002C4                     
  2435                           ; BSR set to: 0
  2436                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = n / 10;
  2437   0002C4  C0A0  F06B         	movff	dtoa@n,___aodiv@dividend
  2438   0002C8  C0A1  F06C         	movff	dtoa@n+1,___aodiv@dividend+1
  2439   0002CC  C0A2  F06D         	movff	dtoa@n+2,___aodiv@dividend+2
  2440   0002D0  C0A3  F06E         	movff	dtoa@n+3,___aodiv@dividend+3
  2441   0002D4  C0A4  F06F         	movff	dtoa@n+4,___aodiv@dividend+4
  2442   0002D8  C0A5  F070         	movff	dtoa@n+5,___aodiv@dividend+5
  2443   0002DC  C0A6  F071         	movff	dtoa@n+6,___aodiv@dividend+6
  2444   0002E0  C0A7  F072         	movff	dtoa@n+7,___aodiv@dividend+7
  2445   0002E4  0E0A               	movlw	10
  2446   0002E6  6F73               	movwf	___aodiv@divisor& (0+255),b
  2447   0002E8  0E00               	movlw	0
  2448   0002EA  6F74               	movwf	(___aodiv@divisor+1)& (0+255),b
  2449   0002EC  0E00               	movlw	0
  2450   0002EE  6F75               	movwf	(___aodiv@divisor+2)& (0+255),b
  2451   0002F0  0E00               	movlw	0
  2452   0002F2  6F76               	movwf	(___aodiv@divisor+3)& (0+255),b
  2453   0002F4  0E00               	movlw	0
  2454   0002F6  6F77               	movwf	(___aodiv@divisor+4)& (0+255),b
  2455   0002F8  0E00               	movlw	0
  2456   0002FA  6F78               	movwf	(___aodiv@divisor+5)& (0+255),b
  2457   0002FC  0E00               	movlw	0
  2458   0002FE  6F79               	movwf	(___aodiv@divisor+6)& (0+255),b
  2459   000300  0E00               	movlw	0
  2460   000302  6F7A               	movwf	(___aodiv@divisor+7)& (0+255),b
  2461   000304  EC21  F003         	call	___aodiv	;wreg free
  2462   000308  C06B  F0A0         	movff	?___aodiv,dtoa@n
  2463   00030C  C06C  F0A1         	movff	?___aodiv+1,dtoa@n+1
  2464   000310  C06D  F0A2         	movff	?___aodiv+2,dtoa@n+2
  2465   000314  C06E  F0A3         	movff	?___aodiv+3,dtoa@n+3
  2466   000318  C06F  F0A4         	movff	?___aodiv+4,dtoa@n+4
  2467   00031C  C070  F0A5         	movff	?___aodiv+5,dtoa@n+5
  2468   000320  C071  F0A6         	movff	?___aodiv+6,dtoa@n+6
  2469   000324  C072  F0A7         	movff	?___aodiv+7,dtoa@n+7
  2470   000328                     l3600:
  2471                           
  2472                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!(i < 1) && (n 
      +                          || (0 < p)
  2473   000328  0100               	movlb	0	; () banked
  2474   00032A  BFAA               	btfsc	(dtoa@i+1)& (0+255),7,b
  2475   00032C  EFA0  F001         	goto	u3181
  2476   000330  51AA               	movf	(dtoa@i+1)& (0+255),w,b
  2477   000332  E108               	bnz	u3180
  2478   000334  05A9               	decf	dtoa@i& (0+255),w,b
  2479   000336  A0D8               	btfss	status,0,c
  2480   000338  EFA0  F001         	goto	u3181
  2481   00033C  EFA2  F001         	goto	u3180
  2482   000340                     u3181:
  2483   000340  EFBE  F001         	goto	l3606
  2484   000344                     u3180:
  2485   000344                     
  2486                           ; BSR set to: 0
  2487   000344  51A0               	movf	dtoa@n& (0+255),w,b
  2488   000346  11A1               	iorwf	(dtoa@n+1)& (0+255),w,b
  2489   000348  11A2               	iorwf	(dtoa@n+2)& (0+255),w,b
  2490   00034A  11A3               	iorwf	(dtoa@n+3)& (0+255),w,b
  2491   00034C  11A4               	iorwf	(dtoa@n+4)& (0+255),w,b
  2492   00034E  11A5               	iorwf	(dtoa@n+5)& (0+255),w,b
  2493   000350  11A6               	iorwf	(dtoa@n+6)& (0+255),w,b
  2494   000352  11A7               	iorwf	(dtoa@n+7)& (0+255),w,b
  2495   000354  A4D8               	btfss	status,2,c
  2496   000356  EFAF  F001         	goto	u3191
  2497   00035A  EFB1  F001         	goto	u3190
  2498   00035E                     u3191:
  2499   00035E  EF17  F001         	goto	l3590
  2500   000362                     u3190:
  2501   000362                     
  2502                           ; BSR set to: 0
  2503   000362  BF9D               	btfsc	(dtoa@p+1)& (0+255),7,b
  2504   000364  EFBE  F001         	goto	u3200
  2505   000368  519D               	movf	(dtoa@p+1)& (0+255),w,b
  2506   00036A  E106               	bnz	u3201
  2507   00036C  059C               	decf	dtoa@p& (0+255),w,b
  2508   00036E  B0D8               	btfsc	status,0,c
  2509   000370  EFBC  F001         	goto	u3201
  2510   000374  EFBE  F001         	goto	u3200
  2511   000378                     u3201:
  2512   000378  EF17  F001         	goto	l3590
  2513   00037C                     u3200:
  2514   00037C                     l3606:
  2515                           
  2516                           ; BSR set to: 0
  2517                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s != 0) {
  2518   00037C  51A8               	movf	dtoa@s& (0+255),w,b
  2519   00037E  B4D8               	btfsc	status,2,c
  2520   000380  EFC4  F001         	goto	u3211
  2521   000384  EFC6  F001         	goto	u3210
  2522   000388                     u3211:
  2523   000388  EFD1  F001         	goto	l3612
  2524   00038C                     u3210:
  2525   00038C                     
  2526                           ; BSR set to: 0
  2527                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  2528   00038C  07A9               	decf	dtoa@i& (0+255),f,b
  2529   00038E  A0D8               	btfss	status,0,c
  2530   000390  07AA               	decf	(dtoa@i+1)& (0+255),f,b
  2531   000392                     
  2532                           ; BSR set to: 0
  2533                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf[i] = s;
  2534   000392  0E08               	movlw	low _dbuf
  2535   000394  25A9               	addwf	dtoa@i& (0+255),w,b
  2536   000396  6ED9               	movwf	fsr2l,c
  2537   000398  0E01               	movlw	high _dbuf
  2538   00039A  21AA               	addwfc	(dtoa@i+1)& (0+255),w,b
  2539   00039C  6EDA               	movwf	fsr2h,c
  2540   00039E  C0A8  FFDF         	movff	dtoa@s,indf2
  2541   0003A2                     l3612:
  2542                           
  2543                           ; BSR set to: 0
  2544                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (void) pad(fp, 
      +                          &dbuf[i], w);
  2545   0003A2  C088  F07D         	movff	dtoa@fp,pad@fp
  2546   0003A6  C089  F07E         	movff	dtoa@fp+1,pad@fp+1
  2547   0003AA  0E08               	movlw	low _dbuf
  2548   0003AC  25A9               	addwf	dtoa@i& (0+255),w,b
  2549   0003AE  6F7F               	movwf	pad@buf& (0+255),b
  2550   0003B0  0E01               	movlw	high _dbuf
  2551   0003B2  21AA               	addwfc	(dtoa@i+1)& (0+255),w,b
  2552   0003B4  6F80               	movwf	(pad@buf+1)& (0+255),b
  2553   0003B6  C09E  F081         	movff	dtoa@w,pad@p
  2554   0003BA  C09F  F082         	movff	dtoa@w+1,pad@p+1
  2555   0003BE  ECE1  F009         	call	_pad	;wreg free
  2556   0003C2  0012               	return		;funcret
  2557   0003C4                     __end_of_dtoa:
  2558                           	callstack 0
  2559                           
  2560 ;; *************** function _pad *****************
  2561 ;; Defined at:
  2562 ;;		line 133 in file "G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;  fp              2   29[BANK0 ] PTR struct _IO_FILE
  2565 ;;		 -> NULL(0), 
  2566 ;;  buf             2   31[BANK0 ] PTR unsigned char 
  2567 ;;		 -> dbuf(32), 
  2568 ;;  p               2   33[BANK0 ] int 
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;  w               2   38[BANK0 ] int 
  2571 ;;  i               2   36[BANK0 ] int 
  2572 ;; Return value:  Size  Location     Type
  2573 ;;                  1    wreg      void 
  2574 ;; Registers used:
  2575 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2576 ;; Tracked objects:
  2577 ;;		On entry : 0/0
  2578 ;;		On exit  : 0/0
  2579 ;;		Unchanged: 0/0
  2580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2581 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2582 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2583 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2584 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2585 ;;Total ram usage:       11 bytes
  2586 ;; Hardware stack levels used: 1
  2587 ;; Hardware stack levels required when called: 17
  2588 ;; This function calls:
  2589 ;;		_fputc
  2590 ;;		_fputs
  2591 ;; This function is called by:
  2592 ;;		_dtoa
  2593 ;; This function uses a non-reentrant model
  2594 ;;
  2595                           
  2596                           	psect	text7
  2597   0013C2                     __ptext7:
  2598                           	callstack 0
  2599   0013C2                     _pad:
  2600                           	callstack 9
  2601   0013C2                     
  2602                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void pad(FILE *fp, 
      +                          char *buf, int p);G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 134: {;G:\Micr
      +                          ochip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 135:     int i, w;;G:\Microchip\xc8\v2.
      +                          40\pic\sources\c99\common\doprnt.c: 145:     w = (p < 0) ? 0 : p;
  2603   0013C2  0100               	movlb	0	; () banked
  2604   0013C4  BF82               	btfsc	(pad@p+1)& (0+255),7,b
  2605   0013C6  EFE7  F009         	goto	u3061
  2606   0013CA  EFE9  F009         	goto	u3060
  2607   0013CE                     u3061:
  2608   0013CE  EFEF  F009         	goto	l3520
  2609   0013D2                     u3060:
  2610   0013D2                     
  2611                           ; BSR set to: 0
  2612   0013D2  C081  F086         	movff	pad@p,pad@w
  2613   0013D6  C082  F087         	movff	pad@p+1,pad@w+1
  2614   0013DA  EFF3  F009         	goto	l1257
  2615   0013DE                     l3520:
  2616                           
  2617                           ; BSR set to: 0
  2618   0013DE  0E00               	movlw	0
  2619   0013E0  6F87               	movwf	(pad@w+1)& (0+255),b
  2620   0013E2  0E00               	movlw	0
  2621   0013E4  6F86               	movwf	pad@w& (0+255),b
  2622   0013E6                     l1257:
  2623                           
  2624                           ; BSR set to: 0
  2625                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2626   0013E6  0E00               	movlw	0
  2627   0013E8  6F85               	movwf	(pad@i+1)& (0+255),b
  2628   0013EA  0E00               	movlw	0
  2629   0013EC  6F84               	movwf	pad@i& (0+255),b
  2630                           
  2631                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i < w) {
  2632   0013EE  EF06  F00A         	goto	l3526
  2633   0013F2                     l3522:
  2634                           
  2635                           ; BSR set to: 0
  2636                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fputc(' ', fp);
  2637   0013F2  0E00               	movlw	0
  2638   0013F4  6F6E               	movwf	(fputc@c+1)& (0+255),b
  2639   0013F6  0E20               	movlw	32
  2640   0013F8  6F6D               	movwf	fputc@c& (0+255),b
  2641   0013FA  C07D  F06F         	movff	pad@fp,fputc@fp
  2642   0013FE  C07E  F070         	movff	pad@fp+1,fputc@fp+1
  2643   001402  EC0A  F009         	call	_fputc	;wreg free
  2644   001406                     
  2645                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2646   001406  0100               	movlb	0	; () banked
  2647   001408  4B84               	infsnz	pad@i& (0+255),f,b
  2648   00140A  2B85               	incf	(pad@i+1)& (0+255),f,b
  2649   00140C                     l3526:
  2650                           
  2651                           ; BSR set to: 0
  2652                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i < w) {
  2653   00140C  5186               	movf	pad@w& (0+255),w,b
  2654   00140E  5D84               	subwf	pad@i& (0+255),w,b
  2655   001410  5185               	movf	(pad@i+1)& (0+255),w,b
  2656   001412  0A80               	xorlw	128
  2657   001414  6F83               	movwf	??_pad& (0+255),b
  2658   001416  5187               	movf	(pad@w+1)& (0+255),w,b
  2659   001418  0A80               	xorlw	128
  2660   00141A  5983               	subwfb	??_pad& (0+255),w,b
  2661   00141C  A0D8               	btfss	status,0,c
  2662   00141E  EF13  F00A         	goto	u3071
  2663   001422  EF15  F00A         	goto	u3070
  2664   001426                     u3071:
  2665   001426  EFF9  F009         	goto	l3522
  2666   00142A                     u3070:
  2667   00142A                     
  2668                           ; BSR set to: 0
  2669                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fputs((const char 
      +                          *)buf, fp);
  2670   00142A  C07F  F076         	movff	pad@buf,fputs@s
  2671   00142E  C080  F077         	movff	pad@buf+1,fputs@s+1
  2672   001432  C07D  F078         	movff	pad@fp,fputs@fp
  2673   001436  C07E  F079         	movff	pad@fp+1,fputs@fp+1
  2674   00143A  EC31  F00C         	call	_fputs	;wreg free
  2675   00143E  0012               	return		;funcret
  2676   001440                     __end_of_pad:
  2677                           	callstack 0
  2678                           
  2679 ;; *************** function _fputs *****************
  2680 ;; Defined at:
  2681 ;;		line 8 in file "G:\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2682 ;; Parameters:    Size  Location     Type
  2683 ;;  s               2   22[BANK0 ] PTR const unsigned char 
  2684 ;;		 -> dbuf(32), 
  2685 ;;  fp              2   24[BANK0 ] PTR struct _IO_FILE
  2686 ;;		 -> NULL(0), 
  2687 ;; Auto vars:     Size  Location     Type
  2688 ;;  i               2   27[BANK0 ] int 
  2689 ;;  c               1   26[BANK0 ] unsigned char 
  2690 ;; Return value:  Size  Location     Type
  2691 ;;                  2   22[BANK0 ] int 
  2692 ;; Registers used:
  2693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2694 ;; Tracked objects:
  2695 ;;		On entry : 0/0
  2696 ;;		On exit  : 0/0
  2697 ;;		Unchanged: 0/0
  2698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2699 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2700 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2702 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2703 ;;Total ram usage:        7 bytes
  2704 ;; Hardware stack levels used: 1
  2705 ;; Hardware stack levels required when called: 16
  2706 ;; This function calls:
  2707 ;;		_fputc
  2708 ;; This function is called by:
  2709 ;;		_pad
  2710 ;; This function uses a non-reentrant model
  2711 ;;
  2712                           
  2713                           	psect	text8
  2714   001862                     __ptext8:
  2715                           	callstack 0
  2716   001862                     _fputs:
  2717                           	callstack 9
  2718   001862  0E00               	movlw	0
  2719   001864  0100               	movlb	0	; () banked
  2720   001866  6F7C               	movwf	(fputs@i+1)& (0+255),b
  2721   001868  0E00               	movlw	0
  2722   00186A  6F7B               	movwf	fputs@i& (0+255),b
  2723   00186C  EF44  F00C         	goto	l3382
  2724   001870                     l3378:
  2725                           
  2726                           ; BSR set to: 0
  2727   001870  C07A  F06D         	movff	fputs@c,fputc@c
  2728   001874  6B6E               	clrf	(fputc@c+1)& (0+255),b
  2729   001876  C078  F06F         	movff	fputs@fp,fputc@fp
  2730   00187A  C079  F070         	movff	fputs@fp+1,fputc@fp+1
  2731   00187E  EC0A  F009         	call	_fputc	;wreg free
  2732   001882  0100               	movlb	0	; () banked
  2733   001884  4B7B               	infsnz	fputs@i& (0+255),f,b
  2734   001886  2B7C               	incf	(fputs@i+1)& (0+255),f,b
  2735   001888                     l3382:
  2736                           
  2737                           ; BSR set to: 0
  2738   001888  517B               	movf	fputs@i& (0+255),w,b
  2739   00188A  2576               	addwf	fputs@s& (0+255),w,b
  2740   00188C  6ED9               	movwf	fsr2l,c
  2741   00188E  517C               	movf	(fputs@i+1)& (0+255),w,b
  2742   001890  2177               	addwfc	(fputs@s+1)& (0+255),w,b
  2743   001892  6EDA               	movwf	fsr2h,c
  2744   001894  50DF               	movf	indf2,w,c
  2745   001896  6F7A               	movwf	fputs@c& (0+255),b
  2746   001898  517A               	movf	fputs@c& (0+255),w,b
  2747   00189A  A4D8               	btfss	status,2,c
  2748   00189C  EF52  F00C         	goto	u2821
  2749   0018A0  EF54  F00C         	goto	u2820
  2750   0018A4                     u2821:
  2751   0018A4  EF38  F00C         	goto	l3378
  2752   0018A8                     u2820:
  2753   0018A8                     
  2754                           ; BSR set to: 0
  2755   0018A8  0012               	return		;funcret
  2756   0018AA                     __end_of_fputs:
  2757                           	callstack 0
  2758                           
  2759 ;; *************** function _fputc *****************
  2760 ;; Defined at:
  2761 ;;		line 8 in file "G:\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2762 ;; Parameters:    Size  Location     Type
  2763 ;;  c               2   13[BANK0 ] int 
  2764 ;;  fp              2   15[BANK0 ] PTR struct _IO_FILE
  2765 ;;		 -> NULL(0), 
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;		None
  2768 ;; Return value:  Size  Location     Type
  2769 ;;                  2   13[BANK0 ] int 
  2770 ;; Registers used:
  2771 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2777 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2779 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2780 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2781 ;;Total ram usage:        9 bytes
  2782 ;; Hardware stack levels used: 1
  2783 ;; Hardware stack levels required when called: 15
  2784 ;; This function calls:
  2785 ;;		_putch
  2786 ;; This function is called by:
  2787 ;;		_pad
  2788 ;;		_vfpfcnvrt
  2789 ;;		_fputs
  2790 ;; This function uses a non-reentrant model
  2791 ;;
  2792                           
  2793                           	psect	text9
  2794   001214                     __ptext9:
  2795                           	callstack 0
  2796   001214                     _fputc:
  2797                           	callstack 12
  2798   001214  0100               	movlb	0	; () banked
  2799   001216  516F               	movf	fputc@fp& (0+255),w,b
  2800   001218  1170               	iorwf	(fputc@fp+1)& (0+255),w,b
  2801   00121A  B4D8               	btfsc	status,2,c
  2802   00121C  EF12  F009         	goto	u2621
  2803   001220  EF14  F009         	goto	u2620
  2804   001224                     u2621:
  2805   001224  EF1D  F009         	goto	l3268
  2806   001228                     u2620:
  2807   001228                     
  2808                           ; BSR set to: 0
  2809   001228  516F               	movf	fputc@fp& (0+255),w,b
  2810   00122A  1170               	iorwf	(fputc@fp+1)& (0+255),w,b
  2811   00122C  A4D8               	btfss	status,2,c
  2812   00122E  EF1B  F009         	goto	u2631
  2813   001232  EF1D  F009         	goto	u2630
  2814   001236                     u2631:
  2815   001236  EF22  F009         	goto	l3270
  2816   00123A                     u2630:
  2817   00123A                     l3268:
  2818                           
  2819                           ; BSR set to: 0
  2820   00123A  516D               	movf	fputc@c& (0+255),w,b
  2821   00123C  EC19  F00E         	call	_putch
  2822   001240  EF55  F009         	goto	l1312
  2823   001244                     l3270:
  2824                           
  2825                           ; BSR set to: 0
  2826   001244  EE20 F009          	lfsr	2,9
  2827   001248  516F               	movf	fputc@fp& (0+255),w,b
  2828   00124A  26D9               	addwf	fsr2l,f,c
  2829   00124C  5170               	movf	(fputc@fp+1)& (0+255),w,b
  2830   00124E  22DA               	addwfc	fsr2h,f,c
  2831   001250  50DE               	movf	postinc2,w,c
  2832   001252  10DE               	iorwf	postinc2,w,c
  2833   001254  B4D8               	btfsc	status,2,c
  2834   001256  EF2F  F009         	goto	u2641
  2835   00125A  EF31  F009         	goto	u2640
  2836   00125E                     u2641:
  2837   00125E  EF4C  F009         	goto	l3274
  2838   001262                     u2640:
  2839   001262                     
  2840                           ; BSR set to: 0
  2841   001262  EE20 F009          	lfsr	2,9
  2842   001266  516F               	movf	fputc@fp& (0+255),w,b
  2843   001268  26D9               	addwf	fsr2l,f,c
  2844   00126A  5170               	movf	(fputc@fp+1)& (0+255),w,b
  2845   00126C  22DA               	addwfc	fsr2h,f,c
  2846   00126E  EE10 F003          	lfsr	1,3
  2847   001272  516F               	movf	fputc@fp& (0+255),w,b
  2848   001274  26E1               	addwf	fsr1l,f,c
  2849   001276  5170               	movf	(fputc@fp+1)& (0+255),w,b
  2850   001278  22E2               	addwfc	fsr1h,f,c
  2851   00127A  50DE               	movf	postinc2,w,c
  2852   00127C  5CE6               	subwf	postinc1,w,c
  2853   00127E  50E6               	movf	postinc1,w,c
  2854   001280  0A80               	xorlw	128
  2855   001282  6F75               	movwf	(??_fputc+4)& (0+255),b
  2856   001284  50DE               	movf	postinc2,w,c
  2857   001286  0A80               	xorlw	128
  2858   001288  5975               	subwfb	(??_fputc+4)& (0+255),w,b
  2859   00128A  B0D8               	btfsc	status,0,c
  2860   00128C  EF4A  F009         	goto	u2651
  2861   001290  EF4C  F009         	goto	u2650
  2862   001294                     u2651:
  2863   001294  EF55  F009         	goto	l1312
  2864   001298                     u2650:
  2865   001298                     l3274:
  2866                           
  2867                           ; BSR set to: 0
  2868   001298  EE20 F003          	lfsr	2,3
  2869   00129C  516F               	movf	fputc@fp& (0+255),w,b
  2870   00129E  26D9               	addwf	fsr2l,f,c
  2871   0012A0  5170               	movf	(fputc@fp+1)& (0+255),w,b
  2872   0012A2  22DA               	addwfc	fsr2h,f,c
  2873   0012A4  2ADE               	incf	postinc2,f,c
  2874   0012A6  0E00               	movlw	0
  2875   0012A8  22DD               	addwfc	postdec2,f,c
  2876   0012AA                     l1312:
  2877   0012AA  0012               	return		;funcret
  2878   0012AC                     __end_of_fputc:
  2879                           	callstack 0
  2880                           
  2881 ;; *************** function _putch *****************
  2882 ;; Defined at:
  2883 ;;		line 201 in file "mcc_generated_files/eusart1.c"
  2884 ;; Parameters:    Size  Location     Type
  2885 ;;  txData          1    wreg     unsigned char 
  2886 ;; Auto vars:     Size  Location     Type
  2887 ;;  txData          1   12[BANK0 ] unsigned char 
  2888 ;; Return value:  Size  Location     Type
  2889 ;;                  1    wreg      void 
  2890 ;; Registers used:
  2891 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2892 ;; Tracked objects:
  2893 ;;		On entry : 0/0
  2894 ;;		On exit  : 0/0
  2895 ;;		Unchanged: 0/0
  2896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2898 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2900 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2901 ;;Total ram usage:        1 bytes
  2902 ;; Hardware stack levels used: 1
  2903 ;; Hardware stack levels required when called: 14
  2904 ;; This function calls:
  2905 ;;		_EUSART1_Write
  2906 ;; This function is called by:
  2907 ;;		_fputc
  2908 ;; This function uses a non-reentrant model
  2909 ;;
  2910                           
  2911                           	psect	text10
  2912   001C32                     __ptext10:
  2913                           	callstack 0
  2914   001C32                     _putch:
  2915                           	callstack 12
  2916                           
  2917                           ;incstack = 0
  2918                           ;putch@txData stored from wreg
  2919   001C32  0100               	movlb	0	; () banked
  2920   001C34  6F6C               	movwf	putch@txData& (0+255),b
  2921   001C36                     
  2922                           ;mcc_generated_files/eusart1.c: 201: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 202: {;mcc_generated_files/eusart1.c: 203:     EUSART1_Write(txData);
  2923   001C36  0100               	movlb	0	; () banked
  2924   001C38  516C               	movf	putch@txData& (0+255),w,b
  2925   001C3A  EC30  F00B         	call	_EUSART1_Write
  2926   001C3E  0012               	return		;funcret
  2927   001C40                     __end_of_putch:
  2928                           	callstack 0
  2929                           
  2930 ;; *************** function _abs *****************
  2931 ;; Defined at:
  2932 ;;		line 1 in file "G:\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  2933 ;; Parameters:    Size  Location     Type
  2934 ;;  a               2   29[BANK0 ] int 
  2935 ;; Auto vars:     Size  Location     Type
  2936 ;;		None
  2937 ;; Return value:  Size  Location     Type
  2938 ;;                  2   29[BANK0 ] int 
  2939 ;; Registers used:
  2940 ;;		wreg, status,2, status,0
  2941 ;; Tracked objects:
  2942 ;;		On entry : 0/0
  2943 ;;		On exit  : 0/0
  2944 ;;		Unchanged: 0/0
  2945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2946 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2948 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2949 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2950 ;;Total ram usage:        4 bytes
  2951 ;; Hardware stack levels used: 1
  2952 ;; Hardware stack levels required when called: 13
  2953 ;; This function calls:
  2954 ;;		Nothing
  2955 ;; This function is called by:
  2956 ;;		_dtoa
  2957 ;; This function uses a non-reentrant model
  2958 ;;
  2959                           
  2960                           	psect	text11
  2961   001974                     __ptext11:
  2962                           	callstack 0
  2963   001974                     _abs:
  2964                           	callstack 13
  2965   001974  0100               	movlb	0	; () banked
  2966   001976  BF7E               	btfsc	(abs@a+1)& (0+255),7,b
  2967   001978  EFC8  F00C         	goto	u3080
  2968   00197C  517E               	movf	(abs@a+1)& (0+255),w,b
  2969   00197E  E106               	bnz	u3081
  2970   001980  057D               	decf	abs@a& (0+255),w,b
  2971   001982  B0D8               	btfsc	status,0,c
  2972   001984  EFC6  F00C         	goto	u3081
  2973   001988  EFC8  F00C         	goto	u3080
  2974   00198C                     u3081:
  2975   00198C  EFD6  F00C         	goto	l1297
  2976   001990                     u3080:
  2977   001990                     
  2978                           ; BSR set to: 0
  2979   001990  C07D  F07F         	movff	abs@a,??_abs
  2980   001994  C07E  F080         	movff	abs@a+1,??_abs+1
  2981   001998  1F7F               	comf	??_abs& (0+255),f,b
  2982   00199A  1F80               	comf	(??_abs+1)& (0+255),f,b
  2983   00199C  4B7F               	infsnz	??_abs& (0+255),f,b
  2984   00199E  2B80               	incf	(??_abs+1)& (0+255),f,b
  2985   0019A0  C07F  F07D         	movff	??_abs,?_abs
  2986   0019A4  C080  F07E         	movff	??_abs+1,?_abs+1
  2987   0019A8  EFDA  F00C         	goto	l1300
  2988   0019AC                     l1297:
  2989                           
  2990                           ; BSR set to: 0
  2991   0019AC  C07D  F07D         	movff	abs@a,?_abs
  2992   0019B0  C07E  F07E         	movff	abs@a+1,?_abs+1
  2993   0019B4                     l1300:
  2994                           
  2995                           ; BSR set to: 0
  2996   0019B4  0012               	return		;funcret
  2997   0019B6                     __end_of_abs:
  2998                           	callstack 0
  2999                           
  3000 ;; *************** function ___aomod *****************
  3001 ;; Defined at:
  3002 ;;		line 9 in file "G:\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  3003 ;; Parameters:    Size  Location     Type
  3004 ;;  dividend        8   11[BANK0 ] long long 
  3005 ;;  divisor         8   19[BANK0 ] long long 
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;  sign            1   28[BANK0 ] unsigned char 
  3008 ;;  counter         1   27[BANK0 ] unsigned char 
  3009 ;; Return value:  Size  Location     Type
  3010 ;;                  8   11[BANK0 ] long long 
  3011 ;; Registers used:
  3012 ;;		wreg, status,2, status,0
  3013 ;; Tracked objects:
  3014 ;;		On entry : 0/0
  3015 ;;		On exit  : 0/0
  3016 ;;		Unchanged: 0/0
  3017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3018 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3019 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3021 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3022 ;;Total ram usage:       18 bytes
  3023 ;; Hardware stack levels used: 1
  3024 ;; Hardware stack levels required when called: 13
  3025 ;; This function calls:
  3026 ;;		Nothing
  3027 ;; This function is called by:
  3028 ;;		_dtoa
  3029 ;; This function uses a non-reentrant model
  3030 ;;
  3031                           
  3032                           	psect	text12
  3033   000ACE                     __ptext12:
  3034                           	callstack 0
  3035   000ACE                     ___aomod:
  3036                           	callstack 13
  3037   000ACE  0E00               	movlw	0
  3038   000AD0  0100               	movlb	0	; () banked
  3039   000AD2  6F7C               	movwf	___aomod@sign& (0+255),b
  3040   000AD4                     
  3041                           ; BSR set to: 0
  3042   000AD4  BF72               	btfsc	(___aomod@dividend+7)& (0+255),7,b
  3043   000AD6  EF71  F005         	goto	u3000
  3044   000ADA  EF6F  F005         	goto	u3001
  3045   000ADE                     u3001:
  3046   000ADE  EF83  F005         	goto	l3488
  3047   000AE2                     u3000:
  3048   000AE2                     
  3049                           ; BSR set to: 0
  3050   000AE2  1F72               	comf	(___aomod@dividend+7)& (0+255),f,b
  3051   000AE4  1F71               	comf	(___aomod@dividend+6)& (0+255),f,b
  3052   000AE6  1F70               	comf	(___aomod@dividend+5)& (0+255),f,b
  3053   000AE8  1F6F               	comf	(___aomod@dividend+4)& (0+255),f,b
  3054   000AEA  1F6E               	comf	(___aomod@dividend+3)& (0+255),f,b
  3055   000AEC  1F6D               	comf	(___aomod@dividend+2)& (0+255),f,b
  3056   000AEE  1F6C               	comf	(___aomod@dividend+1)& (0+255),f,b
  3057   000AF0  6D6B               	negf	___aomod@dividend& (0+255),b
  3058   000AF2  0E00               	movlw	0
  3059   000AF4  236C               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  3060   000AF6  236D               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  3061   000AF8  236E               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  3062   000AFA  236F               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  3063   000AFC  2370               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  3064   000AFE  2371               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  3065   000B00  2372               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  3066   000B02                     
  3067                           ; BSR set to: 0
  3068   000B02  0E01               	movlw	1
  3069   000B04  6F7C               	movwf	___aomod@sign& (0+255),b
  3070   000B06                     l3488:
  3071                           
  3072                           ; BSR set to: 0
  3073   000B06  BF7A               	btfsc	(___aomod@divisor+7)& (0+255),7,b
  3074   000B08  EF8A  F005         	goto	u3010
  3075   000B0C  EF88  F005         	goto	u3011
  3076   000B10                     u3011:
  3077   000B10  EF9A  F005         	goto	l3492
  3078   000B14                     u3010:
  3079   000B14                     
  3080                           ; BSR set to: 0
  3081   000B14  1F7A               	comf	(___aomod@divisor+7)& (0+255),f,b
  3082   000B16  1F79               	comf	(___aomod@divisor+6)& (0+255),f,b
  3083   000B18  1F78               	comf	(___aomod@divisor+5)& (0+255),f,b
  3084   000B1A  1F77               	comf	(___aomod@divisor+4)& (0+255),f,b
  3085   000B1C  1F76               	comf	(___aomod@divisor+3)& (0+255),f,b
  3086   000B1E  1F75               	comf	(___aomod@divisor+2)& (0+255),f,b
  3087   000B20  1F74               	comf	(___aomod@divisor+1)& (0+255),f,b
  3088   000B22  6D73               	negf	___aomod@divisor& (0+255),b
  3089   000B24  0E00               	movlw	0
  3090   000B26  2374               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  3091   000B28  2375               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  3092   000B2A  2376               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  3093   000B2C  2377               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  3094   000B2E  2378               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  3095   000B30  2379               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  3096   000B32  237A               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  3097   000B34                     l3492:
  3098                           
  3099                           ; BSR set to: 0
  3100   000B34  5173               	movf	___aomod@divisor& (0+255),w,b
  3101   000B36  1174               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  3102   000B38  1175               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  3103   000B3A  1176               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  3104   000B3C  1177               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  3105   000B3E  1178               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  3106   000B40  1179               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  3107   000B42  117A               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  3108   000B44  B4D8               	btfsc	status,2,c
  3109   000B46  EFA7  F005         	goto	u3021
  3110   000B4A  EFA9  F005         	goto	u3020
  3111   000B4E                     u3021:
  3112   000B4E  EFF1  F005         	goto	l3508
  3113   000B52                     u3020:
  3114   000B52                     
  3115                           ; BSR set to: 0
  3116   000B52  0E01               	movlw	1
  3117   000B54  6F7B               	movwf	___aomod@counter& (0+255),b
  3118   000B56  EFB7  F005         	goto	l3498
  3119   000B5A                     l3496:
  3120                           
  3121                           ; BSR set to: 0
  3122   000B5A  90D8               	bcf	status,0,c
  3123   000B5C  3773               	rlcf	___aomod@divisor& (0+255),f,b
  3124   000B5E  3774               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  3125   000B60  3775               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  3126   000B62  3776               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  3127   000B64  3777               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  3128   000B66  3778               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  3129   000B68  3779               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  3130   000B6A  377A               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  3131   000B6C  2B7B               	incf	___aomod@counter& (0+255),f,b
  3132   000B6E                     l3498:
  3133                           
  3134                           ; BSR set to: 0
  3135   000B6E  AF7A               	btfss	(___aomod@divisor+7)& (0+255),7,b
  3136   000B70  EFBC  F005         	goto	u3031
  3137   000B74  EFBE  F005         	goto	u3030
  3138   000B78                     u3031:
  3139   000B78  EFAD  F005         	goto	l3496
  3140   000B7C                     u3030:
  3141   000B7C                     l3500:
  3142                           
  3143                           ; BSR set to: 0
  3144   000B7C  5173               	movf	___aomod@divisor& (0+255),w,b
  3145   000B7E  5D6B               	subwf	___aomod@dividend& (0+255),w,b
  3146   000B80  5174               	movf	(___aomod@divisor+1)& (0+255),w,b
  3147   000B82  596C               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  3148   000B84  5175               	movf	(___aomod@divisor+2)& (0+255),w,b
  3149   000B86  596D               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  3150   000B88  5176               	movf	(___aomod@divisor+3)& (0+255),w,b
  3151   000B8A  596E               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  3152   000B8C  5177               	movf	(___aomod@divisor+4)& (0+255),w,b
  3153   000B8E  596F               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  3154   000B90  5178               	movf	(___aomod@divisor+5)& (0+255),w,b
  3155   000B92  5970               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  3156   000B94  5179               	movf	(___aomod@divisor+6)& (0+255),w,b
  3157   000B96  5971               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  3158   000B98  517A               	movf	(___aomod@divisor+7)& (0+255),w,b
  3159   000B9A  5972               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  3160   000B9C  A0D8               	btfss	status,0,c
  3161   000B9E  EFD3  F005         	goto	u3041
  3162   000BA2  EFD5  F005         	goto	u3040
  3163   000BA6                     u3041:
  3164   000BA6  EFE5  F005         	goto	l3504
  3165   000BAA                     u3040:
  3166   000BAA                     
  3167                           ; BSR set to: 0
  3168   000BAA  5173               	movf	___aomod@divisor& (0+255),w,b
  3169   000BAC  5F6B               	subwf	___aomod@dividend& (0+255),f,b
  3170   000BAE  5174               	movf	(___aomod@divisor+1)& (0+255),w,b
  3171   000BB0  5B6C               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  3172   000BB2  5175               	movf	(___aomod@divisor+2)& (0+255),w,b
  3173   000BB4  5B6D               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  3174   000BB6  5176               	movf	(___aomod@divisor+3)& (0+255),w,b
  3175   000BB8  5B6E               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  3176   000BBA  5177               	movf	(___aomod@divisor+4)& (0+255),w,b
  3177   000BBC  5B6F               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  3178   000BBE  5178               	movf	(___aomod@divisor+5)& (0+255),w,b
  3179   000BC0  5B70               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  3180   000BC2  5179               	movf	(___aomod@divisor+6)& (0+255),w,b
  3181   000BC4  5B71               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  3182   000BC6  517A               	movf	(___aomod@divisor+7)& (0+255),w,b
  3183   000BC8  5B72               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  3184   000BCA                     l3504:
  3185                           
  3186                           ; BSR set to: 0
  3187   000BCA  90D8               	bcf	status,0,c
  3188   000BCC  337A               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  3189   000BCE  3379               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  3190   000BD0  3378               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  3191   000BD2  3377               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  3192   000BD4  3376               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  3193   000BD6  3375               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  3194   000BD8  3374               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  3195   000BDA  3373               	rrcf	___aomod@divisor& (0+255),f,b
  3196   000BDC                     
  3197                           ; BSR set to: 0
  3198   000BDC  2F7B               	decfsz	___aomod@counter& (0+255),f,b
  3199   000BDE  EFBE  F005         	goto	l3500
  3200   000BE2                     l3508:
  3201                           
  3202                           ; BSR set to: 0
  3203   000BE2  517C               	movf	___aomod@sign& (0+255),w,b
  3204   000BE4  B4D8               	btfsc	status,2,c
  3205   000BE6  EFF7  F005         	goto	u3051
  3206   000BEA  EFF9  F005         	goto	u3050
  3207   000BEE                     u3051:
  3208   000BEE  EF09  F006         	goto	l3512
  3209   000BF2                     u3050:
  3210   000BF2                     
  3211                           ; BSR set to: 0
  3212   000BF2  1F72               	comf	(___aomod@dividend+7)& (0+255),f,b
  3213   000BF4  1F71               	comf	(___aomod@dividend+6)& (0+255),f,b
  3214   000BF6  1F70               	comf	(___aomod@dividend+5)& (0+255),f,b
  3215   000BF8  1F6F               	comf	(___aomod@dividend+4)& (0+255),f,b
  3216   000BFA  1F6E               	comf	(___aomod@dividend+3)& (0+255),f,b
  3217   000BFC  1F6D               	comf	(___aomod@dividend+2)& (0+255),f,b
  3218   000BFE  1F6C               	comf	(___aomod@dividend+1)& (0+255),f,b
  3219   000C00  6D6B               	negf	___aomod@dividend& (0+255),b
  3220   000C02  0E00               	movlw	0
  3221   000C04  236C               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  3222   000C06  236D               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  3223   000C08  236E               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  3224   000C0A  236F               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  3225   000C0C  2370               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  3226   000C0E  2371               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  3227   000C10  2372               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  3228   000C12                     l3512:
  3229                           
  3230                           ; BSR set to: 0
  3231   000C12  C06B  F06B         	movff	___aomod@dividend,?___aomod
  3232   000C16  C06C  F06C         	movff	___aomod@dividend+1,?___aomod+1
  3233   000C1A  C06D  F06D         	movff	___aomod@dividend+2,?___aomod+2
  3234   000C1E  C06E  F06E         	movff	___aomod@dividend+3,?___aomod+3
  3235   000C22  C06F  F06F         	movff	___aomod@dividend+4,?___aomod+4
  3236   000C26  C070  F070         	movff	___aomod@dividend+5,?___aomod+5
  3237   000C2A  C071  F071         	movff	___aomod@dividend+6,?___aomod+6
  3238   000C2E  C072  F072         	movff	___aomod@dividend+7,?___aomod+7
  3239   000C32                     
  3240                           ; BSR set to: 0
  3241   000C32  0012               	return		;funcret
  3242   000C34                     __end_of___aomod:
  3243                           	callstack 0
  3244                           
  3245 ;; *************** function ___aodiv *****************
  3246 ;; Defined at:
  3247 ;;		line 9 in file "G:\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  3248 ;; Parameters:    Size  Location     Type
  3249 ;;  dividend        8   11[BANK0 ] long long 
  3250 ;;  divisor         8   19[BANK0 ] long long 
  3251 ;; Auto vars:     Size  Location     Type
  3252 ;;  quotient        8   29[BANK0 ] long long 
  3253 ;;  sign            1   28[BANK0 ] unsigned char 
  3254 ;;  counter         1   27[BANK0 ] unsigned char 
  3255 ;; Return value:  Size  Location     Type
  3256 ;;                  8   11[BANK0 ] long long 
  3257 ;; Registers used:
  3258 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3259 ;; Tracked objects:
  3260 ;;		On entry : 0/0
  3261 ;;		On exit  : 0/0
  3262 ;;		Unchanged: 0/0
  3263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3264 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3265 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3267 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3268 ;;Total ram usage:       26 bytes
  3269 ;; Hardware stack levels used: 1
  3270 ;; Hardware stack levels required when called: 13
  3271 ;; This function calls:
  3272 ;;		Nothing
  3273 ;; This function is called by:
  3274 ;;		_dtoa
  3275 ;; This function uses a non-reentrant model
  3276 ;;
  3277                           
  3278                           	psect	text13
  3279   000642                     __ptext13:
  3280                           	callstack 0
  3281   000642                     ___aodiv:
  3282                           	callstack 13
  3283   000642  0E00               	movlw	0
  3284   000644  0100               	movlb	0	; () banked
  3285   000646  6F7C               	movwf	___aodiv@sign& (0+255),b
  3286   000648                     
  3287                           ; BSR set to: 0
  3288   000648  BF7A               	btfsc	(___aodiv@divisor+7)& (0+255),7,b
  3289   00064A  EF2B  F003         	goto	u2930
  3290   00064E  EF29  F003         	goto	u2931
  3291   000652                     u2931:
  3292   000652  EF3D  F003         	goto	l3444
  3293   000656                     u2930:
  3294   000656                     
  3295                           ; BSR set to: 0
  3296   000656  1F7A               	comf	(___aodiv@divisor+7)& (0+255),f,b
  3297   000658  1F79               	comf	(___aodiv@divisor+6)& (0+255),f,b
  3298   00065A  1F78               	comf	(___aodiv@divisor+5)& (0+255),f,b
  3299   00065C  1F77               	comf	(___aodiv@divisor+4)& (0+255),f,b
  3300   00065E  1F76               	comf	(___aodiv@divisor+3)& (0+255),f,b
  3301   000660  1F75               	comf	(___aodiv@divisor+2)& (0+255),f,b
  3302   000662  1F74               	comf	(___aodiv@divisor+1)& (0+255),f,b
  3303   000664  6D73               	negf	___aodiv@divisor& (0+255),b
  3304   000666  0E00               	movlw	0
  3305   000668  2374               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  3306   00066A  2375               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  3307   00066C  2376               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  3308   00066E  2377               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  3309   000670  2378               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  3310   000672  2379               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  3311   000674  237A               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  3312   000676                     
  3313                           ; BSR set to: 0
  3314   000676  0E01               	movlw	1
  3315   000678  6F7C               	movwf	___aodiv@sign& (0+255),b
  3316   00067A                     l3444:
  3317                           
  3318                           ; BSR set to: 0
  3319   00067A  BF72               	btfsc	(___aodiv@dividend+7)& (0+255),7,b
  3320   00067C  EF44  F003         	goto	u2940
  3321   000680  EF42  F003         	goto	u2941
  3322   000684                     u2941:
  3323   000684  EF56  F003         	goto	l3450
  3324   000688                     u2940:
  3325   000688                     
  3326                           ; BSR set to: 0
  3327   000688  1F72               	comf	(___aodiv@dividend+7)& (0+255),f,b
  3328   00068A  1F71               	comf	(___aodiv@dividend+6)& (0+255),f,b
  3329   00068C  1F70               	comf	(___aodiv@dividend+5)& (0+255),f,b
  3330   00068E  1F6F               	comf	(___aodiv@dividend+4)& (0+255),f,b
  3331   000690  1F6E               	comf	(___aodiv@dividend+3)& (0+255),f,b
  3332   000692  1F6D               	comf	(___aodiv@dividend+2)& (0+255),f,b
  3333   000694  1F6C               	comf	(___aodiv@dividend+1)& (0+255),f,b
  3334   000696  6D6B               	negf	___aodiv@dividend& (0+255),b
  3335   000698  0E00               	movlw	0
  3336   00069A  236C               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  3337   00069C  236D               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  3338   00069E  236E               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  3339   0006A0  236F               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  3340   0006A2  2370               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  3341   0006A4  2371               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  3342   0006A6  2372               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  3343   0006A8                     
  3344                           ; BSR set to: 0
  3345   0006A8  0E01               	movlw	1
  3346   0006AA  1B7C               	xorwf	___aodiv@sign& (0+255),f,b
  3347   0006AC                     l3450:
  3348                           
  3349                           ; BSR set to: 0
  3350   0006AC  EE20  F07D         	lfsr	2,___aodiv@quotient
  3351   0006B0  0E07               	movlw	7
  3352   0006B2                     u2951:
  3353   0006B2  6ADE               	clrf	postinc2,c
  3354   0006B4  06E8               	decf	wreg,f,c
  3355   0006B6  E2FD               	bc	u2951
  3356   0006B8                     
  3357                           ; BSR set to: 0
  3358   0006B8  5173               	movf	___aodiv@divisor& (0+255),w,b
  3359   0006BA  1174               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  3360   0006BC  1175               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  3361   0006BE  1176               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  3362   0006C0  1177               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  3363   0006C2  1178               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  3364   0006C4  1179               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  3365   0006C6  117A               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  3366   0006C8  B4D8               	btfsc	status,2,c
  3367   0006CA  EF69  F003         	goto	u2961
  3368   0006CE  EF6B  F003         	goto	u2960
  3369   0006D2                     u2961:
  3370   0006D2  EFBD  F003         	goto	l3472
  3371   0006D6                     u2960:
  3372   0006D6                     
  3373                           ; BSR set to: 0
  3374   0006D6  0E01               	movlw	1
  3375   0006D8  6F7B               	movwf	___aodiv@counter& (0+255),b
  3376   0006DA  EF79  F003         	goto	l3458
  3377   0006DE                     l3456:
  3378                           
  3379                           ; BSR set to: 0
  3380   0006DE  90D8               	bcf	status,0,c
  3381   0006E0  3773               	rlcf	___aodiv@divisor& (0+255),f,b
  3382   0006E2  3774               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  3383   0006E4  3775               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  3384   0006E6  3776               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  3385   0006E8  3777               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  3386   0006EA  3778               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  3387   0006EC  3779               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  3388   0006EE  377A               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  3389   0006F0  2B7B               	incf	___aodiv@counter& (0+255),f,b
  3390   0006F2                     l3458:
  3391                           
  3392                           ; BSR set to: 0
  3393   0006F2  AF7A               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  3394   0006F4  EF7E  F003         	goto	u2971
  3395   0006F8  EF80  F003         	goto	u2970
  3396   0006FC                     u2971:
  3397   0006FC  EF6F  F003         	goto	l3456
  3398   000700                     u2970:
  3399   000700                     l3460:
  3400                           
  3401                           ; BSR set to: 0
  3402   000700  90D8               	bcf	status,0,c
  3403   000702  377D               	rlcf	___aodiv@quotient& (0+255),f,b
  3404   000704  377E               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  3405   000706  377F               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  3406   000708  3780               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  3407   00070A  3781               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  3408   00070C  3782               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  3409   00070E  3783               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  3410   000710  3784               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  3411   000712                     
  3412                           ; BSR set to: 0
  3413   000712  5173               	movf	___aodiv@divisor& (0+255),w,b
  3414   000714  5D6B               	subwf	___aodiv@dividend& (0+255),w,b
  3415   000716  5174               	movf	(___aodiv@divisor+1)& (0+255),w,b
  3416   000718  596C               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  3417   00071A  5175               	movf	(___aodiv@divisor+2)& (0+255),w,b
  3418   00071C  596D               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  3419   00071E  5176               	movf	(___aodiv@divisor+3)& (0+255),w,b
  3420   000720  596E               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  3421   000722  5177               	movf	(___aodiv@divisor+4)& (0+255),w,b
  3422   000724  596F               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  3423   000726  5178               	movf	(___aodiv@divisor+5)& (0+255),w,b
  3424   000728  5970               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  3425   00072A  5179               	movf	(___aodiv@divisor+6)& (0+255),w,b
  3426   00072C  5971               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  3427   00072E  517A               	movf	(___aodiv@divisor+7)& (0+255),w,b
  3428   000730  5972               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  3429   000732  A0D8               	btfss	status,0,c
  3430   000734  EF9E  F003         	goto	u2981
  3431   000738  EFA0  F003         	goto	u2980
  3432   00073C                     u2981:
  3433   00073C  EFB1  F003         	goto	l3468
  3434   000740                     u2980:
  3435   000740                     
  3436                           ; BSR set to: 0
  3437   000740  5173               	movf	___aodiv@divisor& (0+255),w,b
  3438   000742  5F6B               	subwf	___aodiv@dividend& (0+255),f,b
  3439   000744  5174               	movf	(___aodiv@divisor+1)& (0+255),w,b
  3440   000746  5B6C               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  3441   000748  5175               	movf	(___aodiv@divisor+2)& (0+255),w,b
  3442   00074A  5B6D               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  3443   00074C  5176               	movf	(___aodiv@divisor+3)& (0+255),w,b
  3444   00074E  5B6E               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  3445   000750  5177               	movf	(___aodiv@divisor+4)& (0+255),w,b
  3446   000752  5B6F               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  3447   000754  5178               	movf	(___aodiv@divisor+5)& (0+255),w,b
  3448   000756  5B70               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  3449   000758  5179               	movf	(___aodiv@divisor+6)& (0+255),w,b
  3450   00075A  5B71               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  3451   00075C  517A               	movf	(___aodiv@divisor+7)& (0+255),w,b
  3452   00075E  5B72               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  3453   000760                     
  3454                           ; BSR set to: 0
  3455   000760  817D               	bsf	___aodiv@quotient& (0+255),0,b
  3456   000762                     l3468:
  3457                           
  3458                           ; BSR set to: 0
  3459   000762  90D8               	bcf	status,0,c
  3460   000764  337A               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  3461   000766  3379               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  3462   000768  3378               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  3463   00076A  3377               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  3464   00076C  3376               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  3465   00076E  3375               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  3466   000770  3374               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  3467   000772  3373               	rrcf	___aodiv@divisor& (0+255),f,b
  3468   000774                     
  3469                           ; BSR set to: 0
  3470   000774  2F7B               	decfsz	___aodiv@counter& (0+255),f,b
  3471   000776  EF80  F003         	goto	l3460
  3472   00077A                     l3472:
  3473                           
  3474                           ; BSR set to: 0
  3475   00077A  517C               	movf	___aodiv@sign& (0+255),w,b
  3476   00077C  B4D8               	btfsc	status,2,c
  3477   00077E  EFC3  F003         	goto	u2991
  3478   000782  EFC5  F003         	goto	u2990
  3479   000786                     u2991:
  3480   000786  EFD5  F003         	goto	l3476
  3481   00078A                     u2990:
  3482   00078A                     
  3483                           ; BSR set to: 0
  3484   00078A  1F84               	comf	(___aodiv@quotient+7)& (0+255),f,b
  3485   00078C  1F83               	comf	(___aodiv@quotient+6)& (0+255),f,b
  3486   00078E  1F82               	comf	(___aodiv@quotient+5)& (0+255),f,b
  3487   000790  1F81               	comf	(___aodiv@quotient+4)& (0+255),f,b
  3488   000792  1F80               	comf	(___aodiv@quotient+3)& (0+255),f,b
  3489   000794  1F7F               	comf	(___aodiv@quotient+2)& (0+255),f,b
  3490   000796  1F7E               	comf	(___aodiv@quotient+1)& (0+255),f,b
  3491   000798  6D7D               	negf	___aodiv@quotient& (0+255),b
  3492   00079A  0E00               	movlw	0
  3493   00079C  237E               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  3494   00079E  237F               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  3495   0007A0  2380               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  3496   0007A2  2381               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  3497   0007A4  2382               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  3498   0007A6  2383               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  3499   0007A8  2384               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  3500   0007AA                     l3476:
  3501                           
  3502                           ; BSR set to: 0
  3503   0007AA  C07D  F06B         	movff	___aodiv@quotient,?___aodiv
  3504   0007AE  C07E  F06C         	movff	___aodiv@quotient+1,?___aodiv+1
  3505   0007B2  C07F  F06D         	movff	___aodiv@quotient+2,?___aodiv+2
  3506   0007B6  C080  F06E         	movff	___aodiv@quotient+3,?___aodiv+3
  3507   0007BA  C081  F06F         	movff	___aodiv@quotient+4,?___aodiv+4
  3508   0007BE  C082  F070         	movff	___aodiv@quotient+5,?___aodiv+5
  3509   0007C2  C083  F071         	movff	___aodiv@quotient+6,?___aodiv+6
  3510   0007C6  C084  F072         	movff	___aodiv@quotient+7,?___aodiv+7
  3511   0007CA                     
  3512                           ; BSR set to: 0
  3513   0007CA  0012               	return		;funcret
  3514   0007CC                     __end_of___aodiv:
  3515                           	callstack 0
  3516                           
  3517 ;; *************** function _SYSTEM_Initialize *****************
  3518 ;; Defined at:
  3519 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3520 ;; Parameters:    Size  Location     Type
  3521 ;;		None
  3522 ;; Auto vars:     Size  Location     Type
  3523 ;;		None
  3524 ;; Return value:  Size  Location     Type
  3525 ;;                  1    wreg      void 
  3526 ;; Registers used:
  3527 ;;		wreg, status,2, status,0, cstack
  3528 ;; Tracked objects:
  3529 ;;		On entry : 0/0
  3530 ;;		On exit  : 0/0
  3531 ;;		Unchanged: 0/0
  3532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3537 ;;Total ram usage:        0 bytes
  3538 ;; Hardware stack levels used: 1
  3539 ;; Hardware stack levels required when called: 15
  3540 ;; This function calls:
  3541 ;;		_ADC_Initialize
  3542 ;;		_CCP5_Initialize
  3543 ;;		_EUSART1_Initialize
  3544 ;;		_EXT_INT_Initialize
  3545 ;;		_INTERRUPT_Initialize
  3546 ;;		_OSCILLATOR_Initialize
  3547 ;;		_PIN_MANAGER_Initialize
  3548 ;;		_SPI1_Initialize
  3549 ;;		_TMR0_Initialize
  3550 ;; This function is called by:
  3551 ;;		_main
  3552 ;; This function uses a non-reentrant model
  3553 ;;
  3554                           
  3555                           	psect	text14
  3556   001B20                     __ptext14:
  3557                           	callstack 0
  3558   001B20                     _SYSTEM_Initialize:
  3559                           	callstack 15
  3560   001B20                     
  3561                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  3562   001B20  EC27  F00E         	call	_INTERRUPT_Initialize	;wreg free
  3563   001B24                     
  3564                           ;mcc_generated_files/mcc.c: 54:     SPI1_Initialize();
  3565   001B24  EC08  F00E         	call	_SPI1_Initialize	;wreg free
  3566   001B28                     
  3567                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  3568   001B28  EC55  F00C         	call	_PIN_MANAGER_Initialize	;wreg free
  3569   001B2C                     
  3570                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  3571   001B2C  EC20  F00E         	call	_OSCILLATOR_Initialize	;wreg free
  3572   001B30                     
  3573                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  3574   001B30  ECA3  F00D         	call	_ADC_Initialize	;wreg free
  3575   001B34                     
  3576                           ;mcc_generated_files/mcc.c: 58:     CCP5_Initialize();
  3577   001B34  EC11  F00E         	call	_CCP5_Initialize	;wreg free
  3578   001B38                     
  3579                           ;mcc_generated_files/mcc.c: 59:     EXT_INT_Initialize();
  3580   001B38  ECF3  F00D         	call	_EXT_INT_Initialize	;wreg free
  3581   001B3C                     
  3582                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
  3583   001B3C  ECC9  F00D         	call	_TMR0_Initialize	;wreg free
  3584   001B40                     
  3585                           ;mcc_generated_files/mcc.c: 61:     EUSART1_Initialize();
  3586   001B40  ECA1  F009         	call	_EUSART1_Initialize	;wreg free
  3587   001B44  0012               	return		;funcret
  3588   001B46                     __end_of_SYSTEM_Initialize:
  3589                           	callstack 0
  3590                           
  3591 ;; *************** function _TMR0_Initialize *****************
  3592 ;; Defined at:
  3593 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;		None
  3596 ;; Auto vars:     Size  Location     Type
  3597 ;;		None
  3598 ;; Return value:  Size  Location     Type
  3599 ;;                  1    wreg      void 
  3600 ;; Registers used:
  3601 ;;		wreg, status,2, status,0, cstack
  3602 ;; Tracked objects:
  3603 ;;		On entry : 0/0
  3604 ;;		On exit  : 0/0
  3605 ;;		Unchanged: 0/0
  3606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3611 ;;Total ram usage:        0 bytes
  3612 ;; Hardware stack levels used: 1
  3613 ;; Hardware stack levels required when called: 14
  3614 ;; This function calls:
  3615 ;;		_TMR0_SetInterruptHandler
  3616 ;; This function is called by:
  3617 ;;		_SYSTEM_Initialize
  3618 ;; This function uses a non-reentrant model
  3619 ;;
  3620                           
  3621                           	psect	text15
  3622   001B92                     __ptext15:
  3623                           	callstack 0
  3624   001B92                     _TMR0_Initialize:
  3625                           	callstack 15
  3626   001B92                     
  3627                           ;mcc_generated_files/tmr0.c: 72:     TMR0H = 0x00;
  3628   001B92  0E00               	movlw	0
  3629   001B94  6ED7               	movwf	215,c	;volatile
  3630                           
  3631                           ;mcc_generated_files/tmr0.c: 75:     TMR0L = 0x3D;
  3632   001B96  0E3D               	movlw	61
  3633   001B98  6ED6               	movwf	214,c	;volatile
  3634                           
  3635                           ;mcc_generated_files/tmr0.c: 79:     timer0ReloadVal = 61;
  3636   001B9A  0E3D               	movlw	61
  3637   001B9C  0100               	movlb	0	; () banked
  3638   001B9E  6FEF               	movwf	_timer0ReloadVal& (0+255),b	;volatile
  3639   001BA0                     
  3640                           ; BSR set to: 0
  3641                           ;mcc_generated_files/tmr0.c: 82:     INTCONbits.TMR0IF = 0;
  3642   001BA0  94F2               	bcf	242,2,c	;volatile
  3643   001BA2                     
  3644                           ; BSR set to: 0
  3645                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IE = 1;
  3646   001BA2  8AF2               	bsf	242,5,c	;volatile
  3647   001BA4                     
  3648                           ; BSR set to: 0
  3649                           ;mcc_generated_files/tmr0.c: 88:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  3650   001BA4  0EE0               	movlw	low _TMR0_DefaultInterruptHandler
  3651   001BA6  6F6B               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  3652   001BA8  0E1C               	movlw	high _TMR0_DefaultInterruptHandler
  3653   001BAA  6F6C               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3654   001BAC  EC33  F00E         	call	_TMR0_SetInterruptHandler	;wreg free
  3655   001BB0                     
  3656                           ;mcc_generated_files/tmr0.c: 91:     T0CON = 0x57;
  3657   001BB0  0E57               	movlw	87
  3658   001BB2  6ED5               	movwf	213,c	;volatile
  3659   001BB4  0012               	return		;funcret
  3660   001BB6                     __end_of_TMR0_Initialize:
  3661                           	callstack 0
  3662                           
  3663 ;; *************** function _TMR0_SetInterruptHandler *****************
  3664 ;; Defined at:
  3665 ;;		line 147 in file "mcc_generated_files/tmr0.c"
  3666 ;; Parameters:    Size  Location     Type
  3667 ;;  InterruptHan    2   11[BANK0 ] PTR FTN()void 
  3668 ;;		 -> TMR0_MyInterruptHandler(1), TMR0_DefaultInterruptHandler(1), 
  3669 ;; Auto vars:     Size  Location     Type
  3670 ;;		None
  3671 ;; Return value:  Size  Location     Type
  3672 ;;                  1    wreg      void 
  3673 ;; Registers used:
  3674 ;;		wreg, status,2, status,0
  3675 ;; Tracked objects:
  3676 ;;		On entry : 0/0
  3677 ;;		On exit  : 0/0
  3678 ;;		Unchanged: 0/0
  3679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3680 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3683 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3684 ;;Total ram usage:        2 bytes
  3685 ;; Hardware stack levels used: 1
  3686 ;; Hardware stack levels required when called: 13
  3687 ;; This function calls:
  3688 ;;		Nothing
  3689 ;; This function is called by:
  3690 ;;		_TMR0_Initialize
  3691 ;;		_main
  3692 ;; This function uses a non-reentrant model
  3693 ;;
  3694                           
  3695                           	psect	text16
  3696   001C66                     __ptext16:
  3697                           	callstack 0
  3698   001C66                     _TMR0_SetInterruptHandler:
  3699                           	callstack 17
  3700   001C66                     
  3701                           ;mcc_generated_files/tmr0.c: 148:     TMR0_InterruptHandler = InterruptHandler;
  3702   001C66  C06B  F0E9         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  3703   001C6A  C06C  F0EA         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  3704   001C6E  0012               	return		;funcret
  3705   001C70                     __end_of_TMR0_SetInterruptHandler:
  3706                           	callstack 0
  3707                           
  3708 ;; *************** function _SPI1_Initialize *****************
  3709 ;; Defined at:
  3710 ;;		line 62 in file "mcc_generated_files/spi1.c"
  3711 ;; Parameters:    Size  Location     Type
  3712 ;;		None
  3713 ;; Auto vars:     Size  Location     Type
  3714 ;;		None
  3715 ;; Return value:  Size  Location     Type
  3716 ;;                  1    wreg      void 
  3717 ;; Registers used:
  3718 ;;		wreg, status,2
  3719 ;; Tracked objects:
  3720 ;;		On entry : 0/0
  3721 ;;		On exit  : 0/0
  3722 ;;		Unchanged: 0/0
  3723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3728 ;;Total ram usage:        0 bytes
  3729 ;; Hardware stack levels used: 1
  3730 ;; Hardware stack levels required when called: 13
  3731 ;; This function calls:
  3732 ;;		Nothing
  3733 ;; This function is called by:
  3734 ;;		_SYSTEM_Initialize
  3735 ;; This function uses a non-reentrant model
  3736 ;;
  3737                           
  3738                           	psect	text17
  3739   001C10                     __ptext17:
  3740                           	callstack 0
  3741   001C10                     _SPI1_Initialize:
  3742                           	callstack 16
  3743   001C10                     
  3744                           ;mcc_generated_files/spi1.c: 65:     SSP1STAT = 0x40;
  3745   001C10  0E40               	movlw	64
  3746   001C12  6EC7               	movwf	199,c	;volatile
  3747                           
  3748                           ;mcc_generated_files/spi1.c: 66:     SSP1CON1 = 0x00;
  3749   001C14  0E00               	movlw	0
  3750   001C16  6EC6               	movwf	198,c	;volatile
  3751                           
  3752                           ;mcc_generated_files/spi1.c: 67:     SSP1ADD = 0x01;
  3753   001C18  0E01               	movlw	1
  3754   001C1A  6EC8               	movwf	200,c	;volatile
  3755   001C1C                     
  3756                           ;mcc_generated_files/spi1.c: 68:     TRISCbits.TRISC3 = 0;
  3757   001C1C  9694               	bcf	148,3,c	;volatile
  3758   001C1E                     
  3759                           ;mcc_generated_files/spi1.c: 69:     SSP1CON1bits.SSPEN = 0;
  3760   001C1E  9AC6               	bcf	198,5,c	;volatile
  3761   001C20  0012               	return		;funcret
  3762   001C22                     __end_of_SPI1_Initialize:
  3763                           	callstack 0
  3764                           
  3765 ;; *************** function _PIN_MANAGER_Initialize *****************
  3766 ;; Defined at:
  3767 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3768 ;; Parameters:    Size  Location     Type
  3769 ;;		None
  3770 ;; Auto vars:     Size  Location     Type
  3771 ;;		None
  3772 ;; Return value:  Size  Location     Type
  3773 ;;                  1    wreg      void 
  3774 ;; Registers used:
  3775 ;;		wreg, status,2
  3776 ;; Tracked objects:
  3777 ;;		On entry : 0/0
  3778 ;;		On exit  : 0/0
  3779 ;;		Unchanged: 0/0
  3780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3785 ;;Total ram usage:        0 bytes
  3786 ;; Hardware stack levels used: 1
  3787 ;; Hardware stack levels required when called: 13
  3788 ;; This function calls:
  3789 ;;		Nothing
  3790 ;; This function is called by:
  3791 ;;		_SYSTEM_Initialize
  3792 ;; This function uses a non-reentrant model
  3793 ;;
  3794                           
  3795                           	psect	text18
  3796   0018AA                     __ptext18:
  3797                           	callstack 0
  3798   0018AA                     _PIN_MANAGER_Initialize:
  3799                           	callstack 16
  3800   0018AA                     
  3801                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  3802   0018AA  0E00               	movlw	0
  3803   0018AC  6E8D               	movwf	141,c	;volatile
  3804                           
  3805                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  3806   0018AE  0E00               	movlw	0
  3807   0018B0  6E8C               	movwf	140,c	;volatile
  3808                           
  3809                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  3810   0018B2  0E00               	movlw	0
  3811   0018B4  6E89               	movwf	137,c	;volatile
  3812                           
  3813                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  3814   0018B6  0E00               	movlw	0
  3815   0018B8  6E8A               	movwf	138,c	;volatile
  3816                           
  3817                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  3818   0018BA  0E00               	movlw	0
  3819   0018BC  6E8B               	movwf	139,c	;volatile
  3820                           
  3821                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  3822   0018BE  0E07               	movlw	7
  3823   0018C0  6E96               	movwf	150,c	;volatile
  3824                           
  3825                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xBF;
  3826   0018C2  0EBF               	movlw	191
  3827   0018C4  6E92               	movwf	146,c	;volatile
  3828                           
  3829                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xC7;
  3830   0018C6  0EC7               	movlw	199
  3831   0018C8  6E93               	movwf	147,c	;volatile
  3832                           
  3833                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x9F;
  3834   0018CA  0E9F               	movlw	159
  3835   0018CC  6E94               	movwf	148,c	;volatile
  3836   0018CE                     
  3837                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  3838   0018CE  6895               	setf	149,c	;volatile
  3839                           
  3840                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x00;
  3841   0018D0  0E00               	movlw	0
  3842   0018D2  010F               	movlb	15	; () banked
  3843   0018D4  6F3B               	movwf	59,b	;volatile
  3844                           
  3845                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x00;
  3846   0018D6  0E00               	movlw	0
  3847   0018D8  6F3A               	movwf	58,b	;volatile
  3848                           
  3849                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x06;
  3850   0018DA  0E06               	movlw	6
  3851   0018DC  6F39               	movwf	57,b	;volatile
  3852                           
  3853                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  3854   0018DE  0E07               	movlw	7
  3855   0018E0  6F3C               	movwf	60,b	;volatile
  3856                           
  3857                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x2F;
  3858   0018E2  0E2F               	movlw	47
  3859   0018E4  6F38               	movwf	56,b	;volatile
  3860                           
  3861                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
  3862   0018E6  0E00               	movlw	0
  3863   0018E8  6E61               	movwf	97,c	;volatile
  3864   0018EA                     
  3865                           ; BSR set to: 15
  3866                           ;mcc_generated_files/pin_manager.c: 88:     INTCON2bits.nRBPU = 0;
  3867   0018EA  9EF1               	bcf	241,7,c	;volatile
  3868   0018EC                     
  3869                           ; BSR set to: 15
  3870   0018EC  0012               	return		;funcret
  3871   0018EE                     __end_of_PIN_MANAGER_Initialize:
  3872                           	callstack 0
  3873                           
  3874 ;; *************** function _OSCILLATOR_Initialize *****************
  3875 ;; Defined at:
  3876 ;;		line 64 in file "mcc_generated_files/mcc.c"
  3877 ;; Parameters:    Size  Location     Type
  3878 ;;		None
  3879 ;; Auto vars:     Size  Location     Type
  3880 ;;		None
  3881 ;; Return value:  Size  Location     Type
  3882 ;;                  1    wreg      void 
  3883 ;; Registers used:
  3884 ;;		wreg, status,2
  3885 ;; Tracked objects:
  3886 ;;		On entry : 0/0
  3887 ;;		On exit  : 0/0
  3888 ;;		Unchanged: 0/0
  3889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3894 ;;Total ram usage:        0 bytes
  3895 ;; Hardware stack levels used: 1
  3896 ;; Hardware stack levels required when called: 13
  3897 ;; This function calls:
  3898 ;;		Nothing
  3899 ;; This function is called by:
  3900 ;;		_SYSTEM_Initialize
  3901 ;; This function uses a non-reentrant model
  3902 ;;
  3903                           
  3904                           	psect	text19
  3905   001C40                     __ptext19:
  3906                           	callstack 0
  3907   001C40                     _OSCILLATOR_Initialize:
  3908                           	callstack 16
  3909   001C40                     
  3910                           ;mcc_generated_files/mcc.c: 67:     OSCCON = 0x30;
  3911   001C40  0E30               	movlw	48
  3912   001C42  6ED3               	movwf	211,c	;volatile
  3913                           
  3914                           ;mcc_generated_files/mcc.c: 69:     OSCCON2 = 0x04;
  3915   001C44  0E04               	movlw	4
  3916   001C46  6ED2               	movwf	210,c	;volatile
  3917                           
  3918                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  3919   001C48  0E00               	movlw	0
  3920   001C4A  6E9B               	movwf	155,c	;volatile
  3921   001C4C  0012               	return		;funcret
  3922   001C4E                     __end_of_OSCILLATOR_Initialize:
  3923                           	callstack 0
  3924                           
  3925 ;; *************** function _INTERRUPT_Initialize *****************
  3926 ;; Defined at:
  3927 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3928 ;; Parameters:    Size  Location     Type
  3929 ;;		None
  3930 ;; Auto vars:     Size  Location     Type
  3931 ;;		None
  3932 ;; Return value:  Size  Location     Type
  3933 ;;                  1    wreg      void 
  3934 ;; Registers used:
  3935 ;;		None
  3936 ;; Tracked objects:
  3937 ;;		On entry : 0/0
  3938 ;;		On exit  : 0/0
  3939 ;;		Unchanged: 0/0
  3940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3945 ;;Total ram usage:        0 bytes
  3946 ;; Hardware stack levels used: 1
  3947 ;; Hardware stack levels required when called: 13
  3948 ;; This function calls:
  3949 ;;		Nothing
  3950 ;; This function is called by:
  3951 ;;		_SYSTEM_Initialize
  3952 ;; This function uses a non-reentrant model
  3953 ;;
  3954                           
  3955                           	psect	text20
  3956   001C4E                     __ptext20:
  3957                           	callstack 0
  3958   001C4E                     _INTERRUPT_Initialize:
  3959                           	callstack 16
  3960   001C4E                     
  3961                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 1;
  3962   001C4E  8ED0               	bsf	208,7,c	;volatile
  3963                           
  3964                           ;mcc_generated_files/interrupt_manager.c: 60:     IPR1bits.ADIP = 1;
  3965   001C50  8C9F               	bsf	159,6,c	;volatile
  3966                           
  3967                           ;mcc_generated_files/interrupt_manager.c: 63:     INTCON2bits.TMR0IP = 1;
  3968   001C52  84F1               	bsf	241,2,c	;volatile
  3969                           
  3970                           ;mcc_generated_files/interrupt_manager.c: 68:     IPR1bits.TX1IP = 1;
  3971   001C54  889F               	bsf	159,4,c	;volatile
  3972                           
  3973                           ;mcc_generated_files/interrupt_manager.c: 71:     IPR1bits.RC1IP = 1;
  3974   001C56  8A9F               	bsf	159,5,c	;volatile
  3975   001C58  0012               	return		;funcret
  3976   001C5A                     __end_of_INTERRUPT_Initialize:
  3977                           	callstack 0
  3978                           
  3979 ;; *************** function _EXT_INT_Initialize *****************
  3980 ;; Defined at:
  3981 ;;		line 59 in file "mcc_generated_files/ext_int.c"
  3982 ;; Parameters:    Size  Location     Type
  3983 ;;		None
  3984 ;; Auto vars:     Size  Location     Type
  3985 ;;		None
  3986 ;; Return value:  Size  Location     Type
  3987 ;;                  1    wreg      void 
  3988 ;; Registers used:
  3989 ;;		wreg, status,2, status,0, cstack
  3990 ;; Tracked objects:
  3991 ;;		On entry : 0/0
  3992 ;;		On exit  : 0/0
  3993 ;;		Unchanged: 0/0
  3994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3999 ;;Total ram usage:        0 bytes
  4000 ;; Hardware stack levels used: 1
  4001 ;; Hardware stack levels required when called: 14
  4002 ;; This function calls:
  4003 ;;		_INT0_SetInterruptHandler
  4004 ;; This function is called by:
  4005 ;;		_SYSTEM_Initialize
  4006 ;; This function uses a non-reentrant model
  4007 ;;
  4008                           
  4009                           	psect	text21
  4010   001BE6                     __ptext21:
  4011                           	callstack 0
  4012   001BE6                     _EXT_INT_Initialize:
  4013                           	callstack 15
  4014   001BE6                     
  4015                           ;mcc_generated_files/ext_int.c: 64:     (INTCONbits.INT0IF = 0);
  4016   001BE6  92F2               	bcf	242,1,c	;volatile
  4017                           
  4018                           ;mcc_generated_files/ext_int.c: 65:     (INTCON2bits.INTEDG0 = 0);
  4019   001BE8  9CF1               	bcf	241,6,c	;volatile
  4020   001BEA                     
  4021                           ;mcc_generated_files/ext_int.c: 67:     INT0_SetInterruptHandler(INT0_DefaultInterruptHa
      +                          ndler);
  4022   001BEA  0EE2               	movlw	low _INT0_DefaultInterruptHandler
  4023   001BEC  0100               	movlb	0	; () banked
  4024   001BEE  6F6B               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  4025   001BF0  0E1C               	movlw	high _INT0_DefaultInterruptHandler
  4026   001BF2  6F6C               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4027   001BF4  EC38  F00E         	call	_INT0_SetInterruptHandler	;wreg free
  4028   001BF8                     
  4029                           ;mcc_generated_files/ext_int.c: 68:     (INTCONbits.INT0IE = 1);
  4030   001BF8  88F2               	bsf	242,4,c	;volatile
  4031   001BFA  0012               	return		;funcret
  4032   001BFC                     __end_of_EXT_INT_Initialize:
  4033                           	callstack 0
  4034                           
  4035 ;; *************** function _INT0_SetInterruptHandler *****************
  4036 ;; Defined at:
  4037 ;;		line 50 in file "mcc_generated_files/ext_int.c"
  4038 ;; Parameters:    Size  Location     Type
  4039 ;;  InterruptHan    2   11[BANK0 ] PTR FTN()void 
  4040 ;;		 -> INT0_MyInterruptHandler(1), INT0_DefaultInterruptHandler(1), 
  4041 ;; Auto vars:     Size  Location     Type
  4042 ;;		None
  4043 ;; Return value:  Size  Location     Type
  4044 ;;                  1    wreg      void 
  4045 ;; Registers used:
  4046 ;;		wreg, status,2, status,0
  4047 ;; Tracked objects:
  4048 ;;		On entry : 0/0
  4049 ;;		On exit  : 0/0
  4050 ;;		Unchanged: 0/0
  4051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4052 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4055 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4056 ;;Total ram usage:        2 bytes
  4057 ;; Hardware stack levels used: 1
  4058 ;; Hardware stack levels required when called: 13
  4059 ;; This function calls:
  4060 ;;		Nothing
  4061 ;; This function is called by:
  4062 ;;		_EXT_INT_Initialize
  4063 ;;		_main
  4064 ;; This function uses a non-reentrant model
  4065 ;;
  4066                           
  4067                           	psect	text22
  4068   001C70                     __ptext22:
  4069                           	callstack 0
  4070   001C70                     _INT0_SetInterruptHandler:
  4071                           	callstack 15
  4072   001C70                     
  4073                           ;mcc_generated_files/ext_int.c: 51:     INT0_InterruptHandler = InterruptHandler;
  4074   001C70  C06B  F0EB         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  4075   001C74  C06C  F0EC         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  4076   001C78  0012               	return		;funcret
  4077   001C7A                     __end_of_INT0_SetInterruptHandler:
  4078                           	callstack 0
  4079                           
  4080 ;; *************** function _EUSART1_Initialize *****************
  4081 ;; Defined at:
  4082 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;		None
  4085 ;; Auto vars:     Size  Location     Type
  4086 ;;		None
  4087 ;; Return value:  Size  Location     Type
  4088 ;;                  1    wreg      void 
  4089 ;; Registers used:
  4090 ;;		wreg, status,2, status,0, cstack
  4091 ;; Tracked objects:
  4092 ;;		On entry : 0/0
  4093 ;;		On exit  : 0/0
  4094 ;;		Unchanged: 0/0
  4095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4100 ;;Total ram usage:        0 bytes
  4101 ;; Hardware stack levels used: 1
  4102 ;; Hardware stack levels required when called: 14
  4103 ;; This function calls:
  4104 ;;		_EUSART1_SetErrorHandler
  4105 ;;		_EUSART1_SetFramingErrorHandler
  4106 ;;		_EUSART1_SetOverrunErrorHandler
  4107 ;;		_EUSART1_SetRxInterruptHandler
  4108 ;;		_EUSART1_SetTxInterruptHandler
  4109 ;; This function is called by:
  4110 ;;		_SYSTEM_Initialize
  4111 ;; This function uses a non-reentrant model
  4112 ;;
  4113                           
  4114                           	psect	text23
  4115   001342                     __ptext23:
  4116                           	callstack 0
  4117   001342                     _EUSART1_Initialize:
  4118                           	callstack 15
  4119   001342                     
  4120                           ;mcc_generated_files/eusart1.c: 91:     PIE1bits.RC1IE = 0;
  4121   001342  9A9D               	bcf	157,5,c	;volatile
  4122   001344                     
  4123                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  4124   001344  0E52               	movlw	low _EUSART1_Receive_ISR
  4125   001346  0100               	movlb	0	; () banked
  4126   001348  6F6B               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler& (0+255),b
  4127   00134A  0E11               	movlw	high _EUSART1_Receive_ISR
  4128   00134C  6F6C               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
  4129   00134E  EC42  F00E         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  4130   001352                     
  4131                           ;mcc_generated_files/eusart1.c: 93:     PIE1bits.TX1IE = 0;
  4132   001352  989D               	bcf	157,4,c	;volatile
  4133                           
  4134                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  4135   001354  0EB6               	movlw	low _EUSART1_Transmit_ISR
  4136   001356  0100               	movlb	0	; () banked
  4137   001358  6F6B               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler& (0+255),b
  4138   00135A  0E19               	movlw	high _EUSART1_Transmit_ISR
  4139   00135C  6F6C               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
  4140   00135E  EC3D  F00E         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  4141   001362                     
  4142                           ;mcc_generated_files/eusart1.c: 98:     BAUDCON1 = 0x08;
  4143   001362  0E08               	movlw	8
  4144   001364  6EB8               	movwf	184,c	;volatile
  4145   001366                     
  4146                           ;mcc_generated_files/eusart1.c: 101:     RCSTA1 = 0x90;
  4147   001366  0E90               	movlw	144
  4148   001368  6EAB               	movwf	171,c	;volatile
  4149   00136A                     
  4150                           ;mcc_generated_files/eusart1.c: 104:     TXSTA1 = 0x24;
  4151   00136A  0E24               	movlw	36
  4152   00136C  6EAC               	movwf	172,c	;volatile
  4153   00136E                     
  4154                           ;mcc_generated_files/eusart1.c: 107:     SPBRG1 = 0xCF;
  4155   00136E  0ECF               	movlw	207
  4156   001370  6EAF               	movwf	175,c	;volatile
  4157   001372                     
  4158                           ;mcc_generated_files/eusart1.c: 110:     SPBRGH1 = 0x00;
  4159   001372  0E00               	movlw	0
  4160   001374  6EB0               	movwf	176,c	;volatile
  4161   001376                     
  4162                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  4163   001376  0EE4               	movlw	low _EUSART1_DefaultFramingErrorHandler
  4164   001378  0100               	movlb	0	; () banked
  4165   00137A  6F6B               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler& (0+255),b
  4166   00137C  0E1C               	movlw	high _EUSART1_DefaultFramingErrorHandler
  4167   00137E  6F6C               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
  4168   001380  EC4C  F00E         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  4169   001384                     
  4170                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  4171   001384  0EC8               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  4172   001386  0100               	movlb	0	; () banked
  4173   001388  6F6B               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
  4174   00138A  0E1C               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  4175   00138C  6F6C               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
  4176   00138E  EC47  F00E         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  4177   001392                     
  4178                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  4179   001392  0ECE               	movlw	low _EUSART1_DefaultErrorHandler
  4180   001394  0100               	movlb	0	; () banked
  4181   001396  6F6B               	movwf	EUSART1_SetErrorHandler@interruptHandler& (0+255),b
  4182   001398  0E1C               	movlw	high _EUSART1_DefaultErrorHandler
  4183   00139A  6F6C               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)& (0+255),b
  4184   00139C  EC51  F00E         	call	_EUSART1_SetErrorHandler	;wreg free
  4185                           
  4186                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  4187   0013A0  0E00               	movlw	0
  4188   0013A2  0100               	movlb	0	; () banked
  4189   0013A4  6FE3               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  4190                           
  4191                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  4192   0013A6  0E00               	movlw	0
  4193   0013A8  6FE8               	movwf	_eusart1TxHead& (0+255),b	;volatile
  4194                           
  4195                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  4196   0013AA  0E00               	movlw	0
  4197   0013AC  6FE7               	movwf	_eusart1TxTail& (0+255),b	;volatile
  4198                           
  4199                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  4200   0013AE  0E08               	movlw	8
  4201   0013B0  6FF0               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  4202                           
  4203                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  4204   0013B2  0E00               	movlw	0
  4205   0013B4  6FE6               	movwf	_eusart1RxHead& (0+255),b	;volatile
  4206                           
  4207                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  4208   0013B6  0E00               	movlw	0
  4209   0013B8  6FE5               	movwf	_eusart1RxTail& (0+255),b	;volatile
  4210                           
  4211                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  4212   0013BA  0E00               	movlw	0
  4213   0013BC  6FE4               	movwf	_eusart1RxCount& (0+255),b	;volatile
  4214   0013BE                     
  4215                           ; BSR set to: 0
  4216                           ;mcc_generated_files/eusart1.c: 129:     PIE1bits.RC1IE = 1;
  4217   0013BE  8A9D               	bsf	157,5,c	;volatile
  4218   0013C0                     
  4219                           ; BSR set to: 0
  4220   0013C0  0012               	return		;funcret
  4221   0013C2                     __end_of_EUSART1_Initialize:
  4222                           	callstack 0
  4223                           
  4224 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  4225 ;; Defined at:
  4226 ;;		line 285 in file "mcc_generated_files/eusart1.c"
  4227 ;; Parameters:    Size  Location     Type
  4228 ;;  interruptHan    2   11[BANK0 ] PTR FTN()void 
  4229 ;;		 -> EUSART1_Transmit_ISR(1), 
  4230 ;; Auto vars:     Size  Location     Type
  4231 ;;		None
  4232 ;; Return value:  Size  Location     Type
  4233 ;;                  1    wreg      void 
  4234 ;; Registers used:
  4235 ;;		wreg, status,2, status,0
  4236 ;; Tracked objects:
  4237 ;;		On entry : 0/0
  4238 ;;		On exit  : 0/0
  4239 ;;		Unchanged: 0/0
  4240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4241 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4244 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4245 ;;Total ram usage:        2 bytes
  4246 ;; Hardware stack levels used: 1
  4247 ;; Hardware stack levels required when called: 13
  4248 ;; This function calls:
  4249 ;;		Nothing
  4250 ;; This function is called by:
  4251 ;;		_EUSART1_Initialize
  4252 ;; This function uses a non-reentrant model
  4253 ;;
  4254                           
  4255                           	psect	text24
  4256   001C7A                     __ptext24:
  4257                           	callstack 0
  4258   001C7A                     _EUSART1_SetTxInterruptHandler:
  4259                           	callstack 15
  4260   001C7A                     
  4261                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  4262   001C7A  C06B  F130         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  4263   001C7E  C06C  F131         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  4264   001C82  0012               	return		;funcret
  4265   001C84                     __end_of_EUSART1_SetTxInterruptHandler:
  4266                           	callstack 0
  4267                           
  4268 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  4269 ;; Defined at:
  4270 ;;		line 289 in file "mcc_generated_files/eusart1.c"
  4271 ;; Parameters:    Size  Location     Type
  4272 ;;  interruptHan    2   11[BANK0 ] PTR FTN()void 
  4273 ;;		 -> EUSART1_Receive_ISR(1), 
  4274 ;; Auto vars:     Size  Location     Type
  4275 ;;		None
  4276 ;; Return value:  Size  Location     Type
  4277 ;;                  1    wreg      void 
  4278 ;; Registers used:
  4279 ;;		wreg, status,2, status,0
  4280 ;; Tracked objects:
  4281 ;;		On entry : 0/0
  4282 ;;		On exit  : 0/0
  4283 ;;		Unchanged: 0/0
  4284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4285 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4288 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4289 ;;Total ram usage:        2 bytes
  4290 ;; Hardware stack levels used: 1
  4291 ;; Hardware stack levels required when called: 13
  4292 ;; This function calls:
  4293 ;;		Nothing
  4294 ;; This function is called by:
  4295 ;;		_EUSART1_Initialize
  4296 ;; This function uses a non-reentrant model
  4297 ;;
  4298                           
  4299                           	psect	text25
  4300   001C84                     __ptext25:
  4301                           	callstack 0
  4302   001C84                     _EUSART1_SetRxInterruptHandler:
  4303                           	callstack 15
  4304   001C84                     
  4305                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  4306   001C84  C06B  F12E         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  4307   001C88  C06C  F12F         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  4308   001C8C  0012               	return		;funcret
  4309   001C8E                     __end_of_EUSART1_SetRxInterruptHandler:
  4310                           	callstack 0
  4311                           
  4312 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  4313 ;; Defined at:
  4314 ;;		line 277 in file "mcc_generated_files/eusart1.c"
  4315 ;; Parameters:    Size  Location     Type
  4316 ;;  interruptHan    2   11[BANK0 ] PTR FTN()void 
  4317 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  4318 ;; Auto vars:     Size  Location     Type
  4319 ;;		None
  4320 ;; Return value:  Size  Location     Type
  4321 ;;                  1    wreg      void 
  4322 ;; Registers used:
  4323 ;;		wreg, status,2, status,0
  4324 ;; Tracked objects:
  4325 ;;		On entry : 0/0
  4326 ;;		On exit  : 0/0
  4327 ;;		Unchanged: 0/0
  4328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4329 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4332 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4333 ;;Total ram usage:        2 bytes
  4334 ;; Hardware stack levels used: 1
  4335 ;; Hardware stack levels required when called: 13
  4336 ;; This function calls:
  4337 ;;		Nothing
  4338 ;; This function is called by:
  4339 ;;		_EUSART1_Initialize
  4340 ;; This function uses a non-reentrant model
  4341 ;;
  4342                           
  4343                           	psect	text26
  4344   001C8E                     __ptext26:
  4345                           	callstack 0
  4346   001C8E                     _EUSART1_SetOverrunErrorHandler:
  4347                           	callstack 15
  4348   001C8E                     
  4349                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
  4350   001C8E  C06B  F12A         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  4351   001C92  C06C  F12B         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  4352   001C96  0012               	return		;funcret
  4353   001C98                     __end_of_EUSART1_SetOverrunErrorHandler:
  4354                           	callstack 0
  4355                           
  4356 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  4357 ;; Defined at:
  4358 ;;		line 273 in file "mcc_generated_files/eusart1.c"
  4359 ;; Parameters:    Size  Location     Type
  4360 ;;  interruptHan    2   11[BANK0 ] PTR FTN()void 
  4361 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  4362 ;; Auto vars:     Size  Location     Type
  4363 ;;		None
  4364 ;; Return value:  Size  Location     Type
  4365 ;;                  1    wreg      void 
  4366 ;; Registers used:
  4367 ;;		wreg, status,2, status,0
  4368 ;; Tracked objects:
  4369 ;;		On entry : 0/0
  4370 ;;		On exit  : 0/0
  4371 ;;		Unchanged: 0/0
  4372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4373 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4376 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4377 ;;Total ram usage:        2 bytes
  4378 ;; Hardware stack levels used: 1
  4379 ;; Hardware stack levels required when called: 13
  4380 ;; This function calls:
  4381 ;;		Nothing
  4382 ;; This function is called by:
  4383 ;;		_EUSART1_Initialize
  4384 ;; This function uses a non-reentrant model
  4385 ;;
  4386                           
  4387                           	psect	text27
  4388   001C98                     __ptext27:
  4389                           	callstack 0
  4390   001C98                     _EUSART1_SetFramingErrorHandler:
  4391                           	callstack 15
  4392   001C98                     
  4393                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
  4394   001C98  C06B  F12C         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  4395   001C9C  C06C  F12D         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  4396   001CA0  0012               	return		;funcret
  4397   001CA2                     __end_of_EUSART1_SetFramingErrorHandler:
  4398                           	callstack 0
  4399                           
  4400 ;; *************** function _EUSART1_SetErrorHandler *****************
  4401 ;; Defined at:
  4402 ;;		line 281 in file "mcc_generated_files/eusart1.c"
  4403 ;; Parameters:    Size  Location     Type
  4404 ;;  interruptHan    2   11[BANK0 ] PTR FTN()void 
  4405 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  4406 ;; Auto vars:     Size  Location     Type
  4407 ;;		None
  4408 ;; Return value:  Size  Location     Type
  4409 ;;                  1    wreg      void 
  4410 ;; Registers used:
  4411 ;;		wreg, status,2, status,0
  4412 ;; Tracked objects:
  4413 ;;		On entry : 0/0
  4414 ;;		On exit  : 0/0
  4415 ;;		Unchanged: 0/0
  4416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4417 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4420 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4421 ;;Total ram usage:        2 bytes
  4422 ;; Hardware stack levels used: 1
  4423 ;; Hardware stack levels required when called: 13
  4424 ;; This function calls:
  4425 ;;		Nothing
  4426 ;; This function is called by:
  4427 ;;		_EUSART1_Initialize
  4428 ;; This function uses a non-reentrant model
  4429 ;;
  4430                           
  4431                           	psect	text28
  4432   001CA2                     __ptext28:
  4433                           	callstack 0
  4434   001CA2                     _EUSART1_SetErrorHandler:
  4435                           	callstack 15
  4436   001CA2                     
  4437                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
  4438   001CA2  C06B  F128         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  4439   001CA6  C06C  F129         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  4440   001CAA  0012               	return		;funcret
  4441   001CAC                     __end_of_EUSART1_SetErrorHandler:
  4442                           	callstack 0
  4443                           
  4444 ;; *************** function _CCP5_Initialize *****************
  4445 ;; Defined at:
  4446 ;;		line 49 in file "mcc_generated_files/ccp5.c"
  4447 ;; Parameters:    Size  Location     Type
  4448 ;;		None
  4449 ;; Auto vars:     Size  Location     Type
  4450 ;;		None
  4451 ;; Return value:  Size  Location     Type
  4452 ;;                  1    wreg      void 
  4453 ;; Registers used:
  4454 ;;		wreg, status,2
  4455 ;; Tracked objects:
  4456 ;;		On entry : 0/0
  4457 ;;		On exit  : 0/0
  4458 ;;		Unchanged: 0/0
  4459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4464 ;;Total ram usage:        0 bytes
  4465 ;; Hardware stack levels used: 1
  4466 ;; Hardware stack levels required when called: 13
  4467 ;; This function calls:
  4468 ;;		Nothing
  4469 ;; This function is called by:
  4470 ;;		_SYSTEM_Initialize
  4471 ;; This function uses a non-reentrant model
  4472 ;;
  4473                           
  4474                           	psect	text29
  4475   001C22                     __ptext29:
  4476                           	callstack 0
  4477   001C22                     _CCP5_Initialize:
  4478                           	callstack 16
  4479   001C22                     
  4480                           ;mcc_generated_files/ccp5.c: 53:  CCP5CON = 0x00;
  4481   001C22  0E00               	movlw	0
  4482   001C24  010F               	movlb	15	; () banked
  4483   001C26  6F54               	movwf	84,b	;volatile
  4484                           
  4485                           ;mcc_generated_files/ccp5.c: 56:  CCPR5L = 0x00;
  4486   001C28  0E00               	movlw	0
  4487   001C2A  6F55               	movwf	85,b	;volatile
  4488                           
  4489                           ;mcc_generated_files/ccp5.c: 59:  CCPR5H = 0x00;
  4490   001C2C  0E00               	movlw	0
  4491   001C2E  6F56               	movwf	86,b	;volatile
  4492   001C30                     
  4493                           ; BSR set to: 15
  4494   001C30  0012               	return		;funcret
  4495   001C32                     __end_of_CCP5_Initialize:
  4496                           	callstack 0
  4497                           
  4498 ;; *************** function _ADC_Initialize *****************
  4499 ;; Defined at:
  4500 ;;		line 62 in file "mcc_generated_files/adc.c"
  4501 ;; Parameters:    Size  Location     Type
  4502 ;;		None
  4503 ;; Auto vars:     Size  Location     Type
  4504 ;;		None
  4505 ;; Return value:  Size  Location     Type
  4506 ;;                  1    wreg      void 
  4507 ;; Registers used:
  4508 ;;		wreg, status,2, status,0, cstack
  4509 ;; Tracked objects:
  4510 ;;		On entry : 0/0
  4511 ;;		On exit  : 0/0
  4512 ;;		Unchanged: 0/0
  4513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4518 ;;Total ram usage:        0 bytes
  4519 ;; Hardware stack levels used: 1
  4520 ;; Hardware stack levels required when called: 14
  4521 ;; This function calls:
  4522 ;;		_ADC_SetInterruptHandler
  4523 ;; This function is called by:
  4524 ;;		_SYSTEM_Initialize
  4525 ;; This function uses a non-reentrant model
  4526 ;;
  4527                           
  4528                           	psect	text30
  4529   001B46                     __ptext30:
  4530                           	callstack 0
  4531   001B46                     _ADC_Initialize:
  4532                           	callstack 15
  4533   001B46                     
  4534                           ;mcc_generated_files/adc.c: 67:     ADCON0 = 0x01;
  4535   001B46  0E01               	movlw	1
  4536   001B48  6EC2               	movwf	194,c	;volatile
  4537                           
  4538                           ;mcc_generated_files/adc.c: 70:     ADCON1 = 0x00;
  4539   001B4A  0E00               	movlw	0
  4540   001B4C  6EC1               	movwf	193,c	;volatile
  4541                           
  4542                           ;mcc_generated_files/adc.c: 73:     ADCON2 = 0x8C;
  4543   001B4E  0E8C               	movlw	140
  4544   001B50  6EC0               	movwf	192,c	;volatile
  4545                           
  4546                           ;mcc_generated_files/adc.c: 76:     ADRESL = 0x00;
  4547   001B52  0E00               	movlw	0
  4548   001B54  6EC3               	movwf	195,c	;volatile
  4549                           
  4550                           ;mcc_generated_files/adc.c: 79:     ADRESH = 0x00;
  4551   001B56  0E00               	movlw	0
  4552   001B58  6EC4               	movwf	196,c	;volatile
  4553   001B5A                     
  4554                           ;mcc_generated_files/adc.c: 82:     PIE1bits.ADIE = 1;
  4555   001B5A  8C9D               	bsf	157,6,c	;volatile
  4556   001B5C                     
  4557                           ;mcc_generated_files/adc.c: 85:     ADC_SetInterruptHandler(ADC_DefaultInterruptHandler)
      +                          ;
  4558   001B5C  0EE6               	movlw	low _ADC_DefaultInterruptHandler
  4559   001B5E  0100               	movlb	0	; () banked
  4560   001B60  6F6B               	movwf	ADC_SetInterruptHandler@InterruptHandler& (0+255),b
  4561   001B62  0E1C               	movlw	high _ADC_DefaultInterruptHandler
  4562   001B64  6F6C               	movwf	(ADC_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4563   001B66  EC56  F00E         	call	_ADC_SetInterruptHandler	;wreg free
  4564   001B6A  0012               	return		;funcret
  4565   001B6C                     __end_of_ADC_Initialize:
  4566                           	callstack 0
  4567                           
  4568 ;; *************** function _ADC_SetInterruptHandler *****************
  4569 ;; Defined at:
  4570 ;;		line 151 in file "mcc_generated_files/adc.c"
  4571 ;; Parameters:    Size  Location     Type
  4572 ;;  InterruptHan    2   11[BANK0 ] PTR FTN()void 
  4573 ;;		 -> ADC_MyInterruptHandler(1), ADC_DefaultInterruptHandler(1), 
  4574 ;; Auto vars:     Size  Location     Type
  4575 ;;		None
  4576 ;; Return value:  Size  Location     Type
  4577 ;;                  1    wreg      void 
  4578 ;; Registers used:
  4579 ;;		wreg, status,2, status,0
  4580 ;; Tracked objects:
  4581 ;;		On entry : 0/0
  4582 ;;		On exit  : 0/0
  4583 ;;		Unchanged: 0/0
  4584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4585 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4588 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4589 ;;Total ram usage:        2 bytes
  4590 ;; Hardware stack levels used: 1
  4591 ;; Hardware stack levels required when called: 13
  4592 ;; This function calls:
  4593 ;;		Nothing
  4594 ;; This function is called by:
  4595 ;;		_ADC_Initialize
  4596 ;;		_main
  4597 ;; This function uses a non-reentrant model
  4598 ;;
  4599                           
  4600                           	psect	text31
  4601   001CAC                     __ptext31:
  4602                           	callstack 0
  4603   001CAC                     _ADC_SetInterruptHandler:
  4604                           	callstack 15
  4605   001CAC                     
  4606                           ;mcc_generated_files/adc.c: 152:     ADC_InterruptHandler = InterruptHandler;
  4607   001CAC  C06B  F0ED         	movff	ADC_SetInterruptHandler@InterruptHandler,_ADC_InterruptHandler
  4608   001CB0  C06C  F0EE         	movff	ADC_SetInterruptHandler@InterruptHandler+1,_ADC_InterruptHandler+1
  4609   001CB4  0012               	return		;funcret
  4610   001CB6                     __end_of_ADC_SetInterruptHandler:
  4611                           	callstack 0
  4612                           
  4613 ;; *************** function _CheckUSART *****************
  4614 ;; Defined at:
  4615 ;;		line 186 in file "main.c"
  4616 ;; Parameters:    Size  Location     Type
  4617 ;;		None
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;		None
  4620 ;; Return value:  Size  Location     Type
  4621 ;;                  1    wreg      void 
  4622 ;; Registers used:
  4623 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4624 ;; Tracked objects:
  4625 ;;		On entry : 0/0
  4626 ;;		On exit  : 0/0
  4627 ;;		Unchanged: 0/0
  4628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4633 ;;Total ram usage:        0 bytes
  4634 ;; Hardware stack levels used: 1
  4635 ;; Hardware stack levels required when called: 14
  4636 ;; This function calls:
  4637 ;;		_EUSART1_Read
  4638 ;;		_EUSART1_Write
  4639 ;;		_EUSART1_is_rx_ready
  4640 ;; This function is called by:
  4641 ;;		_main
  4642 ;; This function uses a non-reentrant model
  4643 ;;
  4644                           
  4645                           	psect	text32
  4646   00152A                     __ptext32:
  4647                           	callstack 0
  4648   00152A                     _CheckUSART:
  4649                           	callstack 16
  4650   00152A                     
  4651                           ;main.c: 187:     if (EUSART1_is_rx_ready()) {
  4652   00152A  ECDB  F00D         	call	_EUSART1_is_rx_ready	;wreg free
  4653   00152E  0900               	iorlw	0
  4654   001530  B4D8               	btfsc	status,2,c
  4655   001532  EF9D  F00A         	goto	u3311
  4656   001536  EF9F  F00A         	goto	u3310
  4657   00153A                     u3311:
  4658   00153A  EFCA  F00A         	goto	l554
  4659   00153E                     u3310:
  4660   00153E                     
  4661                           ;main.c: 188:         rxData = EUSART1_Read();
  4662   00153E  ECE0  F00B         	call	_EUSART1_Read	;wreg free
  4663   001542  0100               	movlb	0	; () banked
  4664   001544  6FE2               	movwf	_rxData& (0+255),b
  4665                           
  4666                           ;main.c: 189:         EUSART1_Write(rxData);
  4667   001546  51E2               	movf	_rxData& (0+255),w,b
  4668   001548  EC30  F00B         	call	_EUSART1_Write
  4669   00154C                     
  4670                           ;main.c: 190:         if ((rxData >= '0' && rxData <= '9') || rxData == 13)
  4671   00154C  0E2F               	movlw	47
  4672   00154E  0100               	movlb	0	; () banked
  4673   001550  65E2               	cpfsgt	_rxData& (0+255),b
  4674   001552  EFAD  F00A         	goto	u3321
  4675   001556  EFAF  F00A         	goto	u3320
  4676   00155A                     u3321:
  4677   00155A  EFB7  F00A         	goto	l3770
  4678   00155E                     u3320:
  4679   00155E                     
  4680                           ; BSR set to: 0
  4681   00155E  0E39               	movlw	57
  4682   001560  65E2               	cpfsgt	_rxData& (0+255),b
  4683   001562  EFB5  F00A         	goto	u3331
  4684   001566  EFB7  F00A         	goto	u3330
  4685   00156A                     u3331:
  4686   00156A  EFC0  F00A         	goto	l3772
  4687   00156E                     u3330:
  4688   00156E                     l3770:
  4689                           
  4690                           ; BSR set to: 0
  4691   00156E  0E0D               	movlw	13
  4692   001570  19E2               	xorwf	_rxData& (0+255),w,b
  4693   001572  A4D8               	btfss	status,2,c
  4694   001574  EFBE  F00A         	goto	u3341
  4695   001578  EFC0  F00A         	goto	u3340
  4696   00157C                     u3341:
  4697   00157C  EFC6  F00A         	goto	l3776
  4698   001580                     u3340:
  4699   001580                     l3772:
  4700                           
  4701                           ; BSR set to: 0
  4702                           ;main.c: 191:         {;main.c: 192:             carater_recebido = 1;
  4703   001580  0E01               	movlw	1
  4704   001582  6FF3               	movwf	_carater_recebido& (0+255),b
  4705   001584                     
  4706                           ; BSR set to: 0
  4707                           ;main.c: 193:             menu = rxData;
  4708   001584  C0E2  F0F4         	movff	_rxData,_menu
  4709                           
  4710                           ;main.c: 194:         } else {
  4711   001588  EFCA  F00A         	goto	l554
  4712   00158C                     l3776:
  4713                           
  4714                           ; BSR set to: 0
  4715                           ;main.c: 195:             carater_recebido = 0;
  4716   00158C  0E00               	movlw	0
  4717   00158E  6FF3               	movwf	_carater_recebido& (0+255),b
  4718                           
  4719                           ;main.c: 196:             menu = '0';
  4720   001590  0E30               	movlw	48
  4721   001592  6FF4               	movwf	_menu& (0+255),b
  4722   001594                     l554:
  4723   001594  0012               	return		;funcret
  4724   001596                     __end_of_CheckUSART:
  4725                           	callstack 0
  4726                           
  4727 ;; *************** function _EUSART1_is_rx_ready *****************
  4728 ;; Defined at:
  4729 ;;		line 137 in file "mcc_generated_files/eusart1.c"
  4730 ;; Parameters:    Size  Location     Type
  4731 ;;		None
  4732 ;; Auto vars:     Size  Location     Type
  4733 ;;		None
  4734 ;; Return value:  Size  Location     Type
  4735 ;;                  1    wreg      _Bool 
  4736 ;; Registers used:
  4737 ;;		wreg, status,2
  4738 ;; Tracked objects:
  4739 ;;		On entry : 0/0
  4740 ;;		On exit  : 0/0
  4741 ;;		Unchanged: 0/0
  4742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4747 ;;Total ram usage:        0 bytes
  4748 ;; Hardware stack levels used: 1
  4749 ;; Hardware stack levels required when called: 13
  4750 ;; This function calls:
  4751 ;;		Nothing
  4752 ;; This function is called by:
  4753 ;;		_CheckUSART
  4754 ;; This function uses a non-reentrant model
  4755 ;;
  4756                           
  4757                           	psect	text33
  4758   001BB6                     __ptext33:
  4759                           	callstack 0
  4760   001BB6                     _EUSART1_is_rx_ready:
  4761                           	callstack 16
  4762   001BB6                     
  4763                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
  4764   001BB6  0100               	movlb	0	; () banked
  4765   001BB8  51E4               	movf	_eusart1RxCount& (0+255),w,b	;volatile
  4766   001BBA  A4D8               	btfss	status,2,c
  4767   001BBC  EFE2  F00D         	goto	u2181
  4768   001BC0  EFE5  F00D         	goto	u2180
  4769   001BC4                     u2181:
  4770   001BC4  0E01               	movlw	1
  4771   001BC6  EFE6  F00D         	goto	u2190
  4772   001BCA                     u2180:
  4773   001BCA  0E00               	movlw	0
  4774   001BCC                     u2190:
  4775   001BCC                     
  4776                           ; BSR set to: 0
  4777   001BCC  0012               	return		;funcret
  4778   001BCE                     __end_of_EUSART1_is_rx_ready:
  4779                           	callstack 0
  4780                           
  4781 ;; *************** function _EUSART1_Write *****************
  4782 ;; Defined at:
  4783 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  4784 ;; Parameters:    Size  Location     Type
  4785 ;;  txData          1    wreg     unsigned char 
  4786 ;; Auto vars:     Size  Location     Type
  4787 ;;  txData          1   11[BANK0 ] unsigned char 
  4788 ;; Return value:  Size  Location     Type
  4789 ;;                  1    wreg      void 
  4790 ;; Registers used:
  4791 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4792 ;; Tracked objects:
  4793 ;;		On entry : 0/0
  4794 ;;		On exit  : 0/0
  4795 ;;		Unchanged: 0/0
  4796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4798 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4800 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4801 ;;Total ram usage:        1 bytes
  4802 ;; Hardware stack levels used: 1
  4803 ;; Hardware stack levels required when called: 13
  4804 ;; This function calls:
  4805 ;;		Nothing
  4806 ;; This function is called by:
  4807 ;;		_putch
  4808 ;;		_ShowMenuInTerminal
  4809 ;;		_CheckUSART
  4810 ;; This function uses a non-reentrant model
  4811 ;;
  4812                           
  4813                           	psect	text34
  4814   001660                     __ptext34:
  4815                           	callstack 0
  4816   001660                     _EUSART1_Write:
  4817                           	callstack 12
  4818                           
  4819                           ; BSR set to: 0
  4820                           ;incstack = 0
  4821                           ;EUSART1_Write@txData stored from wreg
  4822   001660  0100               	movlb	0	; () banked
  4823   001662  6F6B               	movwf	EUSART1_Write@txData& (0+255),b
  4824   001664                     l3224:
  4825                           
  4826                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
  4827   001664  0100               	movlb	0	; () banked
  4828   001666  51F0               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
  4829   001668  B4D8               	btfsc	status,2,c
  4830   00166A  EF39  F00B         	goto	u2541
  4831   00166E  EF3B  F00B         	goto	u2540
  4832   001672                     u2541:
  4833   001672  EF32  F00B         	goto	l3224
  4834   001676                     u2540:
  4835   001676                     
  4836                           ; BSR set to: 0
  4837                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE1bits.TX1IE)
  4838   001676  B89D               	btfsc	157,4,c	;volatile
  4839   001678  EF40  F00B         	goto	u2551
  4840   00167C  EF42  F00B         	goto	u2550
  4841   001680                     u2551:
  4842   001680  EF46  F00B         	goto	l249
  4843   001684                     u2550:
  4844   001684                     
  4845                           ; BSR set to: 0
  4846                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          XREG1 = txData;
  4847   001684  C06B  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  4848                           
  4849                           ;mcc_generated_files/eusart1.c: 182:     }
  4850   001688  EF5B  F00B         	goto	l3238
  4851   00168C                     l249:
  4852                           
  4853                           ; BSR set to: 0
  4854                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE1bits.TX1IE = 0;
  4855   00168C  989D               	bcf	157,4,c	;volatile
  4856   00168E                     
  4857                           ; BSR set to: 0
  4858                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
  4859   00168E  0ECB               	movlw	low _eusart1TxBuffer
  4860   001690  25E8               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
  4861   001692  6ED9               	movwf	fsr2l,c
  4862   001694  6ADA               	clrf	fsr2h,c
  4863   001696  0E00               	movlw	high _eusart1TxBuffer
  4864   001698  22DA               	addwfc	fsr2h,f,c
  4865   00169A  C06B  FFDF         	movff	EUSART1_Write@txData,indf2
  4866   00169E                     
  4867                           ; BSR set to: 0
  4868   00169E  2BE8               	incf	_eusart1TxHead& (0+255),f,b	;volatile
  4869   0016A0                     
  4870                           ; BSR set to: 0
  4871                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
  4872   0016A0  0E07               	movlw	7
  4873   0016A2  65E8               	cpfsgt	_eusart1TxHead& (0+255),b	;volatile
  4874   0016A4  EF56  F00B         	goto	u2561
  4875   0016A8  EF58  F00B         	goto	u2560
  4876   0016AC                     u2561:
  4877   0016AC  EF5A  F00B         	goto	l3236
  4878   0016B0                     u2560:
  4879   0016B0                     
  4880                           ; BSR set to: 0
  4881                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
  4882   0016B0  0E00               	movlw	0
  4883   0016B2  6FE8               	movwf	_eusart1TxHead& (0+255),b	;volatile
  4884   0016B4                     l3236:
  4885                           
  4886                           ; BSR set to: 0
  4887                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
  4888   0016B4  07F0               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  4889   0016B6                     l3238:
  4890                           
  4891                           ; BSR set to: 0
  4892                           ;mcc_generated_files/eusart1.c: 193:     PIE1bits.TX1IE = 1;
  4893   0016B6  889D               	bsf	157,4,c	;volatile
  4894   0016B8                     
  4895                           ; BSR set to: 0
  4896   0016B8  0012               	return		;funcret
  4897   0016BA                     __end_of_EUSART1_Write:
  4898                           	callstack 0
  4899                           
  4900 ;; *************** function _EUSART1_Read *****************
  4901 ;; Defined at:
  4902 ;;		line 151 in file "mcc_generated_files/eusart1.c"
  4903 ;; Parameters:    Size  Location     Type
  4904 ;;		None
  4905 ;; Auto vars:     Size  Location     Type
  4906 ;;  readValue       1   11[BANK0 ] unsigned char 
  4907 ;; Return value:  Size  Location     Type
  4908 ;;                  1    wreg      unsigned char 
  4909 ;; Registers used:
  4910 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4911 ;; Tracked objects:
  4912 ;;		On entry : 0/0
  4913 ;;		On exit  : 0/0
  4914 ;;		Unchanged: 0/0
  4915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4917 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4919 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4920 ;;Total ram usage:        1 bytes
  4921 ;; Hardware stack levels used: 1
  4922 ;; Hardware stack levels required when called: 13
  4923 ;; This function calls:
  4924 ;;		Nothing
  4925 ;; This function is called by:
  4926 ;;		_CheckUSART
  4927 ;;		_getch
  4928 ;; This function uses a non-reentrant model
  4929 ;;
  4930                           
  4931                           	psect	text35
  4932   0017C0                     __ptext35:
  4933                           	callstack 0
  4934   0017C0                     _EUSART1_Read:
  4935                           	callstack 16
  4936   0017C0                     l2922:
  4937                           
  4938                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
  4939   0017C0  0100               	movlb	0	; () banked
  4940   0017C2  51E4               	movf	_eusart1RxCount& (0+255),w,b	;volatile
  4941   0017C4  B4D8               	btfsc	status,2,c
  4942   0017C6  EFE7  F00B         	goto	u2201
  4943   0017CA  EFE9  F00B         	goto	u2200
  4944   0017CE                     u2201:
  4945   0017CE  EFE0  F00B         	goto	l2922
  4946   0017D2                     u2200:
  4947   0017D2                     
  4948                           ; BSR set to: 0
  4949                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
  4950   0017D2  0EC3               	movlw	low _eusart1RxStatusBuffer
  4951   0017D4  25E5               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
  4952   0017D6  6ED9               	movwf	fsr2l,c
  4953   0017D8  6ADA               	clrf	fsr2h,c
  4954   0017DA  0E00               	movlw	high _eusart1RxStatusBuffer
  4955   0017DC  22DA               	addwfc	fsr2h,f,c
  4956   0017DE  50DF               	movf	indf2,w,c
  4957   0017E0  6FE3               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  4958                           
  4959                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
  4960   0017E2  0E00               	movlw	low _eusart1RxBuffer
  4961   0017E4  25E5               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
  4962   0017E6  6ED9               	movwf	fsr2l,c
  4963   0017E8  6ADA               	clrf	fsr2h,c
  4964   0017EA  0E01               	movlw	high _eusart1RxBuffer
  4965   0017EC  22DA               	addwfc	fsr2h,f,c
  4966   0017EE  50DF               	movf	indf2,w,c
  4967   0017F0  6F6B               	movwf	EUSART1_Read@readValue& (0+255),b
  4968   0017F2                     
  4969                           ; BSR set to: 0
  4970   0017F2  2BE5               	incf	_eusart1RxTail& (0+255),f,b	;volatile
  4971   0017F4                     
  4972                           ; BSR set to: 0
  4973                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  4974   0017F4  0E07               	movlw	7
  4975   0017F6  65E5               	cpfsgt	_eusart1RxTail& (0+255),b	;volatile
  4976   0017F8  EF00  F00C         	goto	u2211
  4977   0017FC  EF02  F00C         	goto	u2210
  4978   001800                     u2211:
  4979   001800  EF04  F00C         	goto	l2932
  4980   001804                     u2210:
  4981   001804                     
  4982                           ; BSR set to: 0
  4983                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
  4984   001804  0E00               	movlw	0
  4985   001806  6FE5               	movwf	_eusart1RxTail& (0+255),b	;volatile
  4986   001808                     l2932:
  4987                           
  4988                           ; BSR set to: 0
  4989                           ;mcc_generated_files/eusart1.c: 166:     PIE1bits.RC1IE = 0;
  4990   001808  9A9D               	bcf	157,5,c	;volatile
  4991   00180A                     
  4992                           ; BSR set to: 0
  4993                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
  4994   00180A  07E4               	decf	_eusart1RxCount& (0+255),f,b	;volatile
  4995   00180C                     
  4996                           ; BSR set to: 0
  4997                           ;mcc_generated_files/eusart1.c: 168:     PIE1bits.RC1IE = 1;
  4998   00180C  8A9D               	bsf	157,5,c	;volatile
  4999   00180E                     
  5000                           ; BSR set to: 0
  5001                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
  5002   00180E  516B               	movf	EUSART1_Read@readValue& (0+255),w,b
  5003   001810                     
  5004                           ; BSR set to: 0
  5005   001810  0012               	return		;funcret
  5006   001812                     __end_of_EUSART1_Read:
  5007                           	callstack 0
  5008                           
  5009 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  5010 ;; Defined at:
  5011 ;;		line 76 in file "mcc_generated_files/interrupt_manager.c"
  5012 ;; Parameters:    Size  Location     Type
  5013 ;;		None
  5014 ;; Auto vars:     Size  Location     Type
  5015 ;;		None
  5016 ;; Return value:  Size  Location     Type
  5017 ;;                  1    wreg      void 
  5018 ;; Registers used:
  5019 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, cstack
  5020 ;; Tracked objects:
  5021 ;;		On entry : 0/0
  5022 ;;		On exit  : 0/0
  5023 ;;		Unchanged: 0/0
  5024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5027 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5028 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5029 ;;Total ram usage:       10 bytes
  5030 ;; Hardware stack levels used: 1
  5031 ;; Hardware stack levels required when called: 12
  5032 ;; This function calls:
  5033 ;;		Absolute function
  5034 ;;		_ADC_ISR
  5035 ;;		_EUSART1_Receive_ISR
  5036 ;;		_EUSART1_Transmit_ISR
  5037 ;;		_INT0_ISR
  5038 ;;		_TMR0_ISR
  5039 ;; This function is called by:
  5040 ;;		Interrupt level 2
  5041 ;; This function uses a non-reentrant model
  5042 ;;
  5043                           
  5044                           	psect	intcode
  5045   000008                     __pintcode:
  5046                           	callstack 0
  5047   000008                     _INTERRUPT_InterruptManagerHigh:
  5048                           	callstack 8
  5049                           
  5050                           ; BSR set to: 0
  5051                           ;incstack = 0
  5052   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5053   00000A  CFFA F061          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
  5054   00000E  CFFB F062          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
  5055   000012  CFE1 F063          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+2
  5056   000016  CFE2 F064          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+3
  5057   00001A  CFD9 F065          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+4
  5058   00001E  CFDA F066          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+5
  5059   000022  CFF6 F067          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+6
  5060   000026  CFF7 F068          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+7
  5061   00002A  CFF8 F069          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+8
  5062   00002E  CFF5 F06A          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+9
  5063   000032                     
  5064                           ;mcc_generated_files/interrupt_manager.c: 79:     if(PIE1bits.ADIE == 1 && PIR1bits.ADIF
      +                           == 1)
  5065   000032  AC9D               	btfss	157,6,c	;volatile
  5066   000034  EF1E  F000         	goto	i2u335_41
  5067   000038  EF20  F000         	goto	i2u335_40
  5068   00003C                     i2u335_41:
  5069   00003C  EF2B  F000         	goto	i2l329
  5070   000040                     i2u335_40:
  5071   000040  AC9E               	btfss	158,6,c	;volatile
  5072   000042  EF25  F000         	goto	i2u336_41
  5073   000046  EF27  F000         	goto	i2u336_40
  5074   00004A                     i2u336_41:
  5075   00004A  EF2B  F000         	goto	i2l329
  5076   00004E                     i2u336_40:
  5077   00004E                     
  5078                           ;mcc_generated_files/interrupt_manager.c: 80:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 81:         ADC_ISR();
  5079   00004E  EC36  F00D         	call	_ADC_ISR	;wreg free
  5080                           
  5081                           ;mcc_generated_files/interrupt_manager.c: 82:     }
  5082   000052  EF89  F000         	goto	i2l339
  5083   000056                     i2l329:
  5084   000056  AAF2               	btfss	242,5,c	;volatile
  5085   000058  EF30  F000         	goto	i2u337_41
  5086   00005C  EF32  F000         	goto	i2u337_40
  5087   000060                     i2u337_41:
  5088   000060  EF3D  F000         	goto	i2l331
  5089   000064                     i2u337_40:
  5090   000064  A4F2               	btfss	242,2,c	;volatile
  5091   000066  EF37  F000         	goto	i2u338_41
  5092   00006A  EF39  F000         	goto	i2u338_40
  5093   00006E                     i2u338_41:
  5094   00006E  EF3D  F000         	goto	i2l331
  5095   000072                     i2u338_40:
  5096   000072                     
  5097                           ;mcc_generated_files/interrupt_manager.c: 84:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 85:         TMR0_ISR();
  5098   000072  EC1C  F00D         	call	_TMR0_ISR	;wreg free
  5099                           
  5100                           ;mcc_generated_files/interrupt_manager.c: 86:     }
  5101   000076  EF89  F000         	goto	i2l339
  5102   00007A                     i2l331:
  5103   00007A  A8F2               	btfss	242,4,c	;volatile
  5104   00007C  EF42  F000         	goto	i2u339_41
  5105   000080  EF44  F000         	goto	i2u339_40
  5106   000084                     i2u339_41:
  5107   000084  EF4F  F000         	goto	i2l333
  5108   000088                     i2u339_40:
  5109   000088  A2F2               	btfss	242,1,c	;volatile
  5110   00008A  EF49  F000         	goto	i2u340_41
  5111   00008E  EF4B  F000         	goto	i2u340_40
  5112   000092                     i2u340_41:
  5113   000092  EF4F  F000         	goto	i2l333
  5114   000096                     i2u340_40:
  5115   000096                     
  5116                           ;mcc_generated_files/interrupt_manager.c: 88:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 89:         INT0_ISR();
  5117   000096  EC60  F00E         	call	_INT0_ISR	;wreg free
  5118                           
  5119                           ;mcc_generated_files/interrupt_manager.c: 90:     }
  5120   00009A  EF89  F000         	goto	i2l339
  5121   00009E                     i2l333:
  5122   00009E  A89D               	btfss	157,4,c	;volatile
  5123   0000A0  EF54  F000         	goto	i2u341_41
  5124   0000A4  EF56  F000         	goto	i2u341_40
  5125   0000A8                     i2u341_41:
  5126   0000A8  EF6C  F000         	goto	i2l335
  5127   0000AC                     i2u341_40:
  5128   0000AC  A89E               	btfss	158,4,c	;volatile
  5129   0000AE  EF5B  F000         	goto	i2u342_41
  5130   0000B2  EF5D  F000         	goto	i2u342_40
  5131   0000B6                     i2u342_41:
  5132   0000B6  EF6C  F000         	goto	i2l335
  5133   0000BA                     i2u342_40:
  5134   0000BA                     
  5135                           ;mcc_generated_files/interrupt_manager.c: 92:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 93:         EUSART1_TxDefaultInterruptHandler();
  5136   0000BA  D802               	call	i2u343_48
  5137   0000BC  EF6A  F000         	goto	i2u343_49
  5138   0000C0                     i2u343_48:
  5139   0000C0  0005               	push	
  5140   0000C2  6EFA               	movwf	pclath,c
  5141   0000C4  0101               	movlb	1	; () banked
  5142   0000C6  5130               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
  5143   0000C8  6EFD               	movwf	tosl,c
  5144   0000CA  5131               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
  5145   0000CC  6EFE               	movwf	tosh,c
  5146   0000CE  6AFF               	clrf	tosu,c
  5147   0000D0  50FA               	movf	pclath,w,c
  5148   0000D2  0012               	return		;indir
  5149   0000D4                     i2u343_49:
  5150                           
  5151                           ;mcc_generated_files/interrupt_manager.c: 94:     }
  5152   0000D4  EF89  F000         	goto	i2l339
  5153   0000D8                     i2l335:
  5154   0000D8  AA9D               	btfss	157,5,c	;volatile
  5155   0000DA  EF71  F000         	goto	i2u344_41
  5156   0000DE  EF73  F000         	goto	i2u344_40
  5157   0000E2                     i2u344_41:
  5158   0000E2  EF89  F000         	goto	i2l334
  5159   0000E6                     i2u344_40:
  5160   0000E6  AA9E               	btfss	158,5,c	;volatile
  5161   0000E8  EF78  F000         	goto	i2u345_41
  5162   0000EC  EF7A  F000         	goto	i2u345_40
  5163   0000F0                     i2u345_41:
  5164   0000F0  EF89  F000         	goto	i2l334
  5165   0000F4                     i2u345_40:
  5166   0000F4                     
  5167                           ;mcc_generated_files/interrupt_manager.c: 96:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 97:         EUSART1_RxDefaultInterruptHandler();
  5168   0000F4  D802               	call	i2u346_48
  5169   0000F6  EF87  F000         	goto	i2u346_49
  5170   0000FA                     i2u346_48:
  5171   0000FA  0005               	push	
  5172   0000FC  6EFA               	movwf	pclath,c
  5173   0000FE  0101               	movlb	1	; () banked
  5174   000100  512E               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
  5175   000102  6EFD               	movwf	tosl,c
  5176   000104  512F               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
  5177   000106  6EFE               	movwf	tosh,c
  5178   000108  6AFF               	clrf	tosu,c
  5179   00010A  50FA               	movf	pclath,w,c
  5180   00010C  0012               	return		;indir
  5181   00010E                     i2u346_49:
  5182                           
  5183                           ;mcc_generated_files/interrupt_manager.c: 98:     }
  5184   00010E  EF89  F000         	goto	i2l339
  5185   000112                     i2l334:
  5186   000112                     i2l339:
  5187   000112  C06A  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+9,tablat
  5188   000116  C069  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+8,tblptru
  5189   00011A  C068  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+7,tblptrh
  5190   00011E  C067  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+6,tblptrl
  5191   000122  C066  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr2h
  5192   000126  C065  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr2l
  5193   00012A  C064  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr1h
  5194   00012E  C063  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr1l
  5195   000132  C062  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
  5196   000136  C061  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
  5197   00013A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5198   00013C  0011               	retfie		f
  5199   00013E                     __end_of_INTERRUPT_InterruptManagerHigh:
  5200                           	callstack 0
  5201                           
  5202 ;; *************** function _TMR0_ISR *****************
  5203 ;; Defined at:
  5204 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  5205 ;; Parameters:    Size  Location     Type
  5206 ;;		None
  5207 ;; Auto vars:     Size  Location     Type
  5208 ;;		None
  5209 ;; Return value:  Size  Location     Type
  5210 ;;                  1    wreg      void 
  5211 ;; Registers used:
  5212 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5213 ;; Tracked objects:
  5214 ;;		On entry : 0/0
  5215 ;;		On exit  : 0/0
  5216 ;;		Unchanged: 0/0
  5217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5222 ;;Total ram usage:        0 bytes
  5223 ;; Hardware stack levels used: 1
  5224 ;; Hardware stack levels required when called: 2
  5225 ;; This function calls:
  5226 ;;		Absolute function
  5227 ;;		_TMR0_DefaultInterruptHandler
  5228 ;;		_TMR0_MyInterruptHandler
  5229 ;; This function is called by:
  5230 ;;		_INTERRUPT_InterruptManagerHigh
  5231 ;; This function uses a non-reentrant model
  5232 ;;
  5233                           
  5234                           	psect	text37
  5235   001A38                     __ptext37:
  5236                           	callstack 0
  5237   001A38                     _TMR0_ISR:
  5238                           	callstack 17
  5239   001A38                     
  5240                           ;mcc_generated_files/tmr0.c: 133:     INTCONbits.TMR0IF = 0;
  5241   001A38  94F2               	bcf	242,2,c	;volatile
  5242                           
  5243                           ;mcc_generated_files/tmr0.c: 136:     TMR0L = timer0ReloadVal;
  5244   001A3A  C0EF  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  5245   001A3E                     
  5246                           ;mcc_generated_files/tmr0.c: 138:     if(TMR0_InterruptHandler)
  5247   001A3E  0100               	movlb	0	; () banked
  5248   001A40  51E9               	movf	_TMR0_InterruptHandler& (0+255),w,b
  5249   001A42  11EA               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  5250   001A44  B4D8               	btfsc	status,2,c
  5251   001A46  EF27  F00D         	goto	i2u232_41
  5252   001A4A  EF29  F00D         	goto	i2u232_40
  5253   001A4E                     i2u232_41:
  5254   001A4E  EF35  F00D         	goto	i2l451
  5255   001A52                     i2u232_40:
  5256   001A52                     
  5257                           ; BSR set to: 0
  5258                           ;mcc_generated_files/tmr0.c: 139:     {;mcc_generated_files/tmr0.c: 140:         TMR0_In
      +                          terruptHandler();
  5259   001A52  D802               	call	i2u233_48
  5260   001A54  EF35  F00D         	goto	i2u233_49
  5261   001A58                     i2u233_48:
  5262   001A58  0005               	push	
  5263   001A5A  6EFA               	movwf	pclath,c
  5264   001A5C  51E9               	movf	_TMR0_InterruptHandler& (0+255),w,b
  5265   001A5E  6EFD               	movwf	tosl,c
  5266   001A60  51EA               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  5267   001A62  6EFE               	movwf	tosh,c
  5268   001A64  6AFF               	clrf	tosu,c
  5269   001A66  50FA               	movf	pclath,w,c
  5270   001A68  0012               	return		;indir
  5271   001A6A                     i2u233_49:
  5272   001A6A                     i2l451:
  5273   001A6A  0012               	return		;funcret
  5274   001A6C                     __end_of_TMR0_ISR:
  5275                           	callstack 0
  5276                           
  5277 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  5278 ;; Defined at:
  5279 ;;		line 151 in file "mcc_generated_files/tmr0.c"
  5280 ;; Parameters:    Size  Location     Type
  5281 ;;		None
  5282 ;; Auto vars:     Size  Location     Type
  5283 ;;		None
  5284 ;; Return value:  Size  Location     Type
  5285 ;;                  1    wreg      void 
  5286 ;; Registers used:
  5287 ;;		None
  5288 ;; Tracked objects:
  5289 ;;		On entry : 0/0
  5290 ;;		On exit  : 0/0
  5291 ;;		Unchanged: 0/0
  5292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5297 ;;Total ram usage:        0 bytes
  5298 ;; Hardware stack levels used: 1
  5299 ;; This function calls:
  5300 ;;		Nothing
  5301 ;; This function is called by:
  5302 ;;		_TMR0_Initialize
  5303 ;;		_TMR0_ISR
  5304 ;; This function uses a non-reentrant model
  5305 ;;
  5306                           
  5307                           	psect	text38
  5308   001CE0                     __ptext38:
  5309                           	callstack 0
  5310   001CE0                     _TMR0_DefaultInterruptHandler:
  5311                           	callstack 18
  5312   001CE0  0012               	return		;funcret
  5313   001CE2                     __end_of_TMR0_DefaultInterruptHandler:
  5314                           	callstack 0
  5315                           
  5316 ;; *************** function _TMR0_MyInterruptHandler *****************
  5317 ;; Defined at:
  5318 ;;		line 67 in file "main.c"
  5319 ;; Parameters:    Size  Location     Type
  5320 ;;		None
  5321 ;; Auto vars:     Size  Location     Type
  5322 ;;		None
  5323 ;; Return value:  Size  Location     Type
  5324 ;;                  1    wreg      void 
  5325 ;; Registers used:
  5326 ;;		wreg, status,2, status,0, cstack
  5327 ;; Tracked objects:
  5328 ;;		On entry : 0/0
  5329 ;;		On exit  : 0/0
  5330 ;;		Unchanged: 0/0
  5331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5336 ;;Total ram usage:        0 bytes
  5337 ;; Hardware stack levels used: 1
  5338 ;; Hardware stack levels required when called: 1
  5339 ;; This function calls:
  5340 ;;		_ADC_SelectChannel
  5341 ;;		_ADC_StartConversion
  5342 ;; This function is called by:
  5343 ;;		_main
  5344 ;;		_TMR0_ISR
  5345 ;; This function uses a non-reentrant model
  5346 ;;
  5347                           
  5348                           	psect	text39
  5349   001C5A                     __ptext39:
  5350                           	callstack 0
  5351   001C5A                     _TMR0_MyInterruptHandler:
  5352                           	callstack 17
  5353   001C5A                     
  5354                           ;main.c: 68:     ADC_SelectChannel(channel_AN0);
  5355   001C5A  0E00               	movlw	0
  5356   001C5C  ECE7  F00D         	call	_ADC_SelectChannel
  5357   001C60                     
  5358                           ;main.c: 69:     ADC_StartConversion();
  5359   001C60  EC6E  F00E         	call	_ADC_StartConversion	;wreg free
  5360   001C64  0012               	return		;funcret
  5361   001C66                     __end_of_TMR0_MyInterruptHandler:
  5362                           	callstack 0
  5363                           
  5364 ;; *************** function _ADC_StartConversion *****************
  5365 ;; Defined at:
  5366 ;;		line 96 in file "mcc_generated_files/adc.c"
  5367 ;; Parameters:    Size  Location     Type
  5368 ;;		None
  5369 ;; Auto vars:     Size  Location     Type
  5370 ;;		None
  5371 ;; Return value:  Size  Location     Type
  5372 ;;                  1    wreg      void 
  5373 ;; Registers used:
  5374 ;;		None
  5375 ;; Tracked objects:
  5376 ;;		On entry : 0/0
  5377 ;;		On exit  : 0/0
  5378 ;;		Unchanged: 0/0
  5379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5384 ;;Total ram usage:        0 bytes
  5385 ;; Hardware stack levels used: 1
  5386 ;; This function calls:
  5387 ;;		Nothing
  5388 ;; This function is called by:
  5389 ;;		_TMR0_MyInterruptHandler
  5390 ;; This function uses a non-reentrant model
  5391 ;;
  5392                           
  5393                           	psect	text40
  5394   001CDC                     __ptext40:
  5395                           	callstack 0
  5396   001CDC                     _ADC_StartConversion:
  5397                           	callstack 17
  5398   001CDC                     
  5399                           ;mcc_generated_files/adc.c: 99:     ADCON0bits.GO_nDONE = 1;
  5400   001CDC  82C2               	bsf	194,1,c	;volatile
  5401   001CDE  0012               	return		;funcret
  5402   001CE0                     __end_of_ADC_StartConversion:
  5403                           	callstack 0
  5404                           
  5405 ;; *************** function _INT0_ISR *****************
  5406 ;; Defined at:
  5407 ;;		line 32 in file "mcc_generated_files/ext_int.c"
  5408 ;; Parameters:    Size  Location     Type
  5409 ;;		None
  5410 ;; Auto vars:     Size  Location     Type
  5411 ;;		None
  5412 ;; Return value:  Size  Location     Type
  5413 ;;                  1    wreg      void 
  5414 ;; Registers used:
  5415 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, cstack
  5416 ;; Tracked objects:
  5417 ;;		On entry : 0/0
  5418 ;;		On exit  : 0/0
  5419 ;;		Unchanged: 0/0
  5420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5425 ;;Total ram usage:        0 bytes
  5426 ;; Hardware stack levels used: 1
  5427 ;; Hardware stack levels required when called: 11
  5428 ;; This function calls:
  5429 ;;		_INT0_CallBack
  5430 ;; This function is called by:
  5431 ;;		_INTERRUPT_InterruptManagerHigh
  5432 ;; This function uses a non-reentrant model
  5433 ;;
  5434                           
  5435                           	psect	text41
  5436   001CC0                     __ptext41:
  5437                           	callstack 0
  5438   001CC0                     _INT0_ISR:
  5439                           	callstack 8
  5440   001CC0                     
  5441                           ;mcc_generated_files/ext_int.c: 34:     (INTCONbits.INT0IF = 0);
  5442   001CC0  92F2               	bcf	242,1,c	;volatile
  5443   001CC2                     
  5444                           ;mcc_generated_files/ext_int.c: 37:     INT0_CallBack();
  5445   001CC2  EC4E  F00D         	call	_INT0_CallBack	;wreg free
  5446   001CC6  0012               	return		;funcret
  5447   001CC8                     __end_of_INT0_ISR:
  5448                           	callstack 0
  5449                           
  5450 ;; *************** function _INT0_CallBack *****************
  5451 ;; Defined at:
  5452 ;;		line 41 in file "mcc_generated_files/ext_int.c"
  5453 ;; Parameters:    Size  Location     Type
  5454 ;;		None
  5455 ;; Auto vars:     Size  Location     Type
  5456 ;;		None
  5457 ;; Return value:  Size  Location     Type
  5458 ;;                  1    wreg      void 
  5459 ;; Registers used:
  5460 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, cstack
  5461 ;; Tracked objects:
  5462 ;;		On entry : 0/0
  5463 ;;		On exit  : 0/0
  5464 ;;		Unchanged: 0/0
  5465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5470 ;;Total ram usage:        0 bytes
  5471 ;; Hardware stack levels used: 1
  5472 ;; Hardware stack levels required when called: 10
  5473 ;; This function calls:
  5474 ;;		Absolute function
  5475 ;;		_INT0_DefaultInterruptHandler
  5476 ;;		_INT0_MyInterruptHandler
  5477 ;; This function is called by:
  5478 ;;		_INT0_ISR
  5479 ;; This function uses a non-reentrant model
  5480 ;;
  5481                           
  5482                           	psect	text42
  5483   001A9C                     __ptext42:
  5484                           	callstack 0
  5485   001A9C                     _INT0_CallBack:
  5486                           	callstack 8
  5487   001A9C                     
  5488                           ;mcc_generated_files/ext_int.c: 44:     if(INT0_InterruptHandler)
  5489   001A9C  0100               	movlb	0	; () banked
  5490   001A9E  51EB               	movf	_INT0_InterruptHandler& (0+255),w,b
  5491   001AA0  11EC               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
  5492   001AA2  B4D8               	btfsc	status,2,c
  5493   001AA4  EF56  F00D         	goto	i2u329_41
  5494   001AA8  EF58  F00D         	goto	i2u329_40
  5495   001AAC                     i2u329_41:
  5496   001AAC  EF64  F00D         	goto	i2l140
  5497   001AB0                     i2u329_40:
  5498   001AB0                     
  5499                           ; BSR set to: 0
  5500                           ;mcc_generated_files/ext_int.c: 45:     {;mcc_generated_files/ext_int.c: 46:         INT
      +                          0_InterruptHandler();
  5501   001AB0  D802               	call	i2u330_48
  5502   001AB2  EF64  F00D         	goto	i2u330_49
  5503   001AB6                     i2u330_48:
  5504   001AB6  0005               	push	
  5505   001AB8  6EFA               	movwf	pclath,c
  5506   001ABA  51EB               	movf	_INT0_InterruptHandler& (0+255),w,b
  5507   001ABC  6EFD               	movwf	tosl,c
  5508   001ABE  51EC               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
  5509   001AC0  6EFE               	movwf	tosh,c
  5510   001AC2  6AFF               	clrf	tosu,c
  5511   001AC4  50FA               	movf	pclath,w,c
  5512   001AC6  0012               	return		;indir
  5513   001AC8                     i2u330_49:
  5514   001AC8                     i2l140:
  5515   001AC8  0012               	return		;funcret
  5516   001ACA                     __end_of_INT0_CallBack:
  5517                           	callstack 0
  5518                           
  5519 ;; *************** function _INT0_DefaultInterruptHandler *****************
  5520 ;; Defined at:
  5521 ;;		line 54 in file "mcc_generated_files/ext_int.c"
  5522 ;; Parameters:    Size  Location     Type
  5523 ;;		None
  5524 ;; Auto vars:     Size  Location     Type
  5525 ;;		None
  5526 ;; Return value:  Size  Location     Type
  5527 ;;                  1    wreg      void 
  5528 ;; Registers used:
  5529 ;;		None
  5530 ;; Tracked objects:
  5531 ;;		On entry : 0/0
  5532 ;;		On exit  : 0/0
  5533 ;;		Unchanged: 0/0
  5534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5539 ;;Total ram usage:        0 bytes
  5540 ;; Hardware stack levels used: 1
  5541 ;; This function calls:
  5542 ;;		Nothing
  5543 ;; This function is called by:
  5544 ;;		_EXT_INT_Initialize
  5545 ;;		_INT0_CallBack
  5546 ;; This function uses a non-reentrant model
  5547 ;;
  5548                           
  5549                           	psect	text43
  5550   001CE2                     __ptext43:
  5551                           	callstack 0
  5552   001CE2                     _INT0_DefaultInterruptHandler:
  5553                           	callstack 17
  5554   001CE2  0012               	return		;funcret
  5555   001CE4                     __end_of_INT0_DefaultInterruptHandler:
  5556                           	callstack 0
  5557                           
  5558 ;; *************** function _INT0_MyInterruptHandler *****************
  5559 ;; Defined at:
  5560 ;;		line 53 in file "main.c"
  5561 ;; Parameters:    Size  Location     Type
  5562 ;;		None
  5563 ;; Auto vars:     Size  Location     Type
  5564 ;;		None
  5565 ;; Return value:  Size  Location     Type
  5566 ;;                  1    wreg      void 
  5567 ;; Registers used:
  5568 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5569 ;; Tracked objects:
  5570 ;;		On entry : 0/0
  5571 ;;		On exit  : 0/0
  5572 ;;		Unchanged: 0/0
  5573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5576 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5577 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5578 ;;Total ram usage:        1 bytes
  5579 ;; Hardware stack levels used: 1
  5580 ;; Hardware stack levels required when called: 9
  5581 ;; This function calls:
  5582 ;;		i2_printf
  5583 ;; This function is called by:
  5584 ;;		_main
  5585 ;;		_INT0_CallBack
  5586 ;; This function uses a non-reentrant model
  5587 ;;
  5588                           
  5589                           	psect	text44
  5590   0016BA                     __ptext44:
  5591                           	callstack 0
  5592   0016BA                     _INT0_MyInterruptHandler:
  5593                           	callstack 8
  5594   0016BA  B68A               	btfsc	138,3,c	;volatile
  5595   0016BC  EF62  F00B         	goto	i2u326_41
  5596   0016C0  EF65  F00B         	goto	i2u326_40
  5597   0016C4                     i2u326_41:
  5598   0016C4  0E01               	movlw	1
  5599   0016C6  EF66  F00B         	goto	i2u326_46
  5600   0016CA                     i2u326_40:
  5601   0016CA  0E00               	movlw	0
  5602   0016CC                     i2u326_46:
  5603   0016CC  0AFF               	xorlw	255
  5604   0016CE  0100               	movlb	0	; () banked
  5605   0016D0  6F60               	movwf	??_INT0_MyInterruptHandler& (0+255),b
  5606   0016D2  4760               	rlncf	??_INT0_MyInterruptHandler& (0+255),f,b
  5607   0016D4  4760               	rlncf	??_INT0_MyInterruptHandler& (0+255),f,b
  5608   0016D6  4760               	rlncf	??_INT0_MyInterruptHandler& (0+255),f,b
  5609   0016D8  508A               	movf	138,w,c	;volatile
  5610   0016DA  1960               	xorwf	??_INT0_MyInterruptHandler& (0+255),w,b
  5611   0016DC  0BF7               	andlw	-9
  5612   0016DE  1960               	xorwf	??_INT0_MyInterruptHandler& (0+255),w,b
  5613   0016E0  6E8A               	movwf	138,c	;volatile
  5614   0016E2                     
  5615                           ; BSR set to: 0
  5616   0016E2  B88A               	btfsc	138,4,c	;volatile
  5617   0016E4  EF76  F00B         	goto	i2u327_41
  5618   0016E8  EF79  F00B         	goto	i2u327_40
  5619   0016EC                     i2u327_41:
  5620   0016EC  0E01               	movlw	1
  5621   0016EE  EF7A  F00B         	goto	i2u327_46
  5622   0016F2                     i2u327_40:
  5623   0016F2  0E00               	movlw	0
  5624   0016F4                     i2u327_46:
  5625   0016F4  0AFF               	xorlw	255
  5626   0016F6  6F60               	movwf	??_INT0_MyInterruptHandler& (0+255),b
  5627   0016F8  3B60               	swapf	??_INT0_MyInterruptHandler& (0+255),f,b
  5628   0016FA  508A               	movf	138,w,c	;volatile
  5629   0016FC  1960               	xorwf	??_INT0_MyInterruptHandler& (0+255),w,b
  5630   0016FE  0BEF               	andlw	-17
  5631   001700  1960               	xorwf	??_INT0_MyInterruptHandler& (0+255),w,b
  5632   001702  6E8A               	movwf	138,c	;volatile
  5633   001704                     
  5634                           ; BSR set to: 0
  5635                           ;main.c: 56:     printf("ola\r\n");
  5636   001704  0EF9               	movlw	low STR_1
  5637   001706  6E5B               	movwf	i2printf@fmt^0,c
  5638   001708  0EFF               	movlw	high STR_1
  5639   00170A  6E5C               	movwf	(i2printf@fmt+1)^0,c
  5640   00170C  ECB6  F00D         	call	i2_printf	;wreg free
  5641   001710                     
  5642                           ;main.c: 58:     (INTCONbits.INT0IF = 0);
  5643   001710  92F2               	bcf	242,1,c	;volatile
  5644   001712  0012               	return		;funcret
  5645   001714                     __end_of_INT0_MyInterruptHandler:
  5646                           	callstack 0
  5647                           
  5648 ;; *************** function i2_printf *****************
  5649 ;; Defined at:
  5650 ;;		line 5 in file "G:\Microchip\xc8\v2.40\pic\sources\c99\common\printf.c"
  5651 ;; Parameters:    Size  Location     Type
  5652 ;;  fmt             2   90[COMRAM] PTR const unsigned char 
  5653 ;;		 -> STR_16(40), STR_15(17), STR_14(11), STR_13(35), 
  5654 ;;		 -> STR_12(36), STR_11(26), STR_10(10), STR_9(31), 
  5655 ;;		 -> STR_8(41), STR_7(39), STR_6(48), STR_5(39), 
  5656 ;;		 -> STR_4(29), STR_3(17), STR_2(31), STR_1(6), 
  5657 ;; Auto vars:     Size  Location     Type
  5658 ;;  ap              2   92[COMRAM] PTR void [1]
  5659 ;;		 -> ?i2_printf(2), ?_printf(2), 
  5660 ;;  ret             2    0        int 
  5661 ;; Return value:  Size  Location     Type
  5662 ;;                  2   90[COMRAM] int 
  5663 ;; Registers used:
  5664 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5665 ;; Tracked objects:
  5666 ;;		On entry : 0/0
  5667 ;;		On exit  : 0/0
  5668 ;;		Unchanged: 0/0
  5669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5670 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5671 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5673 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5674 ;;Total ram usage:        4 bytes
  5675 ;; Hardware stack levels used: 1
  5676 ;; Hardware stack levels required when called: 8
  5677 ;; This function calls:
  5678 ;;		i2_vfprintf
  5679 ;; This function is called by:
  5680 ;;		_INT0_MyInterruptHandler
  5681 ;; This function uses a non-reentrant model
  5682 ;;
  5683                           
  5684                           	psect	text45
  5685   001B6C                     __ptext45:
  5686                           	callstack 0
  5687   001B6C                     i2_printf:
  5688                           	callstack 8
  5689   001B6C  0E5D               	movlw	low (?i2_printf+2)
  5690   001B6E  6E5D               	movwf	i2printf@ap^0,c
  5691   001B70  0E00               	movlw	high (?i2_printf+2)
  5692   001B72  6E5E               	movwf	(i2printf@ap+1)^0,c
  5693   001B74  0E00               	movlw	0
  5694   001B76  6E53               	movwf	i2vfprintf@fp^0,c
  5695   001B78  0E00               	movlw	0
  5696   001B7A  6E54               	movwf	(i2vfprintf@fp+1)^0,c
  5697   001B7C  C05B  F055         	movff	i2printf@fmt,i2vfprintf@fmt
  5698   001B80  C05C  F056         	movff	i2printf@fmt+1,i2vfprintf@fmt+1
  5699   001B84  0E5D               	movlw	low i2printf@ap
  5700   001B86  6E57               	movwf	i2vfprintf@ap^0,c
  5701   001B88  0E00               	movlw	high i2printf@ap
  5702   001B8A  6E58               	movwf	(i2vfprintf@ap+1)^0,c
  5703   001B8C  EC09  F00C         	call	i2_vfprintf	;wreg free
  5704   001B90  0012               	return		;funcret
  5705   001B92                     __end_ofi2_printf:
  5706                           	callstack 0
  5707                           
  5708 ;; *************** function i2_vfprintf *****************
  5709 ;; Defined at:
  5710 ;;		line 1520 in file "G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5711 ;; Parameters:    Size  Location     Type
  5712 ;;  fp              2   82[COMRAM] PTR struct _IO_FILE
  5713 ;;		 -> NULL(0), 
  5714 ;;  fmt             2   84[COMRAM] PTR const unsigned char 
  5715 ;;		 -> STR_16(40), STR_15(17), STR_14(11), STR_13(35), 
  5716 ;;		 -> STR_12(36), STR_11(26), STR_10(10), STR_9(31), 
  5717 ;;		 -> STR_8(41), STR_7(39), STR_6(48), STR_5(39), 
  5718 ;;		 -> STR_4(29), STR_3(17), STR_2(31), STR_1(6), 
  5719 ;;  ap              2   86[COMRAM] PTR PTR void 
  5720 ;;		 -> i2printf@ap(2), printf@ap(2), 
  5721 ;; Auto vars:     Size  Location     Type
  5722 ;;  cfmt            2   88[COMRAM] PTR unsigned char 
  5723 ;;		 -> STR_16(40), STR_15(17), STR_14(11), STR_13(35), 
  5724 ;;		 -> STR_12(36), STR_11(26), STR_10(10), STR_9(31), 
  5725 ;;		 -> STR_8(41), STR_7(39), STR_6(48), STR_5(39), 
  5726 ;;		 -> STR_4(29), STR_3(17), STR_2(31), STR_1(6), 
  5727 ;; Return value:  Size  Location     Type
  5728 ;;                  2   82[COMRAM] int 
  5729 ;; Registers used:
  5730 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5731 ;; Tracked objects:
  5732 ;;		On entry : 0/0
  5733 ;;		On exit  : 0/0
  5734 ;;		Unchanged: 0/0
  5735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5736 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5737 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5739 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5740 ;;Total ram usage:        8 bytes
  5741 ;; Hardware stack levels used: 1
  5742 ;; Hardware stack levels required when called: 7
  5743 ;; This function calls:
  5744 ;;		i2_vfpfcnvrt
  5745 ;; This function is called by:
  5746 ;;		i2_printf
  5747 ;; This function uses a non-reentrant model
  5748 ;;
  5749                           
  5750                           	psect	text46
  5751   001812                     __ptext46:
  5752                           	callstack 0
  5753   001812                     i2_vfprintf:
  5754                           	callstack 8
  5755   001812                     
  5756                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprintf(FILE *fp, co
      +                          nst char *fmt, va_list ap);G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1521:
      +                           {;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1523:     char *cfmt;;G:\Micr
      +                          ochip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1525:     cfmt = (char *)fmt;
  5757   001812  C055  F059         	movff	i2vfprintf@fmt,i2vfprintf@cfmt
  5758   001816  C056  F05A         	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
  5759                           
  5760                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (*cfmt) {
  5761   00181A  EF1D  F00C         	goto	i2l3620
  5762   00181E                     i2l3618:
  5763                           
  5764                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvrt(fp, &cfmt, a
      +                          p);
  5765   00181E  C053  F041         	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
  5766   001822  C054  F042         	movff	i2vfprintf@fp+1,i2vfpfcnvrt@fp+1
  5767   001826  0E59               	movlw	low i2vfprintf@cfmt
  5768   001828  6E43               	movwf	i2vfpfcnvrt@fmt^0,c
  5769   00182A  0E00               	movlw	high i2vfprintf@cfmt
  5770   00182C  6E44               	movwf	(i2vfpfcnvrt@fmt+1)^0,c
  5771   00182E  C057  F045         	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
  5772   001832  C058  F046         	movff	i2vfprintf@ap+1,i2vfpfcnvrt@ap+1
  5773   001836  EC78  F007         	call	i2_vfpfcnvrt	;wreg free
  5774   00183A                     i2l3620:
  5775                           
  5776                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (*cfmt) {
  5777   00183A  C059  FFF6         	movff	i2vfprintf@cfmt,tblptrl
  5778   00183E  C05A  FFF7         	movff	i2vfprintf@cfmt+1,tblptrh
  5779   001842                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5780   001842  6AF8               	clrf	tblptru,c
  5781   001844                     	endif
  5782   001844                     	if	0	;tblptru may be non-zero
  5783   001844                     	endif
  5784   001844  0008               	tblrd		*
  5785   001846  50F5               	movf	tablat,w,c
  5786   001848  0900               	iorlw	0
  5787   00184A  A4D8               	btfss	status,2,c
  5788   00184C  EF2A  F00C         	goto	i2u322_41
  5789   001850  EF2C  F00C         	goto	i2u322_40
  5790   001854                     i2u322_41:
  5791   001854  EF0F  F00C         	goto	i2l3618
  5792   001858                     i2u322_40:
  5793   001858                     
  5794                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  5795   001858  0E00               	movlw	0
  5796   00185A  6E54               	movwf	(?i2_vfprintf+1)^0,c
  5797   00185C  0E00               	movlw	0
  5798   00185E  6E53               	movwf	?i2_vfprintf^0,c
  5799   001860  0012               	return		;funcret
  5800   001862                     __end_ofi2_vfprintf:
  5801                           	callstack 0
  5802                           
  5803 ;; *************** function i2_vfpfcnvrt *****************
  5804 ;; Defined at:
  5805 ;;		line 1007 in file "G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5806 ;; Parameters:    Size  Location     Type
  5807 ;;  fp              2   64[COMRAM] PTR struct _IO_FILE
  5808 ;;		 -> NULL(0), 
  5809 ;;  fmt             2   66[COMRAM] PTR PTR unsigned char 
  5810 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
  5811 ;;  ap              2   68[COMRAM] PTR PTR void 
  5812 ;;		 -> i2printf@ap(2), printf@ap(2), 
  5813 ;; Auto vars:     Size  Location     Type
  5814 ;;  convarg         8   72[COMRAM] struct .
  5815 ;;  cp              2   80[COMRAM] PTR unsigned char 
  5816 ;;		 -> STR_16(40), STR_15(17), STR_14(11), STR_13(35), 
  5817 ;;		 -> STR_12(36), STR_11(26), STR_10(10), STR_9(31), 
  5818 ;;		 -> STR_8(41), STR_7(39), STR_6(48), STR_5(39), 
  5819 ;;		 -> STR_4(29), STR_3(17), STR_2(31), STR_1(6), 
  5820 ;;  i               2    0        int 
  5821 ;;  done            2    0        int 
  5822 ;;  c               1    0        unsigned char 
  5823 ;; Return value:  Size  Location     Type
  5824 ;;                  1    wreg      void 
  5825 ;; Registers used:
  5826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5827 ;; Tracked objects:
  5828 ;;		On entry : 0/0
  5829 ;;		On exit  : 0/0
  5830 ;;		Unchanged: 0/0
  5831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5832 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5833 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5834 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5835 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5836 ;;Total ram usage:       18 bytes
  5837 ;; Hardware stack levels used: 1
  5838 ;; Hardware stack levels required when called: 6
  5839 ;; This function calls:
  5840 ;;		i2_dtoa
  5841 ;;		i2_fputc
  5842 ;; This function is called by:
  5843 ;;		i2_vfprintf
  5844 ;; This function uses a non-reentrant model
  5845 ;;
  5846                           
  5847                           	psect	text47
  5848   000EF0                     __ptext47:
  5849                           	callstack 0
  5850   000EF0                     i2_vfpfcnvrt:
  5851                           	callstack 8
  5852   000EF0                     
  5853                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(FILE *fp, char 
      +                          *fmt[], va_list ap);G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1008: {;G:\M
      +                          icrochip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1009:     char c, *cp;;G:\Microchip\
      +                          xc8\v2.40\pic\sources\c99\common\doprnt.c: 1010:     int done, i;;G:\Microchip\xc8\v2.40
      +                          \pic\sources\c99\common\doprnt.c: 1016:  } convarg;;G:\Microchip\xc8\v2.40\pic\sources\c
      +                          99\common\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  5854   000EF0  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5855   000EF4  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5856   000EF8  CFDE FFF6          	movff	postinc2,tblptrl
  5857   000EFC  CFDD FFF7          	movff	postdec2,tblptrh
  5858   000F00                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5859   000F00  6AF8               	clrf	tblptru,c
  5860   000F02                     	endif
  5861   000F02                     	if	0	;tblptru may be non-zero
  5862   000F02                     	endif
  5863   000F02  0008               	tblrd		*
  5864   000F04  50F5               	movf	tablat,w,c
  5865   000F06  0A25               	xorlw	37
  5866   000F08  A4D8               	btfss	status,2,c
  5867   000F0A  EF89  F007         	goto	i2u309_41
  5868   000F0E  EF8B  F007         	goto	i2u309_40
  5869   000F12                     i2u309_41:
  5870   000F12  EF0D  F008         	goto	i2l3558
  5871   000F16                     i2u309_40:
  5872   000F16                     
  5873                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*fmt;
  5874   000F16  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5875   000F1A  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5876   000F1E  2ADE               	incf	postinc2,f,c
  5877   000F20  0E00               	movlw	0
  5878   000F22  22DD               	addwfc	postdec2,f,c
  5879   000F24                     
  5880                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         flags = width = 0
      +                          ;
  5881   000F24  0E00               	movlw	0
  5882   000F26  0100               	movlb	0	; () banked
  5883   000F28  6FD8               	movwf	(_width+1)& (0+255),b
  5884   000F2A  0E00               	movlw	0
  5885   000F2C  6FD7               	movwf	_width& (0+255),b
  5886   000F2E  C0D7  F0DF         	movff	_width,_flags
  5887   000F32                     
  5888                           ; BSR set to: 0
  5889                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         prec = -1;
  5890   000F32  69D9               	setf	_prec& (0+255),b
  5891   000F34  69DA               	setf	(_prec+1)& (0+255),b
  5892   000F36                     
  5893                           ; BSR set to: 0
  5894                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt;
  5895   000F36  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5896   000F3A  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5897   000F3E  CFDE F051          	movff	postinc2,i2vfpfcnvrt@cp
  5898   000F42  CFDD F052          	movff	postdec2,i2vfpfcnvrt@cp+1
  5899   000F46                     
  5900                           ; BSR set to: 0
  5901                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp == 'd' || *cp =
      +                          = 'i') {
  5902   000F46  C051  FFF6         	movff	i2vfpfcnvrt@cp,tblptrl
  5903   000F4A  C052  FFF7         	movff	i2vfpfcnvrt@cp+1,tblptrh
  5904   000F4E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5905   000F4E  6AF8               	clrf	tblptru,c
  5906   000F50                     	endif
  5907   000F50                     	if	0	;tblptru may be non-zero
  5908   000F50                     	endif
  5909   000F50  0008               	tblrd		*
  5910   000F52  50F5               	movf	tablat,w,c
  5911   000F54  0A64               	xorlw	100
  5912   000F56  B4D8               	btfsc	status,2,c
  5913   000F58  EFB0  F007         	goto	i2u310_41
  5914   000F5C  EFB2  F007         	goto	i2u310_40
  5915   000F60                     i2u310_41:
  5916   000F60  EFC1  F007         	goto	i2l3548
  5917   000F64                     i2u310_40:
  5918   000F64                     
  5919                           ; BSR set to: 0
  5920   000F64  C051  FFF6         	movff	i2vfpfcnvrt@cp,tblptrl
  5921   000F68  C052  FFF7         	movff	i2vfpfcnvrt@cp+1,tblptrh
  5922   000F6C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5923   000F6C  6AF8               	clrf	tblptru,c
  5924   000F6E                     	endif
  5925   000F6E                     	if	0	;tblptru may be non-zero
  5926   000F6E                     	endif
  5927   000F6E  0008               	tblrd		*
  5928   000F70  50F5               	movf	tablat,w,c
  5929   000F72  0A69               	xorlw	105
  5930   000F74  A4D8               	btfss	status,2,c
  5931   000F76  EFBF  F007         	goto	i2u311_41
  5932   000F7A  EFC1  F007         	goto	i2u311_40
  5933   000F7E                     i2u311_41:
  5934   000F7E  EF04  F008         	goto	i2l3554
  5935   000F82                     i2u311_40:
  5936   000F82                     i2l3548:
  5937                           
  5938                           ; BSR set to: 0
  5939                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.ll = (long lon
      +                          g)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  5940   000F82  C045  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  5941   000F86  C046  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  5942   000F8A  CFDF F047          	movff	indf2,??i2_vfpfcnvrt
  5943   000F8E  0E02               	movlw	2
  5944   000F90  26DE               	addwf	postinc2,f,c
  5945   000F92  CFDF F048          	movff	indf2,??i2_vfpfcnvrt+1
  5946   000F96  0E00               	movlw	0
  5947   000F98  22DD               	addwfc	postdec2,f,c
  5948   000F9A  C047  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  5949   000F9E  C048  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  5950   000FA2  CFDE F049          	movff	postinc2,i2vfpfcnvrt@convarg
  5951   000FA6  CFDD F04A          	movff	postdec2,i2vfpfcnvrt@convarg+1
  5952   000FAA  0E00               	movlw	0
  5953   000FAC  BE4A               	btfsc	(i2vfpfcnvrt@convarg+1)^0,7,c
  5954   000FAE  0EFF               	movlw	-1
  5955   000FB0  6E4B               	movwf	(i2vfpfcnvrt@convarg+2)^0,c
  5956   000FB2  6E4C               	movwf	(i2vfpfcnvrt@convarg+3)^0,c
  5957   000FB4  6E4D               	movwf	(i2vfpfcnvrt@convarg+4)^0,c
  5958   000FB6  6E4E               	movwf	(i2vfpfcnvrt@convarg+5)^0,c
  5959   000FB8  6E4F               	movwf	(i2vfpfcnvrt@convarg+6)^0,c
  5960   000FBA  6E50               	movwf	(i2vfpfcnvrt@convarg+7)^0,c
  5961                           
  5962                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = cp+1;
  5963   000FBC  0E01               	movlw	1
  5964   000FBE  2451               	addwf	i2vfpfcnvrt@cp^0,w,c
  5965   000FC0  6E47               	movwf	??i2_vfpfcnvrt^0,c
  5966   000FC2  0E00               	movlw	0
  5967   000FC4  2052               	addwfc	(i2vfpfcnvrt@cp+1)^0,w,c
  5968   000FC6  6E48               	movwf	(??i2_vfpfcnvrt+1)^0,c
  5969   000FC8  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5970   000FCC  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5971   000FD0  C047  FFDE         	movff	??i2_vfpfcnvrt,postinc2
  5972   000FD4  C048  FFDD         	movff	??i2_vfpfcnvrt+1,postdec2
  5973   000FD8                     
  5974                           ; BSR set to: 0
  5975                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (void) dtoa(fp,
      +                           convarg.ll);;	Return value of i2_vfpfcnvrt is never used
  5976   000FD8  C041  F01E         	movff	i2vfpfcnvrt@fp,i2dtoa@fp
  5977   000FDC  C042  F01F         	movff	i2vfpfcnvrt@fp+1,i2dtoa@fp+1
  5978   000FE0  C049  F020         	movff	i2vfpfcnvrt@convarg,i2dtoa@d
  5979   000FE4  C04A  F021         	movff	i2vfpfcnvrt@convarg+1,i2dtoa@d+1
  5980   000FE8  C04B  F022         	movff	i2vfpfcnvrt@convarg+2,i2dtoa@d+2
  5981   000FEC  C04C  F023         	movff	i2vfpfcnvrt@convarg+3,i2dtoa@d+3
  5982   000FF0  C04D  F024         	movff	i2vfpfcnvrt@convarg+4,i2dtoa@d+4
  5983   000FF4  C04E  F025         	movff	i2vfpfcnvrt@convarg+5,i2dtoa@d+5
  5984   000FF8  C04F  F026         	movff	i2vfpfcnvrt@convarg+6,i2dtoa@d+6
  5985   000FFC  C050  F027         	movff	i2vfpfcnvrt@convarg+7,i2dtoa@d+7
  5986   001000  ECE2  F001         	call	i2_dtoa	;wreg free
  5987   001004  EF22  F008         	goto	i2l1287
  5988   001008                     i2l3554:
  5989                           
  5990                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*fmt;
  5991   001008  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5992   00100C  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5993   001010  2ADE               	incf	postinc2,f,c
  5994   001012  0E00               	movlw	0
  5995   001014  22DD               	addwfc	postdec2,f,c
  5996   001016  EF22  F008         	goto	i2l1287
  5997   00101A                     i2l3558:
  5998                           
  5999                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((int)(*fmt)[0],
      +                           fp);
  6000   00101A  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6001   00101E  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6002   001022  CFDE FFF6          	movff	postinc2,tblptrl
  6003   001026  CFDD FFF7          	movff	postdec2,tblptrh
  6004   00102A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6005   00102A  6AF8               	clrf	tblptru,c
  6006   00102C                     	endif
  6007   00102C                     	if	0	;tblptru may be non-zero
  6008   00102C                     	endif
  6009   00102C  0008               	tblrd		*
  6010   00102E  50F5               	movf	tablat,w,c
  6011   001030  6E03               	movwf	i2fputc@c^0,c
  6012   001032  6A04               	clrf	(i2fputc@c+1)^0,c
  6013   001034  C041  F005         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  6014   001038  C042  F006         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  6015   00103C  EC56  F009         	call	i2_fputc	;wreg free
  6016   001040  EF04  F008         	goto	i2l3554
  6017   001044                     i2l1287:
  6018   001044  0012               	return		;funcret
  6019   001046                     __end_ofi2_vfpfcnvrt:
  6020                           	callstack 0
  6021                           
  6022 ;; *************** function i2_dtoa *****************
  6023 ;; Defined at:
  6024 ;;		line 443 in file "G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  6025 ;; Parameters:    Size  Location     Type
  6026 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  6027 ;;		 -> NULL(0), 
  6028 ;;  d               8   31[COMRAM] long long 
  6029 ;; Auto vars:     Size  Location     Type
  6030 ;;  n               8   53[COMRAM] long long 
  6031 ;;  i               2   62[COMRAM] int 
  6032 ;;  w               2   51[COMRAM] int 
  6033 ;;  p               2   49[COMRAM] int 
  6034 ;;  s               1   61[COMRAM] unsigned char 
  6035 ;; Return value:  Size  Location     Type
  6036 ;;                  1    wreg      void 
  6037 ;; Registers used:
  6038 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6039 ;; Tracked objects:
  6040 ;;		On entry : 0/0
  6041 ;;		On exit  : 0/0
  6042 ;;		Unchanged: 0/0
  6043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6044 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6045 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6046 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6047 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6048 ;;Total ram usage:       35 bytes
  6049 ;; Hardware stack levels used: 1
  6050 ;; Hardware stack levels required when called: 5
  6051 ;; This function calls:
  6052 ;;		i2___aodiv
  6053 ;;		i2___aomod
  6054 ;;		i2_abs
  6055 ;;		i2_pad
  6056 ;; This function is called by:
  6057 ;;		i2_vfpfcnvrt
  6058 ;; This function uses a non-reentrant model
  6059 ;;
  6060                           
  6061                           	psect	text48
  6062   0003C4                     __ptext48:
  6063                           	callstack 0
  6064   0003C4                     i2_dtoa:
  6065                           	callstack 8
  6066   0003C4                     
  6067                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void dtoa(FILE *fp,
      +                           long long d);G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 444: {;G:\Microchi
      +                          p\xc8\v2.40\pic\sources\c99\common\doprnt.c: 445:  char s;;G:\Microchip\xc8\v2.40\pic\so
      +                          urces\c99\common\doprnt.c: 446:     int i, p, w;;G:\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 447:     long long n;;G:\Microchip\xc8\v2.40\pic\sources\c99\common\dop
      +                          rnt.c: 450:     n = d;
  6068   0003C4  C020  F036         	movff	i2dtoa@d,i2dtoa@n
  6069   0003C8  C021  F037         	movff	i2dtoa@d+1,i2dtoa@n+1
  6070   0003CC  C022  F038         	movff	i2dtoa@d+2,i2dtoa@n+2
  6071   0003D0  C023  F039         	movff	i2dtoa@d+3,i2dtoa@n+3
  6072   0003D4  C024  F03A         	movff	i2dtoa@d+4,i2dtoa@n+4
  6073   0003D8  C025  F03B         	movff	i2dtoa@d+5,i2dtoa@n+5
  6074   0003DC  C026  F03C         	movff	i2dtoa@d+6,i2dtoa@n+6
  6075   0003E0  C027  F03D         	movff	i2dtoa@d+7,i2dtoa@n+7
  6076   0003E4                     
  6077                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 0 ? 1 : 0;
  6078   0003E4  BE3D               	btfsc	(i2dtoa@n+7)^0,7,c
  6079   0003E6  EFF7  F001         	goto	i2u283_41
  6080   0003EA  EFFA  F001         	goto	i2u283_40
  6081   0003EE                     i2u283_41:
  6082   0003EE  0E01               	movlw	1
  6083   0003F0  EFFB  F001         	goto	i2u284_40
  6084   0003F4                     i2u283_40:
  6085   0003F4  0E00               	movlw	0
  6086   0003F6                     i2u284_40:
  6087   0003F6  6E3E               	movwf	i2dtoa@s^0,c
  6088   0003F8                     
  6089                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  6090   0003F8  503E               	movf	i2dtoa@s^0,w,c
  6091   0003FA  B4D8               	btfsc	status,2,c
  6092   0003FC  EF02  F002         	goto	i2u285_41
  6093   000400  EF04  F002         	goto	i2u285_40
  6094   000404                     i2u285_41:
  6095   000404  EF14  F002         	goto	i2l3392
  6096   000408                     i2u285_40:
  6097   000408                     
  6098                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = -n;
  6099   000408  1E3D               	comf	(i2dtoa@n+7)^0,f,c
  6100   00040A  1E3C               	comf	(i2dtoa@n+6)^0,f,c
  6101   00040C  1E3B               	comf	(i2dtoa@n+5)^0,f,c
  6102   00040E  1E3A               	comf	(i2dtoa@n+4)^0,f,c
  6103   000410  1E39               	comf	(i2dtoa@n+3)^0,f,c
  6104   000412  1E38               	comf	(i2dtoa@n+2)^0,f,c
  6105   000414  1E37               	comf	(i2dtoa@n+1)^0,f,c
  6106   000416  6C36               	negf	i2dtoa@n^0,c
  6107   000418  0E00               	movlw	0
  6108   00041A  2237               	addwfc	(i2dtoa@n+1)^0,f,c
  6109   00041C  2238               	addwfc	(i2dtoa@n+2)^0,f,c
  6110   00041E  2239               	addwfc	(i2dtoa@n+3)^0,f,c
  6111   000420  223A               	addwfc	(i2dtoa@n+4)^0,f,c
  6112   000422  223B               	addwfc	(i2dtoa@n+5)^0,f,c
  6113   000424  223C               	addwfc	(i2dtoa@n+6)^0,f,c
  6114   000426  223D               	addwfc	(i2dtoa@n+7)^0,f,c
  6115   000428                     i2l3392:
  6116                           
  6117                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 < prec) ? prec 
      +                          : 1;
  6118   000428  0100               	movlb	0	; () banked
  6119   00042A  BFDA               	btfsc	(_prec+1)& (0+255),7,b
  6120   00042C  EF22  F002         	goto	i2u286_40
  6121   000430  51DA               	movf	(_prec+1)& (0+255),w,b
  6122   000432  E106               	bnz	i2u286_41
  6123   000434  05D9               	decf	_prec& (0+255),w,b
  6124   000436  B0D8               	btfsc	status,0,c
  6125   000438  EF20  F002         	goto	i2u286_41
  6126   00043C  EF22  F002         	goto	i2u286_40
  6127   000440                     i2u286_41:
  6128   000440  EF28  F002         	goto	i2l1266
  6129   000444                     i2u286_40:
  6130   000444                     
  6131                           ; BSR set to: 0
  6132   000444  0E00               	movlw	0
  6133   000446  6E33               	movwf	(i2dtoa@p+1)^0,c
  6134   000448  0E01               	movlw	1
  6135   00044A  6E32               	movwf	i2dtoa@p^0,c
  6136   00044C  EF2C  F002         	goto	i2l1268
  6137   000450                     i2l1266:
  6138                           
  6139                           ; BSR set to: 0
  6140   000450  C0D9  F032         	movff	_prec,i2dtoa@p
  6141   000454  C0DA  F033         	movff	_prec+1,i2dtoa@p+1
  6142   000458                     i2l1268:
  6143                           
  6144                           ; BSR set to: 0
  6145                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = width;
  6146   000458  C0D7  F034         	movff	_width,i2dtoa@w
  6147   00045C  C0D8  F035         	movff	_width+1,i2dtoa@w+1
  6148   000460                     
  6149                           ; BSR set to: 0
  6150                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  6151   000460  503E               	movf	i2dtoa@s^0,w,c
  6152   000462  B4D8               	btfsc	status,2,c
  6153   000464  EF36  F002         	goto	i2u287_41
  6154   000468  EF38  F002         	goto	i2u287_40
  6155   00046C                     i2u287_41:
  6156   00046C  EF4F  F002         	goto	i2l1269
  6157   000470                     i2u287_40:
  6158   000470                     
  6159                           ; BSR set to: 0
  6160                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;G:\Microchip\xc8\v
      +                          2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  6161   000470  0634               	decf	i2dtoa@w^0,f,c
  6162   000472  A0D8               	btfss	status,0,c
  6163   000474  0635               	decf	(i2dtoa@w+1)^0,f,c
  6164   000476                     
  6165                           ; BSR set to: 0
  6166                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-' : '+';
  6167   000476  503E               	movf	i2dtoa@s^0,w,c
  6168   000478  A4D8               	btfss	status,2,c
  6169   00047A  EF41  F002         	goto	i2u288_41
  6170   00047E  EF43  F002         	goto	i2u288_40
  6171   000482                     i2u288_41:
  6172   000482  EF49  F002         	goto	i2l3404
  6173   000486                     i2u288_40:
  6174   000486                     
  6175                           ; BSR set to: 0
  6176   000486  0E00               	movlw	0
  6177   000488  6E31               	movwf	(i2_dtoa$1855+1)^0,c
  6178   00048A  0E2B               	movlw	43
  6179   00048C  6E30               	movwf	i2_dtoa$1855^0,c
  6180   00048E  EF4D  F002         	goto	i2l3406
  6181   000492                     i2l3404:
  6182                           
  6183                           ; BSR set to: 0
  6184   000492  0E00               	movlw	0
  6185   000494  6E31               	movwf	(i2_dtoa$1855+1)^0,c
  6186   000496  0E2D               	movlw	45
  6187   000498  6E30               	movwf	i2_dtoa$1855^0,c
  6188   00049A                     i2l3406:
  6189                           
  6190                           ; BSR set to: 0
  6191   00049A  C030  F03E         	movff	i2_dtoa$1855,i2dtoa@s
  6192   00049E                     i2l1269:
  6193                           
  6194                           ; BSR set to: 0
  6195                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = sizeof(dbuf) - 1;
  6196   00049E  0E00               	movlw	0
  6197   0004A0  6E40               	movwf	(i2dtoa@i+1)^0,c
  6198   0004A2  0E1F               	movlw	31
  6199   0004A4  6E3F               	movwf	i2dtoa@i^0,c
  6200   0004A6                     
  6201                           ; BSR set to: 0
  6202                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] = '\0';
  6203   0004A6  0E00               	movlw	0
  6204   0004A8  0101               	movlb	1	; () banked
  6205   0004AA  6F27               	movwf	(_dbuf+31)& (0+255),b
  6206                           
  6207                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!(i < 1) && (n 
      +                          || (0 < p)
  6208   0004AC  EFD4  F002         	goto	i2l3420
  6209   0004B0                     i2l3410:
  6210                           
  6211                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;G:\Microchip\xc8\
      +                          v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  6212   0004B0  063F               	decf	i2dtoa@i^0,f,c
  6213   0004B2  A0D8               	btfss	status,0,c
  6214   0004B4  0640               	decf	(i2dtoa@i+1)^0,f,c
  6215   0004B6                     
  6216                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf[i] = (char)((
      +                          int)'0' + abs(n % 10));
  6217   0004B6  0E08               	movlw	low _dbuf
  6218   0004B8  243F               	addwf	i2dtoa@i^0,w,c
  6219   0004BA  6ED9               	movwf	fsr2l,c
  6220   0004BC  0E01               	movlw	high _dbuf
  6221   0004BE  2040               	addwfc	(i2dtoa@i+1)^0,w,c
  6222   0004C0  6EDA               	movwf	fsr2h,c
  6223   0004C2  C036  F001         	movff	i2dtoa@n,i2___aomod@dividend
  6224   0004C6  C037  F002         	movff	i2dtoa@n+1,i2___aomod@dividend+1
  6225   0004CA  C038  F003         	movff	i2dtoa@n+2,i2___aomod@dividend+2
  6226   0004CE  C039  F004         	movff	i2dtoa@n+3,i2___aomod@dividend+3
  6227   0004D2  C03A  F005         	movff	i2dtoa@n+4,i2___aomod@dividend+4
  6228   0004D6  C03B  F006         	movff	i2dtoa@n+5,i2___aomod@dividend+5
  6229   0004DA  C03C  F007         	movff	i2dtoa@n+6,i2___aomod@dividend+6
  6230   0004DE  C03D  F008         	movff	i2dtoa@n+7,i2___aomod@dividend+7
  6231   0004E2  0E0A               	movlw	10
  6232   0004E4  6E09               	movwf	i2___aomod@divisor^0,c
  6233   0004E6  0E00               	movlw	0
  6234   0004E8  6E0A               	movwf	(i2___aomod@divisor+1)^0,c
  6235   0004EA  0E00               	movlw	0
  6236   0004EC  6E0B               	movwf	(i2___aomod@divisor+2)^0,c
  6237   0004EE  0E00               	movlw	0
  6238   0004F0  6E0C               	movwf	(i2___aomod@divisor+3)^0,c
  6239   0004F2  0E00               	movlw	0
  6240   0004F4  6E0D               	movwf	(i2___aomod@divisor+4)^0,c
  6241   0004F6  0E00               	movlw	0
  6242   0004F8  6E0E               	movwf	(i2___aomod@divisor+5)^0,c
  6243   0004FA  0E00               	movlw	0
  6244   0004FC  6E0F               	movwf	(i2___aomod@divisor+6)^0,c
  6245   0004FE  0E00               	movlw	0
  6246   000500  6E10               	movwf	(i2___aomod@divisor+7)^0,c
  6247   000502  EC1A  F006         	call	i2___aomod	;wreg free
  6248   000506  C001  F028         	movff	?i2___aomod,??i2_dtoa
  6249   00050A  C002  F029         	movff	?i2___aomod+1,??i2_dtoa+1
  6250   00050E  C003  F02A         	movff	?i2___aomod+2,??i2_dtoa+2
  6251   000512  C004  F02B         	movff	?i2___aomod+3,??i2_dtoa+3
  6252   000516  C005  F02C         	movff	?i2___aomod+4,??i2_dtoa+4
  6253   00051A  C006  F02D         	movff	?i2___aomod+5,??i2_dtoa+5
  6254   00051E  C007  F02E         	movff	?i2___aomod+6,??i2_dtoa+6
  6255   000522  C008  F02F         	movff	?i2___aomod+7,??i2_dtoa+7
  6256   000526  C028  F013         	movff	??i2_dtoa,i2abs@a
  6257   00052A  C029  F014         	movff	??i2_dtoa+1,i2abs@a+1
  6258   00052E  ECFC  F00C         	call	i2_abs	;wreg free
  6259   000532  5013               	movf	?i2_abs^0,w,c
  6260   000534  0F30               	addlw	48
  6261   000536  6EDF               	movwf	indf2,c
  6262   000538                     
  6263                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  6264   000538  0632               	decf	i2dtoa@p^0,f,c
  6265   00053A  A0D8               	btfss	status,0,c
  6266   00053C  0633               	decf	(i2dtoa@p+1)^0,f,c
  6267   00053E                     
  6268                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  6269   00053E  0634               	decf	i2dtoa@w^0,f,c
  6270   000540  A0D8               	btfss	status,0,c
  6271   000542  0635               	decf	(i2dtoa@w+1)^0,f,c
  6272   000544                     
  6273                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = n / 10;
  6274   000544  C036  F001         	movff	i2dtoa@n,i2___aodiv@dividend
  6275   000548  C037  F002         	movff	i2dtoa@n+1,i2___aodiv@dividend+1
  6276   00054C  C038  F003         	movff	i2dtoa@n+2,i2___aodiv@dividend+2
  6277   000550  C039  F004         	movff	i2dtoa@n+3,i2___aodiv@dividend+3
  6278   000554  C03A  F005         	movff	i2dtoa@n+4,i2___aodiv@dividend+4
  6279   000558  C03B  F006         	movff	i2dtoa@n+5,i2___aodiv@dividend+5
  6280   00055C  C03C  F007         	movff	i2dtoa@n+6,i2___aodiv@dividend+6
  6281   000560  C03D  F008         	movff	i2dtoa@n+7,i2___aodiv@dividend+7
  6282   000564  0E0A               	movlw	10
  6283   000566  6E09               	movwf	i2___aodiv@divisor^0,c
  6284   000568  0E00               	movlw	0
  6285   00056A  6E0A               	movwf	(i2___aodiv@divisor+1)^0,c
  6286   00056C  0E00               	movlw	0
  6287   00056E  6E0B               	movwf	(i2___aodiv@divisor+2)^0,c
  6288   000570  0E00               	movlw	0
  6289   000572  6E0C               	movwf	(i2___aodiv@divisor+3)^0,c
  6290   000574  0E00               	movlw	0
  6291   000576  6E0D               	movwf	(i2___aodiv@divisor+4)^0,c
  6292   000578  0E00               	movlw	0
  6293   00057A  6E0E               	movwf	(i2___aodiv@divisor+5)^0,c
  6294   00057C  0E00               	movlw	0
  6295   00057E  6E0F               	movwf	(i2___aodiv@divisor+6)^0,c
  6296   000580  0E00               	movlw	0
  6297   000582  6E10               	movwf	(i2___aodiv@divisor+7)^0,c
  6298   000584  ECE6  F003         	call	i2___aodiv	;wreg free
  6299   000588  C001  F036         	movff	?i2___aodiv,i2dtoa@n
  6300   00058C  C002  F037         	movff	?i2___aodiv+1,i2dtoa@n+1
  6301   000590  C003  F038         	movff	?i2___aodiv+2,i2dtoa@n+2
  6302   000594  C004  F039         	movff	?i2___aodiv+3,i2dtoa@n+3
  6303   000598  C005  F03A         	movff	?i2___aodiv+4,i2dtoa@n+4
  6304   00059C  C006  F03B         	movff	?i2___aodiv+5,i2dtoa@n+5
  6305   0005A0  C007  F03C         	movff	?i2___aodiv+6,i2dtoa@n+6
  6306   0005A4  C008  F03D         	movff	?i2___aodiv+7,i2dtoa@n+7
  6307   0005A8                     i2l3420:
  6308                           
  6309                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!(i < 1) && (n 
      +                          || (0 < p)
  6310   0005A8  BE40               	btfsc	(i2dtoa@i+1)^0,7,c
  6311   0005AA  EFDF  F002         	goto	i2u289_41
  6312   0005AE  5040               	movf	(i2dtoa@i+1)^0,w,c
  6313   0005B0  E108               	bnz	i2u289_40
  6314   0005B2  043F               	decf	i2dtoa@i^0,w,c
  6315   0005B4  A0D8               	btfss	status,0,c
  6316   0005B6  EFDF  F002         	goto	i2u289_41
  6317   0005BA  EFE1  F002         	goto	i2u289_40
  6318   0005BE                     i2u289_41:
  6319   0005BE  EFFD  F002         	goto	i2l3426
  6320   0005C2                     i2u289_40:
  6321   0005C2  5036               	movf	i2dtoa@n^0,w,c
  6322   0005C4  1037               	iorwf	(i2dtoa@n+1)^0,w,c
  6323   0005C6  1038               	iorwf	(i2dtoa@n+2)^0,w,c
  6324   0005C8  1039               	iorwf	(i2dtoa@n+3)^0,w,c
  6325   0005CA  103A               	iorwf	(i2dtoa@n+4)^0,w,c
  6326   0005CC  103B               	iorwf	(i2dtoa@n+5)^0,w,c
  6327   0005CE  103C               	iorwf	(i2dtoa@n+6)^0,w,c
  6328   0005D0  103D               	iorwf	(i2dtoa@n+7)^0,w,c
  6329   0005D2  A4D8               	btfss	status,2,c
  6330   0005D4  EFEE  F002         	goto	i2u290_41
  6331   0005D8  EFF0  F002         	goto	i2u290_40
  6332   0005DC                     i2u290_41:
  6333   0005DC  EF58  F002         	goto	i2l3410
  6334   0005E0                     i2u290_40:
  6335   0005E0  BE33               	btfsc	(i2dtoa@p+1)^0,7,c
  6336   0005E2  EFFD  F002         	goto	i2u291_40
  6337   0005E6  5033               	movf	(i2dtoa@p+1)^0,w,c
  6338   0005E8  E106               	bnz	i2u291_41
  6339   0005EA  0432               	decf	i2dtoa@p^0,w,c
  6340   0005EC  B0D8               	btfsc	status,0,c
  6341   0005EE  EFFB  F002         	goto	i2u291_41
  6342   0005F2  EFFD  F002         	goto	i2u291_40
  6343   0005F6                     i2u291_41:
  6344   0005F6  EF58  F002         	goto	i2l3410
  6345   0005FA                     i2u291_40:
  6346   0005FA                     i2l3426:
  6347                           
  6348                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s != 0) {
  6349   0005FA  503E               	movf	i2dtoa@s^0,w,c
  6350   0005FC  B4D8               	btfsc	status,2,c
  6351   0005FE  EF03  F003         	goto	i2u292_41
  6352   000602  EF05  F003         	goto	i2u292_40
  6353   000606                     i2u292_41:
  6354   000606  EF10  F003         	goto	i2l3432
  6355   00060A                     i2u292_40:
  6356   00060A                     
  6357                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  6358   00060A  063F               	decf	i2dtoa@i^0,f,c
  6359   00060C  A0D8               	btfss	status,0,c
  6360   00060E  0640               	decf	(i2dtoa@i+1)^0,f,c
  6361   000610                     
  6362                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf[i] = s;
  6363   000610  0E08               	movlw	low _dbuf
  6364   000612  243F               	addwf	i2dtoa@i^0,w,c
  6365   000614  6ED9               	movwf	fsr2l,c
  6366   000616  0E01               	movlw	high _dbuf
  6367   000618  2040               	addwfc	(i2dtoa@i+1)^0,w,c
  6368   00061A  6EDA               	movwf	fsr2h,c
  6369   00061C  C03E  FFDF         	movff	i2dtoa@s,indf2
  6370   000620                     i2l3432:
  6371                           
  6372                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (void) pad(fp, 
      +                          &dbuf[i], w);
  6373   000620  C01E  F013         	movff	i2dtoa@fp,i2pad@fp
  6374   000624  C01F  F014         	movff	i2dtoa@fp+1,i2pad@fp+1
  6375   000628  0E08               	movlw	low _dbuf
  6376   00062A  243F               	addwf	i2dtoa@i^0,w,c
  6377   00062C  6E15               	movwf	i2pad@buf^0,c
  6378   00062E  0E01               	movlw	high _dbuf
  6379   000630  2040               	addwfc	(i2dtoa@i+1)^0,w,c
  6380   000632  6E16               	movwf	(i2pad@buf+1)^0,c
  6381   000634  C034  F017         	movff	i2dtoa@w,i2pad@p
  6382   000638  C035  F018         	movff	i2dtoa@w+1,i2pad@p+1
  6383   00063C  EC20  F00A         	call	i2_pad	;wreg free
  6384   000640  0012               	return		;funcret
  6385   000642                     __end_ofi2_dtoa:
  6386                           	callstack 0
  6387                           
  6388 ;; *************** function i2_pad *****************
  6389 ;; Defined at:
  6390 ;;		line 133 in file "G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  6391 ;; Parameters:    Size  Location     Type
  6392 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  6393 ;;		 -> NULL(0), 
  6394 ;;  buf             2   20[COMRAM] PTR unsigned char 
  6395 ;;		 -> dbuf(32), 
  6396 ;;  p               2   22[COMRAM] int 
  6397 ;; Auto vars:     Size  Location     Type
  6398 ;;  w               2   27[COMRAM] int 
  6399 ;;  i               2   25[COMRAM] int 
  6400 ;; Return value:  Size  Location     Type
  6401 ;;                  1    wreg      void 
  6402 ;; Registers used:
  6403 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6404 ;; Tracked objects:
  6405 ;;		On entry : 0/0
  6406 ;;		On exit  : 0/0
  6407 ;;		Unchanged: 0/0
  6408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6409 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6410 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6411 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6412 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6413 ;;Total ram usage:       11 bytes
  6414 ;; Hardware stack levels used: 1
  6415 ;; Hardware stack levels required when called: 4
  6416 ;; This function calls:
  6417 ;;		i2_fputc
  6418 ;;		i2_fputs
  6419 ;; This function is called by:
  6420 ;;		i2_dtoa
  6421 ;; This function uses a non-reentrant model
  6422 ;;
  6423                           
  6424                           	psect	text49
  6425   001440                     __ptext49:
  6426                           	callstack 0
  6427   001440                     i2_pad:
  6428                           	callstack 8
  6429   001440                     
  6430                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void pad(FILE *fp, 
      +                          char *buf, int p);G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 134: {;G:\Micr
      +                          ochip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 135:     int i, w;;G:\Microchip\xc8\v2.
      +                          40\pic\sources\c99\common\doprnt.c: 145:     w = (p < 0) ? 0 : p;
  6431   001440  BE18               	btfsc	(i2pad@p+1)^0,7,c
  6432   001442  EF25  F00A         	goto	i2u279_41
  6433   001446  EF27  F00A         	goto	i2u279_40
  6434   00144A                     i2u279_41:
  6435   00144A  EF2D  F00A         	goto	i2l3362
  6436   00144E                     i2u279_40:
  6437   00144E  C017  F01C         	movff	i2pad@p,i2pad@w
  6438   001452  C018  F01D         	movff	i2pad@p+1,i2pad@w+1
  6439   001456  EF31  F00A         	goto	i2l1257
  6440   00145A                     i2l3362:
  6441   00145A  0E00               	movlw	0
  6442   00145C  6E1D               	movwf	(i2pad@w+1)^0,c
  6443   00145E  0E00               	movlw	0
  6444   001460  6E1C               	movwf	i2pad@w^0,c
  6445   001462                     i2l1257:
  6446                           
  6447                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  6448   001462  0E00               	movlw	0
  6449   001464  6E1B               	movwf	(i2pad@i+1)^0,c
  6450   001466  0E00               	movlw	0
  6451   001468  6E1A               	movwf	i2pad@i^0,c
  6452                           
  6453                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i < w) {
  6454   00146A  EF43  F00A         	goto	i2l3368
  6455   00146E                     i2l3364:
  6456                           
  6457                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fputc(' ', fp);
  6458   00146E  0E00               	movlw	0
  6459   001470  6E04               	movwf	(i2fputc@c+1)^0,c
  6460   001472  0E20               	movlw	32
  6461   001474  6E03               	movwf	i2fputc@c^0,c
  6462   001476  C013  F005         	movff	i2pad@fp,i2fputc@fp
  6463   00147A  C014  F006         	movff	i2pad@fp+1,i2fputc@fp+1
  6464   00147E  EC56  F009         	call	i2_fputc	;wreg free
  6465   001482                     
  6466                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  6467   001482  4A1A               	infsnz	i2pad@i^0,f,c
  6468   001484  2A1B               	incf	(i2pad@i+1)^0,f,c
  6469   001486                     i2l3368:
  6470                           
  6471                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i < w) {
  6472   001486  501C               	movf	i2pad@w^0,w,c
  6473   001488  5C1A               	subwf	i2pad@i^0,w,c
  6474   00148A  501B               	movf	(i2pad@i+1)^0,w,c
  6475   00148C  0A80               	xorlw	128
  6476   00148E  6E19               	movwf	??i2_pad^0,c
  6477   001490  501D               	movf	(i2pad@w+1)^0,w,c
  6478   001492  0A80               	xorlw	128
  6479   001494  5819               	subwfb	??i2_pad^0,w,c
  6480   001496  A0D8               	btfss	status,0,c
  6481   001498  EF50  F00A         	goto	i2u280_41
  6482   00149C  EF52  F00A         	goto	i2u280_40
  6483   0014A0                     i2u280_41:
  6484   0014A0  EF37  F00A         	goto	i2l3364
  6485   0014A4                     i2u280_40:
  6486   0014A4                     
  6487                           ;G:\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fputs((const char 
      +                          *)buf, fp);
  6488   0014A4  C015  F00C         	movff	i2pad@buf,i2fputs@s
  6489   0014A8  C016  F00D         	movff	i2pad@buf+1,i2fputs@s+1
  6490   0014AC  C013  F00E         	movff	i2pad@fp,i2fputs@fp
  6491   0014B0  C014  F00F         	movff	i2pad@fp+1,i2fputs@fp+1
  6492   0014B4  EC77  F00C         	call	i2_fputs	;wreg free
  6493   0014B8  0012               	return		;funcret
  6494   0014BA                     __end_ofi2_pad:
  6495                           	callstack 0
  6496                           
  6497 ;; *************** function i2_fputs *****************
  6498 ;; Defined at:
  6499 ;;		line 8 in file "G:\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  6500 ;; Parameters:    Size  Location     Type
  6501 ;;  s               2   11[COMRAM] PTR const unsigned char 
  6502 ;;		 -> dbuf(32), 
  6503 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  6504 ;;		 -> NULL(0), 
  6505 ;; Auto vars:     Size  Location     Type
  6506 ;;  i               2   16[COMRAM] int 
  6507 ;;  c               1   15[COMRAM] unsigned char 
  6508 ;; Return value:  Size  Location     Type
  6509 ;;                  2   11[COMRAM] int 
  6510 ;; Registers used:
  6511 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6512 ;; Tracked objects:
  6513 ;;		On entry : 0/0
  6514 ;;		On exit  : 0/0
  6515 ;;		Unchanged: 0/0
  6516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6517 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6518 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6520 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6521 ;;Total ram usage:        7 bytes
  6522 ;; Hardware stack levels used: 1
  6523 ;; Hardware stack levels required when called: 3
  6524 ;; This function calls:
  6525 ;;		i2_fputc
  6526 ;; This function is called by:
  6527 ;;		i2_pad
  6528 ;; This function uses a non-reentrant model
  6529 ;;
  6530                           
  6531                           	psect	text50
  6532   0018EE                     __ptext50:
  6533                           	callstack 0
  6534   0018EE                     i2_fputs:
  6535                           	callstack 8
  6536   0018EE  0E00               	movlw	0
  6537   0018F0  6E12               	movwf	(i2fputs@i+1)^0,c
  6538   0018F2  0E00               	movlw	0
  6539   0018F4  6E11               	movwf	i2fputs@i^0,c
  6540   0018F6  EF88  F00C         	goto	i2l3262
  6541   0018FA                     i2l3258:
  6542   0018FA  C010  F003         	movff	i2fputs@c,i2fputc@c
  6543   0018FE  6A04               	clrf	(i2fputc@c+1)^0,c
  6544   001900  C00E  F005         	movff	i2fputs@fp,i2fputc@fp
  6545   001904  C00F  F006         	movff	i2fputs@fp+1,i2fputc@fp+1
  6546   001908  EC56  F009         	call	i2_fputc	;wreg free
  6547   00190C  4A11               	infsnz	i2fputs@i^0,f,c
  6548   00190E  2A12               	incf	(i2fputs@i+1)^0,f,c
  6549   001910                     i2l3262:
  6550   001910  5011               	movf	i2fputs@i^0,w,c
  6551   001912  240C               	addwf	i2fputs@s^0,w,c
  6552   001914  6ED9               	movwf	fsr2l,c
  6553   001916  5012               	movf	(i2fputs@i+1)^0,w,c
  6554   001918  200D               	addwfc	(i2fputs@s+1)^0,w,c
  6555   00191A  6EDA               	movwf	fsr2h,c
  6556   00191C  50DF               	movf	indf2,w,c
  6557   00191E  6E10               	movwf	i2fputs@c^0,c
  6558   001920  5010               	movf	i2fputs@c^0,w,c
  6559   001922  A4D8               	btfss	status,2,c
  6560   001924  EF96  F00C         	goto	i2u261_41
  6561   001928  EF98  F00C         	goto	i2u261_40
  6562   00192C                     i2u261_41:
  6563   00192C  EF7D  F00C         	goto	i2l3258
  6564   001930                     i2u261_40:
  6565   001930  0012               	return		;funcret
  6566   001932                     __end_ofi2_fputs:
  6567                           	callstack 0
  6568                           
  6569 ;; *************** function i2_fputc *****************
  6570 ;; Defined at:
  6571 ;;		line 8 in file "G:\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  6572 ;; Parameters:    Size  Location     Type
  6573 ;;  c               2    2[COMRAM] int 
  6574 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  6575 ;;		 -> NULL(0), 
  6576 ;; Auto vars:     Size  Location     Type
  6577 ;;		None
  6578 ;; Return value:  Size  Location     Type
  6579 ;;                  2    2[COMRAM] int 
  6580 ;; Registers used:
  6581 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6582 ;; Tracked objects:
  6583 ;;		On entry : 0/0
  6584 ;;		On exit  : 0/0
  6585 ;;		Unchanged: 0/0
  6586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6587 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6589 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6590 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6591 ;;Total ram usage:        9 bytes
  6592 ;; Hardware stack levels used: 1
  6593 ;; Hardware stack levels required when called: 2
  6594 ;; This function calls:
  6595 ;;		i2_putch
  6596 ;; This function is called by:
  6597 ;;		i2_pad
  6598 ;;		i2_vfpfcnvrt
  6599 ;;		i2_fputs
  6600 ;; This function uses a non-reentrant model
  6601 ;;
  6602                           
  6603                           	psect	text51
  6604   0012AC                     __ptext51:
  6605                           	callstack 0
  6606   0012AC                     i2_fputc:
  6607                           	callstack 11
  6608   0012AC  5005               	movf	i2fputc@fp^0,w,c
  6609   0012AE  1006               	iorwf	(i2fputc@fp+1)^0,w,c
  6610   0012B0  B4D8               	btfsc	status,2,c
  6611   0012B2  EF5D  F009         	goto	i2u257_41
  6612   0012B6  EF5F  F009         	goto	i2u257_40
  6613   0012BA                     i2u257_41:
  6614   0012BA  EF68  F009         	goto	i2l3244
  6615   0012BE                     i2u257_40:
  6616   0012BE  5005               	movf	i2fputc@fp^0,w,c
  6617   0012C0  1006               	iorwf	(i2fputc@fp+1)^0,w,c
  6618   0012C2  A4D8               	btfss	status,2,c
  6619   0012C4  EF66  F009         	goto	i2u258_41
  6620   0012C8  EF68  F009         	goto	i2u258_40
  6621   0012CC                     i2u258_41:
  6622   0012CC  EF6D  F009         	goto	i2l3246
  6623   0012D0                     i2u258_40:
  6624   0012D0                     i2l3244:
  6625   0012D0  5003               	movf	i2fputc@c^0,w,c
  6626   0012D2  EC5B  F00E         	call	i2_putch
  6627   0012D6  EFA0  F009         	goto	i2l1312
  6628   0012DA                     i2l3246:
  6629   0012DA  EE20 F009          	lfsr	2,9
  6630   0012DE  5005               	movf	i2fputc@fp^0,w,c
  6631   0012E0  26D9               	addwf	fsr2l,f,c
  6632   0012E2  5006               	movf	(i2fputc@fp+1)^0,w,c
  6633   0012E4  22DA               	addwfc	fsr2h,f,c
  6634   0012E6  50DE               	movf	postinc2,w,c
  6635   0012E8  10DE               	iorwf	postinc2,w,c
  6636   0012EA  B4D8               	btfsc	status,2,c
  6637   0012EC  EF7A  F009         	goto	i2u259_41
  6638   0012F0  EF7C  F009         	goto	i2u259_40
  6639   0012F4                     i2u259_41:
  6640   0012F4  EF97  F009         	goto	i2l3250
  6641   0012F8                     i2u259_40:
  6642   0012F8  EE20 F009          	lfsr	2,9
  6643   0012FC  5005               	movf	i2fputc@fp^0,w,c
  6644   0012FE  26D9               	addwf	fsr2l,f,c
  6645   001300  5006               	movf	(i2fputc@fp+1)^0,w,c
  6646   001302  22DA               	addwfc	fsr2h,f,c
  6647   001304  EE10 F003          	lfsr	1,3
  6648   001308  5005               	movf	i2fputc@fp^0,w,c
  6649   00130A  26E1               	addwf	fsr1l,f,c
  6650   00130C  5006               	movf	(i2fputc@fp+1)^0,w,c
  6651   00130E  22E2               	addwfc	fsr1h,f,c
  6652   001310  50DE               	movf	postinc2,w,c
  6653   001312  5CE6               	subwf	postinc1,w,c
  6654   001314  50E6               	movf	postinc1,w,c
  6655   001316  0A80               	xorlw	128
  6656   001318  6E0B               	movwf	(??i2_fputc+4)^0,c
  6657   00131A  50DE               	movf	postinc2,w,c
  6658   00131C  0A80               	xorlw	128
  6659   00131E  580B               	subwfb	(??i2_fputc+4)^0,w,c
  6660   001320  B0D8               	btfsc	status,0,c
  6661   001322  EF95  F009         	goto	i2u260_41
  6662   001326  EF97  F009         	goto	i2u260_40
  6663   00132A                     i2u260_41:
  6664   00132A  EFA0  F009         	goto	i2l1312
  6665   00132E                     i2u260_40:
  6666   00132E                     i2l3250:
  6667   00132E  EE20 F003          	lfsr	2,3
  6668   001332  5005               	movf	i2fputc@fp^0,w,c
  6669   001334  26D9               	addwf	fsr2l,f,c
  6670   001336  5006               	movf	(i2fputc@fp+1)^0,w,c
  6671   001338  22DA               	addwfc	fsr2h,f,c
  6672   00133A  2ADE               	incf	postinc2,f,c
  6673   00133C  0E00               	movlw	0
  6674   00133E  22DD               	addwfc	postdec2,f,c
  6675   001340                     i2l1312:
  6676   001340  0012               	return		;funcret
  6677   001342                     __end_ofi2_fputc:
  6678                           	callstack 0
  6679                           
  6680 ;; *************** function i2_putch *****************
  6681 ;; Defined at:
  6682 ;;		line 201 in file "mcc_generated_files/eusart1.c"
  6683 ;; Parameters:    Size  Location     Type
  6684 ;;  txData          1    wreg     unsigned char 
  6685 ;; Auto vars:     Size  Location     Type
  6686 ;;  txData          1    1[COMRAM] unsigned char 
  6687 ;; Return value:  Size  Location     Type
  6688 ;;                  1    wreg      void 
  6689 ;; Registers used:
  6690 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6691 ;; Tracked objects:
  6692 ;;		On entry : 0/0
  6693 ;;		On exit  : 0/0
  6694 ;;		Unchanged: 0/0
  6695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6697 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6699 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6700 ;;Total ram usage:        1 bytes
  6701 ;; Hardware stack levels used: 1
  6702 ;; Hardware stack levels required when called: 1
  6703 ;; This function calls:
  6704 ;;		i2_EUSART1_Write
  6705 ;; This function is called by:
  6706 ;;		i2_fputc
  6707 ;; This function uses a non-reentrant model
  6708 ;;
  6709                           
  6710                           	psect	text52
  6711   001CB6                     __ptext52:
  6712                           	callstack 0
  6713   001CB6                     i2_putch:
  6714                           	callstack 11
  6715                           
  6716                           ;incstack = 0
  6717                           ;i2putch@txData stored from wreg
  6718   001CB6  6E02               	movwf	i2putch@txData^0,c
  6719   001CB8                     
  6720                           ;mcc_generated_files/eusart1.c: 201: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 202: {;mcc_generated_files/eusart1.c: 203:     EUSART1_Write(txData);
  6721   001CB8  5002               	movf	i2putch@txData^0,w,c
  6722   001CBA  EC8A  F00B         	call	i2_EUSART1_Write
  6723   001CBE  0012               	return		;funcret
  6724   001CC0                     __end_ofi2_putch:
  6725                           	callstack 0
  6726                           
  6727 ;; *************** function i2_EUSART1_Write *****************
  6728 ;; Defined at:
  6729 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  6730 ;; Parameters:    Size  Location     Type
  6731 ;;  txData          1    wreg     unsigned char 
  6732 ;; Auto vars:     Size  Location     Type
  6733 ;;  txData          1    0[COMRAM] unsigned char 
  6734 ;; Return value:  Size  Location     Type
  6735 ;;                  1    wreg      void 
  6736 ;; Registers used:
  6737 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6738 ;; Tracked objects:
  6739 ;;		On entry : 0/0
  6740 ;;		On exit  : 0/0
  6741 ;;		Unchanged: 0/0
  6742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6744 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6746 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6747 ;;Total ram usage:        1 bytes
  6748 ;; Hardware stack levels used: 1
  6749 ;; This function calls:
  6750 ;;		Nothing
  6751 ;; This function is called by:
  6752 ;;		i2_putch
  6753 ;; This function uses a non-reentrant model
  6754 ;;
  6755                           
  6756                           	psect	text53
  6757   001714                     __ptext53:
  6758                           	callstack 0
  6759   001714                     i2_EUSART1_Write:
  6760                           	callstack 11
  6761                           
  6762                           ;incstack = 0
  6763                           ;i2EUSART1_Write@txData stored from wreg
  6764   001714  6E01               	movwf	i2EUSART1_Write@txData^0,c
  6765   001716                     i2l3204:
  6766                           
  6767                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
  6768   001716  0100               	movlb	0	; () banked
  6769   001718  51F0               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
  6770   00171A  B4D8               	btfsc	status,2,c
  6771   00171C  EF92  F00B         	goto	i2u251_41
  6772   001720  EF94  F00B         	goto	i2u251_40
  6773   001724                     i2u251_41:
  6774   001724  EF8B  F00B         	goto	i2l3204
  6775   001728                     i2u251_40:
  6776   001728                     
  6777                           ; BSR set to: 0
  6778                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE1bits.TX1IE)
  6779   001728  B89D               	btfsc	157,4,c	;volatile
  6780   00172A  EF99  F00B         	goto	i2u252_41
  6781   00172E  EF9B  F00B         	goto	i2u252_40
  6782   001732                     i2u252_41:
  6783   001732  EF9F  F00B         	goto	i2l249
  6784   001736                     i2u252_40:
  6785   001736                     
  6786                           ; BSR set to: 0
  6787                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          XREG1 = txData;
  6788   001736  C001  FFAD         	movff	i2EUSART1_Write@txData,4013	;volatile
  6789                           
  6790                           ;mcc_generated_files/eusart1.c: 182:     }
  6791   00173A  EFB4  F00B         	goto	i2l3218
  6792   00173E                     i2l249:
  6793                           
  6794                           ; BSR set to: 0
  6795                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE1bits.TX1IE = 0;
  6796   00173E  989D               	bcf	157,4,c	;volatile
  6797   001740                     
  6798                           ; BSR set to: 0
  6799                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
  6800   001740  0ECB               	movlw	low _eusart1TxBuffer
  6801   001742  25E8               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
  6802   001744  6ED9               	movwf	fsr2l,c
  6803   001746  6ADA               	clrf	fsr2h,c
  6804   001748  0E00               	movlw	high _eusart1TxBuffer
  6805   00174A  22DA               	addwfc	fsr2h,f,c
  6806   00174C  C001  FFDF         	movff	i2EUSART1_Write@txData,indf2
  6807   001750                     
  6808                           ; BSR set to: 0
  6809   001750  2BE8               	incf	_eusart1TxHead& (0+255),f,b	;volatile
  6810   001752                     
  6811                           ; BSR set to: 0
  6812                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
  6813   001752  0E07               	movlw	7
  6814   001754  65E8               	cpfsgt	_eusart1TxHead& (0+255),b	;volatile
  6815   001756  EFAF  F00B         	goto	i2u253_41
  6816   00175A  EFB1  F00B         	goto	i2u253_40
  6817   00175E                     i2u253_41:
  6818   00175E  EFB3  F00B         	goto	i2l3216
  6819   001762                     i2u253_40:
  6820   001762                     
  6821                           ; BSR set to: 0
  6822                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
  6823   001762  0E00               	movlw	0
  6824   001764  6FE8               	movwf	_eusart1TxHead& (0+255),b	;volatile
  6825   001766                     i2l3216:
  6826                           
  6827                           ; BSR set to: 0
  6828                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
  6829   001766  07F0               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  6830   001768                     i2l3218:
  6831                           
  6832                           ; BSR set to: 0
  6833                           ;mcc_generated_files/eusart1.c: 193:     PIE1bits.TX1IE = 1;
  6834   001768  889D               	bsf	157,4,c	;volatile
  6835   00176A                     
  6836                           ; BSR set to: 0
  6837   00176A  0012               	return		;funcret
  6838   00176C                     __end_ofi2_EUSART1_Write:
  6839                           	callstack 0
  6840                           
  6841 ;; *************** function i2_abs *****************
  6842 ;; Defined at:
  6843 ;;		line 1 in file "G:\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  6844 ;; Parameters:    Size  Location     Type
  6845 ;;  a               2   18[COMRAM] int 
  6846 ;; Auto vars:     Size  Location     Type
  6847 ;;		None
  6848 ;; Return value:  Size  Location     Type
  6849 ;;                  2   18[COMRAM] int 
  6850 ;; Registers used:
  6851 ;;		wreg, status,2, status,0
  6852 ;; Tracked objects:
  6853 ;;		On entry : 0/0
  6854 ;;		On exit  : 0/0
  6855 ;;		Unchanged: 0/0
  6856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6857 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6859 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6860 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6861 ;;Total ram usage:        4 bytes
  6862 ;; Hardware stack levels used: 1
  6863 ;; This function calls:
  6864 ;;		Nothing
  6865 ;; This function is called by:
  6866 ;;		i2_dtoa
  6867 ;; This function uses a non-reentrant model
  6868 ;;
  6869                           
  6870                           	psect	text54
  6871   0019F8                     __ptext54:
  6872                           	callstack 0
  6873   0019F8                     i2_abs:
  6874                           	callstack 12
  6875   0019F8  BE14               	btfsc	(i2abs@a+1)^0,7,c
  6876   0019FA  EF09  F00D         	goto	i2u281_40
  6877   0019FE  5014               	movf	(i2abs@a+1)^0,w,c
  6878   001A00  E106               	bnz	i2u281_41
  6879   001A02  0413               	decf	i2abs@a^0,w,c
  6880   001A04  B0D8               	btfsc	status,0,c
  6881   001A06  EF07  F00D         	goto	i2u281_41
  6882   001A0A  EF09  F00D         	goto	i2u281_40
  6883   001A0E                     i2u281_41:
  6884   001A0E  EF17  F00D         	goto	i2l1297
  6885   001A12                     i2u281_40:
  6886   001A12  C013  F015         	movff	i2abs@a,??i2_abs
  6887   001A16  C014  F016         	movff	i2abs@a+1,??i2_abs+1
  6888   001A1A  1E15               	comf	??i2_abs^0,f,c
  6889   001A1C  1E16               	comf	(??i2_abs+1)^0,f,c
  6890   001A1E  4A15               	infsnz	??i2_abs^0,f,c
  6891   001A20  2A16               	incf	(??i2_abs+1)^0,f,c
  6892   001A22  C015  F013         	movff	??i2_abs,?i2_abs
  6893   001A26  C016  F014         	movff	??i2_abs+1,?i2_abs+1
  6894   001A2A  EF1B  F00D         	goto	i2l1300
  6895   001A2E                     i2l1297:
  6896   001A2E  C013  F013         	movff	i2abs@a,?i2_abs
  6897   001A32  C014  F014         	movff	i2abs@a+1,?i2_abs+1
  6898   001A36                     i2l1300:
  6899   001A36  0012               	return		;funcret
  6900   001A38                     __end_ofi2_abs:
  6901                           	callstack 0
  6902                           
  6903 ;; *************** function i2___aomod *****************
  6904 ;; Defined at:
  6905 ;;		line 9 in file "G:\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  6906 ;; Parameters:    Size  Location     Type
  6907 ;;  dividend        8    0[COMRAM] long long 
  6908 ;;  divisor         8    8[COMRAM] long long 
  6909 ;; Auto vars:     Size  Location     Type
  6910 ;;  sign            1   17[COMRAM] unsigned char 
  6911 ;;  counter         1   16[COMRAM] unsigned char 
  6912 ;; Return value:  Size  Location     Type
  6913 ;;                  8    0[COMRAM] long long 
  6914 ;; Registers used:
  6915 ;;		wreg, status,2, status,0
  6916 ;; Tracked objects:
  6917 ;;		On entry : 0/0
  6918 ;;		On exit  : 0/0
  6919 ;;		Unchanged: 0/0
  6920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6921 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6922 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6924 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6925 ;;Total ram usage:       18 bytes
  6926 ;; Hardware stack levels used: 1
  6927 ;; This function calls:
  6928 ;;		Nothing
  6929 ;; This function is called by:
  6930 ;;		i2_dtoa
  6931 ;; This function uses a non-reentrant model
  6932 ;;
  6933                           
  6934                           	psect	text55
  6935   000C34                     __ptext55:
  6936                           	callstack 0
  6937   000C34                     i2___aomod:
  6938                           	callstack 12
  6939   000C34  0E00               	movlw	0
  6940   000C36  6E12               	movwf	i2___aomod@sign^0,c
  6941   000C38  BE08               	btfsc	(i2___aomod@dividend+7)^0,7,c
  6942   000C3A  EF23  F006         	goto	i2u273_40
  6943   000C3E  EF21  F006         	goto	i2u273_41
  6944   000C42                     i2u273_41:
  6945   000C42  EF35  F006         	goto	i2l3330
  6946   000C46                     i2u273_40:
  6947   000C46  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
  6948   000C48  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
  6949   000C4A  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
  6950   000C4C  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
  6951   000C4E  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
  6952   000C50  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
  6953   000C52  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
  6954   000C54  6C01               	negf	i2___aomod@dividend^0,c
  6955   000C56  0E00               	movlw	0
  6956   000C58  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
  6957   000C5A  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
  6958   000C5C  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
  6959   000C5E  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
  6960   000C60  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
  6961   000C62  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
  6962   000C64  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
  6963   000C66  0E01               	movlw	1
  6964   000C68  6E12               	movwf	i2___aomod@sign^0,c
  6965   000C6A                     i2l3330:
  6966   000C6A  BE10               	btfsc	(i2___aomod@divisor+7)^0,7,c
  6967   000C6C  EF3C  F006         	goto	i2u274_40
  6968   000C70  EF3A  F006         	goto	i2u274_41
  6969   000C74                     i2u274_41:
  6970   000C74  EF4C  F006         	goto	i2l3334
  6971   000C78                     i2u274_40:
  6972   000C78  1E10               	comf	(i2___aomod@divisor+7)^0,f,c
  6973   000C7A  1E0F               	comf	(i2___aomod@divisor+6)^0,f,c
  6974   000C7C  1E0E               	comf	(i2___aomod@divisor+5)^0,f,c
  6975   000C7E  1E0D               	comf	(i2___aomod@divisor+4)^0,f,c
  6976   000C80  1E0C               	comf	(i2___aomod@divisor+3)^0,f,c
  6977   000C82  1E0B               	comf	(i2___aomod@divisor+2)^0,f,c
  6978   000C84  1E0A               	comf	(i2___aomod@divisor+1)^0,f,c
  6979   000C86  6C09               	negf	i2___aomod@divisor^0,c
  6980   000C88  0E00               	movlw	0
  6981   000C8A  220A               	addwfc	(i2___aomod@divisor+1)^0,f,c
  6982   000C8C  220B               	addwfc	(i2___aomod@divisor+2)^0,f,c
  6983   000C8E  220C               	addwfc	(i2___aomod@divisor+3)^0,f,c
  6984   000C90  220D               	addwfc	(i2___aomod@divisor+4)^0,f,c
  6985   000C92  220E               	addwfc	(i2___aomod@divisor+5)^0,f,c
  6986   000C94  220F               	addwfc	(i2___aomod@divisor+6)^0,f,c
  6987   000C96  2210               	addwfc	(i2___aomod@divisor+7)^0,f,c
  6988   000C98                     i2l3334:
  6989   000C98  5009               	movf	i2___aomod@divisor^0,w,c
  6990   000C9A  100A               	iorwf	(i2___aomod@divisor+1)^0,w,c
  6991   000C9C  100B               	iorwf	(i2___aomod@divisor+2)^0,w,c
  6992   000C9E  100C               	iorwf	(i2___aomod@divisor+3)^0,w,c
  6993   000CA0  100D               	iorwf	(i2___aomod@divisor+4)^0,w,c
  6994   000CA2  100E               	iorwf	(i2___aomod@divisor+5)^0,w,c
  6995   000CA4  100F               	iorwf	(i2___aomod@divisor+6)^0,w,c
  6996   000CA6  1010               	iorwf	(i2___aomod@divisor+7)^0,w,c
  6997   000CA8  B4D8               	btfsc	status,2,c
  6998   000CAA  EF59  F006         	goto	i2u275_41
  6999   000CAE  EF5B  F006         	goto	i2u275_40
  7000   000CB2                     i2u275_41:
  7001   000CB2  EFA3  F006         	goto	i2l3350
  7002   000CB6                     i2u275_40:
  7003   000CB6  0E01               	movlw	1
  7004   000CB8  6E11               	movwf	i2___aomod@counter^0,c
  7005   000CBA  EF69  F006         	goto	i2l3340
  7006   000CBE                     i2l3338:
  7007   000CBE  90D8               	bcf	status,0,c
  7008   000CC0  3609               	rlcf	i2___aomod@divisor^0,f,c
  7009   000CC2  360A               	rlcf	(i2___aomod@divisor+1)^0,f,c
  7010   000CC4  360B               	rlcf	(i2___aomod@divisor+2)^0,f,c
  7011   000CC6  360C               	rlcf	(i2___aomod@divisor+3)^0,f,c
  7012   000CC8  360D               	rlcf	(i2___aomod@divisor+4)^0,f,c
  7013   000CCA  360E               	rlcf	(i2___aomod@divisor+5)^0,f,c
  7014   000CCC  360F               	rlcf	(i2___aomod@divisor+6)^0,f,c
  7015   000CCE  3610               	rlcf	(i2___aomod@divisor+7)^0,f,c
  7016   000CD0  2A11               	incf	i2___aomod@counter^0,f,c
  7017   000CD2                     i2l3340:
  7018   000CD2  AE10               	btfss	(i2___aomod@divisor+7)^0,7,c
  7019   000CD4  EF6E  F006         	goto	i2u276_41
  7020   000CD8  EF70  F006         	goto	i2u276_40
  7021   000CDC                     i2u276_41:
  7022   000CDC  EF5F  F006         	goto	i2l3338
  7023   000CE0                     i2u276_40:
  7024   000CE0                     i2l3342:
  7025   000CE0  5009               	movf	i2___aomod@divisor^0,w,c
  7026   000CE2  5C01               	subwf	i2___aomod@dividend^0,w,c
  7027   000CE4  500A               	movf	(i2___aomod@divisor+1)^0,w,c
  7028   000CE6  5802               	subwfb	(i2___aomod@dividend+1)^0,w,c
  7029   000CE8  500B               	movf	(i2___aomod@divisor+2)^0,w,c
  7030   000CEA  5803               	subwfb	(i2___aomod@dividend+2)^0,w,c
  7031   000CEC  500C               	movf	(i2___aomod@divisor+3)^0,w,c
  7032   000CEE  5804               	subwfb	(i2___aomod@dividend+3)^0,w,c
  7033   000CF0  500D               	movf	(i2___aomod@divisor+4)^0,w,c
  7034   000CF2  5805               	subwfb	(i2___aomod@dividend+4)^0,w,c
  7035   000CF4  500E               	movf	(i2___aomod@divisor+5)^0,w,c
  7036   000CF6  5806               	subwfb	(i2___aomod@dividend+5)^0,w,c
  7037   000CF8  500F               	movf	(i2___aomod@divisor+6)^0,w,c
  7038   000CFA  5807               	subwfb	(i2___aomod@dividend+6)^0,w,c
  7039   000CFC  5010               	movf	(i2___aomod@divisor+7)^0,w,c
  7040   000CFE  5808               	subwfb	(i2___aomod@dividend+7)^0,w,c
  7041   000D00  A0D8               	btfss	status,0,c
  7042   000D02  EF85  F006         	goto	i2u277_41
  7043   000D06  EF87  F006         	goto	i2u277_40
  7044   000D0A                     i2u277_41:
  7045   000D0A  EF97  F006         	goto	i2l3346
  7046   000D0E                     i2u277_40:
  7047   000D0E  5009               	movf	i2___aomod@divisor^0,w,c
  7048   000D10  5E01               	subwf	i2___aomod@dividend^0,f,c
  7049   000D12  500A               	movf	(i2___aomod@divisor+1)^0,w,c
  7050   000D14  5A02               	subwfb	(i2___aomod@dividend+1)^0,f,c
  7051   000D16  500B               	movf	(i2___aomod@divisor+2)^0,w,c
  7052   000D18  5A03               	subwfb	(i2___aomod@dividend+2)^0,f,c
  7053   000D1A  500C               	movf	(i2___aomod@divisor+3)^0,w,c
  7054   000D1C  5A04               	subwfb	(i2___aomod@dividend+3)^0,f,c
  7055   000D1E  500D               	movf	(i2___aomod@divisor+4)^0,w,c
  7056   000D20  5A05               	subwfb	(i2___aomod@dividend+4)^0,f,c
  7057   000D22  500E               	movf	(i2___aomod@divisor+5)^0,w,c
  7058   000D24  5A06               	subwfb	(i2___aomod@dividend+5)^0,f,c
  7059   000D26  500F               	movf	(i2___aomod@divisor+6)^0,w,c
  7060   000D28  5A07               	subwfb	(i2___aomod@dividend+6)^0,f,c
  7061   000D2A  5010               	movf	(i2___aomod@divisor+7)^0,w,c
  7062   000D2C  5A08               	subwfb	(i2___aomod@dividend+7)^0,f,c
  7063   000D2E                     i2l3346:
  7064   000D2E  90D8               	bcf	status,0,c
  7065   000D30  3210               	rrcf	(i2___aomod@divisor+7)^0,f,c
  7066   000D32  320F               	rrcf	(i2___aomod@divisor+6)^0,f,c
  7067   000D34  320E               	rrcf	(i2___aomod@divisor+5)^0,f,c
  7068   000D36  320D               	rrcf	(i2___aomod@divisor+4)^0,f,c
  7069   000D38  320C               	rrcf	(i2___aomod@divisor+3)^0,f,c
  7070   000D3A  320B               	rrcf	(i2___aomod@divisor+2)^0,f,c
  7071   000D3C  320A               	rrcf	(i2___aomod@divisor+1)^0,f,c
  7072   000D3E  3209               	rrcf	i2___aomod@divisor^0,f,c
  7073   000D40  2E11               	decfsz	i2___aomod@counter^0,f,c
  7074   000D42  EF70  F006         	goto	i2l3342
  7075   000D46                     i2l3350:
  7076   000D46  5012               	movf	i2___aomod@sign^0,w,c
  7077   000D48  B4D8               	btfsc	status,2,c
  7078   000D4A  EFA9  F006         	goto	i2u278_41
  7079   000D4E  EFAB  F006         	goto	i2u278_40
  7080   000D52                     i2u278_41:
  7081   000D52  EFBB  F006         	goto	i2l3354
  7082   000D56                     i2u278_40:
  7083   000D56  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
  7084   000D58  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
  7085   000D5A  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
  7086   000D5C  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
  7087   000D5E  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
  7088   000D60  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
  7089   000D62  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
  7090   000D64  6C01               	negf	i2___aomod@dividend^0,c
  7091   000D66  0E00               	movlw	0
  7092   000D68  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
  7093   000D6A  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
  7094   000D6C  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
  7095   000D6E  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
  7096   000D70  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
  7097   000D72  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
  7098   000D74  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
  7099   000D76                     i2l3354:
  7100   000D76  C001  F001         	movff	i2___aomod@dividend,?i2___aomod
  7101   000D7A  C002  F002         	movff	i2___aomod@dividend+1,?i2___aomod+1
  7102   000D7E  C003  F003         	movff	i2___aomod@dividend+2,?i2___aomod+2
  7103   000D82  C004  F004         	movff	i2___aomod@dividend+3,?i2___aomod+3
  7104   000D86  C005  F005         	movff	i2___aomod@dividend+4,?i2___aomod+4
  7105   000D8A  C006  F006         	movff	i2___aomod@dividend+5,?i2___aomod+5
  7106   000D8E  C007  F007         	movff	i2___aomod@dividend+6,?i2___aomod+6
  7107   000D92  C008  F008         	movff	i2___aomod@dividend+7,?i2___aomod+7
  7108   000D96  0012               	return		;funcret
  7109   000D98                     __end_ofi2___aomod:
  7110                           	callstack 0
  7111                           
  7112 ;; *************** function i2___aodiv *****************
  7113 ;; Defined at:
  7114 ;;		line 9 in file "G:\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  7115 ;; Parameters:    Size  Location     Type
  7116 ;;  dividend        8    0[COMRAM] long long 
  7117 ;;  divisor         8    8[COMRAM] long long 
  7118 ;; Auto vars:     Size  Location     Type
  7119 ;;  quotient        8   18[COMRAM] long long 
  7120 ;;  sign            1   17[COMRAM] unsigned char 
  7121 ;;  counter         1   16[COMRAM] unsigned char 
  7122 ;; Return value:  Size  Location     Type
  7123 ;;                  8    0[COMRAM] long long 
  7124 ;; Registers used:
  7125 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7126 ;; Tracked objects:
  7127 ;;		On entry : 0/0
  7128 ;;		On exit  : 0/0
  7129 ;;		Unchanged: 0/0
  7130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7131 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7132 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7134 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7135 ;;Total ram usage:       26 bytes
  7136 ;; Hardware stack levels used: 1
  7137 ;; This function calls:
  7138 ;;		Nothing
  7139 ;; This function is called by:
  7140 ;;		i2_dtoa
  7141 ;; This function uses a non-reentrant model
  7142 ;;
  7143                           
  7144                           	psect	text56
  7145   0007CC                     __ptext56:
  7146                           	callstack 0
  7147   0007CC                     i2___aodiv:
  7148                           	callstack 12
  7149   0007CC  0E00               	movlw	0
  7150   0007CE  6E12               	movwf	i2___aodiv@sign^0,c
  7151   0007D0  BE10               	btfsc	(i2___aodiv@divisor+7)^0,7,c
  7152   0007D2  EFEF  F003         	goto	i2u266_40
  7153   0007D6  EFED  F003         	goto	i2u266_41
  7154   0007DA                     i2u266_41:
  7155   0007DA  EF01  F004         	goto	i2l3286
  7156   0007DE                     i2u266_40:
  7157   0007DE  1E10               	comf	(i2___aodiv@divisor+7)^0,f,c
  7158   0007E0  1E0F               	comf	(i2___aodiv@divisor+6)^0,f,c
  7159   0007E2  1E0E               	comf	(i2___aodiv@divisor+5)^0,f,c
  7160   0007E4  1E0D               	comf	(i2___aodiv@divisor+4)^0,f,c
  7161   0007E6  1E0C               	comf	(i2___aodiv@divisor+3)^0,f,c
  7162   0007E8  1E0B               	comf	(i2___aodiv@divisor+2)^0,f,c
  7163   0007EA  1E0A               	comf	(i2___aodiv@divisor+1)^0,f,c
  7164   0007EC  6C09               	negf	i2___aodiv@divisor^0,c
  7165   0007EE  0E00               	movlw	0
  7166   0007F0  220A               	addwfc	(i2___aodiv@divisor+1)^0,f,c
  7167   0007F2  220B               	addwfc	(i2___aodiv@divisor+2)^0,f,c
  7168   0007F4  220C               	addwfc	(i2___aodiv@divisor+3)^0,f,c
  7169   0007F6  220D               	addwfc	(i2___aodiv@divisor+4)^0,f,c
  7170   0007F8  220E               	addwfc	(i2___aodiv@divisor+5)^0,f,c
  7171   0007FA  220F               	addwfc	(i2___aodiv@divisor+6)^0,f,c
  7172   0007FC  2210               	addwfc	(i2___aodiv@divisor+7)^0,f,c
  7173   0007FE  0E01               	movlw	1
  7174   000800  6E12               	movwf	i2___aodiv@sign^0,c
  7175   000802                     i2l3286:
  7176   000802  BE08               	btfsc	(i2___aodiv@dividend+7)^0,7,c
  7177   000804  EF08  F004         	goto	i2u267_40
  7178   000808  EF06  F004         	goto	i2u267_41
  7179   00080C                     i2u267_41:
  7180   00080C  EF1A  F004         	goto	i2l3292
  7181   000810                     i2u267_40:
  7182   000810  1E08               	comf	(i2___aodiv@dividend+7)^0,f,c
  7183   000812  1E07               	comf	(i2___aodiv@dividend+6)^0,f,c
  7184   000814  1E06               	comf	(i2___aodiv@dividend+5)^0,f,c
  7185   000816  1E05               	comf	(i2___aodiv@dividend+4)^0,f,c
  7186   000818  1E04               	comf	(i2___aodiv@dividend+3)^0,f,c
  7187   00081A  1E03               	comf	(i2___aodiv@dividend+2)^0,f,c
  7188   00081C  1E02               	comf	(i2___aodiv@dividend+1)^0,f,c
  7189   00081E  6C01               	negf	i2___aodiv@dividend^0,c
  7190   000820  0E00               	movlw	0
  7191   000822  2202               	addwfc	(i2___aodiv@dividend+1)^0,f,c
  7192   000824  2203               	addwfc	(i2___aodiv@dividend+2)^0,f,c
  7193   000826  2204               	addwfc	(i2___aodiv@dividend+3)^0,f,c
  7194   000828  2205               	addwfc	(i2___aodiv@dividend+4)^0,f,c
  7195   00082A  2206               	addwfc	(i2___aodiv@dividend+5)^0,f,c
  7196   00082C  2207               	addwfc	(i2___aodiv@dividend+6)^0,f,c
  7197   00082E  2208               	addwfc	(i2___aodiv@dividend+7)^0,f,c
  7198   000830  0E01               	movlw	1
  7199   000832  1A12               	xorwf	i2___aodiv@sign^0,f,c
  7200   000834                     i2l3292:
  7201   000834  EE20  F013         	lfsr	2,i2___aodiv@quotient
  7202   000838  0E07               	movlw	7
  7203   00083A                     i2u268_41:
  7204   00083A  6ADE               	clrf	postinc2,c
  7205   00083C  06E8               	decf	wreg,f,c
  7206   00083E  E2FD               	bc	i2u268_41
  7207   000840  5009               	movf	i2___aodiv@divisor^0,w,c
  7208   000842  100A               	iorwf	(i2___aodiv@divisor+1)^0,w,c
  7209   000844  100B               	iorwf	(i2___aodiv@divisor+2)^0,w,c
  7210   000846  100C               	iorwf	(i2___aodiv@divisor+3)^0,w,c
  7211   000848  100D               	iorwf	(i2___aodiv@divisor+4)^0,w,c
  7212   00084A  100E               	iorwf	(i2___aodiv@divisor+5)^0,w,c
  7213   00084C  100F               	iorwf	(i2___aodiv@divisor+6)^0,w,c
  7214   00084E  1010               	iorwf	(i2___aodiv@divisor+7)^0,w,c
  7215   000850  B4D8               	btfsc	status,2,c
  7216   000852  EF2D  F004         	goto	i2u269_41
  7217   000856  EF2F  F004         	goto	i2u269_40
  7218   00085A                     i2u269_41:
  7219   00085A  EF81  F004         	goto	i2l3314
  7220   00085E                     i2u269_40:
  7221   00085E  0E01               	movlw	1
  7222   000860  6E11               	movwf	i2___aodiv@counter^0,c
  7223   000862  EF3D  F004         	goto	i2l3300
  7224   000866                     i2l3298:
  7225   000866  90D8               	bcf	status,0,c
  7226   000868  3609               	rlcf	i2___aodiv@divisor^0,f,c
  7227   00086A  360A               	rlcf	(i2___aodiv@divisor+1)^0,f,c
  7228   00086C  360B               	rlcf	(i2___aodiv@divisor+2)^0,f,c
  7229   00086E  360C               	rlcf	(i2___aodiv@divisor+3)^0,f,c
  7230   000870  360D               	rlcf	(i2___aodiv@divisor+4)^0,f,c
  7231   000872  360E               	rlcf	(i2___aodiv@divisor+5)^0,f,c
  7232   000874  360F               	rlcf	(i2___aodiv@divisor+6)^0,f,c
  7233   000876  3610               	rlcf	(i2___aodiv@divisor+7)^0,f,c
  7234   000878  2A11               	incf	i2___aodiv@counter^0,f,c
  7235   00087A                     i2l3300:
  7236   00087A  AE10               	btfss	(i2___aodiv@divisor+7)^0,7,c
  7237   00087C  EF42  F004         	goto	i2u270_41
  7238   000880  EF44  F004         	goto	i2u270_40
  7239   000884                     i2u270_41:
  7240   000884  EF33  F004         	goto	i2l3298
  7241   000888                     i2u270_40:
  7242   000888                     i2l3302:
  7243   000888  90D8               	bcf	status,0,c
  7244   00088A  3613               	rlcf	i2___aodiv@quotient^0,f,c
  7245   00088C  3614               	rlcf	(i2___aodiv@quotient+1)^0,f,c
  7246   00088E  3615               	rlcf	(i2___aodiv@quotient+2)^0,f,c
  7247   000890  3616               	rlcf	(i2___aodiv@quotient+3)^0,f,c
  7248   000892  3617               	rlcf	(i2___aodiv@quotient+4)^0,f,c
  7249   000894  3618               	rlcf	(i2___aodiv@quotient+5)^0,f,c
  7250   000896  3619               	rlcf	(i2___aodiv@quotient+6)^0,f,c
  7251   000898  361A               	rlcf	(i2___aodiv@quotient+7)^0,f,c
  7252   00089A  5009               	movf	i2___aodiv@divisor^0,w,c
  7253   00089C  5C01               	subwf	i2___aodiv@dividend^0,w,c
  7254   00089E  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
  7255   0008A0  5802               	subwfb	(i2___aodiv@dividend+1)^0,w,c
  7256   0008A2  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
  7257   0008A4  5803               	subwfb	(i2___aodiv@dividend+2)^0,w,c
  7258   0008A6  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
  7259   0008A8  5804               	subwfb	(i2___aodiv@dividend+3)^0,w,c
  7260   0008AA  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
  7261   0008AC  5805               	subwfb	(i2___aodiv@dividend+4)^0,w,c
  7262   0008AE  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
  7263   0008B0  5806               	subwfb	(i2___aodiv@dividend+5)^0,w,c
  7264   0008B2  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
  7265   0008B4  5807               	subwfb	(i2___aodiv@dividend+6)^0,w,c
  7266   0008B6  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
  7267   0008B8  5808               	subwfb	(i2___aodiv@dividend+7)^0,w,c
  7268   0008BA  A0D8               	btfss	status,0,c
  7269   0008BC  EF62  F004         	goto	i2u271_41
  7270   0008C0  EF64  F004         	goto	i2u271_40
  7271   0008C4                     i2u271_41:
  7272   0008C4  EF75  F004         	goto	i2l3310
  7273   0008C8                     i2u271_40:
  7274   0008C8  5009               	movf	i2___aodiv@divisor^0,w,c
  7275   0008CA  5E01               	subwf	i2___aodiv@dividend^0,f,c
  7276   0008CC  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
  7277   0008CE  5A02               	subwfb	(i2___aodiv@dividend+1)^0,f,c
  7278   0008D0  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
  7279   0008D2  5A03               	subwfb	(i2___aodiv@dividend+2)^0,f,c
  7280   0008D4  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
  7281   0008D6  5A04               	subwfb	(i2___aodiv@dividend+3)^0,f,c
  7282   0008D8  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
  7283   0008DA  5A05               	subwfb	(i2___aodiv@dividend+4)^0,f,c
  7284   0008DC  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
  7285   0008DE  5A06               	subwfb	(i2___aodiv@dividend+5)^0,f,c
  7286   0008E0  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
  7287   0008E2  5A07               	subwfb	(i2___aodiv@dividend+6)^0,f,c
  7288   0008E4  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
  7289   0008E6  5A08               	subwfb	(i2___aodiv@dividend+7)^0,f,c
  7290   0008E8  8013               	bsf	i2___aodiv@quotient^0,0,c
  7291   0008EA                     i2l3310:
  7292   0008EA  90D8               	bcf	status,0,c
  7293   0008EC  3210               	rrcf	(i2___aodiv@divisor+7)^0,f,c
  7294   0008EE  320F               	rrcf	(i2___aodiv@divisor+6)^0,f,c
  7295   0008F0  320E               	rrcf	(i2___aodiv@divisor+5)^0,f,c
  7296   0008F2  320D               	rrcf	(i2___aodiv@divisor+4)^0,f,c
  7297   0008F4  320C               	rrcf	(i2___aodiv@divisor+3)^0,f,c
  7298   0008F6  320B               	rrcf	(i2___aodiv@divisor+2)^0,f,c
  7299   0008F8  320A               	rrcf	(i2___aodiv@divisor+1)^0,f,c
  7300   0008FA  3209               	rrcf	i2___aodiv@divisor^0,f,c
  7301   0008FC  2E11               	decfsz	i2___aodiv@counter^0,f,c
  7302   0008FE  EF44  F004         	goto	i2l3302
  7303   000902                     i2l3314:
  7304   000902  5012               	movf	i2___aodiv@sign^0,w,c
  7305   000904  B4D8               	btfsc	status,2,c
  7306   000906  EF87  F004         	goto	i2u272_41
  7307   00090A  EF89  F004         	goto	i2u272_40
  7308   00090E                     i2u272_41:
  7309   00090E  EF99  F004         	goto	i2l3318
  7310   000912                     i2u272_40:
  7311   000912  1E1A               	comf	(i2___aodiv@quotient+7)^0,f,c
  7312   000914  1E19               	comf	(i2___aodiv@quotient+6)^0,f,c
  7313   000916  1E18               	comf	(i2___aodiv@quotient+5)^0,f,c
  7314   000918  1E17               	comf	(i2___aodiv@quotient+4)^0,f,c
  7315   00091A  1E16               	comf	(i2___aodiv@quotient+3)^0,f,c
  7316   00091C  1E15               	comf	(i2___aodiv@quotient+2)^0,f,c
  7317   00091E  1E14               	comf	(i2___aodiv@quotient+1)^0,f,c
  7318   000920  6C13               	negf	i2___aodiv@quotient^0,c
  7319   000922  0E00               	movlw	0
  7320   000924  2214               	addwfc	(i2___aodiv@quotient+1)^0,f,c
  7321   000926  2215               	addwfc	(i2___aodiv@quotient+2)^0,f,c
  7322   000928  2216               	addwfc	(i2___aodiv@quotient+3)^0,f,c
  7323   00092A  2217               	addwfc	(i2___aodiv@quotient+4)^0,f,c
  7324   00092C  2218               	addwfc	(i2___aodiv@quotient+5)^0,f,c
  7325   00092E  2219               	addwfc	(i2___aodiv@quotient+6)^0,f,c
  7326   000930  221A               	addwfc	(i2___aodiv@quotient+7)^0,f,c
  7327   000932                     i2l3318:
  7328   000932  C013  F001         	movff	i2___aodiv@quotient,?i2___aodiv
  7329   000936  C014  F002         	movff	i2___aodiv@quotient+1,?i2___aodiv+1
  7330   00093A  C015  F003         	movff	i2___aodiv@quotient+2,?i2___aodiv+2
  7331   00093E  C016  F004         	movff	i2___aodiv@quotient+3,?i2___aodiv+3
  7332   000942  C017  F005         	movff	i2___aodiv@quotient+4,?i2___aodiv+4
  7333   000946  C018  F006         	movff	i2___aodiv@quotient+5,?i2___aodiv+5
  7334   00094A  C019  F007         	movff	i2___aodiv@quotient+6,?i2___aodiv+6
  7335   00094E  C01A  F008         	movff	i2___aodiv@quotient+7,?i2___aodiv+7
  7336   000952  0012               	return		;funcret
  7337   000954                     __end_ofi2___aodiv:
  7338                           	callstack 0
  7339                           
  7340 ;; *************** function _EUSART1_Transmit_ISR *****************
  7341 ;; Defined at:
  7342 ;;		line 206 in file "mcc_generated_files/eusart1.c"
  7343 ;; Parameters:    Size  Location     Type
  7344 ;;		None
  7345 ;; Auto vars:     Size  Location     Type
  7346 ;;		None
  7347 ;; Return value:  Size  Location     Type
  7348 ;;                  1    wreg      void 
  7349 ;; Registers used:
  7350 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7351 ;; Tracked objects:
  7352 ;;		On entry : 0/0
  7353 ;;		On exit  : 0/0
  7354 ;;		Unchanged: 0/0
  7355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7360 ;;Total ram usage:        0 bytes
  7361 ;; Hardware stack levels used: 1
  7362 ;; This function calls:
  7363 ;;		Nothing
  7364 ;; This function is called by:
  7365 ;;		_EUSART1_Initialize
  7366 ;;		_INTERRUPT_InterruptManagerHigh
  7367 ;; This function uses a non-reentrant model
  7368 ;;
  7369                           
  7370                           	psect	text57
  7371   0019B6                     __ptext57:
  7372                           	callstack 0
  7373   0019B6                     _EUSART1_Transmit_ISR:
  7374                           	callstack 19
  7375   0019B6                     
  7376                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  7377   0019B6  0E08               	movlw	8
  7378   0019B8  0100               	movlb	0	; () banked
  7379   0019BA  61F0               	cpfslt	_eusart1TxBufferRemaining& (0+255),b	;volatile
  7380   0019BC  EFE2  F00C         	goto	i2u224_41
  7381   0019C0  EFE4  F00C         	goto	i2u224_40
  7382   0019C4                     i2u224_41:
  7383   0019C4  EFFA  F00C         	goto	i2l261
  7384   0019C8                     i2u224_40:
  7385   0019C8                     
  7386                           ; BSR set to: 0
  7387                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          XREG1 = eusart1TxBuffer[eusart1TxTail++];
  7388   0019C8  0ECB               	movlw	low _eusart1TxBuffer
  7389   0019CA  25E7               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
  7390   0019CC  6ED9               	movwf	fsr2l,c
  7391   0019CE  6ADA               	clrf	fsr2h,c
  7392   0019D0  0E00               	movlw	high _eusart1TxBuffer
  7393   0019D2  22DA               	addwfc	fsr2h,f,c
  7394   0019D4  50DF               	movf	indf2,w,c
  7395   0019D6  6EAD               	movwf	173,c	;volatile
  7396   0019D8                     
  7397                           ; BSR set to: 0
  7398   0019D8  2BE7               	incf	_eusart1TxTail& (0+255),f,b	;volatile
  7399   0019DA                     
  7400                           ; BSR set to: 0
  7401                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  7402   0019DA  0E07               	movlw	7
  7403   0019DC  65E7               	cpfsgt	_eusart1TxTail& (0+255),b	;volatile
  7404   0019DE  EFF3  F00C         	goto	i2u225_41
  7405   0019E2  EFF5  F00C         	goto	i2u225_40
  7406   0019E6                     i2u225_41:
  7407   0019E6  EFF7  F00C         	goto	i2l2998
  7408   0019EA                     i2u225_40:
  7409   0019EA                     
  7410                           ; BSR set to: 0
  7411                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
  7412   0019EA  0E00               	movlw	0
  7413   0019EC  6FE7               	movwf	_eusart1TxTail& (0+255),b	;volatile
  7414   0019EE                     i2l2998:
  7415                           
  7416                           ; BSR set to: 0
  7417                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
  7418   0019EE  2BF0               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  7419                           
  7420                           ;mcc_generated_files/eusart1.c: 218:     }
  7421   0019F0  EFFB  F00C         	goto	i2l264
  7422   0019F4                     i2l261:
  7423                           
  7424                           ; BSR set to: 0
  7425                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE1bits.TX1IE = 0;
  7426   0019F4  989D               	bcf	157,4,c	;volatile
  7427   0019F6                     i2l264:
  7428                           
  7429                           ; BSR set to: 0
  7430   0019F6  0012               	return		;funcret
  7431   0019F8                     __end_of_EUSART1_Transmit_ISR:
  7432                           	callstack 0
  7433                           
  7434 ;; *************** function _EUSART1_Receive_ISR *****************
  7435 ;; Defined at:
  7436 ;;		line 225 in file "mcc_generated_files/eusart1.c"
  7437 ;; Parameters:    Size  Location     Type
  7438 ;;		None
  7439 ;; Auto vars:     Size  Location     Type
  7440 ;;		None
  7441 ;; Return value:  Size  Location     Type
  7442 ;;                  1    wreg      void 
  7443 ;; Registers used:
  7444 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7445 ;; Tracked objects:
  7446 ;;		On entry : 0/0
  7447 ;;		On exit  : 0/0
  7448 ;;		Unchanged: 0/0
  7449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7454 ;;Total ram usage:        0 bytes
  7455 ;; Hardware stack levels used: 1
  7456 ;; Hardware stack levels required when called: 2
  7457 ;; This function calls:
  7458 ;;		Absolute function
  7459 ;;		_EUSART1_DefaultErrorHandler
  7460 ;;		_EUSART1_DefaultFramingErrorHandler
  7461 ;;		_EUSART1_DefaultOverrunErrorHandler
  7462 ;;		_EUSART1_RxDataHandler
  7463 ;; This function is called by:
  7464 ;;		_EUSART1_Initialize
  7465 ;;		_INTERRUPT_InterruptManagerHigh
  7466 ;; This function uses a non-reentrant model
  7467 ;;
  7468                           
  7469                           	psect	text58
  7470   001152                     __ptext58:
  7471                           	callstack 0
  7472   001152                     _EUSART1_Receive_ISR:
  7473                           	callstack 17
  7474   001152                     
  7475                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  7476   001152  0EC3               	movlw	low _eusart1RxStatusBuffer
  7477   001154  0100               	movlb	0	; () banked
  7478   001156  25E6               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
  7479   001158  6ED9               	movwf	fsr2l,c
  7480   00115A  6ADA               	clrf	fsr2h,c
  7481   00115C  0E00               	movlw	high _eusart1RxStatusBuffer
  7482   00115E  22DA               	addwfc	fsr2h,f,c
  7483   001160  0E00               	movlw	0
  7484   001162  6EDF               	movwf	indf2,c
  7485   001164                     
  7486                           ; BSR set to: 0
  7487                           ;mcc_generated_files/eusart1.c: 230:     if(RCSTA1bits.FERR){
  7488   001164  A4AB               	btfss	171,2,c	;volatile
  7489   001166  EFB7  F008         	goto	i2u226_41
  7490   00116A  EFB9  F008         	goto	i2u226_40
  7491   00116E                     i2u226_41:
  7492   00116E  EFCD  F008         	goto	i2l3008
  7493   001172                     i2u226_40:
  7494   001172                     
  7495                           ; BSR set to: 0
  7496                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  7497   001172  0EC3               	movlw	low _eusart1RxStatusBuffer
  7498   001174  25E6               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
  7499   001176  6ED9               	movwf	fsr2l,c
  7500   001178  6ADA               	clrf	fsr2h,c
  7501   00117A  0E00               	movlw	high _eusart1RxStatusBuffer
  7502   00117C  22DA               	addwfc	fsr2h,f,c
  7503   00117E  82DF               	bsf	indf2,1,c
  7504   001180                     
  7505                           ; BSR set to: 0
  7506                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
  7507   001180  D802               	call	i2u227_48
  7508   001182  EFCD  F008         	goto	i2u227_49
  7509   001186                     i2u227_48:
  7510   001186  0005               	push	
  7511   001188  6EFA               	movwf	pclath,c
  7512   00118A  0101               	movlb	1	; () banked
  7513   00118C  512C               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
  7514   00118E  6EFD               	movwf	tosl,c
  7515   001190  512D               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
  7516   001192  6EFE               	movwf	tosh,c
  7517   001194  6AFF               	clrf	tosu,c
  7518   001196  50FA               	movf	pclath,w,c
  7519   001198  0012               	return		;indir
  7520   00119A                     i2u227_49:
  7521   00119A                     i2l3008:
  7522                           
  7523                           ;mcc_generated_files/eusart1.c: 235:     if(RCSTA1bits.OERR){
  7524   00119A  A2AB               	btfss	171,1,c	;volatile
  7525   00119C  EFD2  F008         	goto	i2u228_41
  7526   0011A0  EFD4  F008         	goto	i2u228_40
  7527   0011A4                     i2u228_41:
  7528   0011A4  EFE9  F008         	goto	i2l3014
  7529   0011A8                     i2u228_40:
  7530   0011A8                     
  7531                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  7532   0011A8  0EC3               	movlw	low _eusart1RxStatusBuffer
  7533   0011AA  0100               	movlb	0	; () banked
  7534   0011AC  25E6               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
  7535   0011AE  6ED9               	movwf	fsr2l,c
  7536   0011B0  6ADA               	clrf	fsr2h,c
  7537   0011B2  0E00               	movlw	high _eusart1RxStatusBuffer
  7538   0011B4  22DA               	addwfc	fsr2h,f,c
  7539   0011B6  84DF               	bsf	indf2,2,c
  7540   0011B8                     
  7541                           ; BSR set to: 0
  7542                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
  7543   0011B8  D802               	call	i2u229_48
  7544   0011BA  EFE9  F008         	goto	i2u229_49
  7545   0011BE                     i2u229_48:
  7546   0011BE  0005               	push	
  7547   0011C0  6EFA               	movwf	pclath,c
  7548   0011C2  0101               	movlb	1	; () banked
  7549   0011C4  512A               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
  7550   0011C6  6EFD               	movwf	tosl,c
  7551   0011C8  512B               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
  7552   0011CA  6EFE               	movwf	tosh,c
  7553   0011CC  6AFF               	clrf	tosu,c
  7554   0011CE  50FA               	movf	pclath,w,c
  7555   0011D0  0012               	return		;indir
  7556   0011D2                     i2u229_49:
  7557   0011D2                     i2l3014:
  7558                           
  7559                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  7560   0011D2  0EC3               	movlw	low _eusart1RxStatusBuffer
  7561   0011D4  0100               	movlb	0	; () banked
  7562   0011D6  25E6               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
  7563   0011D8  6ED9               	movwf	fsr2l,c
  7564   0011DA  6ADA               	clrf	fsr2h,c
  7565   0011DC  0E00               	movlw	high _eusart1RxStatusBuffer
  7566   0011DE  22DA               	addwfc	fsr2h,f,c
  7567   0011E0  50DF               	movf	indf2,w,c
  7568   0011E2  B4D8               	btfsc	status,2,c
  7569   0011E4  EFF6  F008         	goto	i2u230_41
  7570   0011E8  EFF8  F008         	goto	i2u230_40
  7571   0011EC                     i2u230_41:
  7572   0011EC  EF07  F009         	goto	i2l3018
  7573   0011F0                     i2u230_40:
  7574   0011F0                     
  7575                           ; BSR set to: 0
  7576                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
  7577   0011F0  D802               	call	i2u231_48
  7578   0011F2  EF05  F009         	goto	i2u231_49
  7579   0011F6                     i2u231_48:
  7580   0011F6  0005               	push	
  7581   0011F8  6EFA               	movwf	pclath,c
  7582   0011FA  0101               	movlb	1	; () banked
  7583   0011FC  5128               	movf	_EUSART1_ErrorHandler& (0+255),w,b
  7584   0011FE  6EFD               	movwf	tosl,c
  7585   001200  5129               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
  7586   001202  6EFE               	movwf	tosh,c
  7587   001204  6AFF               	clrf	tosu,c
  7588   001206  50FA               	movf	pclath,w,c
  7589   001208  0012               	return		;indir
  7590   00120A                     i2u231_49:
  7591                           
  7592                           ;mcc_generated_files/eusart1.c: 242:     } else {
  7593   00120A  EF09  F009         	goto	i2l271
  7594   00120E                     i2l3018:
  7595                           
  7596                           ; BSR set to: 0
  7597                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
  7598   00120E  EC65  F00D         	call	_EUSART1_RxDataHandler	;wreg free
  7599   001212                     i2l271:
  7600   001212  0012               	return		;funcret
  7601   001214                     __end_of_EUSART1_Receive_ISR:
  7602                           	callstack 0
  7603                           
  7604 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  7605 ;; Defined at:
  7606 ;;		line 261 in file "mcc_generated_files/eusart1.c"
  7607 ;; Parameters:    Size  Location     Type
  7608 ;;		None
  7609 ;; Auto vars:     Size  Location     Type
  7610 ;;		None
  7611 ;; Return value:  Size  Location     Type
  7612 ;;                  1    wreg      void 
  7613 ;; Registers used:
  7614 ;;		None
  7615 ;; Tracked objects:
  7616 ;;		On entry : 0/0
  7617 ;;		On exit  : 0/0
  7618 ;;		Unchanged: 0/0
  7619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7624 ;;Total ram usage:        0 bytes
  7625 ;; Hardware stack levels used: 1
  7626 ;; This function calls:
  7627 ;;		Nothing
  7628 ;; This function is called by:
  7629 ;;		_EUSART1_Initialize
  7630 ;;		_EUSART1_Receive_ISR
  7631 ;; This function uses a non-reentrant model
  7632 ;;
  7633                           
  7634                           	psect	text59
  7635   001CC8                     __ptext59:
  7636                           	callstack 0
  7637   001CC8                     _EUSART1_DefaultOverrunErrorHandler:
  7638                           	callstack 18
  7639   001CC8                     
  7640                           ;mcc_generated_files/eusart1.c: 264:     RCSTA1bits.CREN = 0;
  7641   001CC8  98AB               	bcf	171,4,c	;volatile
  7642                           
  7643                           ;mcc_generated_files/eusart1.c: 265:     RCSTA1bits.CREN = 1;
  7644   001CCA  88AB               	bsf	171,4,c	;volatile
  7645   001CCC  0012               	return		;funcret
  7646   001CCE                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  7647                           	callstack 0
  7648                           
  7649 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  7650 ;; Defined at:
  7651 ;;		line 259 in file "mcc_generated_files/eusart1.c"
  7652 ;; Parameters:    Size  Location     Type
  7653 ;;		None
  7654 ;; Auto vars:     Size  Location     Type
  7655 ;;		None
  7656 ;; Return value:  Size  Location     Type
  7657 ;;                  1    wreg      void 
  7658 ;; Registers used:
  7659 ;;		None
  7660 ;; Tracked objects:
  7661 ;;		On entry : 0/0
  7662 ;;		On exit  : 0/0
  7663 ;;		Unchanged: 0/0
  7664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7669 ;;Total ram usage:        0 bytes
  7670 ;; Hardware stack levels used: 1
  7671 ;; This function calls:
  7672 ;;		Nothing
  7673 ;; This function is called by:
  7674 ;;		_EUSART1_Initialize
  7675 ;;		_EUSART1_Receive_ISR
  7676 ;; This function uses a non-reentrant model
  7677 ;;
  7678                           
  7679                           	psect	text60
  7680   001CE4                     __ptext60:
  7681                           	callstack 0
  7682   001CE4                     _EUSART1_DefaultFramingErrorHandler:
  7683                           	callstack 18
  7684   001CE4  0012               	return		;funcret
  7685   001CE6                     __end_of_EUSART1_DefaultFramingErrorHandler:
  7686                           	callstack 0
  7687                           
  7688 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  7689 ;; Defined at:
  7690 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  7691 ;; Parameters:    Size  Location     Type
  7692 ;;		None
  7693 ;; Auto vars:     Size  Location     Type
  7694 ;;		None
  7695 ;; Return value:  Size  Location     Type
  7696 ;;                  1    wreg      void 
  7697 ;; Registers used:
  7698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7699 ;; Tracked objects:
  7700 ;;		On entry : 0/0
  7701 ;;		On exit  : 0/0
  7702 ;;		Unchanged: 0/0
  7703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7708 ;;Total ram usage:        0 bytes
  7709 ;; Hardware stack levels used: 1
  7710 ;; Hardware stack levels required when called: 1
  7711 ;; This function calls:
  7712 ;;		_EUSART1_RxDataHandler
  7713 ;; This function is called by:
  7714 ;;		_EUSART1_Initialize
  7715 ;;		_EUSART1_Receive_ISR
  7716 ;; This function uses a non-reentrant model
  7717 ;;
  7718                           
  7719                           	psect	text61
  7720   001CCE                     __ptext61:
  7721                           	callstack 0
  7722   001CCE                     _EUSART1_DefaultErrorHandler:
  7723                           	callstack 17
  7724   001CCE                     
  7725                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
  7726   001CCE  EC65  F00D         	call	_EUSART1_RxDataHandler	;wreg free
  7727   001CD2  0012               	return		;funcret
  7728   001CD4                     __end_of_EUSART1_DefaultErrorHandler:
  7729                           	callstack 0
  7730                           
  7731 ;; *************** function _EUSART1_RxDataHandler *****************
  7732 ;; Defined at:
  7733 ;;		line 249 in file "mcc_generated_files/eusart1.c"
  7734 ;; Parameters:    Size  Location     Type
  7735 ;;		None
  7736 ;; Auto vars:     Size  Location     Type
  7737 ;;		None
  7738 ;; Return value:  Size  Location     Type
  7739 ;;                  1    wreg      void 
  7740 ;; Registers used:
  7741 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7742 ;; Tracked objects:
  7743 ;;		On entry : 0/0
  7744 ;;		On exit  : 0/0
  7745 ;;		Unchanged: 0/0
  7746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7751 ;;Total ram usage:        0 bytes
  7752 ;; Hardware stack levels used: 1
  7753 ;; This function calls:
  7754 ;;		Nothing
  7755 ;; This function is called by:
  7756 ;;		_EUSART1_Receive_ISR
  7757 ;;		_EUSART1_DefaultErrorHandler
  7758 ;; This function uses a non-reentrant model
  7759 ;;
  7760                           
  7761                           	psect	text62
  7762   001ACA                     __ptext62:
  7763                           	callstack 0
  7764   001ACA                     _EUSART1_RxDataHandler:
  7765                           	callstack 18
  7766   001ACA                     
  7767                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  7768   001ACA  0E00               	movlw	low _eusart1RxBuffer
  7769   001ACC  0100               	movlb	0	; () banked
  7770   001ACE  25E6               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
  7771   001AD0  6ED9               	movwf	fsr2l,c
  7772   001AD2  6ADA               	clrf	fsr2h,c
  7773   001AD4  0E01               	movlw	high _eusart1RxBuffer
  7774   001AD6  22DA               	addwfc	fsr2h,f,c
  7775   001AD8  CFAE FFDF          	movff	4014,indf2	;volatile
  7776   001ADC                     
  7777                           ; BSR set to: 0
  7778   001ADC  2BE6               	incf	_eusart1RxHead& (0+255),f,b	;volatile
  7779   001ADE                     
  7780                           ; BSR set to: 0
  7781                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  7782   001ADE  0E07               	movlw	7
  7783   001AE0  65E6               	cpfsgt	_eusart1RxHead& (0+255),b	;volatile
  7784   001AE2  EF75  F00D         	goto	i2u204_41
  7785   001AE6  EF77  F00D         	goto	i2u204_40
  7786   001AEA                     i2u204_41:
  7787   001AEA  EF79  F00D         	goto	i2l2794
  7788   001AEE                     i2u204_40:
  7789   001AEE                     
  7790                           ; BSR set to: 0
  7791                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
  7792   001AEE  0E00               	movlw	0
  7793   001AF0  6FE6               	movwf	_eusart1RxHead& (0+255),b	;volatile
  7794   001AF2                     i2l2794:
  7795                           
  7796                           ; BSR set to: 0
  7797                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
  7798   001AF2  2BE4               	incf	_eusart1RxCount& (0+255),f,b	;volatile
  7799   001AF4                     
  7800                           ; BSR set to: 0
  7801   001AF4  0012               	return		;funcret
  7802   001AF6                     __end_of_EUSART1_RxDataHandler:
  7803                           	callstack 0
  7804                           
  7805 ;; *************** function _ADC_ISR *****************
  7806 ;; Defined at:
  7807 ;;		line 140 in file "mcc_generated_files/adc.c"
  7808 ;; Parameters:    Size  Location     Type
  7809 ;;		None
  7810 ;; Auto vars:     Size  Location     Type
  7811 ;;		None
  7812 ;; Return value:  Size  Location     Type
  7813 ;;                  1    wreg      void 
  7814 ;; Registers used:
  7815 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7816 ;; Tracked objects:
  7817 ;;		On entry : 0/0
  7818 ;;		On exit  : 0/0
  7819 ;;		Unchanged: 0/0
  7820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7825 ;;Total ram usage:        0 bytes
  7826 ;; Hardware stack levels used: 1
  7827 ;; Hardware stack levels required when called: 2
  7828 ;; This function calls:
  7829 ;;		Absolute function
  7830 ;;		_ADC_DefaultInterruptHandler
  7831 ;;		_ADC_MyInterruptHandler
  7832 ;; This function is called by:
  7833 ;;		_INTERRUPT_InterruptManagerHigh
  7834 ;; This function uses a non-reentrant model
  7835 ;;
  7836                           
  7837                           	psect	text63
  7838   001A6C                     __ptext63:
  7839                           	callstack 0
  7840   001A6C                     _ADC_ISR:
  7841                           	callstack 17
  7842   001A6C                     
  7843                           ;mcc_generated_files/adc.c: 143:     PIR1bits.ADIF = 0;
  7844   001A6C  9C9E               	bcf	158,6,c	;volatile
  7845   001A6E                     
  7846                           ;mcc_generated_files/adc.c: 145:  if(ADC_InterruptHandler)
  7847   001A6E  0100               	movlb	0	; () banked
  7848   001A70  51ED               	movf	_ADC_InterruptHandler& (0+255),w,b
  7849   001A72  11EE               	iorwf	(_ADC_InterruptHandler+1)& (0+255),w,b
  7850   001A74  B4D8               	btfsc	status,2,c
  7851   001A76  EF3F  F00D         	goto	i2u222_41
  7852   001A7A  EF41  F00D         	goto	i2u222_40
  7853   001A7E                     i2u222_41:
  7854   001A7E  EF4D  F00D         	goto	i2l119
  7855   001A82                     i2u222_40:
  7856   001A82                     
  7857                           ; BSR set to: 0
  7858                           ;mcc_generated_files/adc.c: 146:     {;mcc_generated_files/adc.c: 147:         ADC_Inter
      +                          ruptHandler();
  7859   001A82  D802               	call	i2u223_48
  7860   001A84  EF4D  F00D         	goto	i2u223_49
  7861   001A88                     i2u223_48:
  7862   001A88  0005               	push	
  7863   001A8A  6EFA               	movwf	pclath,c
  7864   001A8C  51ED               	movf	_ADC_InterruptHandler& (0+255),w,b
  7865   001A8E  6EFD               	movwf	tosl,c
  7866   001A90  51EE               	movf	(_ADC_InterruptHandler+1)& (0+255),w,b
  7867   001A92  6EFE               	movwf	tosh,c
  7868   001A94  6AFF               	clrf	tosu,c
  7869   001A96  50FA               	movf	pclath,w,c
  7870   001A98  0012               	return		;indir
  7871   001A9A                     i2u223_49:
  7872   001A9A                     i2l119:
  7873   001A9A  0012               	return		;funcret
  7874   001A9C                     __end_of_ADC_ISR:
  7875                           	callstack 0
  7876                           
  7877 ;; *************** function _ADC_DefaultInterruptHandler *****************
  7878 ;; Defined at:
  7879 ;;		line 155 in file "mcc_generated_files/adc.c"
  7880 ;; Parameters:    Size  Location     Type
  7881 ;;		None
  7882 ;; Auto vars:     Size  Location     Type
  7883 ;;		None
  7884 ;; Return value:  Size  Location     Type
  7885 ;;                  1    wreg      void 
  7886 ;; Registers used:
  7887 ;;		None
  7888 ;; Tracked objects:
  7889 ;;		On entry : 0/0
  7890 ;;		On exit  : 0/0
  7891 ;;		Unchanged: 0/0
  7892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7897 ;;Total ram usage:        0 bytes
  7898 ;; Hardware stack levels used: 1
  7899 ;; This function calls:
  7900 ;;		Nothing
  7901 ;; This function is called by:
  7902 ;;		_ADC_Initialize
  7903 ;;		_ADC_ISR
  7904 ;; This function uses a non-reentrant model
  7905 ;;
  7906                           
  7907                           	psect	text64
  7908   001CE6                     __ptext64:
  7909                           	callstack 0
  7910   001CE6                     _ADC_DefaultInterruptHandler:
  7911                           	callstack 18
  7912   001CE6  0012               	return		;funcret
  7913   001CE8                     __end_of_ADC_DefaultInterruptHandler:
  7914                           	callstack 0
  7915                           
  7916 ;; *************** function _ADC_MyInterruptHandler *****************
  7917 ;; Defined at:
  7918 ;;		line 61 in file "main.c"
  7919 ;; Parameters:    Size  Location     Type
  7920 ;;		None
  7921 ;; Auto vars:     Size  Location     Type
  7922 ;;		None
  7923 ;; Return value:  Size  Location     Type
  7924 ;;                  1    wreg      void 
  7925 ;; Registers used:
  7926 ;;		wreg, status,2, status,0, cstack
  7927 ;; Tracked objects:
  7928 ;;		On entry : 0/0
  7929 ;;		On exit  : 0/0
  7930 ;;		Unchanged: 0/0
  7931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7936 ;;Total ram usage:        0 bytes
  7937 ;; Hardware stack levels used: 1
  7938 ;; Hardware stack levels required when called: 1
  7939 ;; This function calls:
  7940 ;;		_ADC_GetConversionResult
  7941 ;;		_ADC_SelectChannel
  7942 ;;		___aldiv
  7943 ;;		___lmul
  7944 ;; This function is called by:
  7945 ;;		_main
  7946 ;;		_ADC_ISR
  7947 ;; This function uses a non-reentrant model
  7948 ;;
  7949                           
  7950                           	psect	text65
  7951   001600                     __ptext65:
  7952                           	callstack 0
  7953   001600                     _ADC_MyInterruptHandler:
  7954                           	callstack 17
  7955   001600                     
  7956                           ;main.c: 62:     ADC_SelectChannel(channel_AN0);
  7957   001600  0E00               	movlw	0
  7958   001602  ECE7  F00D         	call	_ADC_SelectChannel
  7959                           
  7960                           ;main.c: 63:     convertedValue = ADC_GetConversionResult();
  7961   001606  ECFE  F00D         	call	_ADC_GetConversionResult	;wreg free
  7962   00160A  C001  F0DD         	movff	?_ADC_GetConversionResult,_convertedValue
  7963   00160E  C002  F0DE         	movff	?_ADC_GetConversionResult+1,_convertedValue+1
  7964                           
  7965                           ;main.c: 64:     nivel_agua = (long) convertedValue * 100 / 1023;
  7966   001612  C0DD  F001         	movff	_convertedValue,___lmul@multiplier
  7967   001616  C0DE  F002         	movff	_convertedValue+1,___lmul@multiplier+1
  7968   00161A  6A03               	clrf	(___lmul@multiplier+2)^0,c
  7969   00161C  6A04               	clrf	(___lmul@multiplier+3)^0,c
  7970   00161E  0E64               	movlw	100
  7971   001620  6E05               	movwf	___lmul@multiplicand^0,c
  7972   001622  0E00               	movlw	0
  7973   001624  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  7974   001626  0E00               	movlw	0
  7975   001628  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  7976   00162A  0E00               	movlw	0
  7977   00162C  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  7978   00162E  ECCB  F00A         	call	___lmul	;wreg free
  7979   001632  C001  F00D         	movff	?___lmul,___aldiv@dividend
  7980   001636  C002  F00E         	movff	?___lmul+1,___aldiv@dividend+1
  7981   00163A  C003  F00F         	movff	?___lmul+2,___aldiv@dividend+2
  7982   00163E  C004  F010         	movff	?___lmul+3,___aldiv@dividend+3
  7983   001642  0EFF               	movlw	255
  7984   001644  6E11               	movwf	___aldiv@divisor^0,c
  7985   001646  0E03               	movlw	3
  7986   001648  6E12               	movwf	(___aldiv@divisor+1)^0,c
  7987   00164A  0E00               	movlw	0
  7988   00164C  6E13               	movwf	(___aldiv@divisor+2)^0,c
  7989   00164E  0E00               	movlw	0
  7990   001650  6E14               	movwf	(___aldiv@divisor+3)^0,c
  7991   001652  EC23  F008         	call	___aldiv	;wreg free
  7992   001656  C00D  F0DB         	movff	?___aldiv,_nivel_agua
  7993   00165A  C00E  F0DC         	movff	?___aldiv+1,_nivel_agua+1
  7994   00165E  0012               	return		;funcret
  7995   001660                     __end_of_ADC_MyInterruptHandler:
  7996                           	callstack 0
  7997                           
  7998 ;; *************** function ___lmul *****************
  7999 ;; Defined at:
  8000 ;;		line 15 in file "G:\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  8001 ;; Parameters:    Size  Location     Type
  8002 ;;  multiplier      4    0[COMRAM] unsigned long 
  8003 ;;  multiplicand    4    4[COMRAM] unsigned long 
  8004 ;; Auto vars:     Size  Location     Type
  8005 ;;  product         4    8[COMRAM] unsigned long 
  8006 ;; Return value:  Size  Location     Type
  8007 ;;                  4    0[COMRAM] unsigned long 
  8008 ;; Registers used:
  8009 ;;		wreg, status,2, status,0
  8010 ;; Tracked objects:
  8011 ;;		On entry : 0/0
  8012 ;;		On exit  : 0/0
  8013 ;;		Unchanged: 0/0
  8014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8015 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8016 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8018 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8019 ;;Total ram usage:       12 bytes
  8020 ;; Hardware stack levels used: 1
  8021 ;; This function calls:
  8022 ;;		Nothing
  8023 ;; This function is called by:
  8024 ;;		_ADC_MyInterruptHandler
  8025 ;; This function uses a non-reentrant model
  8026 ;;
  8027                           
  8028                           	psect	text66
  8029   001596                     __ptext66:
  8030                           	callstack 0
  8031   001596                     ___lmul:
  8032                           	callstack 17
  8033   001596  0E00               	movlw	0
  8034   001598  6E09               	movwf	___lmul@product^0,c
  8035   00159A  0E00               	movlw	0
  8036   00159C  6E0A               	movwf	(___lmul@product+1)^0,c
  8037   00159E  0E00               	movlw	0
  8038   0015A0  6E0B               	movwf	(___lmul@product+2)^0,c
  8039   0015A2  0E00               	movlw	0
  8040   0015A4  6E0C               	movwf	(___lmul@product+3)^0,c
  8041   0015A6                     i2l2806:
  8042   0015A6  A001               	btfss	___lmul@multiplier^0,0,c
  8043   0015A8  EFD8  F00A         	goto	i2u207_41
  8044   0015AC  EFDA  F00A         	goto	i2u207_40
  8045   0015B0                     i2u207_41:
  8046   0015B0  EFE2  F00A         	goto	i2l2810
  8047   0015B4                     i2u207_40:
  8048   0015B4  5005               	movf	___lmul@multiplicand^0,w,c
  8049   0015B6  2609               	addwf	___lmul@product^0,f,c
  8050   0015B8  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  8051   0015BA  220A               	addwfc	(___lmul@product+1)^0,f,c
  8052   0015BC  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  8053   0015BE  220B               	addwfc	(___lmul@product+2)^0,f,c
  8054   0015C0  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  8055   0015C2  220C               	addwfc	(___lmul@product+3)^0,f,c
  8056   0015C4                     i2l2810:
  8057   0015C4  90D8               	bcf	status,0,c
  8058   0015C6  3605               	rlcf	___lmul@multiplicand^0,f,c
  8059   0015C8  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  8060   0015CA  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  8061   0015CC  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  8062   0015CE  90D8               	bcf	status,0,c
  8063   0015D0  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  8064   0015D2  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  8065   0015D4  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  8066   0015D6  3201               	rrcf	___lmul@multiplier^0,f,c
  8067   0015D8  5001               	movf	___lmul@multiplier^0,w,c
  8068   0015DA  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  8069   0015DC  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  8070   0015DE  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  8071   0015E0  A4D8               	btfss	status,2,c
  8072   0015E2  EFF5  F00A         	goto	i2u208_41
  8073   0015E6  EFF7  F00A         	goto	i2u208_40
  8074   0015EA                     i2u208_41:
  8075   0015EA  EFD3  F00A         	goto	i2l2806
  8076   0015EE                     i2u208_40:
  8077   0015EE  C009  F001         	movff	___lmul@product,?___lmul
  8078   0015F2  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  8079   0015F6  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  8080   0015FA  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  8081   0015FE  0012               	return		;funcret
  8082   001600                     __end_of___lmul:
  8083                           	callstack 0
  8084                           
  8085 ;; *************** function ___aldiv *****************
  8086 ;; Defined at:
  8087 ;;		line 7 in file "G:\Microchip\xc8\v2.40\pic\sources\c99\common\aldiv.c"
  8088 ;; Parameters:    Size  Location     Type
  8089 ;;  dividend        4   12[COMRAM] long 
  8090 ;;  divisor         4   16[COMRAM] long 
  8091 ;; Auto vars:     Size  Location     Type
  8092 ;;  quotient        4   22[COMRAM] long 
  8093 ;;  sign            1   21[COMRAM] unsigned char 
  8094 ;;  counter         1   20[COMRAM] unsigned char 
  8095 ;; Return value:  Size  Location     Type
  8096 ;;                  4   12[COMRAM] long 
  8097 ;; Registers used:
  8098 ;;		wreg, status,2, status,0
  8099 ;; Tracked objects:
  8100 ;;		On entry : 0/0
  8101 ;;		On exit  : 0/0
  8102 ;;		Unchanged: 0/0
  8103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8104 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8105 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8107 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8108 ;;Total ram usage:       14 bytes
  8109 ;; Hardware stack levels used: 1
  8110 ;; This function calls:
  8111 ;;		Nothing
  8112 ;; This function is called by:
  8113 ;;		_ADC_MyInterruptHandler
  8114 ;; This function uses a non-reentrant model
  8115 ;;
  8116                           
  8117                           	psect	text67
  8118   001046                     __ptext67:
  8119                           	callstack 0
  8120   001046                     ___aldiv:
  8121                           	callstack 17
  8122   001046  0E00               	movlw	0
  8123   001048  6E16               	movwf	___aldiv@sign^0,c
  8124   00104A  BE14               	btfsc	(___aldiv@divisor+3)^0,7,c
  8125   00104C  EF2C  F008         	goto	i2u209_40
  8126   001050  EF2A  F008         	goto	i2u209_41
  8127   001054                     i2u209_41:
  8128   001054  EF36  F008         	goto	i2l2822
  8129   001058                     i2u209_40:
  8130   001058  1E14               	comf	(___aldiv@divisor+3)^0,f,c
  8131   00105A  1E13               	comf	(___aldiv@divisor+2)^0,f,c
  8132   00105C  1E12               	comf	(___aldiv@divisor+1)^0,f,c
  8133   00105E  6C11               	negf	___aldiv@divisor^0,c
  8134   001060  0E00               	movlw	0
  8135   001062  2212               	addwfc	(___aldiv@divisor+1)^0,f,c
  8136   001064  2213               	addwfc	(___aldiv@divisor+2)^0,f,c
  8137   001066  2214               	addwfc	(___aldiv@divisor+3)^0,f,c
  8138   001068  0E01               	movlw	1
  8139   00106A  6E16               	movwf	___aldiv@sign^0,c
  8140   00106C                     i2l2822:
  8141   00106C  BE10               	btfsc	(___aldiv@dividend+3)^0,7,c
  8142   00106E  EF3D  F008         	goto	i2u210_40
  8143   001072  EF3B  F008         	goto	i2u210_41
  8144   001076                     i2u210_41:
  8145   001076  EF47  F008         	goto	i2l2828
  8146   00107A                     i2u210_40:
  8147   00107A  1E10               	comf	(___aldiv@dividend+3)^0,f,c
  8148   00107C  1E0F               	comf	(___aldiv@dividend+2)^0,f,c
  8149   00107E  1E0E               	comf	(___aldiv@dividend+1)^0,f,c
  8150   001080  6C0D               	negf	___aldiv@dividend^0,c
  8151   001082  0E00               	movlw	0
  8152   001084  220E               	addwfc	(___aldiv@dividend+1)^0,f,c
  8153   001086  220F               	addwfc	(___aldiv@dividend+2)^0,f,c
  8154   001088  2210               	addwfc	(___aldiv@dividend+3)^0,f,c
  8155   00108A  0E01               	movlw	1
  8156   00108C  1A16               	xorwf	___aldiv@sign^0,f,c
  8157   00108E                     i2l2828:
  8158   00108E  0E00               	movlw	0
  8159   001090  6E17               	movwf	___aldiv@quotient^0,c
  8160   001092  0E00               	movlw	0
  8161   001094  6E18               	movwf	(___aldiv@quotient+1)^0,c
  8162   001096  0E00               	movlw	0
  8163   001098  6E19               	movwf	(___aldiv@quotient+2)^0,c
  8164   00109A  0E00               	movlw	0
  8165   00109C  6E1A               	movwf	(___aldiv@quotient+3)^0,c
  8166   00109E  5011               	movf	___aldiv@divisor^0,w,c
  8167   0010A0  1012               	iorwf	(___aldiv@divisor+1)^0,w,c
  8168   0010A2  1013               	iorwf	(___aldiv@divisor+2)^0,w,c
  8169   0010A4  1014               	iorwf	(___aldiv@divisor+3)^0,w,c
  8170   0010A6  B4D8               	btfsc	status,2,c
  8171   0010A8  EF58  F008         	goto	i2u211_41
  8172   0010AC  EF5A  F008         	goto	i2u211_40
  8173   0010B0                     i2u211_41:
  8174   0010B0  EF90  F008         	goto	i2l2850
  8175   0010B4                     i2u211_40:
  8176   0010B4  0E01               	movlw	1
  8177   0010B6  6E15               	movwf	___aldiv@counter^0,c
  8178   0010B8  EF64  F008         	goto	i2l2836
  8179   0010BC                     i2l2834:
  8180   0010BC  90D8               	bcf	status,0,c
  8181   0010BE  3611               	rlcf	___aldiv@divisor^0,f,c
  8182   0010C0  3612               	rlcf	(___aldiv@divisor+1)^0,f,c
  8183   0010C2  3613               	rlcf	(___aldiv@divisor+2)^0,f,c
  8184   0010C4  3614               	rlcf	(___aldiv@divisor+3)^0,f,c
  8185   0010C6  2A15               	incf	___aldiv@counter^0,f,c
  8186   0010C8                     i2l2836:
  8187   0010C8  AE14               	btfss	(___aldiv@divisor+3)^0,7,c
  8188   0010CA  EF69  F008         	goto	i2u212_41
  8189   0010CE  EF6B  F008         	goto	i2u212_40
  8190   0010D2                     i2u212_41:
  8191   0010D2  EF5E  F008         	goto	i2l2834
  8192   0010D6                     i2u212_40:
  8193   0010D6                     i2l2838:
  8194   0010D6  90D8               	bcf	status,0,c
  8195   0010D8  3617               	rlcf	___aldiv@quotient^0,f,c
  8196   0010DA  3618               	rlcf	(___aldiv@quotient+1)^0,f,c
  8197   0010DC  3619               	rlcf	(___aldiv@quotient+2)^0,f,c
  8198   0010DE  361A               	rlcf	(___aldiv@quotient+3)^0,f,c
  8199   0010E0  5011               	movf	___aldiv@divisor^0,w,c
  8200   0010E2  5C0D               	subwf	___aldiv@dividend^0,w,c
  8201   0010E4  5012               	movf	(___aldiv@divisor+1)^0,w,c
  8202   0010E6  580E               	subwfb	(___aldiv@dividend+1)^0,w,c
  8203   0010E8  5013               	movf	(___aldiv@divisor+2)^0,w,c
  8204   0010EA  580F               	subwfb	(___aldiv@dividend+2)^0,w,c
  8205   0010EC  5014               	movf	(___aldiv@divisor+3)^0,w,c
  8206   0010EE  5810               	subwfb	(___aldiv@dividend+3)^0,w,c
  8207   0010F0  A0D8               	btfss	status,0,c
  8208   0010F2  EF7D  F008         	goto	i2u213_41
  8209   0010F6  EF7F  F008         	goto	i2u213_40
  8210   0010FA                     i2u213_41:
  8211   0010FA  EF88  F008         	goto	i2l2846
  8212   0010FE                     i2u213_40:
  8213   0010FE  5011               	movf	___aldiv@divisor^0,w,c
  8214   001100  5E0D               	subwf	___aldiv@dividend^0,f,c
  8215   001102  5012               	movf	(___aldiv@divisor+1)^0,w,c
  8216   001104  5A0E               	subwfb	(___aldiv@dividend+1)^0,f,c
  8217   001106  5013               	movf	(___aldiv@divisor+2)^0,w,c
  8218   001108  5A0F               	subwfb	(___aldiv@dividend+2)^0,f,c
  8219   00110A  5014               	movf	(___aldiv@divisor+3)^0,w,c
  8220   00110C  5A10               	subwfb	(___aldiv@dividend+3)^0,f,c
  8221   00110E  8017               	bsf	___aldiv@quotient^0,0,c
  8222   001110                     i2l2846:
  8223   001110  90D8               	bcf	status,0,c
  8224   001112  3214               	rrcf	(___aldiv@divisor+3)^0,f,c
  8225   001114  3213               	rrcf	(___aldiv@divisor+2)^0,f,c
  8226   001116  3212               	rrcf	(___aldiv@divisor+1)^0,f,c
  8227   001118  3211               	rrcf	___aldiv@divisor^0,f,c
  8228   00111A  2E15               	decfsz	___aldiv@counter^0,f,c
  8229   00111C  EF6B  F008         	goto	i2l2838
  8230   001120                     i2l2850:
  8231   001120  5016               	movf	___aldiv@sign^0,w,c
  8232   001122  B4D8               	btfsc	status,2,c
  8233   001124  EF96  F008         	goto	i2u214_41
  8234   001128  EF98  F008         	goto	i2u214_40
  8235   00112C                     i2u214_41:
  8236   00112C  EFA0  F008         	goto	i2l2854
  8237   001130                     i2u214_40:
  8238   001130  1E1A               	comf	(___aldiv@quotient+3)^0,f,c
  8239   001132  1E19               	comf	(___aldiv@quotient+2)^0,f,c
  8240   001134  1E18               	comf	(___aldiv@quotient+1)^0,f,c
  8241   001136  6C17               	negf	___aldiv@quotient^0,c
  8242   001138  0E00               	movlw	0
  8243   00113A  2218               	addwfc	(___aldiv@quotient+1)^0,f,c
  8244   00113C  2219               	addwfc	(___aldiv@quotient+2)^0,f,c
  8245   00113E  221A               	addwfc	(___aldiv@quotient+3)^0,f,c
  8246   001140                     i2l2854:
  8247   001140  C017  F00D         	movff	___aldiv@quotient,?___aldiv
  8248   001144  C018  F00E         	movff	___aldiv@quotient+1,?___aldiv+1
  8249   001148  C019  F00F         	movff	___aldiv@quotient+2,?___aldiv+2
  8250   00114C  C01A  F010         	movff	___aldiv@quotient+3,?___aldiv+3
  8251   001150  0012               	return		;funcret
  8252   001152                     __end_of___aldiv:
  8253                           	callstack 0
  8254                           
  8255 ;; *************** function _ADC_SelectChannel *****************
  8256 ;; Defined at:
  8257 ;;		line 88 in file "mcc_generated_files/adc.c"
  8258 ;; Parameters:    Size  Location     Type
  8259 ;;  channel         1    wreg     enum E6010
  8260 ;; Auto vars:     Size  Location     Type
  8261 ;;  channel         1    1[COMRAM] enum E6010
  8262 ;; Return value:  Size  Location     Type
  8263 ;;                  1    wreg      void 
  8264 ;; Registers used:
  8265 ;;		wreg, status,2, status,0
  8266 ;; Tracked objects:
  8267 ;;		On entry : 0/0
  8268 ;;		On exit  : 0/0
  8269 ;;		Unchanged: 0/0
  8270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8272 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8273 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8274 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8275 ;;Total ram usage:        2 bytes
  8276 ;; Hardware stack levels used: 1
  8277 ;; This function calls:
  8278 ;;		Nothing
  8279 ;; This function is called by:
  8280 ;;		_ADC_MyInterruptHandler
  8281 ;;		_TMR0_MyInterruptHandler
  8282 ;; This function uses a non-reentrant model
  8283 ;;
  8284                           
  8285                           	psect	text68
  8286   001BCE                     __ptext68:
  8287                           	callstack 0
  8288   001BCE                     _ADC_SelectChannel:
  8289                           	callstack 17
  8290                           
  8291                           ;incstack = 0
  8292                           ;ADC_SelectChannel@channel stored from wreg
  8293   001BCE  6E02               	movwf	ADC_SelectChannel@channel^0,c
  8294   001BD0                     
  8295                           ;mcc_generated_files/adc.c: 88: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 89: {;mcc_generated_files/adc.c: 91:     ADCON0bits.CHS = channel;
  8296   001BD0  C002  F001         	movff	ADC_SelectChannel@channel,??_ADC_SelectChannel
  8297   001BD4  4601               	rlncf	??_ADC_SelectChannel^0,f,c
  8298   001BD6  4601               	rlncf	??_ADC_SelectChannel^0,f,c
  8299   001BD8  50C2               	movf	194,w,c	;volatile
  8300   001BDA  1801               	xorwf	??_ADC_SelectChannel^0,w,c
  8301   001BDC  0B83               	andlw	-125
  8302   001BDE  1801               	xorwf	??_ADC_SelectChannel^0,w,c
  8303   001BE0  6EC2               	movwf	194,c	;volatile
  8304   001BE2                     
  8305                           ;mcc_generated_files/adc.c: 93:     ADCON0bits.ADON = 1;
  8306   001BE2  80C2               	bsf	194,0,c	;volatile
  8307   001BE4  0012               	return		;funcret
  8308   001BE6                     __end_of_ADC_SelectChannel:
  8309                           	callstack 0
  8310                           
  8311 ;; *************** function _ADC_GetConversionResult *****************
  8312 ;; Defined at:
  8313 ;;		line 109 in file "mcc_generated_files/adc.c"
  8314 ;; Parameters:    Size  Location     Type
  8315 ;;		None
  8316 ;; Auto vars:     Size  Location     Type
  8317 ;;		None
  8318 ;; Return value:  Size  Location     Type
  8319 ;;                  2    0[COMRAM] unsigned short 
  8320 ;; Registers used:
  8321 ;;		wreg, status,2, status,0
  8322 ;; Tracked objects:
  8323 ;;		On entry : 0/0
  8324 ;;		On exit  : 0/0
  8325 ;;		Unchanged: 0/0
  8326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8327 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8329 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8330 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8331 ;;Total ram usage:        4 bytes
  8332 ;; Hardware stack levels used: 1
  8333 ;; This function calls:
  8334 ;;		Nothing
  8335 ;; This function is called by:
  8336 ;;		_ADC_MyInterruptHandler
  8337 ;; This function uses a non-reentrant model
  8338 ;;
  8339                           
  8340                           	psect	text69
  8341   001BFC                     __ptext69:
  8342                           	callstack 0
  8343   001BFC                     _ADC_GetConversionResult:
  8344                           	callstack 17
  8345   001BFC                     
  8346                           ;mcc_generated_files/adc.c: 112:      return ((adc_result_t)((ADRESH << 8) + ADRESL));
  8347   001BFC  50C4               	movf	196,w,c	;volatile
  8348   001BFE  6E04               	movwf	(??_ADC_GetConversionResult+1)^0,c
  8349   001C00  6A03               	clrf	??_ADC_GetConversionResult^0,c
  8350   001C02  50C3               	movf	195,w,c	;volatile
  8351   001C04  2403               	addwf	??_ADC_GetConversionResult^0,w,c
  8352   001C06  6E01               	movwf	?_ADC_GetConversionResult^0,c
  8353   001C08  0E00               	movlw	0
  8354   001C0A  2004               	addwfc	(??_ADC_GetConversionResult+1)^0,w,c
  8355   001C0C  6E02               	movwf	(?_ADC_GetConversionResult+1)^0,c
  8356   001C0E  0012               	return		;funcret
  8357   001C10                     __end_of_ADC_GetConversionResult:
  8358                           	callstack 0
  8359                           
  8360                           	psect	text70
  8361   000000                     __ptext70:
  8362                           	callstack 0
  8363   000000                     
  8364                           	psect	rparam
  8365   000000                     
  8366                           	psect	temp
  8367   00005F                     btemp:
  8368                           	callstack 0
  8369   00005F                     	ds	1
  8370   000000                     int$flags	set	btemp
  8371   000000                     wtemp8	set	btemp+1
  8372   000000                     ttemp5	set	btemp+1
  8373   000000                     ttemp6	set	btemp+4
  8374   000000                     ttemp7	set	btemp+8
  8375                           
  8376                           	psect	idloc
  8377                           
  8378                           ;Config register IDLOC0 @ 0x200000
  8379                           ;	unspecified, using default values
  8380   200000                     	org	2097152
  8381   200000  FF                 	db	255
  8382                           
  8383                           ;Config register IDLOC1 @ 0x200001
  8384                           ;	unspecified, using default values
  8385   200001                     	org	2097153
  8386   200001  FF                 	db	255
  8387                           
  8388                           ;Config register IDLOC2 @ 0x200002
  8389                           ;	unspecified, using default values
  8390   200002                     	org	2097154
  8391   200002  FF                 	db	255
  8392                           
  8393                           ;Config register IDLOC3 @ 0x200003
  8394                           ;	unspecified, using default values
  8395   200003                     	org	2097155
  8396   200003  FF                 	db	255
  8397                           
  8398                           ;Config register IDLOC4 @ 0x200004
  8399                           ;	unspecified, using default values
  8400   200004                     	org	2097156
  8401   200004  FF                 	db	255
  8402                           
  8403                           ;Config register IDLOC5 @ 0x200005
  8404                           ;	unspecified, using default values
  8405   200005                     	org	2097157
  8406   200005  FF                 	db	255
  8407                           
  8408                           ;Config register IDLOC6 @ 0x200006
  8409                           ;	unspecified, using default values
  8410   200006                     	org	2097158
  8411   200006  FF                 	db	255
  8412                           
  8413                           ;Config register IDLOC7 @ 0x200007
  8414                           ;	unspecified, using default values
  8415   200007                     	org	2097159
  8416   200007  FF                 	db	255
  8417                           
  8418                           	psect	config
  8419                           
  8420                           ; Padding undefined space
  8421   300000                     	org	3145728
  8422   300000  FF                 	db	255
  8423                           
  8424                           ;Config register CONFIG1H @ 0x300001
  8425                           ;	Oscillator Selection bits
  8426                           ;	FOSC = ECMP, EC oscillator, CLKOUT function on OSC2 (medium power, 500 kHz-16 MHz)
  8427                           ;	4X PLL Enable
  8428                           ;	PLLCFG = OFF, Oscillator used directly
  8429                           ;	Primary clock enable bit
  8430                           ;	PRICLKEN = ON, Primary clock is always enabled
  8431                           ;	Fail-Safe Clock Monitor Enable bit
  8432                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8433                           ;	Internal/External Oscillator Switchover bit
  8434                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8435   300001                     	org	3145729
  8436   300001  2A                 	db	42
  8437                           
  8438                           ;Config register CONFIG2L @ 0x300002
  8439                           ;	Power-up Timer Enable bit
  8440                           ;	PWRTEN = OFF, Power up timer disabled
  8441                           ;	Brown-out Reset Enable bits
  8442                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  8443                           ;	Brown Out Reset Voltage bits
  8444                           ;	BORV = 190, VBOR set to 1.90 V nominal
  8445   300002                     	org	3145730
  8446   300002  1F                 	db	31
  8447                           
  8448                           ;Config register CONFIG2H @ 0x300003
  8449                           ;	Watchdog Timer Enable bits
  8450                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  8451                           ;	Watchdog Timer Postscale Select bits
  8452                           ;	WDTPS = 32768, 1:32768
  8453   300003                     	org	3145731
  8454   300003  3C                 	db	60
  8455                           
  8456                           ; Padding undefined space
  8457   300004                     	org	3145732
  8458   300004  FF                 	db	255
  8459                           
  8460                           ;Config register CONFIG3H @ 0x300005
  8461                           ;	CCP2 MUX bit
  8462                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  8463                           ;	PORTB A/D Enable bit
  8464                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  8465                           ;	P3A/CCP3 Mux bit
  8466                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  8467                           ;	HFINTOSC Fast Start-up
  8468                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  8469                           ;	Timer3 Clock input mux bit
  8470                           ;	T3CMX = PORTC0, T3CKI is on RC0
  8471                           ;	ECCP2 B output mux bit
  8472                           ;	P2BMX = PORTD2, P2B is on RD2
  8473                           ;	MCLR Pin Enable bit
  8474                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  8475   300005                     	org	3145733
  8476   300005  BF                 	db	191
  8477                           
  8478                           ;Config register CONFIG4L @ 0x300006
  8479                           ;	Stack Full/Underflow Reset Enable bit
  8480                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8481                           ;	Single-Supply ICSP Enable bit
  8482                           ;	LVP = OFF, Single-Supply ICSP disabled
  8483                           ;	Extended Instruction Set Enable bit
  8484                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8485                           ;	Background Debug
  8486                           ;	DEBUG = OFF, Disabled
  8487   300006                     	org	3145734
  8488   300006  81                 	db	129
  8489                           
  8490                           ; Padding undefined space
  8491   300007                     	org	3145735
  8492   300007  FF                 	db	255
  8493                           
  8494                           ;Config register CONFIG5L @ 0x300008
  8495                           ;	Code Protection Block 0
  8496                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  8497                           ;	Code Protection Block 1
  8498                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  8499                           ;	Code Protection Block 2
  8500                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  8501                           ;	Code Protection Block 3
  8502                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  8503   300008                     	org	3145736
  8504   300008  0F                 	db	15
  8505                           
  8506                           ;Config register CONFIG5H @ 0x300009
  8507                           ;	Boot Block Code Protection bit
  8508                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  8509                           ;	Data EEPROM Code Protection bit
  8510                           ;	CPD = OFF, Data EEPROM not code-protected
  8511   300009                     	org	3145737
  8512   300009  C0                 	db	192
  8513                           
  8514                           ;Config register CONFIG6L @ 0x30000A
  8515                           ;	Write Protection Block 0
  8516                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  8517                           ;	Write Protection Block 1
  8518                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  8519                           ;	Write Protection Block 2
  8520                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  8521                           ;	Write Protection Block 3
  8522                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  8523   30000A                     	org	3145738
  8524   30000A  0F                 	db	15
  8525                           
  8526                           ;Config register CONFIG6H @ 0x30000B
  8527                           ;	Configuration Register Write Protection bit
  8528                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  8529                           ;	Boot Block Write Protection bit
  8530                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  8531                           ;	Data EEPROM Write Protection bit
  8532                           ;	WRTD = OFF, Data EEPROM not write-protected
  8533   30000B                     	org	3145739
  8534   30000B  E0                 	db	224
  8535                           
  8536                           ;Config register CONFIG7L @ 0x30000C
  8537                           ;	Table Read Protection Block 0
  8538                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  8539                           ;	Table Read Protection Block 1
  8540                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  8541                           ;	Table Read Protection Block 2
  8542                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  8543                           ;	Table Read Protection Block 3
  8544                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  8545   30000C                     	org	3145740
  8546   30000C  0F                 	db	15
  8547                           
  8548                           ;Config register CONFIG7H @ 0x30000D
  8549                           ;	Boot Block Table Read Protection bit
  8550                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  8551   30000D                     	org	3145741
  8552   30000D  40                 	db	64
  8553                           tosu	equ	0xFFF
  8554                           tosh	equ	0xFFE
  8555                           tosl	equ	0xFFD
  8556                           stkptr	equ	0xFFC
  8557                           pclatu	equ	0xFFB
  8558                           pclath	equ	0xFFA
  8559                           pcl	equ	0xFF9
  8560                           tblptru	equ	0xFF8
  8561                           tblptrh	equ	0xFF7
  8562                           tblptrl	equ	0xFF6
  8563                           tablat	equ	0xFF5
  8564                           prodh	equ	0xFF4
  8565                           prodl	equ	0xFF3
  8566                           indf0	equ	0xFEF
  8567                           postinc0	equ	0xFEE
  8568                           postdec0	equ	0xFED
  8569                           preinc0	equ	0xFEC
  8570                           plusw0	equ	0xFEB
  8571                           fsr0h	equ	0xFEA
  8572                           fsr0l	equ	0xFE9
  8573                           wreg	equ	0xFE8
  8574                           indf1	equ	0xFE7
  8575                           postinc1	equ	0xFE6
  8576                           postdec1	equ	0xFE5
  8577                           preinc1	equ	0xFE4
  8578                           plusw1	equ	0xFE3
  8579                           fsr1h	equ	0xFE2
  8580                           fsr1l	equ	0xFE1
  8581                           bsr	equ	0xFE0
  8582                           indf2	equ	0xFDF
  8583                           postinc2	equ	0xFDE
  8584                           postdec2	equ	0xFDD
  8585                           preinc2	equ	0xFDC
  8586                           plusw2	equ	0xFDB
  8587                           fsr2h	equ	0xFDA
  8588                           fsr2l	equ	0xFD9
  8589                           status	equ	0xFD8

Data Sizes:
    Strings     456
    Constant    4
    Data        4
    BSS         78
    Persistent  18
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160     99     149
    BANK1           256     10      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1787$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S1787$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 48
		 -> STR_16(CODE[40]), STR_15(CODE[17]), STR_14(CODE[11]), STR_13(CODE[35]), 
		 -> STR_12(CODE[36]), STR_11(CODE[26]), STR_10(CODE[10]), STR_9(CODE[31]), 
		 -> STR_8(CODE[41]), STR_7(CODE[39]), STR_6(CODE[48]), STR_5(CODE[39]), 
		 -> STR_4(CODE[29]), STR_3(CODE[17]), STR_2(CODE[31]), STR_1(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 48
		 -> STR_16(CODE[40]), STR_15(CODE[17]), STR_14(CODE[11]), STR_13(CODE[35]), 
		 -> STR_12(CODE[36]), STR_11(CODE[26]), STR_10(CODE[10]), STR_9(CODE[31]), 
		 -> STR_8(CODE[41]), STR_7(CODE[39]), STR_6(CODE[48]), STR_5(CODE[39]), 
		 -> STR_4(CODE[29]), STR_3(CODE[17]), STR_2(CODE[31]), STR_1(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 48
		 -> STR_16(CODE[40]), STR_15(CODE[17]), STR_14(CODE[11]), STR_13(CODE[35]), 
		 -> STR_12(CODE[36]), STR_11(CODE[26]), STR_10(CODE[10]), STR_9(CODE[31]), 
		 -> STR_8(CODE[41]), STR_7(CODE[39]), STR_6(CODE[48]), STR_5(CODE[39]), 
		 -> STR_4(CODE[29]), STR_3(CODE[17]), STR_2(CODE[31]), STR_1(CODE[6]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    S1827$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 48
		 -> STR_16(CODE[40]), STR_15(CODE[17]), STR_14(CODE[11]), STR_13(CODE[35]), 
		 -> STR_12(CODE[36]), STR_11(CODE[26]), STR_10(CODE[10]), STR_9(CODE[31]), 
		 -> STR_8(CODE[41]), STR_7(CODE[39]), STR_6(CODE[48]), STR_5(CODE[39]), 
		 -> STR_4(CODE[29]), STR_3(CODE[17]), STR_2(CODE[31]), STR_1(CODE[6]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_MyInterruptHandler(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_MyInterruptHandler(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), Absolute function(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), Absolute function(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_MyInterruptHandler(), INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_MyInterruptHandler(), INT0_DefaultInterruptHandler(), Absolute function(), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_MyInterruptHandler(), ADC_DefaultInterruptHandler(), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_MyInterruptHandler(), Absolute function(), ADC_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _TMR0_MyInterruptHandler->_ADC_SelectChannel
    _INT0_MyInterruptHandler->i2_printf
    i2_printf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_dtoa
    i2_dtoa->i2_pad
    i2_pad->i2_fputs
    i2_fputs->i2_fputc
    i2_fputc->i2_putch
    i2_putch->i2_EUSART1_Write
    i2_abs->i2___aomod
    _ADC_MyInterruptHandler->___aldiv
    ___aldiv->___lmul

Critical Paths under _main in BANK0

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _abs->___aomod
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ADC_Initialize->_ADC_SetInterruptHandler
    _CheckUSART->_EUSART1_Read
    _CheckUSART->_EUSART1_Write

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    _INT0_CallBack->_INT0_MyInterruptHandler

Critical Paths under _main in BANK1

    _main->_ShowMenuInTerminal
    _ShowMenuInTerminal->_printf
    _printf->_vfprintf

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   18392
            _ADC_SetInterruptHandler
                         _CheckUSART
           _INT0_SetInterruptHandler
                  _SYSTEM_Initialize
                 _ShowMenuInTerminal
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
                             _printf
 ---------------------------------------------------------------------------------
 (1) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ShowMenuInTerminal                                   2     2      0    8417
                                              8 BANK1      2     2      0
                      _EUSART1_Write
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    8355
                                              2 BANK1      6     2      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6863
                                             93 BANK0      6     0      6
                                              0 BANK1      2     2      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    6369
                                             75 BANK0     18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4802
                                             40 BANK0     35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2533
                                             29 BANK0     11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1177
                                             22 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     857
                                             13 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      93
                                             12 BANK0      1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             29 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             11 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                             11 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1012
                     _ADC_Initialize
                    _CCP5_Initialize
                 _EUSART1_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                             11 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     174
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2     174
                                             11 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                             11 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                             11 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             11 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             11 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             11 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0     174
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADC_SetInterruptHandler                              2     0      2     174
                                             11 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _CheckUSART                                           0     0      0      86
                       _EUSART1_Read
                      _EUSART1_Write
                _EUSART1_is_rx_ready
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      62
                                             11 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      24
                                             11 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManagerHigh                     10    10      0    5832
                                              1 BANK0     10    10      0
                   Absolute function *
                            _ADC_ISR
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _INT0_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            0     0      0      22
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
            _TMR0_MyInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _TMR0_MyInterruptHandler                             0     0      0      22
                  _ADC_SelectChannel
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (14) _ADC_StartConversion                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _INT0_ISR                                            0     0      0    4966
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT0_CallBack                                       0     0      0    4966
                   Absolute function *
       _INT0_DefaultInterruptHandler *
            _INT0_MyInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT0_MyInterruptHandler                             1     1      0    4966
                                              0 BANK0      1     1      0
                           i2_printf
 ---------------------------------------------------------------------------------
 (15) i2_printf                                            6     4      2    4966
                                             90 COMRAM     4     2      2
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (16) i2_vfprintf                                          8     2      6    4850
                                             82 COMRAM     8     2      6
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (17) i2_vfpfcnvrt                                        23    17      6    4554
                                             64 COMRAM    18    12      6
                             i2_dtoa
                            i2_fputc
 ---------------------------------------------------------------------------------
 (18) i2_dtoa                                             35    25     10    3482
                                             29 COMRAM    35    25     10
                          i2___aodiv
                          i2___aomod
                              i2_abs
                              i2_pad
 ---------------------------------------------------------------------------------
 (19) i2_pad                                              11     5      6    1598
                                             18 COMRAM    11     5      6
                            i2_fputc
                            i2_fputs
 ---------------------------------------------------------------------------------
 (20) i2_fputs                                             7     3      4     737
                                             11 COMRAM     7     3      4
                            i2_fputc
 ---------------------------------------------------------------------------------
 (18) i2_fputc                                             9     5      4     527
                                              2 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (19) i2_putch                                             1     1      0      93
                                              1 COMRAM     1     1      0
                    i2_EUSART1_Write
 ---------------------------------------------------------------------------------
 (20) i2_EUSART1_Write                                     1     1      0      62
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (19) i2_abs                                               4     2      2     128
                                             18 COMRAM     4     2      2
                          i2___aomod (ARG)
 ---------------------------------------------------------------------------------
 (19) i2___aomod                                          18     2     16     503
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (19) i2___aodiv                                          26    10     16     515
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (14) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ADC_ISR                                             0     0      0     844
                   Absolute function *
        _ADC_DefaultInterruptHandler *
             _ADC_MyInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _ADC_MyInterruptHandler                              0     0      0     844
            _ADC_GetConversionResult
                  _ADC_SelectChannel
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (14) ___lmul                                             12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (14) ___aldiv                                            14     6      8     452
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (14) _ADC_SelectChannel                                   2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (14) _ADC_GetConversionResult                             4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (13) _ADC_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 20
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_SetInterruptHandler
   _CheckUSART
     _EUSART1_Read
     _EUSART1_Write
     _EUSART1_is_rx_ready
   _INT0_SetInterruptHandler
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _CCP5_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _ShowMenuInTerminal
     _EUSART1_Write
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
           _fputc
   _TMR0_SetInterruptHandler
   _TMR0_StartTimer
   _printf

 _INTERRUPT_InterruptManagerHigh (ROOT)
   Absolute function(Fake) *
   _ADC_ISR *
     Absolute function(Fake) *
     _ADC_DefaultInterruptHandler *
     _ADC_MyInterruptHandler *
       _ADC_GetConversionResult
       _ADC_SelectChannel
       ___aldiv
         ___lmul (ARG)
       ___lmul
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _INT0_ISR *
     _INT0_CallBack
       Absolute function(Fake) *
       _INT0_DefaultInterruptHandler *
       _INT0_MyInterruptHandler *
         i2_printf
           i2_vfprintf
             i2_vfpfcnvrt
               i2_dtoa
                 i2___aodiv
                 i2___aomod
                 i2_abs
                   i2___aomod (ARG)
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_EUSART1_Write
                   i2_fputs
                     i2_fputc
               i2_fputc
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _TMR0_MyInterruptHandler *
       _ADC_SelectChannel
       _ADC_StartConversion

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      51        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      A      3C       7       23.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     63      95       5       93.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRhllllh     27      0       0      47        0.0%
BITBIGSFRhhlhhh     19      0       0      37        0.0%
BITBIGSFRlh         17      0       0      49        0.0%
BITBIGSFRhhh         D      0       0      36        0.0%
BITBIGSFRhlhhll      B      0       0      43        0.0%
BITBIGSFRhlllll      A      0       0      48        0.0%
BITBIGSFRhlhhll      7      0       0      42        0.0%
BITBIGSFRhlhhlh      7      0       0      41        0.0%
BITBIGSFRhhll        6      0       0      40        0.0%
BITBIGSFRhlhllh      4      0       0      45        0.0%
BITBIGSFRhllhl       4      0       0      46        0.0%
BITBIGSFRhlhlh       1      0       0      44        0.0%
BITBIGSFRhhlhhl      1      0       0      38        0.0%
BITBIGSFRhhlhl       1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12F      50        0.0%
DATA                 0      0     12F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Dec 08 19:35:26 2023

                      _eusart1TxBufferRemaining 00F0                                               l9 1C30  
                                             _s 00D3                                              l30 1C20  
                                            l94 1B6A                        ?_INT0_MyInterruptHandler 0001  
                           ?_ShowMenuInTerminal 0001                                 _timer0ReloadVal 00EF  
                     fp__ADC_MyInterruptHandler 0000                                             l122 1CB4  
                                           l230 1BCC                                             l143 1C78  
                                           l224 13C0                                             l243 1810  
                                           l252 16B8                                             l324 1C58  
                                           l149 1BFA                                             l248 1676  
                                           l408 18EC                                             l432 1BB4  
                                           l249 168C                                             l290 1C96  
                                           l258 1C3E                                             l435 1CDA  
                                           l293 1CAA                                             l454 1C6E  
                                           l366 1B44                                             l287 1CA0  
                                           l543 0ACC                                             l296 1C82  
                                           l369 1C4C                                             l554 1594  
                                           l299 1C8C                                             l671 07CA  
                                           l684 0C32                              i2___aodiv@quotient 0013  
                    ??_INT0_SetInterruptHandler 006D                                             _abs 1974  
                                           _pad 13C2                                 __end_of_ADC_ISR 1A9C  
               __end_of_ADC_SetInterruptHandler 1CB6                                             tosl 000FFD  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                 _INT0_CallBack 1A9C                             __end_ofi2_vfpfcnvrt 1046  
                                    _CheckUSART 152A                    ?_ADC_DefaultInterruptHandler 0001  
                               _CCP5_Initialize 1C22                                            ?_abs 007D  
                                          l1300 19B4                                            l1312 12AA  
                                          l1320 18A8                                            l1235 1B1E  
                                          l1261 143E                                            l3030 1B28  
                                          l3040 1B3C                                            l3032 1B2C  
                                          l1280 03C2                                            l1257 13E6  
                                          l3042 1B40                                            l3034 1B30  
                                          l3026 1B20                                            l1266 01CE  
                                          l3036 1B34                                            l3028 1B24  
                                          l1268 01D6                                            l3044 1CD8  
                                          l1269 021C                                            l1293 17BE  
                                          l3230 169E                                            l3222 1664  
                                          l3038 1B38                                            l1287 0EEE  
                                          l3232 16A0                                            l3224 1664  
                                          l1297 19AC                                            l3234 16B0  
                                          l3226 1684                                            l3236 16B4  
                                          l3228 168E                                            l3500 0B7C  
                                          l3238 16B6                                            l3510 0BF2  
                                          l3502 0BAA                                            l3254 1C36  
                                          l3270 1244                                            l3440 0656  
                                          l3512 0C12                                            l3504 0BCA  
                                          l3272 1262                                            l3264 1214  
                                          l3520 13DE                                            l3600 0328  
                                          l3450 06AC                                            l3442 0676  
                                          l3506 0BDC                                            l3530 1974  
                                          l3274 1298                                            l3266 1228  
                                          l3522 13F2                                            l3610 0392  
                                          l3602 0344                                            l2900 1366  
                                          l3460 0700                                            l3452 06B8  
                                          l3444 067A                                            l3436 0642  
                                          l3508 0BE2                                            l3532 1990  
                                          l3268 123A                                            l3380 1882  
                                          l3524 1406                                            l3516 13C2  
                                          l3612 03A2                                            l3604 0362  
                                          l3700 097A                                            l2910 1384  
                                          l2902 136A                                            l3470 0774  
                                          l3462 0712                                            l3454 06D6  
                                          l3446 0688                                            l3438 0648  
                                          l3382 1888                                            l3526 140C  
                                          l3518 13D2                                            l3606 037C  
                                          l3630 0DCC                                            l3710 09C0  
                                          l3702 0988                                            l2920 17C0  
                                          l2912 1392                                            l2904 136E  
                                          l3464 0740                                            l3456 06DE  
                                          l3472 077A                                            l3448 06A8  
                                          l3480 0ACE                                            l3376 1862  
                                          l3528 142A                                            l3608 038C  
                                          l3640 0E2A                                            l3632 0DDA  
                                          l3712 09CE                                            l3704 0996  
                                          l2930 1804                                            l2922 17C0  
                                          l2762 1CAC                                            l2914 13BE  
                                          l2906 1372                                            l3474 078A  
                                          l3466 0760                                            l3458 06F2  
                                          l3490 0B14                                            l3482 0AD4  
                                          l3378 1870                                            l3570 0188  
                                          l3642 0E80                                            l3634 0DDE  
                                          l3650 0EC2                                            l3626 0D98  
                                          l3730 0A14                                            l3722 09F6  
                                          l3714 09D8                                            l3706 09A4  
                                          l3810 14EE                                            l3802 14BA  
                                          l2932 1808                                            l2924 17D2  
                                          l2916 1BB6                                            l2780 1C98  
                                          l2908 1376                                            l3476 07AA  
                                          l3468 0762                                            l3492 0B34  
                                          l3484 0AE2                                            l3580 01F4  
                                          l3572 01A8                                            l3564 0142  
                                          l3636 0DEE                                            l3628 0DBE  
                                          l3740 0A4E                                            l3732 0A2A  
                                          l3724 09FC                                            l3716 09DE  
                                          l3708 09B2                                            l3820 1518  
                                          l3812 14F2                                            l3804 14BE  
                                          l2934 180A                                            l2926 17F2  
                                          l2782 1C8E                                            l2774 1C70  
                                          l2950 18CE                                            l2870 1C10  
                                          l3494 0B52                                            l3486 0B02  
                                          l3590 022E                                            l3582 0204  
                                          l3574 01C2                                            l3566 0162  
                                          l3646 0EB0                                            l3638 0E0C  
                                          l3670 1778                                            l3718 09EC  
                                          l3822 151E                                            l3814 1500  
                                          l3806 14C0                                            ?_pad 007D  
                                          l2936 180C                                            l2928 17F4  
                                          l2880 1B5C                                            l2784 1CA2  
                                          l2776 1C84                                            l2952 18EA  
                                          l2872 1C1C                                            l2960 1BA2  
                                          l3496 0B5A                                            l3488 0B06  
                                          l3592 0234                                            l3584 0210  
                                          l3576 01DE                                            l3568 0178  
                                          l3672 1796                                            l3744 0A58  
                                          l3736 0A44                                            l3728 0A0E  
                                          l3816 1502                                            l3808 14C2  
                                          l2938 180E                                            l3770 156E  
                                          l3762 152A                                            l2778 1C7A  
                                          l2890 1BF8                                            l2946 1C4E  
                                          l2954 1C40                                            l2874 1C1E  
                                          l2962 1BA4                                            l3498 0B6E  
                                          l3594 02B8                                            l3586 0218  
                                          l3578 01EE                                            l3674 17B4  
                                          l3682 1AF6                                            l3746 0A5E  
                                          l3754 0A7E                                            l3818 1514  
                                          l3772 1580                                            l3764 153E  
                                          l2876 1B46                                            l2868 1C22  
                                          l2892 1342                                            l2948 18AA  
                                          l2796 1C66                                            l2964 1BB0  
                                          l2956 1B92                                            l3596 02BE  
                                          l3588 0224                                            l3668 176C  
                                          l3684 1B00                                            l3748 0A6C  
                                          l3692 0954                                            l3774 1584  
                                          l3766 154C                                            l2878 1B5A  
                                          l2894 1344                                            l2886 1BE6  
                                          l2958 1BA0                                            l3598 02C4  
                                          l3854 0A96                                            l3694 0958  
                                          l3776 158C                                            l3768 155E  
                                          l2896 1352                                            l2888 1BEA  
                                          l3696 095E                                            l2898 1362  
                                          l3698 096C                                            STR_1 FFF9  
                                          STR_2 FF4D                                            STR_3 FFC2  
                                          STR_4 FF8B                                            STR_5 FEDF  
                                          STR_6 FE37                                            STR_7 FEB8  
                                          STR_8 FE67                                            STR_9 FF6C  
                                          u2200 17D2                                            u3000 0AE2  
                                          u2201 17CE                                            u3001 0ADE  
                                          u2210 1804                                            u3010 0B14  
                                          u2211 1800                                            u3011 0B10  
                                          u3020 0B52                                            u3021 0B4E  
                                          _LATA 000F89                                            u3030 0B7C  
                                          _LATB 000F8A                                            u3031 0B78  
                                          _LATC 000F8B                                            u3040 0BAA  
                                          u3200 037C                                            u3120 0174  
                                          _LATD 000F8C                                            u3041 0BA6  
                                          u3201 0378                                            u3121 016E  
                                          _LATE 000F8D                                            u3050 0BF2  
                                          u3210 038C                                            u3130 0176  
                                          u3051 0BEE                                            u3211 0388  
                                          u2180 1BCA                                            u3060 13D2  
                                          u3140 0188                                            u2181 1BC4  
                                          u3061 13CE                                            u3141 0184  
                                          u2190 1BCC                                            u3310 153E  
                                          u3070 142A                                            u3150 01C2  
                                          u3230 0DBE                                            u3311 153A  
                                          u3071 1426                                            u3151 01BE  
                                          u3231 0DBA                                            u3320 155E  
                                          u3080 1990                                            u3160 01EE  
                                          u3240 0E0C                                            u3321 155A  
                                          u3081 198C                                            u3161 01EA  
                                          u3241 0E08                                            u3330 156E  
                                          u3170 0204                                            u3250 0E2A  
                                          u3331 156A                                            u3171 0200  
                                          u3251 0E26                                            u2540 1676  
                                          u3340 1580                                            u2620 1228  
                                          u3180 0344                                            u2541 1672  
                                          u3341 157C                                            u2621 1224  
                                          u3181 0340                                            u2550 1684  
                                          u2630 123A                                            u3190 0362  
                                          u2551 1680                                            u2631 1236  
                                          u3191 035E                                            u2560 16B0  
                                          u2640 1262                                            u3280 17B4  
                                          u2561 16AC                                            u2641 125E  
                                          u3281 17B0                                            u2650 1298  
                                          u2651 1294                                            u2820 18A8  
                                          u2821 18A4                                            u3470 1514  
                                          u3471 1510                                            u2930 0656  
                                          u2931 0652                                            u2940 0688  
                                          u2941 0684                                            u2951 06B2  
                                          u2960 06D6                                            u2961 06D2  
                                          u2970 0700                                            u2971 06FC  
                                          u2980 0740                                            u2981 073C  
                                          u2990 078A                                            u2991 0786  
                                          i2l97 1BE4                                            _WPUB 000F61  
                          ??_ShowMenuInTerminal 013A                                   _EUSART1_Write 1660  
                                          abs@a 007D                                            _dbuf 0108  
                                          _main 14BA                                            _dtoa 0142  
                                          _menu 00F4                                   ?_EUSART1_Read 0001  
                                          _prec 00D9                                 _TMR0_StartTimer 1CD8  
                                          pad@i 0084                                            pad@p 0081  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 0086                                            fsr2l 000FD9  
                                          btemp 005F                                            start 013E  
                               __end_ofi2_fputc 1342                                 __end_ofi2_fputs 1932  
                               __end_ofi2_putch 1CC0                                     i2_dtoa$1855 0030  
                fp__EUSART1_DefaultErrorHandler 0000                                    ___param_bank 000000  
                       ?_ADC_MyInterruptHandler 0001                                           ??_abs 007F  
                                         ??_pad 0083                                      i2_vfprintf 1812  
                       __end_of_TMR0_Initialize 1BB6                                __end_of_INT0_ISR 1CC8  
                ??_TMR0_DefaultInterruptHandler 0001                   __end_of_OSCILLATOR_Initialize 1C4E  
                         _eusart1RxStatusBuffer 00C3                                 __end_of___aldiv 1152  
                               __end_of___aodiv 07CC                                           ?_main 0001  
                                         ?_dtoa 0088                                 __end_of___aomod 0C34  
                                         STR_10 FFEF                                           STR_11 FFA8  
                                         STR_12 FF06                                           STR_13 FF2A  
                                         STR_14 FFE4                                           STR_15 FFD3  
                                         STR_16 FE90                                           _T0CON 000FD5  
                                         i2l100 1CDE                                           i2l106 1C0E  
                                         i2l140 1AC8                                           i2l125 1CE6  
                                         i2l119 1A9A                                           i2l136 1CC6  
                                         i2l146 1CE2                                           i2l331 007A  
                                         i2l252 176A                                           i2l500 1712  
                                         i2l261 19F4                                           i2l333 009E  
                                         i2l334 0112                                           i2l503 165E  
                                         i2l271 1212                                           i2l335 00D8  
                                         i2l264 19F6                                           i2l248 1728  
                                         i2l281 1CCC                                           i2l249 173E  
                                         i2l329 0056                                           i2l258 1CBE  
                                         i2l506 1C64                                           i2l275 1AF4  
                                         i2l451 1A6A                                           i2l339 0112  
                                         i2l284 1CD2                                           i2l278 1CE4  
                                         i2l457 1CE0                                           i2l636 1150  
                                         i2l671 0952                                           i2l568 15EE  
                                         i2l496 16BA                                           i2l569 15FE  
                                         i2l498 16E2                                           i2l684 0D96  
                                  vfpfcnvrt@fmt 00AD                                           _TMR0H 000FD7  
                                         _TMR0L 000FD6                                           _TRISA 000F92  
                                         _TRISB 000F93                                  ?_INT0_CallBack 0001  
                                         _TRISC 000F94                                           _TRISD 000F95  
                                         _TRISE 000F96                                           i2_abs 19F8  
                                         i2_pad 1440                             ___lmul@multiplicand 0005  
                     ?_TMR0_SetInterruptHandler 006B                            _EUSART1_Transmit_ISR 19B6  
                              __end_of_TMR0_ISR 1A6C                                           _flags 00DF  
                                         _fputc 1214                                           _fputs 1862  
                                         pad@fp 007D                                           _width 00D7  
                                         _putch 1C32                                           dtoa@d 008A  
                                         dtoa@i 00A9                                           dtoa@n 00A0  
                                         dtoa@p 009C                                           dtoa@s 00A8  
                                         dtoa@w 009E                                  ?_EUSART1_Write 0001  
                                         pclath 000FFA                                           pclatu 000FFB  
                                         tablat 000FF5                                  ??_EUSART1_Read 006B  
                                         ttemp5 0060                                           ttemp6 0063  
                                         ttemp7 0067                                           status 000FD8  
                                         wtemp8 0060           fp__EUSART1_DefaultFramingErrorHandler 0000  
    __end_of_EUSART1_DefaultFramingErrorHandler 1CE6            ??_EUSART1_DefaultFramingErrorHandler 0001  
           ?_EUSART1_DefaultFramingErrorHandler 0001              _EUSART1_DefaultFramingErrorHandler 1CE4  
                __end_of_ADC_MyInterruptHandler 1660                                __end_ofi2_printf 1B92  
                               __initialization 1932                 __end_of_INT0_MyInterruptHandler 1714  
                    __end_of_EUSART1_Initialize 13C2                                    __end_of_main 152A  
                                  __end_of_dtoa 03C4                                      i2printf@ap 005D  
                                     ??_ADC_ISR 001B                                     i2_vfpfcnvrt 0EF0  
                                 i2vfpfcnvrt@ap 0045                                   i2vfpfcnvrt@cp 0051  
                                 i2vfpfcnvrt@fp 0041                                          ??_main 00C3  
                                        ??_dtoa 0092                         __end_of_CCP5_Initialize 1C32  
                                 __activetblptr 000003                                          ?i2_abs 0013  
                                        ?i2_pad 0013                           ?_EUSART1_Transmit_ISR 0001  
                                _convertedValue 00DD                                     ?_CheckUSART 0001  
                       __end_of_TMR0_StartTimer 1CDC                                          _ADCON0 000FC2  
                                        _ADCON1 000FC1                                          _ADCON2 000FC0  
                                        ?_fputc 006D                                          ?_fputs 0076  
                                        _ADRESH 000FC4                                          _ADRESL 000FC3  
                                        _CCPR5H 000F56                                          _CCPR5L 000F55  
                                        _ANSELA 000F38                                          ?_putch 0001  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                                        _ANSELD 000F3B                                          _ANSELE 000F3C  
                                        i2l1300 1A36                                          i2l3000 1152  
                                        i2l1312 1340                                          i2l1320 1930  
                                        i2l3010 11A8                                          i2l3002 1164  
                                        i2l1235 1B90                                          i2l3012 11B8  
                                        i2l3004 1172                                          i2l3020 1A38  
                                        i2l1261 14B8                                          i2l3014 11D2  
                                        i2l3006 1180                                          i2l3022 1A3E  
                                        i2l3016 11F0                                          i2l3008 119A  
                                        i2l1280 0640                                          i2l3024 1A52  
                                        i2l1257 1462                                          i2l3018 120E  
                                        i2l3210 1750                                          i2l3202 1716  
                                        i2l1266 0450                                          i2l3300 087A  
                                        i2l3212 1752                                          i2l3204 1716  
                                        i2l3220 1CB8                                          i2l1268 0458  
                                        i2l1269 049E                                          i2l1293 1860  
                                        i2l3310 08EA                                          i2l3302 0888  
                                        i2l3214 1762                                          i2l3206 1736  
                                        i2l1287 1044                                          i2l3312 08FC  
                                        i2l3304 089A                                          i2l3216 1766  
                                        i2l3208 1740                                          i2l3240 12AC  
                                        i2l3400 0476                                          i2l1297 1A2E  
                                        i2l3306 08C8                                          i2l3314 0902  
                                        i2l3330 0C6A                                          i2l3322 0C34  
                                        i2l3218 1768                                          i2l3250 132E  
                                        i2l3242 12BE                                          i2l3410 04B0  
                                        i2l3402 0486                                          i2l3316 0912  
                                        i2l3308 08E8                                          i2l3340 0CD2  
                                        i2l3332 0C78                                          i2l3324 0C38  
                                        i2l3244 12D0                                          i2l3260 190C  
                                        i2l3412 04B6                                          i2l3420 05A8  
                                        i2l3404 0492                                          i2l3318 0932  
                                        i2l3342 0CE0                                          i2l3350 0D46  
                                        i2l3334 0C98                                          i2l3326 0C46  
                                        i2l3246 12DA                                          i2l3262 1910  
                                        i2l3430 0610                                          i2l3422 05C2  
                                        i2l3414 0538                                          i2l3406 049A  
                                        i2l3280 07D0                                          i2l3352 0D56  
                                        i2l3344 0D0E                                          i2l3336 0CB6  
                                        i2l3328 0C66                                          i2l3248 12F8  
                                        i2l3256 18EE                                          i2l3360 144E  
                                        i2l3432 0620                                          i2l3424 05E0  
                                        i2l3416 053E                                          i2l3408 04A6  
                                        i2l2810 15C4                                          i2l3290 0830  
                                        i2l3282 07DE                                          i2l3354 0D76  
                                        i2l3346 0D2E                                          i2l3338 0CBE  
                                        i2l3258 18FA                                          i2l3370 14A4  
                                        i2l3362 145A                                          i2l3426 05FA  
                                        i2l3418 0544                                          i2l2820 1068  
                                        i2l2812 15CE                                          i2l2804 1596  
                                        i2l3292 0834                                          i2l3284 07FE  
                                        i2l3348 0D40                                          i2l3372 19F8  
                                        i2l3364 146E                                          i2l3428 060A  
                                        i2l3540 0F32                                          i2l3620 183A  
                                        i2l2830 109E                                          i2l2822 106C  
                                        i2l2814 1046                                          i2l2806 15A6  
                                        i2l3294 0840                                          i2l3286 0802  
                                        i2l3278 07CC                                          i2l3374 1A12  
                                        i2l3366 1482                                          i2l3358 1440  
                                        i2l3390 0408                                          i2l3550 0FD8  
                                        i2l3542 0F36                                          i2l3534 0EF0  
                                        i2l3622 1858                                          i2l2840 10E0  
                                        i2l2832 10B4                                          i2l2824 107A  
                                        i2l2816 104A                                          i2l2808 15B4  
                                        i2l3296 085E                                          i2l3288 0810  
                                        i2l3368 1486                                          i2l3392 0428  
                                        i2l3384 03C4                                          i2l3544 0F46  
                                        i2l3536 0F16                                          i2l3616 1812  
                                        i2l3800 00F4                                          i2l2770 1BFC  
                                        i2l2842 10FE                                          i2l2834 10BC  
                                        i2l2850 1120                                          i2l2826 108A  
                                        i2l2818 1058                                          i2l3298 0866  
                                        i2l3394 0444                                          i2l3386 03E4  
                                        i2l3554 1008                                          i2l3546 0F64  
                                        i2l3538 0F24                                          i2l3618 181E  
                                        i2l2764 1BD0                                          i2l2852 1130  
                                        i2l2844 110E                                          i2l2836 10C8  
                                        i2l2828 108E                                          i2l3396 0460  
                                        i2l3388 03F8                                          i2l3548 0F82  
                                        i2l2766 1BE2                                          i2l2854 1140  
                                        i2l2846 1110                                          i2l2838 10D6  
                                        i2l2790 1ADE                                          i2l2942 1CC8  
                                        i2l3398 0470                                          i2l3558 101A  
                                        i2l3662 16BA                                          i2l2848 111A  
                                        i2l2792 1AEE                                          i2l2944 1CCE  
                                        i2l3656 1B6C                                          i2l3664 1704  
                                        i2l3680 1AB0                                          i2l2768 1CDC  
                                        i2l2794 1AF2                                          i2l2786 1ACA  
                                        i2l3658 1B74                                          i2l3666 1710  
                                        i2l3690 1CC2                                          i2l2972 1600  
                                        i2l2980 1A6E                                          i2l2788 1ADC  
                                        i2l3780 0032                                          i2l2982 1A82  
                                        i2l2990 19C8                                          i2l3678 1A9C  
                                        i2l2974 1C5A                                          i2l3790 0088  
                                        i2l3782 0040                                          i2l2992 19D8  
                                        i2l3688 1CC0                                          i2l2976 1C60  
                                        i2l3792 0096                                          i2l3784 004E  
                                        i2l2978 1A6C                                          i2l2994 19DA  
                                        i2l3794 00AC                                          i2l3786 0064  
                                        i2l2996 19EA                                          i2l2988 19B6  
                                        i2l3796 00BA                                          i2l3788 0072  
                                        i2l2998 19EE                                          i2l3798 00E6  
                                 i2putch@txData 0002                                       ??i2_fputc 0007  
                                        _RCREG1 000FAE                                       ??i2_fputs 0010  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                                        _SPBRG1 000FAF                                       ??i2_putch 0002  
                                i2___aodiv@sign 0012                                          _TXREG1 000FAD  
                                        i2abs@a 0013                                          _TXSTA1 000FAC  
                                        i2_dtoa 03C4                                          i2pad@i 001A  
                                        i2pad@p 0017                                          i2pad@w 001C  
                                  vfprintf@cfmt 0132                                  i2___aomod@sign 0012  
                                        ___lmul 1596                                       ??___aldiv 0015  
                                     ??___aodiv 007B                                   i2vfprintf@fmt 0055  
                                     ??___aomod 007B                                     ?i2_vfprintf 0053  
                      ?_EUSART1_SetErrorHandler 006B                                ?_TMR0_Initialize 0001  
                                        clear_0 1958                                          clear_1 1964  
                                        _rxData 00E2                                          isa$std 000001  
                                        _printf 1AF6                                          pad@buf 007F  
              ??_EUSART1_SetOverrunErrorHandler 006D                 ?_EUSART1_SetOverrunErrorHandler 006B  
                               ??_INT0_CallBack 005F                                          dtoa@fp 0088  
                             ??i2_EUSART1_Write 0001                                          fputc@c 006D  
                                        fputs@c 007A                                          fputs@i 007B  
                             __end_ofi2___aodiv 0954                                          fputs@s 0076  
                             __end_ofi2___aomod 0D98                                    __mediumconst FE32  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                              i2___aomod@dividend 0001  
                              __end_of_vfprintf 17C0                                 ??_EUSART1_Write 006B  
      TMR0_SetInterruptHandler@InterruptHandler 006B        INT0_SetInterruptHandler@InterruptHandler 006B  
       ADC_SetInterruptHandler@InterruptHandler 006B                                 _eusart1RxBuffer 0100  
                               _eusart1TxBuffer 00CB                 ?_INTERRUPT_InterruptManagerHigh 0001  
              ??_INTERRUPT_InterruptManagerHigh 0061                               _SYSTEM_Initialize 1B20  
                                    __accesstop 0060                         __end_of__initialization 196A  
                                     ?_INT0_ISR 0001                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                                   __end_ofi2_abs 1A38  
                                 __end_ofi2_pad 14BA                   __end_of_EUSART1_RxDataHandler 1AF6  
                                __pcstackCOMRAM 0001                                    __pidataBANK0 1CD4  
                           ??_SYSTEM_Initialize 006D                                       ?_TMR0_ISR 0001  
                                 __end_of_fputc 12AC                                   __end_of_fputs 18AA  
                             ??_SPI1_Initialize 006B                                   __end_of_putch 1C40  
                                   i2printf@fmt 005B                                _carater_recebido 00F3  
                          __end_of_EUSART1_Read 1812                                ?_CCP5_Initialize 0001  
                        ??_EUSART1_Transmit_ISR 0001                         _ADC_GetConversionResult 1BFC  
                            _spi1_configuration FE33                                         ??i2_abs 0015  
                                       ??i2_pad 0019                     __end_of_EUSART1_Receive_ISR 1214  
                                i2vfpfcnvrt@fmt 0043                                       ?i2_printf 005B  
                         i2EUSART1_Write@txData 0001                                ?_TMR0_StartTimer 0001  
                                       ??_fputc 0071                       __end_of_SYSTEM_Initialize 1B46  
                                       ??_fputs 007A                                         ??_putch 006C  
                                 _eusart1RxHead 00E6                                   _eusart1TxHead 00E8  
                                 _eusart1RxTail 00E5                                      __pbssBANK0 00C3  
                                    __pbssBANK1 0100                                   _eusart1TxTail 00E7  
             _EUSART1_TxDefaultInterruptHandler 0130                 ??_EUSART1_SetRxInterruptHandler 006D  
                         _INT0_InterruptHandler 00EB                                      ??_INT0_ISR 005F  
                                       ?i2_dtoa 001E                 __end_of_EUSART1_SetErrorHandler 1CAC  
              __end_of_TMR0_SetInterruptHandler 1C70                                         ?___lmul 0001  
                                    ??_TMR0_ISR 0003                                         _CCP5CON 000F54  
                                       _ADC_ISR 1A6C                                  ___lmul@product 0009  
                                       ?_printf 0134          __end_of_EUSART1_SetFramingErrorHandler 1CA2  
                _EUSART1_SetFramingErrorHandler 1C98                    ?_EUSART1_DefaultErrorHandler 0001  
                                       _OSCCON2 000FD2                                      ??i2_printf 005D  
                      ?_TMR0_MyInterruptHandler 0001                                         _OSCTUNE 000F9B  
                                       _SPBRGH1 000FB0                                         _SSP1ADD 000FC8  
                                       _SSP1BUF 000FC9                                         i2_fputc 12AC  
                                       i2_fputs 18EE                                         i2pad@fp 0013  
                                       i2_putch 1CB6                                         i2dtoa@d 0020  
                                       i2dtoa@i 003F                                         i2dtoa@n 0036  
                                       i2dtoa@p 0032                                         i2dtoa@s 003E  
                                       i2dtoa@w 0034                       ?_INT0_SetInterruptHandler 006B  
                          _ADC_InterruptHandler 00ED                                         __Hparam 0000  
                       _ADC_SetInterruptHandler 1CAC                                         __Lparam 0000  
                                       ___aldiv 1046                                         ___aodiv 0642  
                                       ___aomod 0ACE                                       ?_vfprintf 00BD  
                                i2vfprintf@cfmt 0059                             _EUSART1_is_rx_ready 1BB6  
                     ??_ADC_GetConversionResult 0003                                    ?i2_vfpfcnvrt 0041  
                                       __pcinit 1932                                         __ramtop 1000  
                                       __ptext0 14BA                                         __ptext1 1CD8  
                                       __ptext2 0954                                         __ptext3 1AF6  
                                       __ptext4 176C                                         __ptext5 0D98  
                                       __ptext6 0142                                         __ptext7 13C2  
                                       __ptext8 1862                                         __ptext9 1214  
                                     _T0CONbits 000FD5                           _OSCILLATOR_Initialize 1C40  
                              ___aldiv@dividend 000D                              _EUSART1_Initialize 1342  
                      ??_PIN_MANAGER_Initialize 006B                                    ??_CheckUSART 006C  
                 ??_EUSART1_DefaultErrorHandler 0001                            end_of_initialization 196A  
                          ?_EUSART1_is_rx_ready 0001                             ?_EUSART1_Initialize 0001  
                                    _nivel_agua 00DB                                         fputc@fp 006F  
                   _EUSART1_OverrunErrorHandler 012A                                         fputs@fp 0078  
         __end_of_EUSART1_SetRxInterruptHandler 1C8E                   _EUSART1_SetRxInterruptHandler 1C84  
                               i2_EUSART1_Write 1714                               __end_of_vfpfcnvrt 0EF0  
                              ___aldiv@quotient 0017                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                              vfpfcnvrt@convarg 00B3                              __end_of_CheckUSART 1596  
                                  ??i2_vfprintf 0059                                      ??_vfprintf 00C3  
                          ??_EUSART1_Initialize 006D                        _TMR0_SetInterruptHandler 1C66  
               __end_of_TMR0_MyInterruptHandler 1C66                               i2___aodiv@divisor 0009  
                             i2___aodiv@counter 0011             __end_of_ADC_DefaultInterruptHandler 1CE8  
                   _ADC_DefaultInterruptHandler 1CE6                                       _TRISCbits 000F94  
                           _ADC_StartConversion 1CDC                         fp__EUSART1_Transmit_ISR 0000  
                       _INT0_MyInterruptHandler 16BA                      fp__INT0_MyInterruptHandler 0000  
                                     i2___aodiv 07CC                                       i2___aomod 0C34  
                           EUSART1_Write@txData 006B                           ??_EUSART1_is_rx_ready 006B  
                 ??_ADC_DefaultInterruptHandler 0001                              __end_ofi2_vfprintf 1862  
                     ??_ADC_SetInterruptHandler 006D                                 _SPI1_Initialize 1C10  
                                  _EUSART1_Read 17C0                                  __end_ofi2_dtoa 0642  
                          ?_ADC_StartConversion 0001                    __end_of_INTERRUPT_Initialize 1C5A  
          __end_of_INT0_DefaultInterruptHandler 1CE4                    _INT0_DefaultInterruptHandler 1CE2  
                                __end_of___lmul 1600                                     vfpfcnvrt@ap 00AF  
                                   vfpfcnvrt@cp 00BB                                     vfpfcnvrt@fp 00AB  
                                _ADC_Initialize 1B46                                       i2fputc@fp 0005  
                        ?_OSCILLATOR_Initialize 0001                                       i2fputs@fp 000E  
                                __end_of_printf 1B20                           __end_of_INT0_CallBack 1ACA  
                           start_initialization 1932                                     __end_of_abs 19B6  
                                   __end_of_pad 1440                                      ?i2___aodiv 0001  
                                    ?i2___aomod 0001   EUSART1_SetRxInterruptHandler@interruptHandler 006B  
 EUSART1_SetTxInterruptHandler@interruptHandler 006B                                     putch@txData 006C  
                         __end_of_EUSART1_Write 16BA                        ??_ADC_MyInterruptHandler 001B  
                       __end_ofi2_EUSART1_Write 176C                          fp__EUSART1_Receive_ISR 0000  
                                      ??i2_dtoa 0028                           ??_ADC_StartConversion 0001  
                                   vfprintf@fmt 00BF                                    i2vfprintf@ap 0057  
                                  i2vfprintf@fp 0053                                        ??___lmul 0009  
                         _EUSART1_RxDataHandler 1ACA                  ?_EUSART1_SetRxInterruptHandler 006B  
                        __end_of_ADC_Initialize 1B6C                                     __pdataBANK0 00F1  
                                      ?_ADC_ISR 0001                      __end_of_EXT_INT_Initialize 1BFC  
               fp__INT0_DefaultInterruptHandler 0000                   ?_INT0_DefaultInterruptHandler 0001  
                                      ??_printf 00C3                               i2___aomod@divisor 0009  
                                _eusart1RxCount 00E4                               i2___aomod@counter 0011  
                     ??_INT0_MyInterruptHandler 0060               _EUSART1_RxDefaultInterruptHandler 012E  
              __end_of_INT0_SetInterruptHandler 1C7A                                   __pcstackBANK0 0060  
                                 __pcstackBANK1 0132                                ___aodiv@dividend 006B  
                       __end_of_SPI1_Initialize 1C22                 ??_EUSART1_SetTxInterruptHandler 006D  
                                      ?i2_fputc 0003                                        ?i2_fputs 000C  
              ??_EUSART1_SetFramingErrorHandler 006D                 ?_EUSART1_SetFramingErrorHandler 006B  
                                      ?i2_putch 0001                           _TMR0_InterruptHandler 00E9  
                                     __pnvBANK0 00E9                                       __pnvBANK1 0128  
                        _PIN_MANAGER_Initialize 18AA                                       _dtoa$1855 009A  
                                     __pintcode 0008                               _ADC_SelectChannel 1BCE  
                                 __pmediumconst FE32                                        ?___aldiv 000D  
                                      ?___aodiv 006B                                        ?___aomod 006B  
                              ___aodiv@quotient 007D                                 ?_ADC_Initialize 0001  
                            ?_ADC_SelectChannel 0001                                        _BAUDCON1 000FB8  
         fp__EUSART1_DefaultOverrunErrorHandler 0000      __end_of_EUSART1_DefaultOverrunErrorHandler 1CCE  
          ??_EUSART1_DefaultOverrunErrorHandler 0001             ?_EUSART1_DefaultOverrunErrorHandler 0001  
            _EUSART1_DefaultOverrunErrorHandler 1CC8                             ??_ADC_SelectChannel 0001  
                          _EUSART1_ErrorHandler 0128                         _EUSART1_SetErrorHandler 1CA2  
                                   ??i2___aodiv 0011                                     ??i2___aomod 0011  
                    __end_of_ShowMenuInTerminal 0ACE                            _INTERRUPT_Initialize 1C4E  
                               ___aldiv@divisor 0011                               ??_TMR0_Initialize 006D  
                               ___aldiv@counter 0015                                        _INT0_ISR 1CC0  
                              ?i2_EUSART1_Write 0001         EUSART1_SetErrorHandler@interruptHandler 006B  
                                      _LATBbits 000F8A                                        _IPR1bits 000F9F  
                                      _PIE1bits 000F9D                       __end_of_ADC_SelectChannel 1BE6  
                                      i2u210_40 107A                                        i2u210_41 1076  
                                      i2u211_40 10B4                                        i2u211_41 10B0  
                                      i2u212_40 10D6                                        i2u204_40 1AEE  
                                      i2u212_41 10D2                                        i2u204_41 1AEA  
                                      i2u213_40 10FE                                        i2u213_41 10FA  
                                      i2u214_40 1130                                        i2u222_40 1A82  
                                      i2u230_40 11F0                                        i2u310_40 0F64  
                                      i2u214_41 112C                                        i2u222_41 1A7E  
                                      i2u230_41 11EC                                        i2u310_41 0F60  
                                      i2u207_40 15B4                                        i2u311_40 0F82  
                                      i2u207_41 15B0                                        i2u311_41 0F7E  
                                      i2u208_40 15EE                                        i2u223_48 1A88  
                                      i2u231_48 11F6                                        i2u224_40 19C8  
                                      i2u232_40 1A52                                        i2u208_41 15EA  
                                      i2u223_49 1A9A                                        i2u231_49 120A  
                                      i2u224_41 19C4                                        i2u232_41 1A4E  
                                      i2u209_40 1058                                        i2u225_40 19EA  
                                      i2u209_41 1054                                        i2u225_41 19E6  
                                      i2u226_40 1172                                        i2u322_40 1858  
                                      i2u233_48 1A58                                        i2u226_41 116E  
                                      i2u322_41 1854                                        i2u233_49 1A6A  
                                      i2u251_40 1728                                        i2u330_48 1AB6  
                                      i2u251_41 1724                                        i2u330_49 1AC8  
                                      i2u228_40 11A8                                        i2u227_48 1186  
                                      i2u252_40 1736                                        i2u260_40 132E  
                                      i2u340_40 0096                                        i2u228_41 11A4  
                                      i2u227_49 119A                                        i2u252_41 1732  
                                      i2u260_41 132A                                        i2u340_41 0092  
                                      i2u253_40 1762                                        i2u261_40 1930  
                                      i2u309_40 0F16                                        i2u341_40 00AC  
                    ??_TMR0_SetInterruptHandler 006D                                        i2u253_41 175E  
                                      i2u261_41 192C                                        i2u309_41 0F12  
                                      i2u341_41 00A8                                        i2u229_48 11BE  
                                      i2u270_40 0888                                        i2u326_40 16CA  
                                      i2u342_40 00BA                                        i2u229_49 11D2  
                                      i2u270_41 0884                                        i2u326_41 16C4  
                                      i2u342_41 00B6                                        i2u326_46 16CC  
                                      i2u271_40 08C8                                        i2u327_40 16F2  
                                      i2u335_40 0040                                        i2u271_41 08C4  
                                      i2u327_41 16EC                                        i2u335_41 003C  
                                      i2u327_46 16F4                                        i2u272_40 0912  
                                      i2u280_40 14A4                                        i2u344_40 00E6  
                                      i2u343_48 00C0                                        i2u336_40 004E  
                                      i2u272_41 090E                                        i2u280_41 14A0  
                                      i2u344_41 00E2                                        i2u343_49 00D4  
                                      i2u336_41 004A                                        i2u273_40 0C46  
                                      i2u281_40 1A12                                        i2u257_40 12BE  
                                      i2u329_40 1AB0                                        i2u345_40 00F4  
                                      i2u337_40 0064                                        i2u273_41 0C42  
                                      i2u281_41 1A0E                                        i2u257_41 12BA  
                                      i2u329_41 1AAC                                        i2u345_41 00F0  
                                      i2u337_41 0060                                        _PIR1bits 000F9E  
                                      i2u266_40 07DE                                        i2u274_40 0C78  
                                      i2u258_40 12D0                                        i2u290_40 05E0  
                                      i2u338_40 0072                                        i2u266_41 07DA  
                                      i2u274_41 0C74                                        i2u258_41 12CC  
                                      i2u290_41 05DC                                        i2u338_41 006E  
                                      i2u267_40 0810                                        i2u275_40 0CB6  
                                      i2u259_40 12F8                                        i2u291_40 05FA  
                                      i2u283_40 03F4                                        i2u346_48 00FA  
                                      i2u339_40 0088                                        i2u267_41 080C  
                                      i2u275_41 0CB2                                        i2u259_41 12F4  
                                      i2u291_41 05F6                                        i2u283_41 03EE  
                                      i2u346_49 010E                                        i2u339_41 0084  
                                      i2u276_40 0CE0                                        i2u292_40 060A  
                                      i2u284_40 03F6                                        i2u268_41 083A  
                                      i2u276_41 0CDC                                        i2u292_41 0606  
                                      i2u269_40 085E                                        i2u277_40 0D0E  
                                      i2u285_40 0408                                        i2u269_41 085A  
                                      i2u277_41 0D0A                                        i2u285_41 0404  
                                      i2u278_40 0D56                                        i2u286_40 0444  
                                      i2u278_41 0D52                                        i2u286_41 0440  
                                      i2u279_40 144E                                        i2u287_40 0470  
                                      i2u279_41 144A                                        i2u287_41 046C  
                                      i2u288_40 0486                                        i2u288_41 0482  
                                      i2u289_40 05C2                                        i2u289_41 05BE  
                        ?_EUSART1_RxDataHandler 0001                                        _RCONbits 000FD0  
                fp__ADC_DefaultInterruptHandler 0000                                        _SSP1CON1 000FC6  
                                      _SSP1CON2 000FC5                                        _TMR0_ISR 1A38  
                                      _SSP1STAT 000FC7                                       _vfpfcnvrt 0D98  
                                    _ADCON0bits 000FC2                        ADC_SelectChannel@channel 0002  
                ??_INT0_DefaultInterruptHandler 0001                                        i2_printf 1B6C  
                                      i2pad@buf 0015                                        i2dtoa@fp 001E  
                              ?_SPI1_Initialize 0001                               ___lmul@multiplier 0001  
                                   _INTCON2bits 000FF1                                       copy_data0 1946  
                                      i2fputc@c 0003                           ?_INTERRUPT_Initialize 0001  
                                      i2fputs@c 0010                                        i2fputs@i 0011  
                                      i2fputs@s 000C                        _INT0_SetInterruptHandler 1C70  
                         EUSART1_Read@readValue 006B                               ??_CCP5_Initialize 006B  
         __end_of_EUSART1_SetTxInterruptHandler 1C84                   _EUSART1_SetTxInterruptHandler 1C7A  
                                      __Hrparam 0000                                      vfprintf@ap 00C1  
                                      __Lrparam 0000                                      vfprintf@fp 00BD  
                      ?_ADC_GetConversionResult 0001                         ??_OSCILLATOR_Initialize 006B  
                             ??_TMR0_StartTimer 006B                          _ADC_MyInterruptHandler 1600  
                                    ?_vfpfcnvrt 00AB                                 ___aodiv@divisor 0073  
                               ___aodiv@counter 007B                              i2vfpfcnvrt@convarg 0049  
                     ??_EUSART1_SetErrorHandler 006D             __end_of_EUSART1_DefaultErrorHandler 1CD4  
                   _EUSART1_DefaultErrorHandler 1CCE                     __end_of_EUSART1_is_rx_ready 1BCE  
                                      __ptext10 1C32                                        __ptext11 1974  
                                      __ptext20 1C4E                                        __ptext12 0ACE  
                                      __ptext21 1BE6                                        __ptext13 0642  
                                      __ptext30 1B46                                        __ptext22 1C70  
                                      __ptext14 1B20                                        __ptext31 1CAC  
                                      __ptext23 1342                                        __ptext15 1B92  
                                      __ptext40 1CDC                                        __ptext32 152A  
                                      __ptext24 1C7A                                        __ptext16 1C66  
                                      __ptext41 1CC0                                        __ptext33 1BB6  
                                      __ptext25 1C84                                        __ptext17 1C10  
                                      __ptext50 18EE                                        __ptext42 1A9C  
                                      __ptext34 1660                                        __ptext26 1C8E  
                                      __ptext18 18AA                                        __ptext51 12AC  
                                      __ptext43 1CE2                                        __ptext35 17C0  
                                      __ptext27 1C98                                        __ptext19 1C40  
                                      __ptext60 1CE4                                        __ptext52 1CB6  
                                      __ptext44 16BA                                        __ptext28 1CA2  
                                      __ptext61 1CCE                                        __ptext53 1714  
                                      __ptext45 1B6C                                        __ptext37 1A38  
                                      __ptext29 1C22                                        __ptext70 0000  
                                      __ptext62 1ACA                                        __ptext54 19F8  
                                      __ptext46 1812                                        __ptext38 1CE0  
                                      __ptext63 1A6C                                        __ptext55 0C34  
                                      __ptext47 0EF0                                        __ptext39 1C5A  
                                      __ptext64 1CE6                                        __ptext56 07CC  
                                      __ptext48 03C4                                        __ptext65 1600  
                                      __ptext57 19B6                                        __ptext49 1440  
                                      __ptext66 1596                                        __ptext58 1152  
                                      __ptext67 1046                                        __ptext59 1CC8  
                                      __ptext68 1BCE                                        __ptext69 1BFC  
                                  _SSP1CON1bits 000FC6                                        _cnt_char 00E1  
                       _TMR0_MyInterruptHandler 1C5A                      fp__TMR0_MyInterruptHandler 0000  
          __end_of_TMR0_DefaultInterruptHandler 1CE2                    _TMR0_DefaultInterruptHandler 1CE0  
EUSART1_SetOverrunErrorHandler@interruptHandler 006B                                        isa$xinst 000000  
                                      int$flags 005F                                        _vfprintf 176C  
                                     printf@fmt 0134                                     _intro_valor 00E0  
                   _EUSART1_FramingErrorHandler 012C                             _EUSART1_Receive_ISR 1152  
                              ___aomod@dividend 006B                                      _INTCONbits 000FF2  
                        ??_INTERRUPT_Initialize 006B                              _EXT_INT_Initialize 1BE6  
                      ?_ADC_SetInterruptHandler 006B                                        intlevel2 0000  
                          ?_EUSART1_Receive_ISR 0001                     __end_of_ADC_StartConversion 1CE0  
                       ?_PIN_MANAGER_Initialize 0001                 __end_of_ADC_GetConversionResult 1C10  
                           ?_EXT_INT_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 1C98  
                _EUSART1_SetOverrunErrorHandler 1C8E                                      _RCSTA1bits 000FAB  
                  __end_of_EUSART1_Transmit_ISR 19F8                                ??_ADC_Initialize 006D  
               fp__TMR0_DefaultInterruptHandler 0000                   ?_TMR0_DefaultInterruptHandler 0001  
                                      printf@ap 0138  EUSART1_SetFramingErrorHandler@interruptHandler 006B  
                ?_EUSART1_SetTxInterruptHandler 006B                                 ___aomod@divisor 0073  
                                 ??i2_vfpfcnvrt 0047                                     ??_vfpfcnvrt 00B1  
                               ___aomod@counter 007B                              _eusart1RxLastError 00E3  
        __end_of_INTERRUPT_InterruptManagerHigh 013E                  _INTERRUPT_InterruptManagerHigh 0008  
                          ??_EXT_INT_Initialize 006D                                     _temperatura 00F1  
                               _TMR0_Initialize 1B92                                    ___aldiv@sign 0016  
                                  ___aodiv@sign 007C                           ??_EUSART1_Receive_ISR 0001  
                __end_of_PIN_MANAGER_Initialize 18EE                       ??_TMR0_MyInterruptHandler 0003  
                            i2___aodiv@dividend 0001                         ??_EUSART1_RxDataHandler 0001  
                                  ___aomod@sign 007C                      __end_of_spi1_configuration FE37  
                            _ShowMenuInTerminal 0954  
