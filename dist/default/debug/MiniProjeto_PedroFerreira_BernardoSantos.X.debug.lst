

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Jan 05 09:34:25 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    86                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    87                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    88                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    89   000000                     
    90                           ; Version 2.40
    91                           ; Generated 17/11/2021 GMT
    92                           ; 
    93                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    94                           ; All rights reserved.
    95                           ; 
    96                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    97                           ; 
    98                           ; Redistribution and use in source and binary forms, with or without modification, are
    99                           ; permitted provided that the following conditions are met:
   100                           ; 
   101                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   102                           ;        conditions and the following disclaimer.
   103                           ; 
   104                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   105                           ;        of conditions and the following disclaimer in the documentation and/or other
   106                           ;        materials provided with the distribution. Publication is not required when
   107                           ;        this file is used in an embedded application.
   108                           ; 
   109                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   110                           ;        software without specific prior written permission.
   111                           ; 
   112                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   113                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   114                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   115                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   116                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   117                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   118                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   119                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   120                           ; 
   121                           ; 
   122                           ; Code-generator required, PIC18F46K22 Definitions
   123                           ; 
   124                           ; SFR Addresses
   125   000000                     
   126                           	psect	idataCOMRAM
   127   001290                     __pidataCOMRAM:
   128                           	callstack 0
   129                           
   130                           ;initializer for _temperatura
   131   001290  0012               	dw	18
   132                           
   133                           	psect	idataBANK0
   134   001292                     __pidataBANK0:
   135                           	callstack 0
   136                           
   137                           ;initializer for _carater_recebido
   138   001292  01                 	db	1
   139                           
   140                           ;initializer for _menu
   141   001293  30                 	db	48
   142                           
   143                           	psect	mediumconst
   144   00FE38                     __pmediumconst:
   145                           	callstack 0
   146   00FE38  00                 	db	0
   147   00FE39                     _spi1_configuration:
   148                           	callstack 0
   149   00FE39  00                 	db	0
   150   00FE3A  40                 	db	64
   151   00FE3B  01                 	db	1
   152   00FE3C  00                 	db	0
   153   00FE3D                     __end_of_spi1_configuration:
   154                           	callstack 0
   155   000000                     _T1CON	set	4045
   156   000000                     _TMR1L	set	4046
   157   000000                     _TMR1H	set	4047
   158   000000                     _ANSELA	set	3896
   159   000000                     _ANSELB	set	3897
   160   000000                     _ANSELC	set	3898
   161   000000                     _ANSELD	set	3899
   162   000000                     _TRISD	set	3989
   163   000000                     _TRISB	set	3987
   164   000000                     _TRISE	set	3990
   165   000000                     _LATC	set	3979
   166   000000                     _LATB	set	3978
   167   000000                     _OSCTUNE	set	3995
   168   000000                     _RCREG1	set	4014
   169   000000                     _TXREG1	set	4013
   170   000000                     _SPBRG1	set	4015
   171   000000                     _TXSTA1	set	4012
   172   000000                     _PIE1bits	set	3997
   173   000000                     _ADRESH	set	4036
   174   000000                     _ADRESL	set	4035
   175   000000                     _PIR1bits	set	3998
   176   000000                     _SSP1CON2	set	4037
   177   000000                     _CCP5CON	set	3924
   178   00FE3D                     STR_5:
   179   00FE3D  0D                 	db	13
   180   00FE3E  0A                 	db	10
   181   00FE3F  33                 	db	51	;'3'
   182   00FE40  20                 	db	32
   183   00FE41  2D                 	db	45
   184   00FE42  20                 	db	32
   185   00FE43  56                 	db	86	;'V'
   186   00FE44  69                 	db	105	;'i'
   187   00FE45  73                 	db	115	;'s'
   188   00FE46  75                 	db	117	;'u'
   189   00FE47  61                 	db	97	;'a'
   190   00FE48  6C                 	db	108	;'l'
   191   00FE49  69                 	db	105	;'i'
   192   00FE4A  7A                 	db	122	;'z'
   193   00FE4B  61                 	db	97	;'a'
   194   00FE4C  72                 	db	114	;'r'
   195   00FE4D  20                 	db	32
   196   00FE4E  61                 	db	97	;'a'
   197   00FE4F  20                 	db	32
   198   00FE50  70                 	db	112	;'p'
   199   00FE51  65                 	db	101	;'e'
   200   00FE52  72                 	db	114	;'r'
   201   00FE53  63                 	db	99	;'c'
   202   00FE54  65                 	db	101	;'e'
   203   00FE55  6E                 	db	110	;'n'
   204   00FE56  74                 	db	116	;'t'
   205   00FE57  61                 	db	97	;'a'
   206   00FE58  67                 	db	103	;'g'
   207   00FE59  65                 	db	101	;'e'
   208   00FE5A  6D                 	db	109	;'m'
   209   00FE5B  20                 	db	32
   210   00FE5C  64                 	db	100	;'d'
   211   00FE5D  6F                 	db	111	;'o'
   212   00FE5E  20                 	db	32
   213   00FE5F  6E                 	db	110	;'n'
   214   00FE60  69                 	db	105	;'i'
   215   00FE61  76                 	db	118	;'v'
   216   00FE62  65                 	db	101	;'e'
   217   00FE63  6C                 	db	108	;'l'
   218   00FE64  20                 	db	32
   219   00FE65  64                 	db	100	;'d'
   220   00FE66  65                 	db	101	;'e'
   221   00FE67  20                 	db	32
   222   00FE68  61                 	db	97	;'a'
   223   00FE69  67                 	db	103	;'g'
   224   00FE6A  75                 	db	117	;'u'
   225   00FE6B  61                 	db	97	;'a'
   226   00FE6C  00                 	db	0
   227   00FE6D                     STR_7:
   228   00FE6D  0D                 	db	13
   229   00FE6E  0A                 	db	10
   230   00FE6F  35                 	db	53	;'5'
   231   00FE70  20                 	db	32
   232   00FE71  2D                 	db	45
   233   00FE72  20                 	db	32
   234   00FE73  50                 	db	80	;'P'
   235   00FE74  72                 	db	114	;'r'
   236   00FE75  6F                 	db	111	;'o'
   237   00FE76  67                 	db	103	;'g'
   238   00FE77  72                 	db	114	;'r'
   239   00FE78  61                 	db	97	;'a'
   240   00FE79  6D                 	db	109	;'m'
   241   00FE7A  61                 	db	97	;'a'
   242   00FE7B  72                 	db	114	;'r'
   243   00FE7C  20                 	db	32
   244   00FE7D  6E                 	db	110	;'n'
   245   00FE7E  6F                 	db	111	;'o'
   246   00FE7F  76                 	db	118	;'v'
   247   00FE80  6F                 	db	111	;'o'
   248   00FE81  20                 	db	32
   249   00FE82  76                 	db	118	;'v'
   250   00FE83  61                 	db	97	;'a'
   251   00FE84  6C                 	db	108	;'l'
   252   00FE85  6F                 	db	111	;'o'
   253   00FE86  72                 	db	114	;'r'
   254   00FE87  20                 	db	32
   255   00FE88  64                 	db	100	;'d'
   256   00FE89  65                 	db	101	;'e'
   257   00FE8A  20                 	db	32
   258   00FE8B  72                 	db	114	;'r'
   259   00FE8C  65                 	db	101	;'e'
   260   00FE8D  66                 	db	102	;'f'
   261   00FE8E  65                 	db	101	;'e'
   262   00FE8F  72                 	db	114	;'r'
   263   00FE90  65                 	db	101	;'e'
   264   00FE91  6E                 	db	110	;'n'
   265   00FE92  63                 	db	99	;'c'
   266   00FE93  69                 	db	105	;'i'
   267   00FE94  61                 	db	97	;'a'
   268   00FE95  00                 	db	0
   269   00FE96                     STR_25:
   270   00FE96  0D                 	db	13
   271   00FE97  0A                 	db	10
   272   00FE98  50                 	db	80	;'P'
   273   00FE99  72                 	db	114	;'r'
   274   00FE9A  69                 	db	105	;'i'
   275   00FE9B  6D                 	db	109	;'m'
   276   00FE9C  61                 	db	97	;'a'
   277   00FE9D  20                 	db	32
   278   00FE9E  30                 	db	48	;'0'
   279   00FE9F  20                 	db	32
   280   00FEA0  70                 	db	112	;'p'
   281   00FEA1  61                 	db	97	;'a'
   282   00FEA2  72                 	db	114	;'r'
   283   00FEA3  61                 	db	97	;'a'
   284   00FEA4  20                 	db	32
   285   00FEA5  76                 	db	118	;'v'
   286   00FEA6  6F                 	db	111	;'o'
   287   00FEA7  6C                 	db	108	;'l'
   288   00FEA8  74                 	db	116	;'t'
   289   00FEA9  61                 	db	97	;'a'
   290   00FEAA  72                 	db	114	;'r'
   291   00FEAB  20                 	db	32
   292   00FEAC  61                 	db	97	;'a'
   293   00FEAD  6F                 	db	111	;'o'
   294   00FEAE  20                 	db	32
   295   00FEAF  4D                 	db	77	;'M'
   296   00FEB0  65                 	db	101	;'e'
   297   00FEB1  6E                 	db	110	;'n'
   298   00FEB2  75                 	db	117	;'u'
   299   00FEB3  20                 	db	32
   300   00FEB4  50                 	db	80	;'P'
   301   00FEB5  72                 	db	114	;'r'
   302   00FEB6  69                 	db	105	;'i'
   303   00FEB7  6E                 	db	110	;'n'
   304   00FEB8  63                 	db	99	;'c'
   305   00FEB9  69                 	db	105	;'i'
   306   00FEBA  70                 	db	112	;'p'
   307   00FEBB  61                 	db	97	;'a'
   308   00FEBC  6C                 	db	108	;'l'
   309   00FEBD  00                 	db	0
   310   00FEBE                     STR_6:
   311   00FEBE  0D                 	db	13
   312   00FEBF  0A                 	db	10
   313   00FEC0  34                 	db	52	;'4'
   314   00FEC1  20                 	db	32
   315   00FEC2  2D                 	db	45
   316   00FEC3  20                 	db	32
   317   00FEC4  56                 	db	86	;'V'
   318   00FEC5  69                 	db	105	;'i'
   319   00FEC6  73                 	db	115	;'s'
   320   00FEC7  75                 	db	117	;'u'
   321   00FEC8  61                 	db	97	;'a'
   322   00FEC9  6C                 	db	108	;'l'
   323   00FECA  69                 	db	105	;'i'
   324   00FECB  7A                 	db	122	;'z'
   325   00FECC  61                 	db	97	;'a'
   326   00FECD  72                 	db	114	;'r'
   327   00FECE  20                 	db	32
   328   00FECF  6F                 	db	111	;'o'
   329   00FED0  20                 	db	32
   330   00FED1  6E                 	db	110	;'n'
   331   00FED2  69                 	db	105	;'i'
   332   00FED3  76                 	db	118	;'v'
   333   00FED4  65                 	db	101	;'e'
   334   00FED5  6C                 	db	108	;'l'
   335   00FED6  20                 	db	32
   336   00FED7  64                 	db	100	;'d'
   337   00FED8  65                 	db	101	;'e'
   338   00FED9  20                 	db	32
   339   00FEDA  72                 	db	114	;'r'
   340   00FEDB  65                 	db	101	;'e'
   341   00FEDC  66                 	db	102	;'f'
   342   00FEDD  65                 	db	101	;'e'
   343   00FEDE  72                 	db	114	;'r'
   344   00FEDF  65                 	db	101	;'e'
   345   00FEE0  6E                 	db	110	;'n'
   346   00FEE1  63                 	db	99	;'c'
   347   00FEE2  69                 	db	105	;'i'
   348   00FEE3  61                 	db	97	;'a'
   349   00FEE4  00                 	db	0
   350   00FEE5                     STR_4:
   351   00FEE5  0D                 	db	13
   352   00FEE6  0A                 	db	10
   353   00FEE7  32                 	db	50	;'2'
   354   00FEE8  20                 	db	32
   355   00FEE9  2D                 	db	45
   356   00FEEA  20                 	db	32
   357   00FEEB  41                 	db	65	;'A'
   358   00FEEC  74                 	db	116	;'t'
   359   00FEED  69                 	db	105	;'i'
   360   00FEEE  76                 	db	118	;'v'
   361   00FEEF  61                 	db	97	;'a'
   362   00FEF0  72                 	db	114	;'r'
   363   00FEF1  20                 	db	32
   364   00FEF2  63                 	db	99	;'c'
   365   00FEF3  6F                 	db	111	;'o'
   366   00FEF4  6D                 	db	109	;'m'
   367   00FEF5  74                 	db	116	;'t'
   368   00FEF6  72                 	db	114	;'r'
   369   00FEF7  6F                 	db	111	;'o'
   370   00FEF8  6C                 	db	108	;'l'
   371   00FEF9  6F                 	db	111	;'o'
   372   00FEFA  20                 	db	32
   373   00FEFB  64                 	db	100	;'d'
   374   00FEFC  6F                 	db	111	;'o'
   375   00FEFD  20                 	db	32
   376   00FEFE  6E                 	db	110	;'n'
   377   00FEFF  69                 	db	105	;'i'
   378   00FF00  76                 	db	118	;'v'
   379   00FF01  65                 	db	101	;'e'
   380   00FF02  6C                 	db	108	;'l'
   381   00FF03  20                 	db	32
   382   00FF04  64                 	db	100	;'d'
   383   00FF05  65                 	db	101	;'e'
   384   00FF06  20                 	db	32
   385   00FF07  61                 	db	97	;'a'
   386   00FF08  67                 	db	103	;'g'
   387   00FF09  75                 	db	117	;'u'
   388   00FF0A  61                 	db	97	;'a'
   389   00FF0B  00                 	db	0
   390   00FF0C                     STR_13:
   391   00FF0C  0D                 	db	13
   392   00FF0D  0A                 	db	10
   393   00FF0E  43                 	db	67	;'C'
   394   00FF0F  6F                 	db	111	;'o'
   395   00FF10  6E                 	db	110	;'n'
   396   00FF11  74                 	db	116	;'t'
   397   00FF12  72                 	db	114	;'r'
   398   00FF13  6F                 	db	111	;'o'
   399   00FF14  6C                 	db	108	;'l'
   400   00FF15  6F                 	db	111	;'o'
   401   00FF16  20                 	db	32
   402   00FF17  64                 	db	100	;'d'
   403   00FF18  6F                 	db	111	;'o'
   404   00FF19  20                 	db	32
   405   00FF1A  6E                 	db	110	;'n'
   406   00FF1B  69                 	db	105	;'i'
   407   00FF1C  76                 	db	118	;'v'
   408   00FF1D  65                 	db	101	;'e'
   409   00FF1E  6C                 	db	108	;'l'
   410   00FF1F  20                 	db	32
   411   00FF20  64                 	db	100	;'d'
   412   00FF21  65                 	db	101	;'e'
   413   00FF22  20                 	db	32
   414   00FF23  61                 	db	97	;'a'
   415   00FF24  67                 	db	103	;'g'
   416   00FF25  75                 	db	117	;'u'
   417   00FF26  61                 	db	97	;'a'
   418   00FF27  20                 	db	32
   419   00FF28  61                 	db	97	;'a'
   420   00FF29  74                 	db	116	;'t'
   421   00FF2A  69                 	db	105	;'i'
   422   00FF2B  76                 	db	118	;'v'
   423   00FF2C  61                 	db	97	;'a'
   424   00FF2D  64                 	db	100	;'d'
   425   00FF2E  6F                 	db	111	;'o'
   426   00FF2F  00                 	db	0
   427   00FF30                     STR_16:
   428   00FF30  0D                 	db	13
   429   00FF31  0A                 	db	10
   430   00FF32  50                 	db	80	;'P'
   431   00FF33  65                 	db	101	;'e'
   432   00FF34  72                 	db	114	;'r'
   433   00FF35  63                 	db	99	;'c'
   434   00FF36  65                 	db	101	;'e'
   435   00FF37  6E                 	db	110	;'n'
   436   00FF38  74                 	db	116	;'t'
   437   00FF39  61                 	db	97	;'a'
   438   00FF3A  67                 	db	103	;'g'
   439   00FF3B  65                 	db	101	;'e'
   440   00FF3C  6D                 	db	109	;'m'
   441   00FF3D  20                 	db	32
   442   00FF3E  64                 	db	100	;'d'
   443   00FF3F  6F                 	db	111	;'o'
   444   00FF40  20                 	db	32
   445   00FF41  6E                 	db	110	;'n'
   446   00FF42  69                 	db	105	;'i'
   447   00FF43  76                 	db	118	;'v'
   448   00FF44  65                 	db	101	;'e'
   449   00FF45  6C                 	db	108	;'l'
   450   00FF46  20                 	db	32
   451   00FF47  64                 	db	100	;'d'
   452   00FF48  65                 	db	101	;'e'
   453   00FF49  20                 	db	32
   454   00FF4A  61                 	db	97	;'a'
   455   00FF4B  67                 	db	103	;'g'
   456   00FF4C  75                 	db	117	;'u'
   457   00FF4D  61                 	db	97	;'a'
   458   00FF4E  3A                 	db	58	;':'
   459   00FF4F  20                 	db	32
   460   00FF50  25                 	db	37
   461   00FF51  64                 	db	100	;'d'
   462   00FF52  00                 	db	0
   463   00FF53                     STR_1:
   464   00FF53  53                 	db	83	;'S'
   465   00FF54  45                 	db	69	;'E'
   466   00FF55  54                 	db	84	;'T'
   467   00FF56  55                 	db	85	;'U'
   468   00FF57  50                 	db	80	;'P'
   469   00FF58  20                 	db	32
   470   00FF59  43                 	db	67	;'C'
   471   00FF5A  4F                 	db	79	;'O'
   472   00FF5B  4D                 	db	77	;'M'
   473   00FF5C  50                 	db	80	;'P'
   474   00FF5D  4C                 	db	76	;'L'
   475   00FF5E  45                 	db	69	;'E'
   476   00FF5F  54                 	db	84	;'T'
   477   00FF60  45                 	db	69	;'E'
   478   00FF61  44                 	db	68	;'D'
   479   00FF62  20                 	db	32
   480   00FF63  53                 	db	83	;'S'
   481   00FF64  55                 	db	85	;'U'
   482   00FF65  43                 	db	67	;'C'
   483   00FF66  43                 	db	67	;'C'
   484   00FF67  45                 	db	69	;'E'
   485   00FF68  53                 	db	83	;'S'
   486   00FF69  53                 	db	83	;'S'
   487   00FF6A  46                 	db	70	;'F'
   488   00FF6B  55                 	db	85	;'U'
   489   00FF6C  4C                 	db	76	;'L'
   490   00FF6D  4C                 	db	76	;'L'
   491   00FF6E  59                 	db	89	;'Y'
   492   00FF6F  0D                 	db	13
   493   00FF70  0A                 	db	10
   494   00FF71  00                 	db	0
   495   00FF72                     STR_8:
   496   00FF72  0D                 	db	13
   497   00FF73  0A                 	db	10
   498   00FF74  30                 	db	48	;'0'
   499   00FF75  20                 	db	32
   500   00FF76  2D                 	db	45
   501   00FF77  20                 	db	32
   502   00FF78  56                 	db	86	;'V'
   503   00FF79  6F                 	db	111	;'o'
   504   00FF7A  6C                 	db	108	;'l'
   505   00FF7B  74                 	db	116	;'t'
   506   00FF7C  61                 	db	97	;'a'
   507   00FF7D  72                 	db	114	;'r'
   508   00FF7E  20                 	db	32
   509   00FF7F  61                 	db	97	;'a'
   510   00FF80  6F                 	db	111	;'o'
   511   00FF81  20                 	db	32
   512   00FF82  4D                 	db	77	;'M'
   513   00FF83  65                 	db	101	;'e'
   514   00FF84  6E                 	db	110	;'n'
   515   00FF85  75                 	db	117	;'u'
   516   00FF86  20                 	db	32
   517   00FF87  50                 	db	80	;'P'
   518   00FF88  72                 	db	114	;'r'
   519   00FF89  69                 	db	105	;'i'
   520   00FF8A  6E                 	db	110	;'n'
   521   00FF8B  63                 	db	99	;'c'
   522   00FF8C  69                 	db	105	;'i'
   523   00FF8D  70                 	db	112	;'p'
   524   00FF8E  61                 	db	97	;'a'
   525   00FF8F  6C                 	db	108	;'l'
   526   00FF90  00                 	db	0
   527   00FF91                     STR_3:
   528   00FF91  0D                 	db	13
   529   00FF92  0A                 	db	10
   530   00FF93  31                 	db	49	;'1'
   531   00FF94  20                 	db	32
   532   00FF95  2D                 	db	45
   533   00FF96  20                 	db	32
   534   00FF97  44                 	db	68	;'D'
   535   00FF98  65                 	db	101	;'e'
   536   00FF99  73                 	db	115	;'s'
   537   00FF9A  6C                 	db	108	;'l'
   538   00FF9B  69                 	db	105	;'i'
   539   00FF9C  67                 	db	103	;'g'
   540   00FF9D  61                 	db	97	;'a'
   541   00FF9E  72                 	db	114	;'r'
   542   00FF9F  20                 	db	32
   543   00FFA0  62                 	db	98	;'b'
   544   00FFA1  6F                 	db	111	;'o'
   545   00FFA2  6D                 	db	109	;'m'
   546   00FFA3  62                 	db	98	;'b'
   547   00FFA4  61                 	db	97	;'a'
   548   00FFA5  20                 	db	32
   549   00FFA6  64                 	db	100	;'d'
   550   00FFA7  65                 	db	101	;'e'
   551   00FFA8  20                 	db	32
   552   00FFA9  61                 	db	97	;'a'
   553   00FFAA  67                 	db	103	;'g'
   554   00FFAB  75                 	db	117	;'u'
   555   00FFAC  61                 	db	97	;'a'
   556   00FFAD  00                 	db	0
   557   00FFAE                     STR_10:
   558   00FFAE  0D                 	db	13
   559   00FFAF  0A                 	db	10
   560   00FFB0  42                 	db	66	;'B'
   561   00FFB1  6F                 	db	111	;'o'
   562   00FFB2  6D                 	db	109	;'m'
   563   00FFB3  62                 	db	98	;'b'
   564   00FFB4  61                 	db	97	;'a'
   565   00FFB5  20                 	db	32
   566   00FFB6  64                 	db	100	;'d'
   567   00FFB7  65                 	db	101	;'e'
   568   00FFB8  20                 	db	32
   569   00FFB9  61                 	db	97	;'a'
   570   00FFBA  67                 	db	103	;'g'
   571   00FFBB  75                 	db	117	;'u'
   572   00FFBC  61                 	db	97	;'a'
   573   00FFBD  20                 	db	32
   574   00FFBE  64                 	db	100	;'d'
   575   00FFBF  65                 	db	101	;'e'
   576   00FFC0  73                 	db	115	;'s'
   577   00FFC1  6C                 	db	108	;'l'
   578   00FFC2  69                 	db	105	;'i'
   579   00FFC3  67                 	db	103	;'g'
   580   00FFC4  61                 	db	97	;'a'
   581   00FFC5  64                 	db	100	;'d'
   582   00FFC6  61                 	db	97	;'a'
   583   00FFC7  00                 	db	0
   584   00FFC8                     STR_2:
   585   00FFC8  0D                 	db	13
   586   00FFC9  0A                 	db	10
   587   00FFCA  4D                 	db	77	;'M'
   588   00FFCB  45                 	db	69	;'E'
   589   00FFCC  4E                 	db	78	;'N'
   590   00FFCD  55                 	db	85	;'U'
   591   00FFCE  20                 	db	32
   592   00FFCF  50                 	db	80	;'P'
   593   00FFD0  52                 	db	82	;'R'
   594   00FFD1  49                 	db	73	;'I'
   595   00FFD2  4E                 	db	78	;'N'
   596   00FFD3  43                 	db	67	;'C'
   597   00FFD4  49                 	db	73	;'I'
   598   00FFD5  50                 	db	80	;'P'
   599   00FFD6  41                 	db	65	;'A'
   600   00FFD7  4C                 	db	76	;'L'
   601   00FFD8  00                 	db	0
   602   00FFD9                     STR_24:
   603   00FFD9  0D                 	db	13
   604   00FFDA  0A                 	db	10
   605   00FFDB  4F                 	db	79	;'O'
   606   00FFDC  70                 	db	112	;'p'
   607   00FFDD  63                 	db	99	;'c'
   608   00FFDE  61                 	db	97	;'a'
   609   00FFDF  6F                 	db	111	;'o'
   610   00FFE0  20                 	db	32
   611   00FFE1  49                 	db	73	;'I'
   612   00FFE2  6E                 	db	110	;'n'
   613   00FFE3  76                 	db	118	;'v'
   614   00FFE4  61                 	db	97	;'a'
   615   00FFE5  6C                 	db	108	;'l'
   616   00FFE6  69                 	db	105	;'i'
   617   00FFE7  64                 	db	100	;'d'
   618   00FFE8  61                 	db	97	;'a'
   619   00FFE9  00                 	db	0
   620   00FFEA                     STR_17:
   621   00FFEA  0D                 	db	13
   622   00FFEB  0A                 	db	10
   623   00FFEC  62                 	db	98	;'b'
   624   00FFED  69                 	db	105	;'i'
   625   00FFEE  74                 	db	116	;'t'
   626   00FFEF  73                 	db	115	;'s'
   627   00FFF0  3A                 	db	58	;':'
   628   00FFF1  20                 	db	32
   629   00FFF2  25                 	db	37
   630   00FFF3  64                 	db	100	;'d'
   631   00FFF4  00                 	db	0
   632   00FFF5                     STR_9:
   633   00FFF5  0D                 	db	13
   634   00FFF6  0A                 	db	10
   635   00FFF7  4F                 	db	79	;'O'
   636   00FFF8  70                 	db	112	;'p'
   637   00FFF9  63                 	db	99	;'c'
   638   00FFFA  61                 	db	97	;'a'
   639   00FFFB  6F                 	db	111	;'o'
   640   00FFFC  3A                 	db	58	;':'
   641   00FFFD  20                 	db	32
   642   00FFFE  00                 	db	0
   643   00FFFF  00                 	db	0	; dummy byte at the end
   644   000000                     
   645                           	psect	nvCOMRAM
   646   000037                     __pnvCOMRAM:
   647                           	callstack 0
   648   000037                     _TMR1_InterruptHandler:
   649                           	callstack 0
   650   000037                     	ds	2
   651   000039                     _TMR0_InterruptHandler:
   652                           	callstack 0
   653   000039                     	ds	2
   654   00003B                     _INT0_InterruptHandler:
   655                           	callstack 0
   656   00003B                     	ds	2
   657   00003D                     _ADC_InterruptHandler:
   658                           	callstack 0
   659   00003D                     	ds	2
   660                           
   661                           	psect	nvBANK0
   662   0000E6                     __pnvBANK0:
   663                           	callstack 0
   664   0000E6                     _EUSART1_ErrorHandler:
   665                           	callstack 0
   666   0000E6                     	ds	2
   667   0000E8                     _EUSART1_OverrunErrorHandler:
   668                           	callstack 0
   669   0000E8                     	ds	2
   670   0000EA                     _EUSART1_FramingErrorHandler:
   671                           	callstack 0
   672   0000EA                     	ds	2
   673   0000EC                     _EUSART1_RxDefaultInterruptHandler:
   674                           	callstack 0
   675   0000EC                     	ds	2
   676   0000EE                     _EUSART1_TxDefaultInterruptHandler:
   677                           	callstack 0
   678   0000EE                     	ds	2
   679   000000                     _TMR1	set	4046
   680   000000                     _LATBbits	set	3978
   681   000000                     _T1GCONbits	set	4044
   682   000000                     _T1CONbits	set	4045
   683   000000                     _T0CONbits	set	4053
   684   000000                     _TRISC	set	3988
   685   000000                     _RCSTA1bits	set	4011
   686   000000                     _TXSTA1bits	set	4012
   687   000000                     _ADCON0bits	set	4034
   688   000000                     _SSP1CON1bits	set	4038
   689   000000                     _WPUB	set	3937
   690   000000                     _LATA	set	3977
   691   000000                     _LATD	set	3980
   692   000000                     _LATE	set	3981
   693   000000                     _TRISCbits	set	3988
   694   000000                     _SSP1CON1	set	4038
   695   000000                     _SSP1STAT	set	4039
   696   000000                     _CCPR5H	set	3926
   697   000000                     _CCPR5L	set	3925
   698   000000                     _T1GCON	set	4044
   699   000000                     _RCONbits	set	4048
   700   000000                     _INTCON2bits	set	4081
   701   000000                     _INTCONbits	set	4082
   702   000000                     _SSP1BUF	set	4041
   703   000000                     _SSP1ADD	set	4040
   704   000000                     _IPR1bits	set	3999
   705   000000                     _RCSTA1	set	4011
   706   000000                     _BAUDCON1	set	4024
   707   000000                     _ADCON2	set	4032
   708   000000                     _ADCON1	set	4033
   709   000000                     _ADCON0	set	4034
   710   000000                     _SPBRGH1	set	4016
   711   000000                     _OSCCON2	set	4050
   712   000000                     _OSCCON	set	4051
   713   000000                     _T0CON	set	4053
   714   000000                     _TMR0L	set	4054
   715   000000                     _TMR0H	set	4055
   716   000000                     _TRISA	set	3986
   717   000000                     _ANSELE	set	3900
   718                           
   719                           ; #config settings
   720                           
   721                           	psect	cinit
   722   000D9A                     __pcinit:
   723                           	callstack 0
   724   000D9A                     start_initialization:
   725                           	callstack 0
   726   000D9A                     __initialization:
   727                           	callstack 0
   728                           
   729                           ; Initialize objects allocated to BANK0 (2 bytes)
   730                           ; load TBLPTR registers with __pidataBANK0
   731   000D9A  0E92               	movlw	low __pidataBANK0
   732   000D9C  6EF6               	movwf	tblptrl,c
   733   000D9E  0E12               	movlw	high __pidataBANK0
   734   000DA0  6EF7               	movwf	tblptrh,c
   735   000DA2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   736   000DA4  6EF8               	movwf	tblptru,c
   737   000DA6  0009               	tblrd		*+	;fetch initializer
   738   000DA8  CFF5 F0F0          	movff	tablat,__pdataBANK0
   739   000DAC  0009               	tblrd		*+	;fetch initializer
   740   000DAE  CFF5 F0F1          	movff	tablat,__pdataBANK0+1
   741                           
   742                           ; Initialize objects allocated to COMRAM (2 bytes)
   743                           ; load TBLPTR registers with __pidataCOMRAM
   744   000DB2  0E90               	movlw	low __pidataCOMRAM
   745   000DB4  6EF6               	movwf	tblptrl,c
   746   000DB6  0E12               	movlw	high __pidataCOMRAM
   747   000DB8  6EF7               	movwf	tblptrh,c
   748   000DBA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   749   000DBC  6EF8               	movwf	tblptru,c
   750   000DBE  0009               	tblrd		*+	;fetch initializer
   751   000DC0  CFF5 F03F          	movff	tablat,__pdataCOMRAM
   752   000DC4  0009               	tblrd		*+	;fetch initializer
   753   000DC6  CFF5 F040          	movff	tablat,__pdataCOMRAM+1
   754                           
   755                           ; Clear objects allocated to BANK0 (65 bytes)
   756   000DCA  EE00  F0A5         	lfsr	0,__pbssBANK0
   757   000DCE  0E41               	movlw	65
   758   000DD0                     clear_0:
   759   000DD0  6AEE               	clrf	postinc0,c
   760   000DD2  06E8               	decf	wreg,f,c
   761   000DD4  E1FD               	bnz	clear_0
   762                           
   763                           ; Clear objects allocated to COMRAM (21 bytes)
   764   000DD6  EE00  F022         	lfsr	0,__pbssCOMRAM
   765   000DDA  0E15               	movlw	21
   766   000DDC                     clear_1:
   767   000DDC  6AEE               	clrf	postinc0,c
   768   000DDE  06E8               	decf	wreg,f,c
   769   000DE0  E1FD               	bnz	clear_1
   770   000DE2                     end_of_initialization:
   771                           	callstack 0
   772   000DE2                     __end_of__initialization:
   773                           	callstack 0
   774   000DE2  9041               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   775   000DE4  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   776   000DE6  0100               	movlb	0
   777   000DE8  EF51  F004         	goto	_main	;jump to C main() function
   778                           
   779                           	psect	bssCOMRAM
   780   000022                     __pbssCOMRAM:
   781                           	callstack 0
   782   000022                     _width:
   783                           	callstack 0
   784   000022                     	ds	2
   785   000024                     _prec:
   786                           	callstack 0
   787   000024                     	ds	2
   788   000026                     _nivel_referencia:
   789                           	callstack 0
   790   000026                     	ds	2
   791   000028                     _convertedValue:
   792                           	callstack 0
   793   000028                     	ds	2
   794   00002A                     _timer1ReloadVal:
   795                           	callstack 0
   796   00002A                     	ds	2
   797   00002C                     _intro_valor:
   798                           	callstack 0
   799   00002C                     	ds	1
   800   00002D                     _cnt_char:
   801                           	callstack 0
   802   00002D                     	ds	1
   803   00002E                     _rxData:
   804                           	callstack 0
   805   00002E                     	ds	1
   806   00002F                     _timer0ReloadVal:
   807                           	callstack 0
   808   00002F                     	ds	1
   809   000030                     _eusart1RxLastError:
   810                           	callstack 0
   811   000030                     	ds	1
   812   000031                     _eusart1RxCount:
   813                           	callstack 0
   814   000031                     	ds	1
   815   000032                     _eusart1RxTail:
   816                           	callstack 0
   817   000032                     	ds	1
   818   000033                     _eusart1RxHead:
   819                           	callstack 0
   820   000033                     	ds	1
   821   000034                     _eusart1TxBufferRemaining:
   822                           	callstack 0
   823   000034                     	ds	1
   824   000035                     _eusart1TxTail:
   825                           	callstack 0
   826   000035                     	ds	1
   827   000036                     _eusart1TxHead:
   828                           	callstack 0
   829   000036                     	ds	1
   830                           
   831                           	psect	dataCOMRAM
   832   00003F                     __pdataCOMRAM:
   833                           	callstack 0
   834   00003F                     _temperatura:
   835                           	callstack 0
   836   00003F                     	ds	2
   837                           
   838                           	psect	bssBANK0
   839   0000A5                     __pbssBANK0:
   840                           	callstack 0
   841   0000A5                     _eusart1RxStatusBuffer:
   842                           	callstack 0
   843   0000A5                     	ds	8
   844   0000AD                     _eusart1RxBuffer:
   845                           	callstack 0
   846   0000AD                     	ds	8
   847   0000B5                     _eusart1TxBuffer:
   848                           	callstack 0
   849   0000B5                     	ds	8
   850   0000BD                     _s:
   851                           	callstack 0
   852   0000BD                     	ds	4
   853   0000C1                     _nivel_agua:
   854                           	callstack 0
   855   0000C1                     	ds	2
   856   0000C3                     _flags:
   857                           	callstack 0
   858   0000C3                     	ds	1
   859   0000C4                     _BombaLigada:
   860                           	callstack 0
   861   0000C4                     	ds	1
   862   0000C5                     _SistemaControloLigado:
   863                           	callstack 0
   864   0000C5                     	ds	1
   865   0000C6                     _dbuf:
   866                           	callstack 0
   867   0000C6                     	ds	32
   868                           
   869                           	psect	dataBANK0
   870   0000F0                     __pdataBANK0:
   871                           	callstack 0
   872   0000F0                     _carater_recebido:
   873                           	callstack 0
   874   0000F0                     	ds	1
   875   0000F1                     _menu:
   876                           	callstack 0
   877   0000F1                     	ds	1
   878                           
   879                           	psect	cstackBANK0
   880   000060                     __pcstackBANK0:
   881                           	callstack 0
   882   000060                     ?___awdiv:
   883                           	callstack 0
   884   000060                     ?___awmod:
   885                           	callstack 0
   886   000060                     ___awdiv@dividend:
   887                           	callstack 0
   888   000060                     ___awmod@dividend:
   889                           	callstack 0
   890   000060                     fputc@c:
   891                           	callstack 0
   892                           
   893                           ; 2 bytes @ 0x0
   894   000060                     	ds	2
   895   000062                     ___awdiv@divisor:
   896                           	callstack 0
   897   000062                     ___awmod@divisor:
   898                           	callstack 0
   899   000062                     fputc@fp:
   900                           	callstack 0
   901                           
   902                           ; 2 bytes @ 0x2
   903   000062                     	ds	2
   904   000064                     ??_fputc:
   905   000064                     ?_abs:
   906                           	callstack 0
   907   000064                     ___awdiv@counter:
   908                           	callstack 0
   909   000064                     abs@a:
   910                           	callstack 0
   911                           
   912                           ; 2 bytes @ 0x4
   913   000064                     	ds	1
   914   000065                     ___awdiv@sign:
   915                           	callstack 0
   916                           
   917                           ; 1 bytes @ 0x5
   918   000065                     	ds	1
   919   000066                     ??_abs:
   920   000066                     ___awdiv@quotient:
   921                           	callstack 0
   922                           
   923                           ; 2 bytes @ 0x6
   924   000066                     	ds	3
   925   000069                     fputs@s:
   926                           	callstack 0
   927                           
   928                           ; 2 bytes @ 0x9
   929   000069                     	ds	2
   930   00006B                     fputs@fp:
   931                           	callstack 0
   932                           
   933                           ; 2 bytes @ 0xB
   934   00006B                     	ds	2
   935   00006D                     fputs@c:
   936                           	callstack 0
   937                           
   938                           ; 1 bytes @ 0xD
   939   00006D                     	ds	1
   940   00006E                     fputs@i:
   941                           	callstack 0
   942                           
   943                           ; 2 bytes @ 0xE
   944   00006E                     	ds	2
   945   000070                     pad@fp:
   946                           	callstack 0
   947                           
   948                           ; 2 bytes @ 0x10
   949   000070                     	ds	2
   950   000072                     pad@buf:
   951                           	callstack 0
   952                           
   953                           ; 2 bytes @ 0x12
   954   000072                     	ds	2
   955   000074                     pad@p:
   956                           	callstack 0
   957                           
   958                           ; 2 bytes @ 0x14
   959   000074                     	ds	2
   960   000076                     pad@i:
   961                           	callstack 0
   962                           
   963                           ; 2 bytes @ 0x16
   964   000076                     	ds	2
   965   000078                     pad@w:
   966                           	callstack 0
   967                           
   968                           ; 2 bytes @ 0x18
   969   000078                     	ds	2
   970   00007A                     dtoa@fp:
   971                           	callstack 0
   972                           
   973                           ; 2 bytes @ 0x1A
   974   00007A                     	ds	2
   975   00007C                     dtoa@d:
   976                           	callstack 0
   977                           
   978                           ; 2 bytes @ 0x1C
   979   00007C                     	ds	2
   980   00007E                     _dtoa$2071:
   981                           	callstack 0
   982                           
   983                           ; 2 bytes @ 0x1E
   984   00007E                     	ds	2
   985   000080                     dtoa@p:
   986                           	callstack 0
   987                           
   988                           ; 2 bytes @ 0x20
   989   000080                     	ds	2
   990   000082                     dtoa@w:
   991                           	callstack 0
   992                           
   993                           ; 2 bytes @ 0x22
   994   000082                     	ds	2
   995   000084                     dtoa@s:
   996                           	callstack 0
   997                           
   998                           ; 1 bytes @ 0x24
   999   000084                     	ds	1
  1000   000085                     dtoa@i:
  1001                           	callstack 0
  1002                           
  1003                           ; 2 bytes @ 0x25
  1004   000085                     	ds	2
  1005   000087                     vfpfcnvrt@fp:
  1006                           	callstack 0
  1007                           
  1008                           ; 2 bytes @ 0x27
  1009   000087                     	ds	2
  1010   000089                     vfpfcnvrt@fmt:
  1011                           	callstack 0
  1012                           
  1013                           ; 2 bytes @ 0x29
  1014   000089                     	ds	2
  1015   00008B                     vfpfcnvrt@ap:
  1016                           	callstack 0
  1017                           
  1018                           ; 2 bytes @ 0x2B
  1019   00008B                     	ds	2
  1020   00008D                     ??_vfpfcnvrt:
  1021                           
  1022                           ; 1 bytes @ 0x2D
  1023   00008D                     	ds	2
  1024   00008F                     vfpfcnvrt@convarg:
  1025                           	callstack 0
  1026                           
  1027                           ; 4 bytes @ 0x2F
  1028   00008F                     	ds	4
  1029   000093                     vfpfcnvrt@cp:
  1030                           	callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x33
  1033   000093                     	ds	2
  1034   000095                     ?_vfprintf:
  1035                           	callstack 0
  1036   000095                     vfprintf@fp:
  1037                           	callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x35
  1040   000095                     	ds	2
  1041   000097                     vfprintf@fmt:
  1042                           	callstack 0
  1043                           
  1044                           ; 2 bytes @ 0x37
  1045   000097                     	ds	2
  1046   000099                     vfprintf@ap:
  1047                           	callstack 0
  1048                           
  1049                           ; 2 bytes @ 0x39
  1050   000099                     	ds	2
  1051   00009B                     vfprintf@cfmt:
  1052                           	callstack 0
  1053                           
  1054                           ; 2 bytes @ 0x3B
  1055   00009B                     	ds	2
  1056   00009D                     ?_printf:
  1057                           	callstack 0
  1058   00009D                     printf@fmt:
  1059                           	callstack 0
  1060                           
  1061                           ; 2 bytes @ 0x3D
  1062   00009D                     	ds	4
  1063   0000A1                     printf@ap:
  1064                           	callstack 0
  1065                           
  1066                           ; 2 bytes @ 0x41
  1067   0000A1                     	ds	2
  1068   0000A3                     ??_ShowMenuInTerminal:
  1069                           
  1070                           ; 1 bytes @ 0x43
  1071   0000A3                     	ds	2
  1072                           
  1073                           	psect	cstackCOMRAM
  1074   000001                     __pcstackCOMRAM:
  1075                           	callstack 0
  1076   000001                     ??_ADC_SelectChannel:
  1077   000001                     ??_TMR1_MyInterruptHandler:
  1078   000001                     ?_ADC_GetConversionResult:
  1079                           	callstack 0
  1080   000001                     ?___lmul:
  1081                           	callstack 0
  1082   000001                     TMR1_WriteTimer@timerVal:
  1083                           	callstack 0
  1084   000001                     ___lmul@multiplier:
  1085                           	callstack 0
  1086                           
  1087                           ; 4 bytes @ 0x0
  1088   000001                     	ds	1
  1089   000002                     ADC_SelectChannel@channel:
  1090                           	callstack 0
  1091                           
  1092                           ; 1 bytes @ 0x1
  1093   000002                     	ds	1
  1094   000003                     ??_ADC_GetConversionResult:
  1095   000003                     
  1096                           ; 1 bytes @ 0x2
  1097   000003                     	ds	2
  1098   000005                     ___lmul@multiplicand:
  1099                           	callstack 0
  1100                           
  1101                           ; 4 bytes @ 0x4
  1102   000005                     	ds	4
  1103   000009                     ___lmul@product:
  1104                           	callstack 0
  1105                           
  1106                           ; 4 bytes @ 0x8
  1107   000009                     	ds	4
  1108   00000D                     ?___aldiv:
  1109                           	callstack 0
  1110   00000D                     ___aldiv@dividend:
  1111                           	callstack 0
  1112                           
  1113                           ; 4 bytes @ 0xC
  1114   00000D                     	ds	4
  1115   000011                     ___aldiv@divisor:
  1116                           	callstack 0
  1117                           
  1118                           ; 4 bytes @ 0x10
  1119   000011                     	ds	4
  1120   000015                     ___aldiv@counter:
  1121                           	callstack 0
  1122                           
  1123                           ; 1 bytes @ 0x14
  1124   000015                     	ds	1
  1125   000016                     ___aldiv@sign:
  1126                           	callstack 0
  1127                           
  1128                           ; 1 bytes @ 0x15
  1129   000016                     	ds	1
  1130   000017                     ___aldiv@quotient:
  1131                           	callstack 0
  1132                           
  1133                           ; 4 bytes @ 0x16
  1134   000017                     	ds	4
  1135   00001B                     ??_INTERRUPT_InterruptManagerHigh:
  1136   00001B                     
  1137                           ; 1 bytes @ 0x1A
  1138   00001B                     	ds	4
  1139   00001F                     EUSART1_Read@readValue:
  1140                           	callstack 0
  1141   00001F                     EUSART1_Write@txData:
  1142                           	callstack 0
  1143   00001F                     ___awmod@counter:
  1144                           	callstack 0
  1145   00001F                     ADC_SetInterruptHandler@InterruptHandler:
  1146                           	callstack 0
  1147   00001F                     INT0_SetInterruptHandler@InterruptHandler:
  1148                           	callstack 0
  1149   00001F                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1150                           	callstack 0
  1151   00001F                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1152                           	callstack 0
  1153   00001F                     EUSART1_SetErrorHandler@interruptHandler:
  1154                           	callstack 0
  1155   00001F                     EUSART1_SetTxInterruptHandler@interruptHandler:
  1156                           	callstack 0
  1157   00001F                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1158                           	callstack 0
  1159   00001F                     TMR0_SetInterruptHandler@InterruptHandler:
  1160                           	callstack 0
  1161   00001F                     TMR1_SetInterruptHandler@InterruptHandler:
  1162                           	callstack 0
  1163                           
  1164                           ; 2 bytes @ 0x1E
  1165   00001F                     	ds	1
  1166   000020                     ??_CheckUSART:
  1167   000020                     putch@txData:
  1168                           	callstack 0
  1169   000020                     ___awmod@sign:
  1170                           	callstack 0
  1171                           
  1172                           ; 1 bytes @ 0x1F
  1173   000020                     	ds	1
  1174   000021                     ??_pad:
  1175                           
  1176                           ; 1 bytes @ 0x20
  1177   000021                     	ds	1
  1178   000022                     
  1179                           ; 1 bytes @ 0x21
  1180 ;;
  1181 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1182 ;;
  1183 ;; *************** function _main *****************
  1184 ;; Defined at:
  1185 ;;		line 104 in file "main.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;		None
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;		None
  1190 ;; Return value:  Size  Location     Type
  1191 ;;                  1    wreg      void 
  1192 ;; Registers used:
  1193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1194 ;; Tracked objects:
  1195 ;;		On entry : 0/0
  1196 ;;		On exit  : 0/0
  1197 ;;		Unchanged: 0/0
  1198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1203 ;;Total ram usage:        0 bytes
  1204 ;; Hardware stack levels required when called: 14
  1205 ;; This function calls:
  1206 ;;		_ADC_SetInterruptHandler
  1207 ;;		_CheckUSART
  1208 ;;		_INT0_SetInterruptHandler
  1209 ;;		_SYSTEM_Initialize
  1210 ;;		_ShowMenuInTerminal
  1211 ;;		_TMR0_SetInterruptHandler
  1212 ;;		_TMR0_StartTimer
  1213 ;;		_TMR1_SetInterruptHandler
  1214 ;;		_TMR1_StartTimer
  1215 ;;		_TMR1_StopTimer
  1216 ;;		_printf
  1217 ;; This function is called by:
  1218 ;;		Startup code after reset
  1219 ;; This function uses a non-reentrant model
  1220 ;;
  1221                           
  1222                           	psect	text0
  1223   0008A2                     __ptext0:
  1224                           	callstack 0
  1225   0008A2                     _main:
  1226                           	callstack 17
  1227   0008A2                     
  1228                           ;main.c: 105:     SYSTEM_Initialize();
  1229   0008A2  EC23  F008         	call	_SYSTEM_Initialize	;wreg free
  1230   0008A6                     
  1231                           ;main.c: 107:     (INTCONbits.GIEH = 1);
  1232   0008A6  8EF2               	bsf	242,7,c	;volatile
  1233   0008A8                     
  1234                           ;main.c: 108:     (INTCONbits.GIEL = 1);
  1235   0008A8  8CF2               	bsf	242,6,c	;volatile
  1236   0008AA                     
  1237                           ;main.c: 109:     (INTCONbits.PEIE = 1);
  1238   0008AA  8CF2               	bsf	242,6,c	;volatile
  1239                           
  1240                           ;main.c: 111:     INT0_SetInterruptHandler(INT0_MyInterruptHandler);
  1241   0008AC  0EEE               	movlw	low _INT0_MyInterruptHandler
  1242   0008AE  6E1F               	movwf	INT0_SetInterruptHandler@InterruptHandler^0,c
  1243   0008B0  0E11               	movlw	high _INT0_MyInterruptHandler
  1244   0008B2  6E20               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,c
  1245   0008B4  EC13  F009         	call	_INT0_SetInterruptHandler	;wreg free
  1246                           
  1247                           ;main.c: 112:     ADC_SetInterruptHandler(ADC_MyInterruptHandler);
  1248   0008B8  0E90               	movlw	low _ADC_MyInterruptHandler
  1249   0008BA  6E1F               	movwf	ADC_SetInterruptHandler@InterruptHandler^0,c
  1250   0008BC  0E0C               	movlw	high _ADC_MyInterruptHandler
  1251   0008BE  6E20               	movwf	(ADC_SetInterruptHandler@InterruptHandler+1)^0,c
  1252   0008C0  EC31  F009         	call	_ADC_SetInterruptHandler	;wreg free
  1253                           
  1254                           ;main.c: 113:     TMR0_SetInterruptHandler(TMR0_MyInterruptHandler);
  1255   0008C4  0EFC               	movlw	low _TMR0_MyInterruptHandler
  1256   0008C6  6E1F               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  1257   0008C8  0E11               	movlw	high _TMR0_MyInterruptHandler
  1258   0008CA  6E20               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  1259   0008CC  EC0E  F009         	call	_TMR0_SetInterruptHandler	;wreg free
  1260   0008D0                     
  1261                           ;main.c: 114:     TMR0_StartTimer();
  1262   0008D0  EC44  F009         	call	_TMR0_StartTimer	;wreg free
  1263   0008D4                     
  1264                           ;main.c: 116:     TMR1_SetInterruptHandler(TMR1_MyInterruptHandler);
  1265   0008D4  0E84               	movlw	low _TMR1_MyInterruptHandler
  1266   0008D6  6E1F               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
  1267   0008D8  0E0F               	movlw	high _TMR1_MyInterruptHandler
  1268   0008DA  6E20               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
  1269   0008DC  EC09  F009         	call	_TMR1_SetInterruptHandler	;wreg free
  1270                           
  1271                           ;main.c: 117:     TMR1_StartTimer();
  1272   0008E0  EC42  F009         	call	_TMR1_StartTimer	;wreg free
  1273   0008E4                     
  1274                           ;main.c: 119:     printf("SETUP COMPLETED SUCCESSFULLY\r\n");
  1275   0008E4  0E53               	movlw	low STR_1
  1276   0008E6  0100               	movlb	0	; () banked
  1277   0008E8  6F9D               	movwf	printf@fmt& (0+255),b
  1278   0008EA  0EFF               	movlw	high STR_1
  1279   0008EC  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1280   0008EE  EC62  F008         	call	_printf	;wreg free
  1281   0008F2                     
  1282                           ;main.c: 120:     SistemaControloLigado = 1;
  1283   0008F2  0E01               	movlw	1
  1284   0008F4  0100               	movlb	0	; () banked
  1285   0008F6  6FC5               	movwf	_SistemaControloLigado& (0+255),b	;volatile
  1286   0008F8                     l3407:
  1287                           
  1288                           ;main.c: 124:         if (!SistemaControloLigado) {
  1289   0008F8  0100               	movlb	0	; () banked
  1290   0008FA  51C5               	movf	_SistemaControloLigado& (0+255),w,b	;volatile
  1291   0008FC  A4D8               	btfss	status,2,c
  1292   0008FE  EF83  F004         	goto	u2191
  1293   000902  EF85  F004         	goto	u2190
  1294   000906                     u2191:
  1295   000906  EF8B  F004         	goto	l3415
  1296   00090A                     u2190:
  1297   00090A                     
  1298                           ; BSR set to: 0
  1299                           ;main.c: 125:             TMR1_StopTimer();
  1300   00090A  EC40  F009         	call	_TMR1_StopTimer	;wreg free
  1301   00090E  988A               	bcf	138,4,c	;volatile
  1302   000910  868A               	bsf	138,3,c	;volatile
  1303   000912  EF8E  F004         	goto	l3419
  1304   000916                     l3415:
  1305                           
  1306                           ; BSR set to: 0
  1307                           ;main.c: 129:             TMR1_StartTimer();
  1308   000916  EC42  F009         	call	_TMR1_StartTimer	;wreg free
  1309   00091A  968A               	bcf	138,3,c	;volatile
  1310   00091C                     l3419:
  1311                           
  1312                           ;main.c: 134:         if (BombaLigada) {
  1313   00091C  0100               	movlb	0	; () banked
  1314   00091E  51C4               	movf	_BombaLigada& (0+255),w,b	;volatile
  1315   000920  B4D8               	btfsc	status,2,c
  1316   000922  EF95  F004         	goto	u2201
  1317   000926  EF97  F004         	goto	u2200
  1318   00092A                     u2201:
  1319   00092A  EF9A  F004         	goto	l620
  1320   00092E                     u2200:
  1321   00092E                     
  1322                           ; BSR set to: 0
  1323   00092E  8A8A               	bsf	138,5,c	;volatile
  1324   000930  EF9B  F004         	goto	l3421
  1325   000934                     l620:
  1326                           
  1327                           ; BSR set to: 0
  1328   000934  9A8A               	bcf	138,5,c	;volatile
  1329   000936                     l3421:
  1330                           
  1331                           ; BSR set to: 0
  1332                           ;main.c: 140:         if (carater_recebido) {
  1333   000936  51F0               	movf	_carater_recebido& (0+255),w,b
  1334   000938  B4D8               	btfsc	status,2,c
  1335   00093A  EFA1  F004         	goto	u2211
  1336   00093E  EFA3  F004         	goto	u2210
  1337   000942                     u2211:
  1338   000942  EFA8  F004         	goto	l3427
  1339   000946                     u2210:
  1340   000946                     
  1341                           ; BSR set to: 0
  1342                           ;main.c: 141:             ShowMenuInTerminal();
  1343   000946  EC9B  F000         	call	_ShowMenuInTerminal	;wreg free
  1344   00094A                     
  1345                           ;main.c: 142:             carater_recebido = 0;
  1346   00094A  0E00               	movlw	0
  1347   00094C  0100               	movlb	0	; () banked
  1348   00094E  6FF0               	movwf	_carater_recebido& (0+255),b
  1349   000950                     l3427:
  1350                           
  1351                           ; BSR set to: 0
  1352                           ;main.c: 144:         CheckUSART();
  1353   000950  ECDD  F005         	call	_CheckUSART	;wreg free
  1354   000954  EF7C  F004         	goto	l3407
  1355   000958  EF99  F000         	goto	start
  1356   00095C                     __end_of_main:
  1357                           	callstack 0
  1358                           
  1359 ;; *************** function _TMR1_StopTimer *****************
  1360 ;; Defined at:
  1361 ;;		line 99 in file "mcc_generated_files/tmr1.c"
  1362 ;; Parameters:    Size  Location     Type
  1363 ;;		None
  1364 ;; Auto vars:     Size  Location     Type
  1365 ;;		None
  1366 ;; Return value:  Size  Location     Type
  1367 ;;                  1    wreg      void 
  1368 ;; Registers used:
  1369 ;;		None
  1370 ;; Tracked objects:
  1371 ;;		On entry : 0/0
  1372 ;;		On exit  : 0/0
  1373 ;;		Unchanged: 0/0
  1374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1379 ;;Total ram usage:        0 bytes
  1380 ;; Hardware stack levels used: 1
  1381 ;; Hardware stack levels required when called: 4
  1382 ;; This function calls:
  1383 ;;		Nothing
  1384 ;; This function is called by:
  1385 ;;		_main
  1386 ;; This function uses a non-reentrant model
  1387 ;;
  1388                           
  1389                           	psect	text1
  1390   001280                     __ptext1:
  1391                           	callstack 0
  1392   001280                     _TMR1_StopTimer:
  1393                           	callstack 26
  1394   001280                     
  1395                           ;mcc_generated_files/tmr1.c: 102:     T1CONbits.TMR1ON = 0;
  1396   001280  90CD               	bcf	205,0,c	;volatile
  1397   001282  0012               	return		;funcret
  1398   001284                     __end_of_TMR1_StopTimer:
  1399                           	callstack 0
  1400                           
  1401 ;; *************** function _TMR1_StartTimer *****************
  1402 ;; Defined at:
  1403 ;;		line 93 in file "mcc_generated_files/tmr1.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;		None
  1406 ;; Auto vars:     Size  Location     Type
  1407 ;;		None
  1408 ;; Return value:  Size  Location     Type
  1409 ;;                  1    wreg      void 
  1410 ;; Registers used:
  1411 ;;		None
  1412 ;; Tracked objects:
  1413 ;;		On entry : 0/0
  1414 ;;		On exit  : 0/0
  1415 ;;		Unchanged: 0/0
  1416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1421 ;;Total ram usage:        0 bytes
  1422 ;; Hardware stack levels used: 1
  1423 ;; Hardware stack levels required when called: 4
  1424 ;; This function calls:
  1425 ;;		Nothing
  1426 ;; This function is called by:
  1427 ;;		_main
  1428 ;; This function uses a non-reentrant model
  1429 ;;
  1430                           
  1431                           	psect	text2
  1432   001284                     __ptext2:
  1433                           	callstack 0
  1434   001284                     _TMR1_StartTimer:
  1435                           	callstack 26
  1436   001284                     
  1437                           ;mcc_generated_files/tmr1.c: 96:     T1CONbits.TMR1ON = 1;
  1438   001284  80CD               	bsf	205,0,c	;volatile
  1439   001286  0012               	return		;funcret
  1440   001288                     __end_of_TMR1_StartTimer:
  1441                           	callstack 0
  1442                           
  1443 ;; *************** function _TMR0_StartTimer *****************
  1444 ;; Defined at:
  1445 ;;		line 94 in file "mcc_generated_files/tmr0.c"
  1446 ;; Parameters:    Size  Location     Type
  1447 ;;		None
  1448 ;; Auto vars:     Size  Location     Type
  1449 ;;		None
  1450 ;; Return value:  Size  Location     Type
  1451 ;;                  1    wreg      void 
  1452 ;; Registers used:
  1453 ;;		None
  1454 ;; Tracked objects:
  1455 ;;		On entry : 0/0
  1456 ;;		On exit  : 0/0
  1457 ;;		Unchanged: 0/0
  1458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1463 ;;Total ram usage:        0 bytes
  1464 ;; Hardware stack levels used: 1
  1465 ;; Hardware stack levels required when called: 4
  1466 ;; This function calls:
  1467 ;;		Nothing
  1468 ;; This function is called by:
  1469 ;;		_main
  1470 ;; This function uses a non-reentrant model
  1471 ;;
  1472                           
  1473                           	psect	text3
  1474   001288                     __ptext3:
  1475                           	callstack 0
  1476   001288                     _TMR0_StartTimer:
  1477                           	callstack 26
  1478   001288                     
  1479                           ;mcc_generated_files/tmr0.c: 97:     T0CONbits.TMR0ON = 1;
  1480   001288  8ED5               	bsf	213,7,c	;volatile
  1481   00128A  0012               	return		;funcret
  1482   00128C                     __end_of_TMR0_StartTimer:
  1483                           	callstack 0
  1484                           
  1485 ;; *************** function _ShowMenuInTerminal *****************
  1486 ;; Defined at:
  1487 ;;		line 151 in file "main.c"
  1488 ;; Parameters:    Size  Location     Type
  1489 ;;		None
  1490 ;; Auto vars:     Size  Location     Type
  1491 ;;		None
  1492 ;; Return value:  Size  Location     Type
  1493 ;;                  1    wreg      void 
  1494 ;; Registers used:
  1495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1496 ;; Tracked objects:
  1497 ;;		On entry : 0/0
  1498 ;;		On exit  : 0/0
  1499 ;;		Unchanged: 0/0
  1500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1503 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1504 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1505 ;;Total ram usage:        2 bytes
  1506 ;; Hardware stack levels used: 1
  1507 ;; Hardware stack levels required when called: 13
  1508 ;; This function calls:
  1509 ;;		_EUSART1_Write
  1510 ;;		_printf
  1511 ;; This function is called by:
  1512 ;;		_main
  1513 ;; This function uses a non-reentrant model
  1514 ;;
  1515                           
  1516                           	psect	text4
  1517   000136                     __ptext4:
  1518                           	callstack 0
  1519   000136                     _ShowMenuInTerminal:
  1520                           	callstack 17
  1521   000136                     
  1522                           ;main.c: 152:     switch (menu) {
  1523   000136  EF78  F001         	goto	l3365
  1524   00013A                     l3283:
  1525                           
  1526                           ; BSR set to: 0
  1527                           ;main.c: 154:             EUSART1_Write(12);
  1528   00013A  0E0C               	movlw	12
  1529   00013C  EC78  F006         	call	_EUSART1_Write
  1530   000140                     
  1531                           ;main.c: 155:             printf("\r\nMENU PRINCIPAL");
  1532   000140  0EC8               	movlw	low STR_2
  1533   000142  0100               	movlb	0	; () banked
  1534   000144  6F9D               	movwf	printf@fmt& (0+255),b
  1535   000146  0EFF               	movlw	high STR_2
  1536   000148  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1537   00014A  EC62  F008         	call	_printf	;wreg free
  1538   00014E                     
  1539                           ;main.c: 156:             printf("\r\n1 - Desligar bomba de agua");
  1540   00014E  0E91               	movlw	low STR_3
  1541   000150  0100               	movlb	0	; () banked
  1542   000152  6F9D               	movwf	printf@fmt& (0+255),b
  1543   000154  0EFF               	movlw	high STR_3
  1544   000156  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1545   000158  EC62  F008         	call	_printf	;wreg free
  1546   00015C                     
  1547                           ;main.c: 157:             printf("\r\n2 - Ativar comtrolo do nivel de agua");
  1548   00015C  0EE5               	movlw	low STR_4
  1549   00015E  0100               	movlb	0	; () banked
  1550   000160  6F9D               	movwf	printf@fmt& (0+255),b
  1551   000162  0EFE               	movlw	high STR_4
  1552   000164  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1553   000166  EC62  F008         	call	_printf	;wreg free
  1554   00016A                     
  1555                           ;main.c: 158:             printf("\r\n3 - Visualizar a percentagem do nivel de agua");
  1556   00016A  0E3D               	movlw	low STR_5
  1557   00016C  0100               	movlb	0	; () banked
  1558   00016E  6F9D               	movwf	printf@fmt& (0+255),b
  1559   000170  0EFE               	movlw	high STR_5
  1560   000172  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1561   000174  EC62  F008         	call	_printf	;wreg free
  1562   000178                     
  1563                           ;main.c: 159:             printf("\r\n4 - Visualizar o nivel de referencia");
  1564   000178  0EBE               	movlw	low STR_6
  1565   00017A  0100               	movlb	0	; () banked
  1566   00017C  6F9D               	movwf	printf@fmt& (0+255),b
  1567   00017E  0EFE               	movlw	high STR_6
  1568   000180  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1569   000182  EC62  F008         	call	_printf	;wreg free
  1570   000186                     
  1571                           ;main.c: 160:             printf("\r\n5 - Programar novo valor de referencia");
  1572   000186  0E6D               	movlw	low STR_7
  1573   000188  0100               	movlb	0	; () banked
  1574   00018A  6F9D               	movwf	printf@fmt& (0+255),b
  1575   00018C  0EFE               	movlw	high STR_7
  1576   00018E  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1577   000190  EC62  F008         	call	_printf	;wreg free
  1578   000194                     
  1579                           ;main.c: 161:             printf("\r\n0 - Voltar ao Menu Principal");
  1580   000194  0E72               	movlw	low STR_8
  1581   000196  0100               	movlb	0	; () banked
  1582   000198  6F9D               	movwf	printf@fmt& (0+255),b
  1583   00019A  0EFF               	movlw	high STR_8
  1584   00019C  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1585   00019E  EC62  F008         	call	_printf	;wreg free
  1586   0001A2                     
  1587                           ;main.c: 162:             printf("\r\nOpcao: ");
  1588   0001A2  0EF5               	movlw	low STR_9
  1589   0001A4  0100               	movlb	0	; () banked
  1590   0001A6  6F9D               	movwf	printf@fmt& (0+255),b
  1591   0001A8  0EFF               	movlw	high STR_9
  1592   0001AA  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1593   0001AC  EC62  F008         	call	_printf	;wreg free
  1594   0001B0                     l3301:
  1595                           
  1596                           ;main.c: 163:             menu = 0;
  1597   0001B0  0E00               	movlw	0
  1598   0001B2  0100               	movlb	0	; () banked
  1599   0001B4  6FF1               	movwf	_menu& (0+255),b
  1600                           
  1601                           ;main.c: 164:             break;
  1602   0001B6  EF9E  F001         	goto	l637
  1603   0001BA                     l3303:
  1604                           
  1605                           ; BSR set to: 0
  1606                           ;main.c: 166:             EUSART1_Write(12);
  1607   0001BA  0E0C               	movlw	12
  1608   0001BC  EC78  F006         	call	_EUSART1_Write
  1609   0001C0                     
  1610                           ;main.c: 168:             printf("\r\nBomba de agua desligada");
  1611   0001C0  0EAE               	movlw	low STR_10
  1612   0001C2  0100               	movlb	0	; () banked
  1613   0001C4  6F9D               	movwf	printf@fmt& (0+255),b
  1614   0001C6  0EFF               	movlw	high STR_10
  1615   0001C8  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1616   0001CA  EC62  F008         	call	_printf	;wreg free
  1617   0001CE                     
  1618                           ;main.c: 169:             printf("\r\n0 - Voltar ao Menu Principal");
  1619   0001CE  0E72               	movlw	low STR_8
  1620   0001D0  0100               	movlb	0	; () banked
  1621   0001D2  6F9D               	movwf	printf@fmt& (0+255),b
  1622   0001D4  0EFF               	movlw	high STR_8
  1623   0001D6  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1624   0001D8  EC62  F008         	call	_printf	;wreg free
  1625   0001DC                     
  1626                           ;main.c: 170:             printf("\r\nOpcao: ");
  1627   0001DC  0EF5               	movlw	low STR_9
  1628   0001DE  0100               	movlb	0	; () banked
  1629   0001E0  6F9D               	movwf	printf@fmt& (0+255),b
  1630   0001E2  0EFF               	movlw	high STR_9
  1631   0001E4  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1632   0001E6  EC62  F008         	call	_printf	;wreg free
  1633   0001EA                     
  1634                           ;main.c: 171:             BombaLigada = 0;
  1635   0001EA  0E00               	movlw	0
  1636   0001EC  0100               	movlb	0	; () banked
  1637   0001EE  6FC4               	movwf	_BombaLigada& (0+255),b	;volatile
  1638   0001F0  EFD8  F000         	goto	l3301
  1639   0001F4                     l3315:
  1640                           
  1641                           ; BSR set to: 0
  1642                           ;main.c: 175:             EUSART1_Write(12);
  1643   0001F4  0E0C               	movlw	12
  1644   0001F6  EC78  F006         	call	_EUSART1_Write
  1645   0001FA                     
  1646                           ;main.c: 177:             printf("\r\nControlo do nivel de agua ativado");
  1647   0001FA  0E0C               	movlw	low STR_13
  1648   0001FC  0100               	movlb	0	; () banked
  1649   0001FE  6F9D               	movwf	printf@fmt& (0+255),b
  1650   000200  0EFF               	movlw	high STR_13
  1651   000202  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1652   000204  EC62  F008         	call	_printf	;wreg free
  1653   000208                     
  1654                           ;main.c: 178:             SistemaControloLigado = 1;
  1655   000208  0E01               	movlw	1
  1656   00020A  0100               	movlb	0	; () banked
  1657   00020C  6FC5               	movwf	_SistemaControloLigado& (0+255),b	;volatile
  1658   00020E                     
  1659                           ; BSR set to: 0
  1660                           ;main.c: 179:             printf("\r\n0 - Voltar ao Menu Principal");
  1661   00020E  0E72               	movlw	low STR_8
  1662   000210  6F9D               	movwf	printf@fmt& (0+255),b
  1663   000212  0EFF               	movlw	high STR_8
  1664   000214  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1665   000216  EC62  F008         	call	_printf	;wreg free
  1666   00021A                     
  1667                           ;main.c: 180:             printf("\r\nOpcao: ");
  1668   00021A  0EF5               	movlw	low STR_9
  1669   00021C  0100               	movlb	0	; () banked
  1670   00021E  6F9D               	movwf	printf@fmt& (0+255),b
  1671   000220  0EFF               	movlw	high STR_9
  1672   000222  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1673   000224  EC62  F008         	call	_printf	;wreg free
  1674   000228  EFD8  F000         	goto	l3301
  1675   00022C                     l3327:
  1676                           
  1677                           ; BSR set to: 0
  1678                           ;main.c: 184:             EUSART1_Write(12);
  1679   00022C  0E0C               	movlw	12
  1680   00022E  EC78  F006         	call	_EUSART1_Write
  1681   000232                     
  1682                           ;main.c: 186:             printf("\r\nPercentagem do nivel de agua: %d", nivel_agua);
  1683   000232  0E30               	movlw	low STR_16
  1684   000234  0100               	movlb	0	; () banked
  1685   000236  6F9D               	movwf	printf@fmt& (0+255),b
  1686   000238  0EFF               	movlw	high STR_16
  1687   00023A  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1688   00023C  C0C1  F09F         	movff	_nivel_agua,?_printf+2
  1689   000240  C0C2  F0A0         	movff	_nivel_agua+1,?_printf+3
  1690   000244  EC62  F008         	call	_printf	;wreg free
  1691   000248                     
  1692                           ;main.c: 187:             printf("\r\nbits: %d", convertedValue);
  1693   000248  0EEA               	movlw	low STR_17
  1694   00024A  0100               	movlb	0	; () banked
  1695   00024C  6F9D               	movwf	printf@fmt& (0+255),b
  1696   00024E  0EFF               	movlw	high STR_17
  1697   000250  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1698   000252  C028  F09F         	movff	_convertedValue,?_printf+2
  1699   000256  C029  F0A0         	movff	_convertedValue+1,?_printf+3
  1700   00025A  EC62  F008         	call	_printf	;wreg free
  1701   00025E                     
  1702                           ;main.c: 188:             printf("\r\n0 - Voltar ao Menu Principal");
  1703   00025E  0E72               	movlw	low STR_8
  1704   000260  0100               	movlb	0	; () banked
  1705   000262  6F9D               	movwf	printf@fmt& (0+255),b
  1706   000264  0EFF               	movlw	high STR_8
  1707   000266  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1708   000268  EC62  F008         	call	_printf	;wreg free
  1709   00026C                     
  1710                           ;main.c: 189:             printf("\r\nOpcao: ");
  1711   00026C  0EF5               	movlw	low STR_9
  1712   00026E  0100               	movlb	0	; () banked
  1713   000270  6F9D               	movwf	printf@fmt& (0+255),b
  1714   000272  0EFF               	movlw	high STR_9
  1715   000274  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1716   000276  EC62  F008         	call	_printf	;wreg free
  1717   00027A  EFD8  F000         	goto	l3301
  1718   00027E                     l3339:
  1719                           
  1720                           ; BSR set to: 0
  1721                           ;main.c: 193:             EUSART1_Write(12);
  1722   00027E  0E0C               	movlw	12
  1723   000280  EC78  F006         	call	_EUSART1_Write
  1724   000284                     
  1725                           ;main.c: 195:             printf("\r\n0 - Voltar ao Menu Principal");
  1726   000284  0E72               	movlw	low STR_8
  1727   000286  0100               	movlb	0	; () banked
  1728   000288  6F9D               	movwf	printf@fmt& (0+255),b
  1729   00028A  0EFF               	movlw	high STR_8
  1730   00028C  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1731   00028E  EC62  F008         	call	_printf	;wreg free
  1732   000292                     
  1733                           ;main.c: 196:             printf("\r\nOpcao: ");
  1734   000292  0EF5               	movlw	low STR_9
  1735   000294  0100               	movlb	0	; () banked
  1736   000296  6F9D               	movwf	printf@fmt& (0+255),b
  1737   000298  0EFF               	movlw	high STR_9
  1738   00029A  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1739   00029C  EC62  F008         	call	_printf	;wreg free
  1740   0002A0  EFD8  F000         	goto	l3301
  1741   0002A4                     l3347:
  1742                           
  1743                           ; BSR set to: 0
  1744                           ;main.c: 200:             EUSART1_Write(12);
  1745   0002A4  0E0C               	movlw	12
  1746   0002A6  EC78  F006         	call	_EUSART1_Write
  1747   0002AA                     
  1748                           ;main.c: 202:             printf("\r\n0 - Voltar ao Menu Principal");
  1749   0002AA  0E72               	movlw	low STR_8
  1750   0002AC  0100               	movlb	0	; () banked
  1751   0002AE  6F9D               	movwf	printf@fmt& (0+255),b
  1752   0002B0  0EFF               	movlw	high STR_8
  1753   0002B2  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1754   0002B4  EC62  F008         	call	_printf	;wreg free
  1755   0002B8                     
  1756                           ;main.c: 203:             printf("\r\nOpcao: ");
  1757   0002B8  0EF5               	movlw	low STR_9
  1758   0002BA  0100               	movlb	0	; () banked
  1759   0002BC  6F9D               	movwf	printf@fmt& (0+255),b
  1760   0002BE  0EFF               	movlw	high STR_9
  1761   0002C0  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1762   0002C2  EC62  F008         	call	_printf	;wreg free
  1763   0002C6  EFD8  F000         	goto	l3301
  1764   0002CA                     l3355:
  1765                           
  1766                           ; BSR set to: 0
  1767                           ;main.c: 207:             EUSART1_Write(12);
  1768   0002CA  0E0C               	movlw	12
  1769   0002CC  EC78  F006         	call	_EUSART1_Write
  1770   0002D0                     
  1771                           ;main.c: 208:             printf("\r\nOpcao Invalida");
  1772   0002D0  0ED9               	movlw	low STR_24
  1773   0002D2  0100               	movlb	0	; () banked
  1774   0002D4  6F9D               	movwf	printf@fmt& (0+255),b
  1775   0002D6  0EFF               	movlw	high STR_24
  1776   0002D8  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1777   0002DA  EC62  F008         	call	_printf	;wreg free
  1778   0002DE                     
  1779                           ;main.c: 209:             printf("\r\nPrima 0 para voltar ao Menu Principal");
  1780   0002DE  0E96               	movlw	low STR_25
  1781   0002E0  0100               	movlb	0	; () banked
  1782   0002E2  6F9D               	movwf	printf@fmt& (0+255),b
  1783   0002E4  0EFE               	movlw	high STR_25
  1784   0002E6  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1785   0002E8  EC62  F008         	call	_printf	;wreg free
  1786   0002EC  EFD8  F000         	goto	l3301
  1787   0002F0                     l3365:
  1788   0002F0  0100               	movlb	0	; () banked
  1789   0002F2  51F1               	movf	_menu& (0+255),w,b
  1790   0002F4  6FA3               	movwf	??_ShowMenuInTerminal& (0+255),b
  1791   0002F6  6BA4               	clrf	(??_ShowMenuInTerminal+1)& (0+255),b
  1792                           
  1793                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1794                           ; Switch size 1, requested type "simple"
  1795                           ; Number of cases is 1, Range of values is 0 to 0
  1796                           ; switch strategies available:
  1797                           ; Name         Instructions Cycles
  1798                           ; simple_byte            4     3 (average)
  1799                           ;	Chosen strategy is simple_byte
  1800   0002F8  51A4               	movf	(??_ShowMenuInTerminal+1)& (0+255),w,b
  1801   0002FA  0A00               	xorlw	0	; case 0
  1802   0002FC  B4D8               	btfsc	status,2,c
  1803   0002FE  EF83  F001         	goto	l3469
  1804   000302  EF65  F001         	goto	l3355
  1805   000306                     l3469:
  1806                           
  1807                           ; BSR set to: 0
  1808                           ; Switch size 1, requested type "simple"
  1809                           ; Number of cases is 6, Range of values is 48 to 53
  1810                           ; switch strategies available:
  1811                           ; Name         Instructions Cycles
  1812                           ; simple_byte           19    10 (average)
  1813                           ;	Chosen strategy is simple_byte
  1814   000306  51A3               	movf	??_ShowMenuInTerminal& (0+255),w,b
  1815   000308  0A30               	xorlw	48	; case 48
  1816   00030A  B4D8               	btfsc	status,2,c
  1817   00030C  EF9D  F000         	goto	l3283
  1818   000310  0A01               	xorlw	1	; case 49
  1819   000312  B4D8               	btfsc	status,2,c
  1820   000314  EFDD  F000         	goto	l3303
  1821   000318  0A03               	xorlw	3	; case 50
  1822   00031A  B4D8               	btfsc	status,2,c
  1823   00031C  EFFA  F000         	goto	l3315
  1824   000320  0A01               	xorlw	1	; case 51
  1825   000322  B4D8               	btfsc	status,2,c
  1826   000324  EF16  F001         	goto	l3327
  1827   000328  0A07               	xorlw	7	; case 52
  1828   00032A  B4D8               	btfsc	status,2,c
  1829   00032C  EF3F  F001         	goto	l3339
  1830   000330  0A01               	xorlw	1	; case 53
  1831   000332  B4D8               	btfsc	status,2,c
  1832   000334  EF52  F001         	goto	l3347
  1833   000338  EF65  F001         	goto	l3355
  1834   00033C                     l637:
  1835                           
  1836                           ; BSR set to: 0
  1837   00033C  0012               	return		;funcret
  1838   00033E                     __end_of_ShowMenuInTerminal:
  1839                           	callstack 0
  1840                           
  1841 ;; *************** function _printf *****************
  1842 ;; Defined at:
  1843 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\printf.c"
  1844 ;; Parameters:    Size  Location     Type
  1845 ;;  fmt             2   61[BANK0 ] PTR const unsigned char 
  1846 ;;		 -> STR_25(40), STR_24(17), STR_23(10), STR_22(31), 
  1847 ;;		 -> STR_21(10), STR_20(31), STR_19(10), STR_18(31), 
  1848 ;;		 -> STR_17(11), STR_16(35), STR_15(10), STR_14(31), 
  1849 ;;		 -> STR_13(36), STR_12(10), STR_11(31), STR_10(26), 
  1850 ;;		 -> STR_9(10), STR_8(31), STR_7(41), STR_6(39), 
  1851 ;;		 -> STR_5(48), STR_4(39), STR_3(29), STR_2(17), 
  1852 ;;		 -> STR_1(31), 
  1853 ;; Auto vars:     Size  Location     Type
  1854 ;;  ap              2   65[BANK0 ] PTR void [1]
  1855 ;;		 -> ?_printf(2), 
  1856 ;;  ret             2    0        int 
  1857 ;; Return value:  Size  Location     Type
  1858 ;;                  2   61[BANK0 ] int 
  1859 ;; Registers used:
  1860 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1861 ;; Tracked objects:
  1862 ;;		On entry : 0/0
  1863 ;;		On exit  : 0/0
  1864 ;;		Unchanged: 0/0
  1865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1866 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1867 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1869 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1870 ;;Total ram usage:        6 bytes
  1871 ;; Hardware stack levels used: 1
  1872 ;; Hardware stack levels required when called: 12
  1873 ;; This function calls:
  1874 ;;		_vfprintf
  1875 ;; This function is called by:
  1876 ;;		_main
  1877 ;;		_ShowMenuInTerminal
  1878 ;; This function uses a non-reentrant model
  1879 ;;
  1880                           
  1881                           	psect	text5
  1882   0010C4                     __ptext5:
  1883                           	callstack 0
  1884   0010C4                     _printf:
  1885                           	callstack 18
  1886   0010C4  0E9F               	movlw	low (?_printf+2)
  1887   0010C6  0100               	movlb	0	; () banked
  1888   0010C8  6FA1               	movwf	printf@ap& (0+255),b
  1889   0010CA  0E00               	movlw	high (?_printf+2)
  1890   0010CC  6FA2               	movwf	(printf@ap+1)& (0+255),b
  1891   0010CE                     
  1892                           ; BSR set to: 0
  1893   0010CE  0E00               	movlw	0
  1894   0010D0  6F95               	movwf	vfprintf@fp& (0+255),b
  1895   0010D2  0E00               	movlw	0
  1896   0010D4  6F96               	movwf	(vfprintf@fp+1)& (0+255),b
  1897   0010D6  C09D  F097         	movff	printf@fmt,vfprintf@fmt
  1898   0010DA  C09E  F098         	movff	printf@fmt+1,vfprintf@fmt+1
  1899   0010DE  0EA1               	movlw	low printf@ap
  1900   0010E0  6F99               	movwf	vfprintf@ap& (0+255),b
  1901   0010E2  0E00               	movlw	high printf@ap
  1902   0010E4  6F9A               	movwf	(vfprintf@ap+1)& (0+255),b
  1903   0010E6  ECA3  F006         	call	_vfprintf	;wreg free
  1904   0010EA  0012               	return		;funcret
  1905   0010EC                     __end_of_printf:
  1906                           	callstack 0
  1907                           
  1908 ;; *************** function _vfprintf *****************
  1909 ;; Defined at:
  1910 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1911 ;; Parameters:    Size  Location     Type
  1912 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
  1913 ;;		 -> NULL(0), 
  1914 ;;  fmt             2   55[BANK0 ] PTR const unsigned char 
  1915 ;;		 -> STR_25(40), STR_24(17), STR_23(10), STR_22(31), 
  1916 ;;		 -> STR_21(10), STR_20(31), STR_19(10), STR_18(31), 
  1917 ;;		 -> STR_17(11), STR_16(35), STR_15(10), STR_14(31), 
  1918 ;;		 -> STR_13(36), STR_12(10), STR_11(31), STR_10(26), 
  1919 ;;		 -> STR_9(10), STR_8(31), STR_7(41), STR_6(39), 
  1920 ;;		 -> STR_5(48), STR_4(39), STR_3(29), STR_2(17), 
  1921 ;;		 -> STR_1(31), 
  1922 ;;  ap              2   57[BANK0 ] PTR PTR void 
  1923 ;;		 -> printf@ap(2), 
  1924 ;; Auto vars:     Size  Location     Type
  1925 ;;  cfmt            2   59[BANK0 ] PTR unsigned char 
  1926 ;;		 -> STR_25(40), STR_24(17), STR_23(10), STR_22(31), 
  1927 ;;		 -> STR_21(10), STR_20(31), STR_19(10), STR_18(31), 
  1928 ;;		 -> STR_17(11), STR_16(35), STR_15(10), STR_14(31), 
  1929 ;;		 -> STR_13(36), STR_12(10), STR_11(31), STR_10(26), 
  1930 ;;		 -> STR_9(10), STR_8(31), STR_7(41), STR_6(39), 
  1931 ;;		 -> STR_5(48), STR_4(39), STR_3(29), STR_2(17), 
  1932 ;;		 -> STR_1(31), 
  1933 ;; Return value:  Size  Location     Type
  1934 ;;                  2   53[BANK0 ] int 
  1935 ;; Registers used:
  1936 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1937 ;; Tracked objects:
  1938 ;;		On entry : 0/0
  1939 ;;		On exit  : 0/0
  1940 ;;		Unchanged: 0/0
  1941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1942 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1943 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1945 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1946 ;;Total ram usage:        8 bytes
  1947 ;; Hardware stack levels used: 1
  1948 ;; Hardware stack levels required when called: 11
  1949 ;; This function calls:
  1950 ;;		_vfpfcnvrt
  1951 ;; This function is called by:
  1952 ;;		_printf
  1953 ;; This function uses a non-reentrant model
  1954 ;;
  1955                           
  1956                           	psect	text6
  1957   000D46                     __ptext6:
  1958                           	callstack 0
  1959   000D46                     _vfprintf:
  1960                           	callstack 18
  1961   000D46                     
  1962                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  1963   000D46  C097  F09B         	movff	vfprintf@fmt,vfprintf@cfmt
  1964   000D4A  C098  F09C         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1965                           
  1966                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1967   000D4E  EFB8  F006         	goto	l3269
  1968   000D52                     l3267:
  1969                           
  1970                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1971   000D52  C095  F087         	movff	vfprintf@fp,vfpfcnvrt@fp
  1972   000D56  C096  F088         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1973   000D5A  0E9B               	movlw	low vfprintf@cfmt
  1974   000D5C  0100               	movlb	0	; () banked
  1975   000D5E  6F89               	movwf	vfpfcnvrt@fmt& (0+255),b
  1976   000D60  0E00               	movlw	high vfprintf@cfmt
  1977   000D62  6F8A               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1978   000D64  C099  F08B         	movff	vfprintf@ap,vfpfcnvrt@ap
  1979   000D68  C09A  F08C         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1980   000D6C  EC6B  F002         	call	_vfpfcnvrt	;wreg free
  1981   000D70                     l3269:
  1982                           
  1983                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1984   000D70  C09B  FFF6         	movff	vfprintf@cfmt,tblptrl
  1985   000D74  C09C  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1986   000D78                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1987   000D78  6AF8               	clrf	tblptru,c
  1988   000D7A                     	endif
  1989   000D7A                     	if	0	;tblptru may be non-zero
  1990   000D7A                     	endif
  1991   000D7A  0008               	tblrd		*
  1992   000D7C  50F5               	movf	tablat,w,c
  1993   000D7E  0900               	iorlw	0
  1994   000D80  A4D8               	btfss	status,2,c
  1995   000D82  EFC5  F006         	goto	u2171
  1996   000D86  EFC7  F006         	goto	u2170
  1997   000D8A                     u2171:
  1998   000D8A  EFA9  F006         	goto	l3267
  1999   000D8E                     u2170:
  2000   000D8E                     
  2001                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  2002   000D8E  0E00               	movlw	0
  2003   000D90  0100               	movlb	0	; () banked
  2004   000D92  6F96               	movwf	(?_vfprintf+1)& (0+255),b
  2005   000D94  0E00               	movlw	0
  2006   000D96  6F95               	movwf	?_vfprintf& (0+255),b
  2007   000D98                     
  2008                           ; BSR set to: 0
  2009   000D98  0012               	return		;funcret
  2010   000D9A                     __end_of_vfprintf:
  2011                           	callstack 0
  2012                           
  2013 ;; *************** function _vfpfcnvrt *****************
  2014 ;; Defined at:
  2015 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;  fp              2   39[BANK0 ] PTR struct _IO_FILE
  2018 ;;		 -> NULL(0), 
  2019 ;;  fmt             2   41[BANK0 ] PTR PTR unsigned char 
  2020 ;;		 -> vfprintf@cfmt(2), 
  2021 ;;  ap              2   43[BANK0 ] PTR PTR void 
  2022 ;;		 -> printf@ap(2), 
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;  convarg         4   47[BANK0 ] struct .
  2025 ;;  cp              2   51[BANK0 ] PTR unsigned char 
  2026 ;;		 -> STR_25(40), STR_24(17), STR_23(10), STR_22(31), 
  2027 ;;		 -> STR_21(10), STR_20(31), STR_19(10), STR_18(31), 
  2028 ;;		 -> STR_17(11), STR_16(35), STR_15(10), STR_14(31), 
  2029 ;;		 -> STR_13(36), STR_12(10), STR_11(31), STR_10(26), 
  2030 ;;		 -> STR_9(10), STR_8(31), STR_7(41), STR_6(39), 
  2031 ;;		 -> STR_5(48), STR_4(39), STR_3(29), STR_2(17), 
  2032 ;;		 -> STR_1(31), 
  2033 ;;  i               2    0        int 
  2034 ;;  done            2    0        int 
  2035 ;;  c               1    0        unsigned char 
  2036 ;; Return value:  Size  Location     Type
  2037 ;;                  1    wreg      void 
  2038 ;; Registers used:
  2039 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2040 ;; Tracked objects:
  2041 ;;		On entry : 0/0
  2042 ;;		On exit  : 0/0
  2043 ;;		Unchanged: 0/0
  2044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2045 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2046 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2047 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2048 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2049 ;;Total ram usage:       14 bytes
  2050 ;; Hardware stack levels used: 1
  2051 ;; Hardware stack levels required when called: 10
  2052 ;; This function calls:
  2053 ;;		_dtoa
  2054 ;;		_fputc
  2055 ;; This function is called by:
  2056 ;;		_vfprintf
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060                           	psect	text7
  2061   0004D6                     __ptext7:
  2062                           	callstack 0
  2063   0004D6                     _vfpfcnvrt:
  2064                           	callstack 18
  2065   0004D6                     
  2066                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  2067   0004D6  C089  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2068   0004DA  C08A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2069   0004DE  CFDE FFF6          	movff	postinc2,tblptrl
  2070   0004E2  CFDD FFF7          	movff	postdec2,tblptrh
  2071   0004E6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2072   0004E6  6AF8               	clrf	tblptru,c
  2073   0004E8                     	endif
  2074   0004E8                     	if	0	;tblptru may be non-zero
  2075   0004E8                     	endif
  2076   0004E8  0008               	tblrd		*
  2077   0004EA  50F5               	movf	tablat,w,c
  2078   0004EC  0A25               	xorlw	37
  2079   0004EE  A4D8               	btfss	status,2,c
  2080   0004F0  EF7C  F002         	goto	u2141
  2081   0004F4  EF7E  F002         	goto	u2140
  2082   0004F8                     u2141:
  2083   0004F8  EFEB  F002         	goto	l3259
  2084   0004FC                     u2140:
  2085   0004FC                     
  2086                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  2087   0004FC  C089  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2088   000500  C08A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2089   000504  2ADE               	incf	postinc2,f,c
  2090   000506  0E00               	movlw	0
  2091   000508  22DD               	addwfc	postdec2,f,c
  2092   00050A                     
  2093                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  2094   00050A  0E00               	movlw	0
  2095   00050C  6E23               	movwf	(_width+1)^0,c
  2096   00050E  0E00               	movlw	0
  2097   000510  6E22               	movwf	_width^0,c
  2098   000512  C022  F0C3         	movff	_width,_flags
  2099   000516                     
  2100                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  2101   000516  6824               	setf	_prec^0,c
  2102   000518  6825               	setf	(_prec+1)^0,c
  2103   00051A                     
  2104                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  2105   00051A  C089  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2106   00051E  C08A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2107   000522  CFDE F093          	movff	postinc2,vfpfcnvrt@cp
  2108   000526  CFDD F094          	movff	postdec2,vfpfcnvrt@cp+1
  2109   00052A                     
  2110                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2111   00052A  C093  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2112   00052E  C094  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2113   000532                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2114   000532  6AF8               	clrf	tblptru,c
  2115   000534                     	endif
  2116   000534                     	if	0	;tblptru may be non-zero
  2117   000534                     	endif
  2118   000534  0008               	tblrd		*
  2119   000536  50F5               	movf	tablat,w,c
  2120   000538  0A64               	xorlw	100
  2121   00053A  B4D8               	btfsc	status,2,c
  2122   00053C  EFA2  F002         	goto	u2151
  2123   000540  EFA4  F002         	goto	u2150
  2124   000544                     u2151:
  2125   000544  EFB3  F002         	goto	l3249
  2126   000548                     u2150:
  2127   000548  C093  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2128   00054C  C094  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2129   000550                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2130   000550  6AF8               	clrf	tblptru,c
  2131   000552                     	endif
  2132   000552                     	if	0	;tblptru may be non-zero
  2133   000552                     	endif
  2134   000552  0008               	tblrd		*
  2135   000554  50F5               	movf	tablat,w,c
  2136   000556  0A69               	xorlw	105
  2137   000558  A4D8               	btfss	status,2,c
  2138   00055A  EFB1  F002         	goto	u2161
  2139   00055E  EFB3  F002         	goto	u2160
  2140   000562                     u2161:
  2141   000562  EFE2  F002         	goto	l3255
  2142   000566                     u2160:
  2143   000566                     l3249:
  2144                           
  2145                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2146   000566  C08B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2147   00056A  C08C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2148   00056E  CFDF F08D          	movff	indf2,??_vfpfcnvrt
  2149   000572  0E02               	movlw	2
  2150   000574  26DE               	addwf	postinc2,f,c
  2151   000576  CFDF F08E          	movff	indf2,??_vfpfcnvrt+1
  2152   00057A  0E00               	movlw	0
  2153   00057C  22DD               	addwfc	postdec2,f,c
  2154   00057E  C08D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2155   000582  C08E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2156   000586  CFDE F08F          	movff	postinc2,vfpfcnvrt@convarg
  2157   00058A  CFDD F090          	movff	postdec2,vfpfcnvrt@convarg+1
  2158                           
  2159                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  2160   00058E  0E01               	movlw	1
  2161   000590  0100               	movlb	0	; () banked
  2162   000592  2593               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2163   000594  6F8D               	movwf	??_vfpfcnvrt& (0+255),b
  2164   000596  0E00               	movlw	0
  2165   000598  2194               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2166   00059A  6F8E               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2167   00059C  C089  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2168   0005A0  C08A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2169   0005A4  C08D  FFDE         	movff	??_vfpfcnvrt,postinc2
  2170   0005A8  C08E  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2171   0005AC                     
  2172                           ; BSR set to: 0
  2173                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  2174   0005AC  C087  F07A         	movff	vfpfcnvrt@fp,dtoa@fp
  2175   0005B0  C088  F07B         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2176   0005B4  C08F  F07C         	movff	vfpfcnvrt@convarg,dtoa@d
  2177   0005B8  C090  F07D         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2178   0005BC  EC9F  F001         	call	_dtoa	;wreg free
  2179   0005C0  EF01  F003         	goto	l1380
  2180   0005C4                     l3255:
  2181                           
  2182                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  2183   0005C4  C089  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2184   0005C8  C08A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2185   0005CC  2ADE               	incf	postinc2,f,c
  2186   0005CE  0E00               	movlw	0
  2187   0005D0  22DD               	addwfc	postdec2,f,c
  2188   0005D2  EF01  F003         	goto	l1380
  2189   0005D6                     l3259:
  2190                           
  2191                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  2192   0005D6  C089  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2193   0005DA  C08A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2194   0005DE  CFDE FFF6          	movff	postinc2,tblptrl
  2195   0005E2  CFDD FFF7          	movff	postdec2,tblptrh
  2196   0005E6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2197   0005E6  6AF8               	clrf	tblptru,c
  2198   0005E8                     	endif
  2199   0005E8                     	if	0	;tblptru may be non-zero
  2200   0005E8                     	endif
  2201   0005E8  0008               	tblrd		*
  2202   0005EA  50F5               	movf	tablat,w,c
  2203   0005EC  0100               	movlb	0	; () banked
  2204   0005EE  6F60               	movwf	fputc@c& (0+255),b
  2205   0005F0  6B61               	clrf	(fputc@c+1)& (0+255),b
  2206   0005F2  C087  F062         	movff	vfpfcnvrt@fp,fputc@fp
  2207   0005F6  C088  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2208   0005FA  EC88  F003         	call	_fputc	;wreg free
  2209   0005FE  EFE2  F002         	goto	l3255
  2210   000602                     l1380:
  2211   000602  0012               	return		;funcret
  2212   000604                     __end_of_vfpfcnvrt:
  2213                           	callstack 0
  2214                           
  2215 ;; *************** function _dtoa *****************
  2216 ;; Defined at:
  2217 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2218 ;; Parameters:    Size  Location     Type
  2219 ;;  fp              2   26[BANK0 ] PTR struct _IO_FILE
  2220 ;;		 -> NULL(0), 
  2221 ;;  d               2   28[BANK0 ] int 
  2222 ;; Auto vars:     Size  Location     Type
  2223 ;;  i               2   37[BANK0 ] int 
  2224 ;;  w               2   34[BANK0 ] int 
  2225 ;;  p               2   32[BANK0 ] int 
  2226 ;;  s               1   36[BANK0 ] unsigned char 
  2227 ;; Return value:  Size  Location     Type
  2228 ;;                  1    wreg      void 
  2229 ;; Registers used:
  2230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2231 ;; Tracked objects:
  2232 ;;		On entry : 0/0
  2233 ;;		On exit  : 0/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2236 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2237 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2239 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2240 ;;Total ram usage:       13 bytes
  2241 ;; Hardware stack levels used: 1
  2242 ;; Hardware stack levels required when called: 9
  2243 ;; This function calls:
  2244 ;;		___awdiv
  2245 ;;		___awmod
  2246 ;;		_abs
  2247 ;;		_pad
  2248 ;; This function is called by:
  2249 ;;		_vfpfcnvrt
  2250 ;; This function uses a non-reentrant model
  2251 ;;
  2252                           
  2253                           	psect	text8
  2254   00033E                     __ptext8:
  2255                           	callstack 0
  2256   00033E                     _dtoa:
  2257                           	callstack 18
  2258   00033E                     
  2259                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  2260   00033E  0100               	movlb	0	; () banked
  2261   000340  BF7D               	btfsc	(dtoa@d+1)& (0+255),7,b
  2262   000342  EFA5  F001         	goto	u2041
  2263   000346  EFA8  F001         	goto	u2040
  2264   00034A                     u2041:
  2265   00034A  0E01               	movlw	1
  2266   00034C  EFA9  F001         	goto	u2050
  2267   000350                     u2040:
  2268   000350  0E00               	movlw	0
  2269   000352                     u2050:
  2270   000352  6F84               	movwf	dtoa@s& (0+255),b
  2271   000354                     
  2272                           ; BSR set to: 0
  2273                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  2274   000354  5184               	movf	dtoa@s& (0+255),w,b
  2275   000356  B4D8               	btfsc	status,2,c
  2276   000358  EFB0  F001         	goto	u2061
  2277   00035C  EFB2  F001         	goto	u2060
  2278   000360                     u2061:
  2279   000360  EFB6  F001         	goto	l3191
  2280   000364                     u2060:
  2281   000364                     
  2282                           ; BSR set to: 0
  2283                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  2284   000364  6D7C               	negf	dtoa@d& (0+255),b
  2285   000366  1F7D               	comf	(dtoa@d+1)& (0+255),f,b
  2286   000368  B0D8               	btfsc	status,0,c
  2287   00036A  2B7D               	incf	(dtoa@d+1)& (0+255),f,b
  2288   00036C                     l3191:
  2289                           
  2290                           ; BSR set to: 0
  2291                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  2292   00036C  BE25               	btfsc	(_prec+1)^0,7,c
  2293   00036E  EFBD  F001         	goto	u2070
  2294   000372  EFBB  F001         	goto	u2071
  2295   000376                     u2071:
  2296   000376  EFC3  F001         	goto	l1359
  2297   00037A                     u2070:
  2298   00037A                     
  2299                           ; BSR set to: 0
  2300   00037A  0E00               	movlw	0
  2301   00037C  6F81               	movwf	(dtoa@p+1)& (0+255),b
  2302   00037E  0E01               	movlw	1
  2303   000380  6F80               	movwf	dtoa@p& (0+255),b
  2304   000382  EFC7  F001         	goto	l1361
  2305   000386                     l1359:
  2306                           
  2307                           ; BSR set to: 0
  2308   000386  C024  F080         	movff	_prec,dtoa@p
  2309   00038A  C025  F081         	movff	_prec+1,dtoa@p+1
  2310   00038E                     l1361:
  2311                           
  2312                           ; BSR set to: 0
  2313                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  2314   00038E  C022  F082         	movff	_width,dtoa@w
  2315   000392  C023  F083         	movff	_width+1,dtoa@w+1
  2316   000396                     
  2317                           ; BSR set to: 0
  2318                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  2319   000396  5184               	movf	dtoa@s& (0+255),w,b
  2320   000398  B4D8               	btfsc	status,2,c
  2321   00039A  EFD1  F001         	goto	u2081
  2322   00039E  EFD3  F001         	goto	u2080
  2323   0003A2                     u2081:
  2324   0003A2  EFEA  F001         	goto	l1362
  2325   0003A6                     u2080:
  2326   0003A6                     
  2327                           ; BSR set to: 0
  2328                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  2329   0003A6  0782               	decf	dtoa@w& (0+255),f,b
  2330   0003A8  A0D8               	btfss	status,0,c
  2331   0003AA  0783               	decf	(dtoa@w+1)& (0+255),f,b
  2332   0003AC                     
  2333                           ; BSR set to: 0
  2334                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  2335   0003AC  5184               	movf	dtoa@s& (0+255),w,b
  2336   0003AE  A4D8               	btfss	status,2,c
  2337   0003B0  EFDC  F001         	goto	u2091
  2338   0003B4  EFDE  F001         	goto	u2090
  2339   0003B8                     u2091:
  2340   0003B8  EFE4  F001         	goto	l3203
  2341   0003BC                     u2090:
  2342   0003BC                     
  2343                           ; BSR set to: 0
  2344   0003BC  0E00               	movlw	0
  2345   0003BE  6F7F               	movwf	(_dtoa$2071+1)& (0+255),b
  2346   0003C0  0E2B               	movlw	43
  2347   0003C2  6F7E               	movwf	_dtoa$2071& (0+255),b
  2348   0003C4  EFE8  F001         	goto	l3205
  2349   0003C8                     l3203:
  2350                           
  2351                           ; BSR set to: 0
  2352   0003C8  0E00               	movlw	0
  2353   0003CA  6F7F               	movwf	(_dtoa$2071+1)& (0+255),b
  2354   0003CC  0E2D               	movlw	45
  2355   0003CE  6F7E               	movwf	_dtoa$2071& (0+255),b
  2356   0003D0                     l3205:
  2357                           
  2358                           ; BSR set to: 0
  2359   0003D0  C07E  F084         	movff	_dtoa$2071,dtoa@s
  2360   0003D4                     l1362:
  2361                           
  2362                           ; BSR set to: 0
  2363                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  2364   0003D4  0E00               	movlw	0
  2365   0003D6  6F86               	movwf	(dtoa@i+1)& (0+255),b
  2366   0003D8  0E1F               	movlw	31
  2367   0003DA  6F85               	movwf	dtoa@i& (0+255),b
  2368   0003DC                     
  2369                           ; BSR set to: 0
  2370                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  2371   0003DC  0E00               	movlw	0
  2372   0003DE  6FE5               	movwf	(_dbuf+31)& (0+255),b
  2373                           
  2374                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2375   0003E0  EF23  F002         	goto	l3219
  2376   0003E4                     l3209:
  2377                           
  2378                           ; BSR set to: 0
  2379                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  2380   0003E4  0785               	decf	dtoa@i& (0+255),f,b
  2381   0003E6  A0D8               	btfss	status,0,c
  2382   0003E8  0786               	decf	(dtoa@i+1)& (0+255),f,b
  2383   0003EA                     
  2384                           ; BSR set to: 0
  2385                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  2386   0003EA  0EC6               	movlw	low _dbuf
  2387   0003EC  2585               	addwf	dtoa@i& (0+255),w,b
  2388   0003EE  6ED9               	movwf	fsr2l,c
  2389   0003F0  0E00               	movlw	high _dbuf
  2390   0003F2  2186               	addwfc	(dtoa@i+1)& (0+255),w,b
  2391   0003F4  6EDA               	movwf	fsr2h,c
  2392   0003F6  C07C  F060         	movff	dtoa@d,___awmod@dividend
  2393   0003FA  C07D  F061         	movff	dtoa@d+1,___awmod@dividend+1
  2394   0003FE  0E00               	movlw	0
  2395   000400  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  2396   000402  0E0A               	movlw	10
  2397   000404  6F62               	movwf	___awmod@divisor& (0+255),b
  2398   000406  EC0B  F005         	call	___awmod	;wreg free
  2399   00040A  C060  F064         	movff	?___awmod,abs@a
  2400   00040E  C061  F065         	movff	?___awmod+1,abs@a+1
  2401   000412  EC64  F007         	call	_abs	;wreg free
  2402   000416  0100               	movlb	0	; () banked
  2403   000418  5164               	movf	?_abs& (0+255),w,b
  2404   00041A  0F30               	addlw	48
  2405   00041C  6EDF               	movwf	indf2,c
  2406   00041E                     
  2407                           ; BSR set to: 0
  2408                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  2409   00041E  0780               	decf	dtoa@p& (0+255),f,b
  2410   000420  A0D8               	btfss	status,0,c
  2411   000422  0781               	decf	(dtoa@p+1)& (0+255),f,b
  2412   000424                     
  2413                           ; BSR set to: 0
  2414                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  2415   000424  0782               	decf	dtoa@w& (0+255),f,b
  2416   000426  A0D8               	btfss	status,0,c
  2417   000428  0783               	decf	(dtoa@w+1)& (0+255),f,b
  2418   00042A                     
  2419                           ; BSR set to: 0
  2420                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  2421   00042A  C07C  F060         	movff	dtoa@d,___awdiv@dividend
  2422   00042E  C07D  F061         	movff	dtoa@d+1,___awdiv@dividend+1
  2423   000432  0E00               	movlw	0
  2424   000434  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  2425   000436  0E0A               	movlw	10
  2426   000438  6F62               	movwf	___awdiv@divisor& (0+255),b
  2427   00043A  ECEE  F003         	call	___awdiv	;wreg free
  2428   00043E  C060  F07C         	movff	?___awdiv,dtoa@d
  2429   000442  C061  F07D         	movff	?___awdiv+1,dtoa@d+1
  2430   000446                     l3219:
  2431                           
  2432                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2433   000446  0100               	movlb	0	; () banked
  2434   000448  BF86               	btfsc	(dtoa@i+1)& (0+255),7,b
  2435   00044A  EF2F  F002         	goto	u2101
  2436   00044E  5186               	movf	(dtoa@i+1)& (0+255),w,b
  2437   000450  E108               	bnz	u2100
  2438   000452  0585               	decf	dtoa@i& (0+255),w,b
  2439   000454  A0D8               	btfss	status,0,c
  2440   000456  EF2F  F002         	goto	u2101
  2441   00045A  EF31  F002         	goto	u2100
  2442   00045E                     u2101:
  2443   00045E  EF47  F002         	goto	l3225
  2444   000462                     u2100:
  2445   000462                     
  2446                           ; BSR set to: 0
  2447   000462  517C               	movf	dtoa@d& (0+255),w,b
  2448   000464  117D               	iorwf	(dtoa@d+1)& (0+255),w,b
  2449   000466  A4D8               	btfss	status,2,c
  2450   000468  EF38  F002         	goto	u2111
  2451   00046C  EF3A  F002         	goto	u2110
  2452   000470                     u2111:
  2453   000470  EFF2  F001         	goto	l3209
  2454   000474                     u2110:
  2455   000474                     
  2456                           ; BSR set to: 0
  2457   000474  BF81               	btfsc	(dtoa@p+1)& (0+255),7,b
  2458   000476  EF47  F002         	goto	u2120
  2459   00047A  5181               	movf	(dtoa@p+1)& (0+255),w,b
  2460   00047C  E106               	bnz	u2121
  2461   00047E  0580               	decf	dtoa@p& (0+255),w,b
  2462   000480  B0D8               	btfsc	status,0,c
  2463   000482  EF45  F002         	goto	u2121
  2464   000486  EF47  F002         	goto	u2120
  2465   00048A                     u2121:
  2466   00048A  EFF2  F001         	goto	l3209
  2467   00048E                     u2120:
  2468   00048E                     l3225:
  2469                           
  2470                           ; BSR set to: 0
  2471                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  2472   00048E  5184               	movf	dtoa@s& (0+255),w,b
  2473   000490  B4D8               	btfsc	status,2,c
  2474   000492  EF4D  F002         	goto	u2131
  2475   000496  EF4F  F002         	goto	u2130
  2476   00049A                     u2131:
  2477   00049A  EF5A  F002         	goto	l3231
  2478   00049E                     u2130:
  2479   00049E                     
  2480                           ; BSR set to: 0
  2481                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  2482   00049E  0785               	decf	dtoa@i& (0+255),f,b
  2483   0004A0  A0D8               	btfss	status,0,c
  2484   0004A2  0786               	decf	(dtoa@i+1)& (0+255),f,b
  2485   0004A4                     
  2486                           ; BSR set to: 0
  2487                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  2488   0004A4  0EC6               	movlw	low _dbuf
  2489   0004A6  2585               	addwf	dtoa@i& (0+255),w,b
  2490   0004A8  6ED9               	movwf	fsr2l,c
  2491   0004AA  0E00               	movlw	high _dbuf
  2492   0004AC  2186               	addwfc	(dtoa@i+1)& (0+255),w,b
  2493   0004AE  6EDA               	movwf	fsr2h,c
  2494   0004B0  C084  FFDF         	movff	dtoa@s,indf2
  2495   0004B4                     l3231:
  2496                           
  2497                           ; BSR set to: 0
  2498                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2499   0004B4  C07A  F070         	movff	dtoa@fp,pad@fp
  2500   0004B8  C07B  F071         	movff	dtoa@fp+1,pad@fp+1
  2501   0004BC  0EC6               	movlw	low _dbuf
  2502   0004BE  2585               	addwf	dtoa@i& (0+255),w,b
  2503   0004C0  6F72               	movwf	pad@buf& (0+255),b
  2504   0004C2  0E00               	movlw	high _dbuf
  2505   0004C4  2186               	addwfc	(dtoa@i+1)& (0+255),w,b
  2506   0004C6  6F73               	movwf	(pad@buf+1)& (0+255),b
  2507   0004C8  C082  F074         	movff	dtoa@w,pad@p
  2508   0004CC  C083  F075         	movff	dtoa@w+1,pad@p+1
  2509   0004D0  EC64  F005         	call	_pad	;wreg free
  2510   0004D4  0012               	return		;funcret
  2511   0004D6                     __end_of_dtoa:
  2512                           	callstack 0
  2513                           
  2514 ;; *************** function _pad *****************
  2515 ;; Defined at:
  2516 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2517 ;; Parameters:    Size  Location     Type
  2518 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  2519 ;;		 -> NULL(0), 
  2520 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  2521 ;;		 -> dbuf(32), 
  2522 ;;  p               2   20[BANK0 ] int 
  2523 ;; Auto vars:     Size  Location     Type
  2524 ;;  w               2   24[BANK0 ] int 
  2525 ;;  i               2   22[BANK0 ] int 
  2526 ;; Return value:  Size  Location     Type
  2527 ;;                  1    wreg      void 
  2528 ;; Registers used:
  2529 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2530 ;; Tracked objects:
  2531 ;;		On entry : 0/0
  2532 ;;		On exit  : 0/0
  2533 ;;		Unchanged: 0/0
  2534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2535 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2536 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2537 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2538 ;;      Totals:         1      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2539 ;;Total ram usage:       11 bytes
  2540 ;; Hardware stack levels used: 1
  2541 ;; Hardware stack levels required when called: 8
  2542 ;; This function calls:
  2543 ;;		_fputc
  2544 ;;		_fputs
  2545 ;; This function is called by:
  2546 ;;		_dtoa
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           	psect	text9
  2551   000AC8                     __ptext9:
  2552                           	callstack 0
  2553   000AC8                     _pad:
  2554                           	callstack 18
  2555   000AC8                     
  2556                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  2557   000AC8  0100               	movlb	0	; () banked
  2558   000ACA  BF75               	btfsc	(pad@p+1)& (0+255),7,b
  2559   000ACC  EF6A  F005         	goto	u2011
  2560   000AD0  EF6C  F005         	goto	u2010
  2561   000AD4                     u2011:
  2562   000AD4  EF72  F005         	goto	l3171
  2563   000AD8                     u2010:
  2564   000AD8                     
  2565                           ; BSR set to: 0
  2566   000AD8  C074  F078         	movff	pad@p,pad@w
  2567   000ADC  C075  F079         	movff	pad@p+1,pad@w+1
  2568   000AE0  EF76  F005         	goto	l1350
  2569   000AE4                     l3171:
  2570                           
  2571                           ; BSR set to: 0
  2572   000AE4  0E00               	movlw	0
  2573   000AE6  6F79               	movwf	(pad@w+1)& (0+255),b
  2574   000AE8  0E00               	movlw	0
  2575   000AEA  6F78               	movwf	pad@w& (0+255),b
  2576   000AEC                     l1350:
  2577                           
  2578                           ; BSR set to: 0
  2579                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  2580   000AEC  0E00               	movlw	0
  2581   000AEE  6F77               	movwf	(pad@i+1)& (0+255),b
  2582   000AF0  0E00               	movlw	0
  2583   000AF2  6F76               	movwf	pad@i& (0+255),b
  2584                           
  2585                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2586   000AF4  EF89  F005         	goto	l3177
  2587   000AF8                     l3173:
  2588                           
  2589                           ; BSR set to: 0
  2590                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  2591   000AF8  0E00               	movlw	0
  2592   000AFA  6F61               	movwf	(fputc@c+1)& (0+255),b
  2593   000AFC  0E20               	movlw	32
  2594   000AFE  6F60               	movwf	fputc@c& (0+255),b
  2595   000B00  C070  F062         	movff	pad@fp,fputc@fp
  2596   000B04  C071  F063         	movff	pad@fp+1,fputc@fp+1
  2597   000B08  EC88  F003         	call	_fputc	;wreg free
  2598   000B0C                     
  2599                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  2600   000B0C  0100               	movlb	0	; () banked
  2601   000B0E  4B76               	infsnz	pad@i& (0+255),f,b
  2602   000B10  2B77               	incf	(pad@i+1)& (0+255),f,b
  2603   000B12                     l3177:
  2604                           
  2605                           ; BSR set to: 0
  2606                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2607   000B12  5178               	movf	pad@w& (0+255),w,b
  2608   000B14  5D76               	subwf	pad@i& (0+255),w,b
  2609   000B16  5177               	movf	(pad@i+1)& (0+255),w,b
  2610   000B18  0A80               	xorlw	128
  2611   000B1A  6E21               	movwf	??_pad^0,c
  2612   000B1C  5179               	movf	(pad@w+1)& (0+255),w,b
  2613   000B1E  0A80               	xorlw	128
  2614   000B20  5821               	subwfb	??_pad^0,w,c
  2615   000B22  A0D8               	btfss	status,0,c
  2616   000B24  EF96  F005         	goto	u2021
  2617   000B28  EF98  F005         	goto	u2020
  2618   000B2C                     u2021:
  2619   000B2C  EF7C  F005         	goto	l3173
  2620   000B30                     u2020:
  2621   000B30                     
  2622                           ; BSR set to: 0
  2623                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  2624   000B30  C072  F069         	movff	pad@buf,fputs@s
  2625   000B34  C073  F06A         	movff	pad@buf+1,fputs@s+1
  2626   000B38  C070  F06B         	movff	pad@fp,fputs@fp
  2627   000B3C  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  2628   000B40  EC1E  F007         	call	_fputs	;wreg free
  2629   000B44  0012               	return		;funcret
  2630   000B46                     __end_of_pad:
  2631                           	callstack 0
  2632                           
  2633 ;; *************** function _fputs *****************
  2634 ;; Defined at:
  2635 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  2638 ;;		 -> dbuf(32), 
  2639 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  2640 ;;		 -> NULL(0), 
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;  i               2   14[BANK0 ] int 
  2643 ;;  c               1   13[BANK0 ] unsigned char 
  2644 ;; Return value:  Size  Location     Type
  2645 ;;                  2    9[BANK0 ] int 
  2646 ;; Registers used:
  2647 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/0
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2653 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2654 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2656 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2657 ;;Total ram usage:        7 bytes
  2658 ;; Hardware stack levels used: 1
  2659 ;; Hardware stack levels required when called: 7
  2660 ;; This function calls:
  2661 ;;		_fputc
  2662 ;; This function is called by:
  2663 ;;		_pad
  2664 ;; This function uses a non-reentrant model
  2665 ;;
  2666                           
  2667                           	psect	text10
  2668   000E3C                     __ptext10:
  2669                           	callstack 0
  2670   000E3C                     _fputs:
  2671                           	callstack 18
  2672   000E3C  0E00               	movlw	0
  2673   000E3E  0100               	movlb	0	; () banked
  2674   000E40  6F6F               	movwf	(fputs@i+1)& (0+255),b
  2675   000E42  0E00               	movlw	0
  2676   000E44  6F6E               	movwf	fputs@i& (0+255),b
  2677   000E46  EF31  F007         	goto	l3085
  2678   000E4A                     l3081:
  2679                           
  2680                           ; BSR set to: 0
  2681   000E4A  C06D  F060         	movff	fputs@c,fputc@c
  2682   000E4E  6B61               	clrf	(fputc@c+1)& (0+255),b
  2683   000E50  C06B  F062         	movff	fputs@fp,fputc@fp
  2684   000E54  C06C  F063         	movff	fputs@fp+1,fputc@fp+1
  2685   000E58  EC88  F003         	call	_fputc	;wreg free
  2686   000E5C  0100               	movlb	0	; () banked
  2687   000E5E  4B6E               	infsnz	fputs@i& (0+255),f,b
  2688   000E60  2B6F               	incf	(fputs@i+1)& (0+255),f,b
  2689   000E62                     l3085:
  2690                           
  2691                           ; BSR set to: 0
  2692   000E62  516E               	movf	fputs@i& (0+255),w,b
  2693   000E64  2569               	addwf	fputs@s& (0+255),w,b
  2694   000E66  6ED9               	movwf	fsr2l,c
  2695   000E68  516F               	movf	(fputs@i+1)& (0+255),w,b
  2696   000E6A  216A               	addwfc	(fputs@s+1)& (0+255),w,b
  2697   000E6C  6EDA               	movwf	fsr2h,c
  2698   000E6E  50DF               	movf	indf2,w,c
  2699   000E70  6F6D               	movwf	fputs@c& (0+255),b
  2700   000E72  516D               	movf	fputs@c& (0+255),w,b
  2701   000E74  A4D8               	btfss	status,2,c
  2702   000E76  EF3F  F007         	goto	u1881
  2703   000E7A  EF41  F007         	goto	u1880
  2704   000E7E                     u1881:
  2705   000E7E  EF25  F007         	goto	l3081
  2706   000E82                     u1880:
  2707   000E82                     
  2708                           ; BSR set to: 0
  2709   000E82  0012               	return		;funcret
  2710   000E84                     __end_of_fputs:
  2711                           	callstack 0
  2712                           
  2713 ;; *************** function _fputc *****************
  2714 ;; Defined at:
  2715 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  2716 ;; Parameters:    Size  Location     Type
  2717 ;;  c               2    0[BANK0 ] int 
  2718 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  2719 ;;		 -> NULL(0), 
  2720 ;; Auto vars:     Size  Location     Type
  2721 ;;		None
  2722 ;; Return value:  Size  Location     Type
  2723 ;;                  2    0[BANK0 ] int 
  2724 ;; Registers used:
  2725 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2726 ;; Tracked objects:
  2727 ;;		On entry : 0/0
  2728 ;;		On exit  : 0/0
  2729 ;;		Unchanged: 0/0
  2730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2731 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2733 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2734 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2735 ;;Total ram usage:        9 bytes
  2736 ;; Hardware stack levels used: 1
  2737 ;; Hardware stack levels required when called: 6
  2738 ;; This function calls:
  2739 ;;		_putch
  2740 ;; This function is called by:
  2741 ;;		_pad
  2742 ;;		_vfpfcnvrt
  2743 ;;		_fputs
  2744 ;; This function uses a non-reentrant model
  2745 ;;
  2746                           
  2747                           	psect	text11
  2748   000710                     __ptext11:
  2749                           	callstack 0
  2750   000710                     _fputc:
  2751                           	callstack 21
  2752   000710  0100               	movlb	0	; () banked
  2753   000712  5162               	movf	fputc@fp& (0+255),w,b
  2754   000714  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  2755   000716  B4D8               	btfsc	status,2,c
  2756   000718  EF90  F003         	goto	u1841
  2757   00071C  EF92  F003         	goto	u1840
  2758   000720                     u1841:
  2759   000720  EF9B  F003         	goto	l3069
  2760   000724                     u1840:
  2761   000724                     
  2762                           ; BSR set to: 0
  2763   000724  5162               	movf	fputc@fp& (0+255),w,b
  2764   000726  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  2765   000728  A4D8               	btfss	status,2,c
  2766   00072A  EF99  F003         	goto	u1851
  2767   00072E  EF9B  F003         	goto	u1850
  2768   000732                     u1851:
  2769   000732  EFA0  F003         	goto	l3071
  2770   000736                     u1850:
  2771   000736                     l3069:
  2772                           
  2773                           ; BSR set to: 0
  2774   000736  5160               	movf	fputc@c& (0+255),w,b
  2775   000738  EC04  F009         	call	_putch
  2776   00073C  EFED  F003         	goto	l1405
  2777   000740                     l3071:
  2778                           
  2779                           ; BSR set to: 0
  2780   000740  EE20 F00A          	lfsr	2,10
  2781   000744  5162               	movf	fputc@fp& (0+255),w,b
  2782   000746  26D9               	addwf	fsr2l,f,c
  2783   000748  5163               	movf	(fputc@fp+1)& (0+255),w,b
  2784   00074A  22DA               	addwfc	fsr2h,f,c
  2785   00074C  50DE               	movf	postinc2,w,c
  2786   00074E  10DE               	iorwf	postinc2,w,c
  2787   000750  B4D8               	btfsc	status,2,c
  2788   000752  EFAD  F003         	goto	u1861
  2789   000756  EFAF  F003         	goto	u1860
  2790   00075A                     u1861:
  2791   00075A  EFCA  F003         	goto	l3075
  2792   00075E                     u1860:
  2793   00075E                     
  2794                           ; BSR set to: 0
  2795   00075E  EE20 F00A          	lfsr	2,10
  2796   000762  5162               	movf	fputc@fp& (0+255),w,b
  2797   000764  26D9               	addwf	fsr2l,f,c
  2798   000766  5163               	movf	(fputc@fp+1)& (0+255),w,b
  2799   000768  22DA               	addwfc	fsr2h,f,c
  2800   00076A  EE10 F003          	lfsr	1,3
  2801   00076E  5162               	movf	fputc@fp& (0+255),w,b
  2802   000770  26E1               	addwf	fsr1l,f,c
  2803   000772  5163               	movf	(fputc@fp+1)& (0+255),w,b
  2804   000774  22E2               	addwfc	fsr1h,f,c
  2805   000776  50DE               	movf	postinc2,w,c
  2806   000778  5CE6               	subwf	postinc1,w,c
  2807   00077A  50E6               	movf	postinc1,w,c
  2808   00077C  0A80               	xorlw	128
  2809   00077E  6F68               	movwf	(??_fputc+4)& (0+255),b
  2810   000780  50DE               	movf	postinc2,w,c
  2811   000782  0A80               	xorlw	128
  2812   000784  5968               	subwfb	(??_fputc+4)& (0+255),w,b
  2813   000786  B0D8               	btfsc	status,0,c
  2814   000788  EFC8  F003         	goto	u1871
  2815   00078C  EFCA  F003         	goto	u1870
  2816   000790                     u1871:
  2817   000790  EFED  F003         	goto	l1405
  2818   000794                     u1870:
  2819   000794                     l3075:
  2820                           
  2821                           ; BSR set to: 0
  2822   000794  EE20 F003          	lfsr	2,3
  2823   000798  5162               	movf	fputc@fp& (0+255),w,b
  2824   00079A  26D9               	addwf	fsr2l,f,c
  2825   00079C  5163               	movf	(fputc@fp+1)& (0+255),w,b
  2826   00079E  22DA               	addwfc	fsr2h,f,c
  2827   0007A0  CFDE F064          	movff	postinc2,??_fputc
  2828   0007A4  CFDD F065          	movff	postdec2,??_fputc+1
  2829   0007A8  C062  FFD9         	movff	fputc@fp,fsr2l
  2830   0007AC  C063  FFDA         	movff	fputc@fp+1,fsr2h
  2831   0007B0  CFDE F066          	movff	postinc2,??_fputc+2
  2832   0007B4  CFDD F067          	movff	postdec2,??_fputc+3
  2833   0007B8  5164               	movf	??_fputc& (0+255),w,b
  2834   0007BA  2566               	addwf	(??_fputc+2)& (0+255),w,b
  2835   0007BC  6ED9               	movwf	fsr2l,c
  2836   0007BE  5165               	movf	(??_fputc+1)& (0+255),w,b
  2837   0007C0  2167               	addwfc	(??_fputc+3)& (0+255),w,b
  2838   0007C2  6EDA               	movwf	fsr2h,c
  2839   0007C4  C060  FFDF         	movff	fputc@c,indf2
  2840   0007C8  EE20 F003          	lfsr	2,3
  2841   0007CC  5162               	movf	fputc@fp& (0+255),w,b
  2842   0007CE  26D9               	addwf	fsr2l,f,c
  2843   0007D0  5163               	movf	(fputc@fp+1)& (0+255),w,b
  2844   0007D2  22DA               	addwfc	fsr2h,f,c
  2845   0007D4  2ADE               	incf	postinc2,f,c
  2846   0007D6  0E00               	movlw	0
  2847   0007D8  22DD               	addwfc	postdec2,f,c
  2848   0007DA                     l1405:
  2849   0007DA  0012               	return		;funcret
  2850   0007DC                     __end_of_fputc:
  2851                           	callstack 0
  2852                           
  2853 ;; *************** function _putch *****************
  2854 ;; Defined at:
  2855 ;;		line 201 in file "mcc_generated_files/eusart1.c"
  2856 ;; Parameters:    Size  Location     Type
  2857 ;;  txData          1    wreg     unsigned char 
  2858 ;; Auto vars:     Size  Location     Type
  2859 ;;  txData          1   31[COMRAM] unsigned char 
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  1    wreg      void 
  2862 ;; Registers used:
  2863 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2870 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2872 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2873 ;;Total ram usage:        1 bytes
  2874 ;; Hardware stack levels used: 1
  2875 ;; Hardware stack levels required when called: 5
  2876 ;; This function calls:
  2877 ;;		_EUSART1_Write
  2878 ;; This function is called by:
  2879 ;;		_fputc
  2880 ;; This function uses a non-reentrant model
  2881 ;;
  2882                           
  2883                           	psect	text12
  2884   001208                     __ptext12:
  2885                           	callstack 0
  2886   001208                     _putch:
  2887                           	callstack 21
  2888                           
  2889                           ;incstack = 0
  2890                           ;putch@txData stored from wreg
  2891   001208  6E20               	movwf	putch@txData^0,c
  2892   00120A                     
  2893                           ;mcc_generated_files/eusart1.c: 201: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 202: {;mcc_generated_files/eusart1.c: 203:     EUSART1_Write(txData);
  2894   00120A  5020               	movf	putch@txData^0,w,c
  2895   00120C  EC78  F006         	call	_EUSART1_Write
  2896   001210  0012               	return		;funcret
  2897   001212                     __end_of_putch:
  2898                           	callstack 0
  2899                           
  2900 ;; *************** function _abs *****************
  2901 ;; Defined at:
  2902 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  2903 ;; Parameters:    Size  Location     Type
  2904 ;;  a               2    4[BANK0 ] int 
  2905 ;; Auto vars:     Size  Location     Type
  2906 ;;		None
  2907 ;; Return value:  Size  Location     Type
  2908 ;;                  2    4[BANK0 ] int 
  2909 ;; Registers used:
  2910 ;;		wreg, status,2, status,0
  2911 ;; Tracked objects:
  2912 ;;		On entry : 0/0
  2913 ;;		On exit  : 0/0
  2914 ;;		Unchanged: 0/0
  2915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2916 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2918 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2919 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2920 ;;Total ram usage:        4 bytes
  2921 ;; Hardware stack levels used: 1
  2922 ;; Hardware stack levels required when called: 4
  2923 ;; This function calls:
  2924 ;;		Nothing
  2925 ;; This function is called by:
  2926 ;;		_dtoa
  2927 ;; This function uses a non-reentrant model
  2928 ;;
  2929                           
  2930                           	psect	text13
  2931   000EC8                     __ptext13:
  2932                           	callstack 0
  2933   000EC8                     _abs:
  2934                           	callstack 22
  2935   000EC8  0100               	movlb	0	; () banked
  2936   000ECA  BF65               	btfsc	(abs@a+1)& (0+255),7,b
  2937   000ECC  EF72  F007         	goto	u2030
  2938   000ED0  5165               	movf	(abs@a+1)& (0+255),w,b
  2939   000ED2  E106               	bnz	u2031
  2940   000ED4  0564               	decf	abs@a& (0+255),w,b
  2941   000ED6  B0D8               	btfsc	status,0,c
  2942   000ED8  EF70  F007         	goto	u2031
  2943   000EDC  EF72  F007         	goto	u2030
  2944   000EE0                     u2031:
  2945   000EE0  EF80  F007         	goto	l1390
  2946   000EE4                     u2030:
  2947   000EE4                     
  2948                           ; BSR set to: 0
  2949   000EE4  C064  F066         	movff	abs@a,??_abs
  2950   000EE8  C065  F067         	movff	abs@a+1,??_abs+1
  2951   000EEC  1F66               	comf	??_abs& (0+255),f,b
  2952   000EEE  1F67               	comf	(??_abs+1)& (0+255),f,b
  2953   000EF0  4B66               	infsnz	??_abs& (0+255),f,b
  2954   000EF2  2B67               	incf	(??_abs+1)& (0+255),f,b
  2955   000EF4  C066  F064         	movff	??_abs,?_abs
  2956   000EF8  C067  F065         	movff	??_abs+1,?_abs+1
  2957   000EFC  EF84  F007         	goto	l1393
  2958   000F00                     l1390:
  2959                           
  2960                           ; BSR set to: 0
  2961   000F00  C064  F064         	movff	abs@a,?_abs
  2962   000F04  C065  F065         	movff	abs@a+1,?_abs+1
  2963   000F08                     l1393:
  2964                           
  2965                           ; BSR set to: 0
  2966   000F08  0012               	return		;funcret
  2967   000F0A                     __end_of_abs:
  2968                           	callstack 0
  2969                           
  2970 ;; *************** function ___awmod *****************
  2971 ;; Defined at:
  2972 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  2973 ;; Parameters:    Size  Location     Type
  2974 ;;  dividend        2    0[BANK0 ] int 
  2975 ;;  divisor         2    2[BANK0 ] int 
  2976 ;; Auto vars:     Size  Location     Type
  2977 ;;  sign            1   31[COMRAM] unsigned char 
  2978 ;;  counter         1   30[COMRAM] unsigned char 
  2979 ;; Return value:  Size  Location     Type
  2980 ;;                  2    0[BANK0 ] int 
  2981 ;; Registers used:
  2982 ;;		wreg, status,2, status,0
  2983 ;; Tracked objects:
  2984 ;;		On entry : 0/0
  2985 ;;		On exit  : 0/0
  2986 ;;		Unchanged: 0/0
  2987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2988 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2989 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2991 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2992 ;;Total ram usage:        6 bytes
  2993 ;; Hardware stack levels used: 1
  2994 ;; Hardware stack levels required when called: 4
  2995 ;; This function calls:
  2996 ;;		Nothing
  2997 ;; This function is called by:
  2998 ;;		_dtoa
  2999 ;; This function uses a non-reentrant model
  3000 ;;
  3001                           
  3002                           	psect	text14
  3003   000A16                     __ptext14:
  3004                           	callstack 0
  3005   000A16                     ___awmod:
  3006                           	callstack 22
  3007   000A16  0E00               	movlw	0
  3008   000A18  6E20               	movwf	___awmod@sign^0,c
  3009   000A1A  0100               	movlb	0	; () banked
  3010   000A1C  BF61               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  3011   000A1E  EF15  F005         	goto	u1950
  3012   000A22  EF13  F005         	goto	u1951
  3013   000A26                     u1951:
  3014   000A26  EF1B  F005         	goto	l3139
  3015   000A2A                     u1950:
  3016   000A2A                     
  3017                           ; BSR set to: 0
  3018   000A2A  6D60               	negf	___awmod@dividend& (0+255),b
  3019   000A2C  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  3020   000A2E  B0D8               	btfsc	status,0,c
  3021   000A30  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  3022   000A32                     
  3023                           ; BSR set to: 0
  3024   000A32  0E01               	movlw	1
  3025   000A34  6E20               	movwf	___awmod@sign^0,c
  3026   000A36                     l3139:
  3027                           
  3028                           ; BSR set to: 0
  3029   000A36  BF63               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  3030   000A38  EF22  F005         	goto	u1960
  3031   000A3C  EF20  F005         	goto	u1961
  3032   000A40                     u1961:
  3033   000A40  EF26  F005         	goto	l3143
  3034   000A44                     u1960:
  3035   000A44                     
  3036                           ; BSR set to: 0
  3037   000A44  6D62               	negf	___awmod@divisor& (0+255),b
  3038   000A46  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  3039   000A48  B0D8               	btfsc	status,0,c
  3040   000A4A  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  3041   000A4C                     l3143:
  3042                           
  3043                           ; BSR set to: 0
  3044   000A4C  5162               	movf	___awmod@divisor& (0+255),w,b
  3045   000A4E  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  3046   000A50  B4D8               	btfsc	status,2,c
  3047   000A52  EF2D  F005         	goto	u1971
  3048   000A56  EF2F  F005         	goto	u1970
  3049   000A5A                     u1971:
  3050   000A5A  EF53  F005         	goto	l3159
  3051   000A5E                     u1970:
  3052   000A5E                     
  3053                           ; BSR set to: 0
  3054   000A5E  0E01               	movlw	1
  3055   000A60  6E1F               	movwf	___awmod@counter^0,c
  3056   000A62  EF37  F005         	goto	l3149
  3057   000A66                     l3147:
  3058                           
  3059                           ; BSR set to: 0
  3060   000A66  90D8               	bcf	status,0,c
  3061   000A68  3762               	rlcf	___awmod@divisor& (0+255),f,b
  3062   000A6A  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  3063   000A6C  2A1F               	incf	___awmod@counter^0,f,c
  3064   000A6E                     l3149:
  3065                           
  3066                           ; BSR set to: 0
  3067   000A6E  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  3068   000A70  EF3C  F005         	goto	u1981
  3069   000A74  EF3E  F005         	goto	u1980
  3070   000A78                     u1981:
  3071   000A78  EF33  F005         	goto	l3147
  3072   000A7C                     u1980:
  3073   000A7C                     l3151:
  3074                           
  3075                           ; BSR set to: 0
  3076   000A7C  5162               	movf	___awmod@divisor& (0+255),w,b
  3077   000A7E  5D60               	subwf	___awmod@dividend& (0+255),w,b
  3078   000A80  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  3079   000A82  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  3080   000A84  A0D8               	btfss	status,0,c
  3081   000A86  EF47  F005         	goto	u1991
  3082   000A8A  EF49  F005         	goto	u1990
  3083   000A8E                     u1991:
  3084   000A8E  EF4D  F005         	goto	l3155
  3085   000A92                     u1990:
  3086   000A92                     
  3087                           ; BSR set to: 0
  3088   000A92  5162               	movf	___awmod@divisor& (0+255),w,b
  3089   000A94  5F60               	subwf	___awmod@dividend& (0+255),f,b
  3090   000A96  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  3091   000A98  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  3092   000A9A                     l3155:
  3093                           
  3094                           ; BSR set to: 0
  3095   000A9A  90D8               	bcf	status,0,c
  3096   000A9C  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  3097   000A9E  3362               	rrcf	___awmod@divisor& (0+255),f,b
  3098   000AA0                     
  3099                           ; BSR set to: 0
  3100   000AA0  2E1F               	decfsz	___awmod@counter^0,f,c
  3101   000AA2  EF3E  F005         	goto	l3151
  3102   000AA6                     l3159:
  3103                           
  3104                           ; BSR set to: 0
  3105   000AA6  5020               	movf	___awmod@sign^0,w,c
  3106   000AA8  B4D8               	btfsc	status,2,c
  3107   000AAA  EF59  F005         	goto	u2001
  3108   000AAE  EF5B  F005         	goto	u2000
  3109   000AB2                     u2001:
  3110   000AB2  EF5F  F005         	goto	l3163
  3111   000AB6                     u2000:
  3112   000AB6                     
  3113                           ; BSR set to: 0
  3114   000AB6  6D60               	negf	___awmod@dividend& (0+255),b
  3115   000AB8  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  3116   000ABA  B0D8               	btfsc	status,0,c
  3117   000ABC  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  3118   000ABE                     l3163:
  3119                           
  3120                           ; BSR set to: 0
  3121   000ABE  C060  F060         	movff	___awmod@dividend,?___awmod
  3122   000AC2  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
  3123   000AC6                     
  3124                           ; BSR set to: 0
  3125   000AC6  0012               	return		;funcret
  3126   000AC8                     __end_of___awmod:
  3127                           	callstack 0
  3128                           
  3129 ;; *************** function ___awdiv *****************
  3130 ;; Defined at:
  3131 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  3132 ;; Parameters:    Size  Location     Type
  3133 ;;  dividend        2    0[BANK0 ] int 
  3134 ;;  divisor         2    2[BANK0 ] int 
  3135 ;; Auto vars:     Size  Location     Type
  3136 ;;  quotient        2    6[BANK0 ] int 
  3137 ;;  sign            1    5[BANK0 ] unsigned char 
  3138 ;;  counter         1    4[BANK0 ] unsigned char 
  3139 ;; Return value:  Size  Location     Type
  3140 ;;                  2    0[BANK0 ] int 
  3141 ;; Registers used:
  3142 ;;		wreg, status,2, status,0
  3143 ;; Tracked objects:
  3144 ;;		On entry : 0/0
  3145 ;;		On exit  : 0/0
  3146 ;;		Unchanged: 0/0
  3147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3148 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3149 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3151 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3152 ;;Total ram usage:        8 bytes
  3153 ;; Hardware stack levels used: 1
  3154 ;; Hardware stack levels required when called: 4
  3155 ;; This function calls:
  3156 ;;		Nothing
  3157 ;; This function is called by:
  3158 ;;		_dtoa
  3159 ;; This function uses a non-reentrant model
  3160 ;;
  3161                           
  3162                           	psect	text15
  3163   0007DC                     __ptext15:
  3164                           	callstack 0
  3165   0007DC                     ___awdiv:
  3166                           	callstack 22
  3167   0007DC  0E00               	movlw	0
  3168   0007DE  0100               	movlb	0	; () banked
  3169   0007E0  6F65               	movwf	___awdiv@sign& (0+255),b
  3170   0007E2                     
  3171                           ; BSR set to: 0
  3172   0007E2  BF63               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  3173   0007E4  EFF8  F003         	goto	u1890
  3174   0007E8  EFF6  F003         	goto	u1891
  3175   0007EC                     u1891:
  3176   0007EC  EFFE  F003         	goto	l3095
  3177   0007F0                     u1890:
  3178   0007F0                     
  3179                           ; BSR set to: 0
  3180   0007F0  6D62               	negf	___awdiv@divisor& (0+255),b
  3181   0007F2  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  3182   0007F4  B0D8               	btfsc	status,0,c
  3183   0007F6  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  3184   0007F8                     
  3185                           ; BSR set to: 0
  3186   0007F8  0E01               	movlw	1
  3187   0007FA  6F65               	movwf	___awdiv@sign& (0+255),b
  3188   0007FC                     l3095:
  3189                           
  3190                           ; BSR set to: 0
  3191   0007FC  BF61               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  3192   0007FE  EF05  F004         	goto	u1900
  3193   000802  EF03  F004         	goto	u1901
  3194   000806                     u1901:
  3195   000806  EF0B  F004         	goto	l3101
  3196   00080A                     u1900:
  3197   00080A                     
  3198                           ; BSR set to: 0
  3199   00080A  6D60               	negf	___awdiv@dividend& (0+255),b
  3200   00080C  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  3201   00080E  B0D8               	btfsc	status,0,c
  3202   000810  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  3203   000812                     
  3204                           ; BSR set to: 0
  3205   000812  0E01               	movlw	1
  3206   000814  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  3207   000816                     l3101:
  3208                           
  3209                           ; BSR set to: 0
  3210   000816  0E00               	movlw	0
  3211   000818  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  3212   00081A  0E00               	movlw	0
  3213   00081C  6F66               	movwf	___awdiv@quotient& (0+255),b
  3214   00081E                     
  3215                           ; BSR set to: 0
  3216   00081E  5162               	movf	___awdiv@divisor& (0+255),w,b
  3217   000820  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  3218   000822  B4D8               	btfsc	status,2,c
  3219   000824  EF16  F004         	goto	u1911
  3220   000828  EF18  F004         	goto	u1910
  3221   00082C                     u1911:
  3222   00082C  EF40  F004         	goto	l3123
  3223   000830                     u1910:
  3224   000830                     
  3225                           ; BSR set to: 0
  3226   000830  0E01               	movlw	1
  3227   000832  6F64               	movwf	___awdiv@counter& (0+255),b
  3228   000834  EF20  F004         	goto	l3109
  3229   000838                     l3107:
  3230                           
  3231                           ; BSR set to: 0
  3232   000838  90D8               	bcf	status,0,c
  3233   00083A  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  3234   00083C  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  3235   00083E  2B64               	incf	___awdiv@counter& (0+255),f,b
  3236   000840                     l3109:
  3237                           
  3238                           ; BSR set to: 0
  3239   000840  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  3240   000842  EF25  F004         	goto	u1921
  3241   000846  EF27  F004         	goto	u1920
  3242   00084A                     u1921:
  3243   00084A  EF1C  F004         	goto	l3107
  3244   00084E                     u1920:
  3245   00084E                     l3111:
  3246                           
  3247                           ; BSR set to: 0
  3248   00084E  90D8               	bcf	status,0,c
  3249   000850  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  3250   000852  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  3251   000854                     
  3252                           ; BSR set to: 0
  3253   000854  5162               	movf	___awdiv@divisor& (0+255),w,b
  3254   000856  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  3255   000858  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3256   00085A  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  3257   00085C  A0D8               	btfss	status,0,c
  3258   00085E  EF33  F004         	goto	u1931
  3259   000862  EF35  F004         	goto	u1930
  3260   000866                     u1931:
  3261   000866  EF3A  F004         	goto	l3119
  3262   00086A                     u1930:
  3263   00086A                     
  3264                           ; BSR set to: 0
  3265   00086A  5162               	movf	___awdiv@divisor& (0+255),w,b
  3266   00086C  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  3267   00086E  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3268   000870  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  3269   000872                     
  3270                           ; BSR set to: 0
  3271   000872  8166               	bsf	___awdiv@quotient& (0+255),0,b
  3272   000874                     l3119:
  3273                           
  3274                           ; BSR set to: 0
  3275   000874  90D8               	bcf	status,0,c
  3276   000876  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  3277   000878  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  3278   00087A                     
  3279                           ; BSR set to: 0
  3280   00087A  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  3281   00087C  EF27  F004         	goto	l3111
  3282   000880                     l3123:
  3283                           
  3284                           ; BSR set to: 0
  3285   000880  5165               	movf	___awdiv@sign& (0+255),w,b
  3286   000882  B4D8               	btfsc	status,2,c
  3287   000884  EF46  F004         	goto	u1941
  3288   000888  EF48  F004         	goto	u1940
  3289   00088C                     u1941:
  3290   00088C  EF4C  F004         	goto	l3127
  3291   000890                     u1940:
  3292   000890                     
  3293                           ; BSR set to: 0
  3294   000890  6D66               	negf	___awdiv@quotient& (0+255),b
  3295   000892  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  3296   000894  B0D8               	btfsc	status,0,c
  3297   000896  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  3298   000898                     l3127:
  3299                           
  3300                           ; BSR set to: 0
  3301   000898  C066  F060         	movff	___awdiv@quotient,?___awdiv
  3302   00089C  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  3303   0008A0                     
  3304                           ; BSR set to: 0
  3305   0008A0  0012               	return		;funcret
  3306   0008A2                     __end_of___awdiv:
  3307                           	callstack 0
  3308                           
  3309 ;; *************** function _SYSTEM_Initialize *****************
  3310 ;; Defined at:
  3311 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;		None
  3314 ;; Auto vars:     Size  Location     Type
  3315 ;;		None
  3316 ;; Return value:  Size  Location     Type
  3317 ;;                  1    wreg      void 
  3318 ;; Registers used:
  3319 ;;		wreg, status,2, status,0, cstack
  3320 ;; Tracked objects:
  3321 ;;		On entry : 0/0
  3322 ;;		On exit  : 0/0
  3323 ;;		Unchanged: 0/0
  3324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3329 ;;Total ram usage:        0 bytes
  3330 ;; Hardware stack levels used: 1
  3331 ;; Hardware stack levels required when called: 6
  3332 ;; This function calls:
  3333 ;;		_ADC_Initialize
  3334 ;;		_CCP5_Initialize
  3335 ;;		_EUSART1_Initialize
  3336 ;;		_EXT_INT_Initialize
  3337 ;;		_INTERRUPT_Initialize
  3338 ;;		_OSCILLATOR_Initialize
  3339 ;;		_PIN_MANAGER_Initialize
  3340 ;;		_SPI1_Initialize
  3341 ;;		_TMR0_Initialize
  3342 ;;		_TMR1_Initialize
  3343 ;; This function is called by:
  3344 ;;		_main
  3345 ;; This function uses a non-reentrant model
  3346 ;;
  3347                           
  3348                           	psect	text16
  3349   001046                     __ptext16:
  3350                           	callstack 0
  3351   001046                     _SYSTEM_Initialize:
  3352                           	callstack 24
  3353   001046                     
  3354                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  3355   001046  ECF0  F008         	call	_INTERRUPT_Initialize	;wreg free
  3356   00104A                     
  3357                           ;mcc_generated_files/mcc.c: 54:     SPI1_Initialize();
  3358   00104A  ECD8  F008         	call	_SPI1_Initialize	;wreg free
  3359   00104E                     
  3360                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  3361   00104E  EC42  F007         	call	_PIN_MANAGER_Initialize	;wreg free
  3362   001052                     
  3363                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  3364   001052  ECE9  F008         	call	_OSCILLATOR_Initialize	;wreg free
  3365   001056                     
  3366                           ;mcc_generated_files/mcc.c: 57:     CCP5_Initialize();
  3367   001056  ECE1  F008         	call	_CCP5_Initialize	;wreg free
  3368   00105A                     
  3369                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
  3370   00105A  EC8A  F008         	call	_ADC_Initialize	;wreg free
  3371   00105E                     
  3372                           ;mcc_generated_files/mcc.c: 59:     EXT_INT_Initialize();
  3373   00105E  ECC4  F008         	call	_EXT_INT_Initialize	;wreg free
  3374   001062                     
  3375                           ;mcc_generated_files/mcc.c: 60:     TMR1_Initialize();
  3376   001062  EC38  F008         	call	_TMR1_Initialize	;wreg free
  3377   001066                     
  3378                           ;mcc_generated_files/mcc.c: 61:     TMR0_Initialize();
  3379   001066  EC9C  F008         	call	_TMR0_Initialize	;wreg free
  3380   00106A                     
  3381                           ;mcc_generated_files/mcc.c: 62:     EUSART1_Initialize();
  3382   00106A  ECA3  F005         	call	_EUSART1_Initialize	;wreg free
  3383   00106E  0012               	return		;funcret
  3384   001070                     __end_of_SYSTEM_Initialize:
  3385                           	callstack 0
  3386                           
  3387 ;; *************** function _TMR1_Initialize *****************
  3388 ;; Defined at:
  3389 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  3390 ;; Parameters:    Size  Location     Type
  3391 ;;		None
  3392 ;; Auto vars:     Size  Location     Type
  3393 ;;		None
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  1    wreg      void 
  3396 ;; Registers used:
  3397 ;;		wreg, status,2, status,0, cstack
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3407 ;;Total ram usage:        0 bytes
  3408 ;; Hardware stack levels used: 1
  3409 ;; Hardware stack levels required when called: 5
  3410 ;; This function calls:
  3411 ;;		_TMR1_SetInterruptHandler
  3412 ;; This function is called by:
  3413 ;;		_SYSTEM_Initialize
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           
  3417                           	psect	text17
  3418   001070                     __ptext17:
  3419                           	callstack 0
  3420   001070                     _TMR1_Initialize:
  3421                           	callstack 24
  3422   001070                     
  3423                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  3424   001070  0E00               	movlw	0
  3425   001072  6ECC               	movwf	204,c	;volatile
  3426                           
  3427                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x0B;
  3428   001074  0E0B               	movlw	11
  3429   001076  6ECF               	movwf	207,c	;volatile
  3430                           
  3431                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xDC;
  3432   001078  0EDC               	movlw	220
  3433   00107A  6ECE               	movwf	206,c	;volatile
  3434   00107C                     
  3435                           ;mcc_generated_files/tmr1.c: 78:     timer1ReloadVal=TMR1;
  3436   00107C  CFCE F02A          	movff	4046,_timer1ReloadVal	;volatile
  3437   001080  CFCF F02B          	movff	4047,_timer1ReloadVal+1	;volatile
  3438   001084                     
  3439                           ;mcc_generated_files/tmr1.c: 81:     PIR1bits.TMR1IF = 0;
  3440   001084  909E               	bcf	158,0,c	;volatile
  3441   001086                     
  3442                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  3443   001086  809D               	bsf	157,0,c	;volatile
  3444   001088                     
  3445                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  3446   001088  0E94               	movlw	low _TMR1_DefaultInterruptHandler
  3447   00108A  6E1F               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
  3448   00108C  0E12               	movlw	high _TMR1_DefaultInterruptHandler
  3449   00108E  6E20               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
  3450   001090  EC09  F009         	call	_TMR1_SetInterruptHandler	;wreg free
  3451   001094                     
  3452                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x31;
  3453   001094  0E31               	movlw	49
  3454   001096  6ECD               	movwf	205,c	;volatile
  3455   001098  0012               	return		;funcret
  3456   00109A                     __end_of_TMR1_Initialize:
  3457                           	callstack 0
  3458                           
  3459 ;; *************** function _TMR1_SetInterruptHandler *****************
  3460 ;; Defined at:
  3461 ;;		line 172 in file "mcc_generated_files/tmr1.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;  InterruptHan    2   30[COMRAM] PTR FTN()void 
  3464 ;;		 -> TMR1_MyInterruptHandler(1), TMR1_DefaultInterruptHandler(1), 
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;		None
  3467 ;; Return value:  Size  Location     Type
  3468 ;;                  1    wreg      void 
  3469 ;; Registers used:
  3470 ;;		wreg, status,2, status,0
  3471 ;; Tracked objects:
  3472 ;;		On entry : 0/0
  3473 ;;		On exit  : 0/0
  3474 ;;		Unchanged: 0/0
  3475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3476 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3479 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3480 ;;Total ram usage:        2 bytes
  3481 ;; Hardware stack levels used: 1
  3482 ;; Hardware stack levels required when called: 4
  3483 ;; This function calls:
  3484 ;;		Nothing
  3485 ;; This function is called by:
  3486 ;;		_TMR1_Initialize
  3487 ;;		_main
  3488 ;; This function uses a non-reentrant model
  3489 ;;
  3490                           
  3491                           	psect	text18
  3492   001212                     __ptext18:
  3493                           	callstack 0
  3494   001212                     _TMR1_SetInterruptHandler:
  3495                           	callstack 26
  3496   001212                     
  3497                           ;mcc_generated_files/tmr1.c: 173:     TMR1_InterruptHandler = InterruptHandler;
  3498   001212  C01F  F037         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  3499   001216  C020  F038         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  3500   00121A  0012               	return		;funcret
  3501   00121C                     __end_of_TMR1_SetInterruptHandler:
  3502                           	callstack 0
  3503                           
  3504 ;; *************** function _TMR0_Initialize *****************
  3505 ;; Defined at:
  3506 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  3507 ;; Parameters:    Size  Location     Type
  3508 ;;		None
  3509 ;; Auto vars:     Size  Location     Type
  3510 ;;		None
  3511 ;; Return value:  Size  Location     Type
  3512 ;;                  1    wreg      void 
  3513 ;; Registers used:
  3514 ;;		wreg, status,2, status,0, cstack
  3515 ;; Tracked objects:
  3516 ;;		On entry : 0/0
  3517 ;;		On exit  : 0/0
  3518 ;;		Unchanged: 0/0
  3519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3524 ;;Total ram usage:        0 bytes
  3525 ;; Hardware stack levels used: 1
  3526 ;; Hardware stack levels required when called: 5
  3527 ;; This function calls:
  3528 ;;		_TMR0_SetInterruptHandler
  3529 ;; This function is called by:
  3530 ;;		_SYSTEM_Initialize
  3531 ;; This function uses a non-reentrant model
  3532 ;;
  3533                           
  3534                           	psect	text19
  3535   001138                     __ptext19:
  3536                           	callstack 0
  3537   001138                     _TMR0_Initialize:
  3538                           	callstack 24
  3539   001138                     
  3540                           ;mcc_generated_files/tmr0.c: 72:     TMR0H = 0x00;
  3541   001138  0E00               	movlw	0
  3542   00113A  6ED7               	movwf	215,c	;volatile
  3543                           
  3544                           ;mcc_generated_files/tmr0.c: 75:     TMR0L = 0x3D;
  3545   00113C  0E3D               	movlw	61
  3546   00113E  6ED6               	movwf	214,c	;volatile
  3547                           
  3548                           ;mcc_generated_files/tmr0.c: 79:     timer0ReloadVal = 61;
  3549   001140  0E3D               	movlw	61
  3550   001142  6E2F               	movwf	_timer0ReloadVal^0,c	;volatile
  3551   001144                     
  3552                           ;mcc_generated_files/tmr0.c: 82:     INTCONbits.TMR0IF = 0;
  3553   001144  94F2               	bcf	242,2,c	;volatile
  3554   001146                     
  3555                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IE = 1;
  3556   001146  8AF2               	bsf	242,5,c	;volatile
  3557   001148                     
  3558                           ;mcc_generated_files/tmr0.c: 88:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  3559   001148  0E96               	movlw	low _TMR0_DefaultInterruptHandler
  3560   00114A  6E1F               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  3561   00114C  0E12               	movlw	high _TMR0_DefaultInterruptHandler
  3562   00114E  6E20               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  3563   001150  EC0E  F009         	call	_TMR0_SetInterruptHandler	;wreg free
  3564   001154                     
  3565                           ;mcc_generated_files/tmr0.c: 91:     T0CON = 0x57;
  3566   001154  0E57               	movlw	87
  3567   001156  6ED5               	movwf	213,c	;volatile
  3568   001158  0012               	return		;funcret
  3569   00115A                     __end_of_TMR0_Initialize:
  3570                           	callstack 0
  3571                           
  3572 ;; *************** function _TMR0_SetInterruptHandler *****************
  3573 ;; Defined at:
  3574 ;;		line 147 in file "mcc_generated_files/tmr0.c"
  3575 ;; Parameters:    Size  Location     Type
  3576 ;;  InterruptHan    2   30[COMRAM] PTR FTN()void 
  3577 ;;		 -> TMR0_MyInterruptHandler(1), TMR0_DefaultInterruptHandler(1), 
  3578 ;; Auto vars:     Size  Location     Type
  3579 ;;		None
  3580 ;; Return value:  Size  Location     Type
  3581 ;;                  1    wreg      void 
  3582 ;; Registers used:
  3583 ;;		wreg, status,2, status,0
  3584 ;; Tracked objects:
  3585 ;;		On entry : 0/0
  3586 ;;		On exit  : 0/0
  3587 ;;		Unchanged: 0/0
  3588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3589 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3592 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3593 ;;Total ram usage:        2 bytes
  3594 ;; Hardware stack levels used: 1
  3595 ;; Hardware stack levels required when called: 4
  3596 ;; This function calls:
  3597 ;;		Nothing
  3598 ;; This function is called by:
  3599 ;;		_TMR0_Initialize
  3600 ;;		_main
  3601 ;; This function uses a non-reentrant model
  3602 ;;
  3603                           
  3604                           	psect	text20
  3605   00121C                     __ptext20:
  3606                           	callstack 0
  3607   00121C                     _TMR0_SetInterruptHandler:
  3608                           	callstack 26
  3609   00121C                     
  3610                           ;mcc_generated_files/tmr0.c: 148:     TMR0_InterruptHandler = InterruptHandler;
  3611   00121C  C01F  F039         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  3612   001220  C020  F03A         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  3613   001224  0012               	return		;funcret
  3614   001226                     __end_of_TMR0_SetInterruptHandler:
  3615                           	callstack 0
  3616                           
  3617 ;; *************** function _SPI1_Initialize *****************
  3618 ;; Defined at:
  3619 ;;		line 62 in file "mcc_generated_files/spi1.c"
  3620 ;; Parameters:    Size  Location     Type
  3621 ;;		None
  3622 ;; Auto vars:     Size  Location     Type
  3623 ;;		None
  3624 ;; Return value:  Size  Location     Type
  3625 ;;                  1    wreg      void 
  3626 ;; Registers used:
  3627 ;;		wreg, status,2
  3628 ;; Tracked objects:
  3629 ;;		On entry : 0/0
  3630 ;;		On exit  : 0/0
  3631 ;;		Unchanged: 0/0
  3632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3637 ;;Total ram usage:        0 bytes
  3638 ;; Hardware stack levels used: 1
  3639 ;; Hardware stack levels required when called: 4
  3640 ;; This function calls:
  3641 ;;		Nothing
  3642 ;; This function is called by:
  3643 ;;		_SYSTEM_Initialize
  3644 ;; This function uses a non-reentrant model
  3645 ;;
  3646                           
  3647                           	psect	text21
  3648   0011B0                     __ptext21:
  3649                           	callstack 0
  3650   0011B0                     _SPI1_Initialize:
  3651                           	callstack 25
  3652   0011B0                     
  3653                           ;mcc_generated_files/spi1.c: 65:     SSP1STAT = 0x40;
  3654   0011B0  0E40               	movlw	64
  3655   0011B2  6EC7               	movwf	199,c	;volatile
  3656                           
  3657                           ;mcc_generated_files/spi1.c: 66:     SSP1CON1 = 0x00;
  3658   0011B4  0E00               	movlw	0
  3659   0011B6  6EC6               	movwf	198,c	;volatile
  3660                           
  3661                           ;mcc_generated_files/spi1.c: 67:     SSP1ADD = 0x01;
  3662   0011B8  0E01               	movlw	1
  3663   0011BA  6EC8               	movwf	200,c	;volatile
  3664   0011BC                     
  3665                           ;mcc_generated_files/spi1.c: 68:     TRISCbits.TRISC3 = 0;
  3666   0011BC  9694               	bcf	148,3,c	;volatile
  3667   0011BE                     
  3668                           ;mcc_generated_files/spi1.c: 69:     SSP1CON1bits.SSPEN = 0;
  3669   0011BE  9AC6               	bcf	198,5,c	;volatile
  3670   0011C0  0012               	return		;funcret
  3671   0011C2                     __end_of_SPI1_Initialize:
  3672                           	callstack 0
  3673                           
  3674 ;; *************** function _PIN_MANAGER_Initialize *****************
  3675 ;; Defined at:
  3676 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3677 ;; Parameters:    Size  Location     Type
  3678 ;;		None
  3679 ;; Auto vars:     Size  Location     Type
  3680 ;;		None
  3681 ;; Return value:  Size  Location     Type
  3682 ;;                  1    wreg      void 
  3683 ;; Registers used:
  3684 ;;		wreg, status,2
  3685 ;; Tracked objects:
  3686 ;;		On entry : 0/0
  3687 ;;		On exit  : 0/0
  3688 ;;		Unchanged: 0/0
  3689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3694 ;;Total ram usage:        0 bytes
  3695 ;; Hardware stack levels used: 1
  3696 ;; Hardware stack levels required when called: 4
  3697 ;; This function calls:
  3698 ;;		Nothing
  3699 ;; This function is called by:
  3700 ;;		_SYSTEM_Initialize
  3701 ;; This function uses a non-reentrant model
  3702 ;;
  3703                           
  3704                           	psect	text22
  3705   000E84                     __ptext22:
  3706                           	callstack 0
  3707   000E84                     _PIN_MANAGER_Initialize:
  3708                           	callstack 25
  3709   000E84                     
  3710                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  3711   000E84  0E00               	movlw	0
  3712   000E86  6E8D               	movwf	141,c	;volatile
  3713                           
  3714                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  3715   000E88  0E00               	movlw	0
  3716   000E8A  6E8C               	movwf	140,c	;volatile
  3717                           
  3718                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  3719   000E8C  0E00               	movlw	0
  3720   000E8E  6E89               	movwf	137,c	;volatile
  3721                           
  3722                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  3723   000E90  0E00               	movlw	0
  3724   000E92  6E8A               	movwf	138,c	;volatile
  3725                           
  3726                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  3727   000E94  0E00               	movlw	0
  3728   000E96  6E8B               	movwf	139,c	;volatile
  3729                           
  3730                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  3731   000E98  0E07               	movlw	7
  3732   000E9A  6E96               	movwf	150,c	;volatile
  3733                           
  3734                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xBF;
  3735   000E9C  0EBF               	movlw	191
  3736   000E9E  6E92               	movwf	146,c	;volatile
  3737                           
  3738                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xC7;
  3739   000EA0  0EC7               	movlw	199
  3740   000EA2  6E93               	movwf	147,c	;volatile
  3741                           
  3742                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x9F;
  3743   000EA4  0E9F               	movlw	159
  3744   000EA6  6E94               	movwf	148,c	;volatile
  3745   000EA8                     
  3746                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  3747   000EA8  6895               	setf	149,c	;volatile
  3748                           
  3749                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x00;
  3750   000EAA  0E00               	movlw	0
  3751   000EAC  010F               	movlb	15	; () banked
  3752   000EAE  6F3B               	movwf	59,b	;volatile
  3753                           
  3754                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x00;
  3755   000EB0  0E00               	movlw	0
  3756   000EB2  6F3A               	movwf	58,b	;volatile
  3757                           
  3758                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x06;
  3759   000EB4  0E06               	movlw	6
  3760   000EB6  6F39               	movwf	57,b	;volatile
  3761                           
  3762                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  3763   000EB8  0E07               	movlw	7
  3764   000EBA  6F3C               	movwf	60,b	;volatile
  3765                           
  3766                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x2F;
  3767   000EBC  0E2F               	movlw	47
  3768   000EBE  6F38               	movwf	56,b	;volatile
  3769                           
  3770                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
  3771   000EC0  0E00               	movlw	0
  3772   000EC2  6E61               	movwf	97,c	;volatile
  3773   000EC4                     
  3774                           ; BSR set to: 15
  3775                           ;mcc_generated_files/pin_manager.c: 88:     INTCON2bits.nRBPU = 0;
  3776   000EC4  9EF1               	bcf	241,7,c	;volatile
  3777   000EC6                     
  3778                           ; BSR set to: 15
  3779   000EC6  0012               	return		;funcret
  3780   000EC8                     __end_of_PIN_MANAGER_Initialize:
  3781                           	callstack 0
  3782                           
  3783 ;; *************** function _OSCILLATOR_Initialize *****************
  3784 ;; Defined at:
  3785 ;;		line 65 in file "mcc_generated_files/mcc.c"
  3786 ;; Parameters:    Size  Location     Type
  3787 ;;		None
  3788 ;; Auto vars:     Size  Location     Type
  3789 ;;		None
  3790 ;; Return value:  Size  Location     Type
  3791 ;;                  1    wreg      void 
  3792 ;; Registers used:
  3793 ;;		wreg, status,2
  3794 ;; Tracked objects:
  3795 ;;		On entry : 0/0
  3796 ;;		On exit  : 0/0
  3797 ;;		Unchanged: 0/0
  3798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3803 ;;Total ram usage:        0 bytes
  3804 ;; Hardware stack levels used: 1
  3805 ;; Hardware stack levels required when called: 4
  3806 ;; This function calls:
  3807 ;;		Nothing
  3808 ;; This function is called by:
  3809 ;;		_SYSTEM_Initialize
  3810 ;; This function uses a non-reentrant model
  3811 ;;
  3812                           
  3813                           	psect	text23
  3814   0011D2                     __ptext23:
  3815                           	callstack 0
  3816   0011D2                     _OSCILLATOR_Initialize:
  3817                           	callstack 25
  3818   0011D2                     
  3819                           ;mcc_generated_files/mcc.c: 68:     OSCCON = 0x30;
  3820   0011D2  0E30               	movlw	48
  3821   0011D4  6ED3               	movwf	211,c	;volatile
  3822                           
  3823                           ;mcc_generated_files/mcc.c: 70:     OSCCON2 = 0x04;
  3824   0011D6  0E04               	movlw	4
  3825   0011D8  6ED2               	movwf	210,c	;volatile
  3826                           
  3827                           ;mcc_generated_files/mcc.c: 72:     OSCTUNE = 0x00;
  3828   0011DA  0E00               	movlw	0
  3829   0011DC  6E9B               	movwf	155,c	;volatile
  3830   0011DE  0012               	return		;funcret
  3831   0011E0                     __end_of_OSCILLATOR_Initialize:
  3832                           	callstack 0
  3833                           
  3834 ;; *************** function _INTERRUPT_Initialize *****************
  3835 ;; Defined at:
  3836 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3837 ;; Parameters:    Size  Location     Type
  3838 ;;		None
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;		None
  3841 ;; Return value:  Size  Location     Type
  3842 ;;                  1    wreg      void 
  3843 ;; Registers used:
  3844 ;;		None
  3845 ;; Tracked objects:
  3846 ;;		On entry : 0/0
  3847 ;;		On exit  : 0/0
  3848 ;;		Unchanged: 0/0
  3849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3854 ;;Total ram usage:        0 bytes
  3855 ;; Hardware stack levels used: 1
  3856 ;; Hardware stack levels required when called: 4
  3857 ;; This function calls:
  3858 ;;		Nothing
  3859 ;; This function is called by:
  3860 ;;		_SYSTEM_Initialize
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864                           	psect	text24
  3865   0011E0                     __ptext24:
  3866                           	callstack 0
  3867   0011E0                     _INTERRUPT_Initialize:
  3868                           	callstack 25
  3869   0011E0                     
  3870                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 1;
  3871   0011E0  8ED0               	bsf	208,7,c	;volatile
  3872                           
  3873                           ;mcc_generated_files/interrupt_manager.c: 60:     IPR1bits.ADIP = 1;
  3874   0011E2  8C9F               	bsf	159,6,c	;volatile
  3875                           
  3876                           ;mcc_generated_files/interrupt_manager.c: 63:     INTCON2bits.TMR0IP = 1;
  3877   0011E4  84F1               	bsf	241,2,c	;volatile
  3878                           
  3879                           ;mcc_generated_files/interrupt_manager.c: 68:     IPR1bits.TX1IP = 1;
  3880   0011E6  889F               	bsf	159,4,c	;volatile
  3881                           
  3882                           ;mcc_generated_files/interrupt_manager.c: 71:     IPR1bits.RC1IP = 1;
  3883   0011E8  8A9F               	bsf	159,5,c	;volatile
  3884                           
  3885                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR1bits.TMR1IP = 1;
  3886   0011EA  809F               	bsf	159,0,c	;volatile
  3887   0011EC  0012               	return		;funcret
  3888   0011EE                     __end_of_INTERRUPT_Initialize:
  3889                           	callstack 0
  3890                           
  3891 ;; *************** function _EXT_INT_Initialize *****************
  3892 ;; Defined at:
  3893 ;;		line 59 in file "mcc_generated_files/ext_int.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;		None
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;		None
  3898 ;; Return value:  Size  Location     Type
  3899 ;;                  1    wreg      void 
  3900 ;; Registers used:
  3901 ;;		wreg, status,2, status,0, cstack
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3911 ;;Total ram usage:        0 bytes
  3912 ;; Hardware stack levels used: 1
  3913 ;; Hardware stack levels required when called: 5
  3914 ;; This function calls:
  3915 ;;		_INT0_SetInterruptHandler
  3916 ;; This function is called by:
  3917 ;;		_SYSTEM_Initialize
  3918 ;; This function uses a non-reentrant model
  3919 ;;
  3920                           
  3921                           	psect	text25
  3922   001188                     __ptext25:
  3923                           	callstack 0
  3924   001188                     _EXT_INT_Initialize:
  3925                           	callstack 24
  3926   001188                     
  3927                           ;mcc_generated_files/ext_int.c: 64:     (INTCONbits.INT0IF = 0);
  3928   001188  92F2               	bcf	242,1,c	;volatile
  3929                           
  3930                           ;mcc_generated_files/ext_int.c: 65:     (INTCON2bits.INTEDG0 = 0);
  3931   00118A  9CF1               	bcf	241,6,c	;volatile
  3932   00118C                     
  3933                           ;mcc_generated_files/ext_int.c: 67:     INT0_SetInterruptHandler(INT0_DefaultInterruptHa
      +                          ndler);
  3934   00118C  0E98               	movlw	low _INT0_DefaultInterruptHandler
  3935   00118E  6E1F               	movwf	INT0_SetInterruptHandler@InterruptHandler^0,c
  3936   001190  0E12               	movlw	high _INT0_DefaultInterruptHandler
  3937   001192  6E20               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,c
  3938   001194  EC13  F009         	call	_INT0_SetInterruptHandler	;wreg free
  3939   001198                     
  3940                           ;mcc_generated_files/ext_int.c: 68:     (INTCONbits.INT0IE = 1);
  3941   001198  88F2               	bsf	242,4,c	;volatile
  3942   00119A  0012               	return		;funcret
  3943   00119C                     __end_of_EXT_INT_Initialize:
  3944                           	callstack 0
  3945                           
  3946 ;; *************** function _INT0_SetInterruptHandler *****************
  3947 ;; Defined at:
  3948 ;;		line 50 in file "mcc_generated_files/ext_int.c"
  3949 ;; Parameters:    Size  Location     Type
  3950 ;;  InterruptHan    2   30[COMRAM] PTR FTN()void 
  3951 ;;		 -> INT0_MyInterruptHandler(1), INT0_DefaultInterruptHandler(1), 
  3952 ;; Auto vars:     Size  Location     Type
  3953 ;;		None
  3954 ;; Return value:  Size  Location     Type
  3955 ;;                  1    wreg      void 
  3956 ;; Registers used:
  3957 ;;		wreg, status,2, status,0
  3958 ;; Tracked objects:
  3959 ;;		On entry : 0/0
  3960 ;;		On exit  : 0/0
  3961 ;;		Unchanged: 0/0
  3962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3963 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3966 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3967 ;;Total ram usage:        2 bytes
  3968 ;; Hardware stack levels used: 1
  3969 ;; Hardware stack levels required when called: 4
  3970 ;; This function calls:
  3971 ;;		Nothing
  3972 ;; This function is called by:
  3973 ;;		_EXT_INT_Initialize
  3974 ;;		_main
  3975 ;; This function uses a non-reentrant model
  3976 ;;
  3977                           
  3978                           	psect	text26
  3979   001226                     __ptext26:
  3980                           	callstack 0
  3981   001226                     _INT0_SetInterruptHandler:
  3982                           	callstack 24
  3983   001226                     
  3984                           ;mcc_generated_files/ext_int.c: 51:     INT0_InterruptHandler = InterruptHandler;
  3985   001226  C01F  F03B         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  3986   00122A  C020  F03C         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  3987   00122E  0012               	return		;funcret
  3988   001230                     __end_of_INT0_SetInterruptHandler:
  3989                           	callstack 0
  3990                           
  3991 ;; *************** function _EUSART1_Initialize *****************
  3992 ;; Defined at:
  3993 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  3994 ;; Parameters:    Size  Location     Type
  3995 ;;		None
  3996 ;; Auto vars:     Size  Location     Type
  3997 ;;		None
  3998 ;; Return value:  Size  Location     Type
  3999 ;;                  1    wreg      void 
  4000 ;; Registers used:
  4001 ;;		wreg, status,2, status,0, cstack
  4002 ;; Tracked objects:
  4003 ;;		On entry : 0/0
  4004 ;;		On exit  : 0/0
  4005 ;;		Unchanged: 0/0
  4006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4011 ;;Total ram usage:        0 bytes
  4012 ;; Hardware stack levels used: 1
  4013 ;; Hardware stack levels required when called: 5
  4014 ;; This function calls:
  4015 ;;		_EUSART1_SetErrorHandler
  4016 ;;		_EUSART1_SetFramingErrorHandler
  4017 ;;		_EUSART1_SetOverrunErrorHandler
  4018 ;;		_EUSART1_SetRxInterruptHandler
  4019 ;;		_EUSART1_SetTxInterruptHandler
  4020 ;; This function is called by:
  4021 ;;		_SYSTEM_Initialize
  4022 ;; This function uses a non-reentrant model
  4023 ;;
  4024                           
  4025                           	psect	text27
  4026   000B46                     __ptext27:
  4027                           	callstack 0
  4028   000B46                     _EUSART1_Initialize:
  4029                           	callstack 24
  4030   000B46                     
  4031                           ;mcc_generated_files/eusart1.c: 91:     PIE1bits.RC1IE = 0;
  4032   000B46  9A9D               	bcf	157,5,c	;volatile
  4033   000B48                     
  4034                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  4035   000B48  0E5C               	movlw	low _EUSART1_Receive_ISR
  4036   000B4A  6E1F               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  4037   000B4C  0E09               	movlw	high _EUSART1_Receive_ISR
  4038   000B4E  6E20               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  4039   000B50  EC1D  F009         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  4040   000B54                     
  4041                           ;mcc_generated_files/eusart1.c: 93:     PIE1bits.TX1IE = 0;
  4042   000B54  989D               	bcf	157,4,c	;volatile
  4043                           
  4044                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  4045   000B56  0E0A               	movlw	low _EUSART1_Transmit_ISR
  4046   000B58  6E1F               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
  4047   000B5A  0E0F               	movlw	high _EUSART1_Transmit_ISR
  4048   000B5C  6E20               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
  4049   000B5E  EC18  F009         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  4050   000B62                     
  4051                           ;mcc_generated_files/eusart1.c: 98:     BAUDCON1 = 0x08;
  4052   000B62  0E08               	movlw	8
  4053   000B64  6EB8               	movwf	184,c	;volatile
  4054   000B66                     
  4055                           ;mcc_generated_files/eusart1.c: 101:     RCSTA1 = 0x90;
  4056   000B66  0E90               	movlw	144
  4057   000B68  6EAB               	movwf	171,c	;volatile
  4058   000B6A                     
  4059                           ;mcc_generated_files/eusart1.c: 104:     TXSTA1 = 0x24;
  4060   000B6A  0E24               	movlw	36
  4061   000B6C  6EAC               	movwf	172,c	;volatile
  4062   000B6E                     
  4063                           ;mcc_generated_files/eusart1.c: 107:     SPBRG1 = 0xCF;
  4064   000B6E  0ECF               	movlw	207
  4065   000B70  6EAF               	movwf	175,c	;volatile
  4066   000B72                     
  4067                           ;mcc_generated_files/eusart1.c: 110:     SPBRGH1 = 0x00;
  4068   000B72  0E00               	movlw	0
  4069   000B74  6EB0               	movwf	176,c	;volatile
  4070   000B76                     
  4071                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  4072   000B76  0E9A               	movlw	low _EUSART1_DefaultFramingErrorHandler
  4073   000B78  6E1F               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  4074   000B7A  0E12               	movlw	high _EUSART1_DefaultFramingErrorHandler
  4075   000B7C  6E20               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  4076   000B7E  EC27  F009         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  4077   000B82                     
  4078                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  4079   000B82  0E74               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  4080   000B84  6E1F               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  4081   000B86  0E12               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  4082   000B88  6E20               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  4083   000B8A  EC22  F009         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  4084   000B8E                     
  4085                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  4086   000B8E  0E7A               	movlw	low _EUSART1_DefaultErrorHandler
  4087   000B90  6E1F               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  4088   000B92  0E12               	movlw	high _EUSART1_DefaultErrorHandler
  4089   000B94  6E20               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  4090   000B96  EC2C  F009         	call	_EUSART1_SetErrorHandler	;wreg free
  4091                           
  4092                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  4093   000B9A  0E00               	movlw	0
  4094   000B9C  6E30               	movwf	_eusart1RxLastError^0,c	;volatile
  4095                           
  4096                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  4097   000B9E  0E00               	movlw	0
  4098   000BA0  6E36               	movwf	_eusart1TxHead^0,c	;volatile
  4099                           
  4100                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  4101   000BA2  0E00               	movlw	0
  4102   000BA4  6E35               	movwf	_eusart1TxTail^0,c	;volatile
  4103                           
  4104                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  4105   000BA6  0E08               	movlw	8
  4106   000BA8  6E34               	movwf	_eusart1TxBufferRemaining^0,c	;volatile
  4107                           
  4108                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  4109   000BAA  0E00               	movlw	0
  4110   000BAC  6E33               	movwf	_eusart1RxHead^0,c	;volatile
  4111                           
  4112                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  4113   000BAE  0E00               	movlw	0
  4114   000BB0  6E32               	movwf	_eusart1RxTail^0,c	;volatile
  4115                           
  4116                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  4117   000BB2  0E00               	movlw	0
  4118   000BB4  6E31               	movwf	_eusart1RxCount^0,c	;volatile
  4119   000BB6                     
  4120                           ;mcc_generated_files/eusart1.c: 129:     PIE1bits.RC1IE = 1;
  4121   000BB6  8A9D               	bsf	157,5,c	;volatile
  4122   000BB8  0012               	return		;funcret
  4123   000BBA                     __end_of_EUSART1_Initialize:
  4124                           	callstack 0
  4125                           
  4126 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  4127 ;; Defined at:
  4128 ;;		line 285 in file "mcc_generated_files/eusart1.c"
  4129 ;; Parameters:    Size  Location     Type
  4130 ;;  interruptHan    2   30[COMRAM] PTR FTN()void 
  4131 ;;		 -> EUSART1_Transmit_ISR(1), 
  4132 ;; Auto vars:     Size  Location     Type
  4133 ;;		None
  4134 ;; Return value:  Size  Location     Type
  4135 ;;                  1    wreg      void 
  4136 ;; Registers used:
  4137 ;;		wreg, status,2, status,0
  4138 ;; Tracked objects:
  4139 ;;		On entry : 0/0
  4140 ;;		On exit  : 0/0
  4141 ;;		Unchanged: 0/0
  4142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4143 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4146 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4147 ;;Total ram usage:        2 bytes
  4148 ;; Hardware stack levels used: 1
  4149 ;; Hardware stack levels required when called: 4
  4150 ;; This function calls:
  4151 ;;		Nothing
  4152 ;; This function is called by:
  4153 ;;		_EUSART1_Initialize
  4154 ;; This function uses a non-reentrant model
  4155 ;;
  4156                           
  4157                           	psect	text28
  4158   001230                     __ptext28:
  4159                           	callstack 0
  4160   001230                     _EUSART1_SetTxInterruptHandler:
  4161                           	callstack 24
  4162   001230                     
  4163                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  4164   001230  C01F  F0EE         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  4165   001234  C020  F0EF         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  4166   001238  0012               	return		;funcret
  4167   00123A                     __end_of_EUSART1_SetTxInterruptHandler:
  4168                           	callstack 0
  4169                           
  4170 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  4171 ;; Defined at:
  4172 ;;		line 289 in file "mcc_generated_files/eusart1.c"
  4173 ;; Parameters:    Size  Location     Type
  4174 ;;  interruptHan    2   30[COMRAM] PTR FTN()void 
  4175 ;;		 -> EUSART1_Receive_ISR(1), 
  4176 ;; Auto vars:     Size  Location     Type
  4177 ;;		None
  4178 ;; Return value:  Size  Location     Type
  4179 ;;                  1    wreg      void 
  4180 ;; Registers used:
  4181 ;;		wreg, status,2, status,0
  4182 ;; Tracked objects:
  4183 ;;		On entry : 0/0
  4184 ;;		On exit  : 0/0
  4185 ;;		Unchanged: 0/0
  4186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4187 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4190 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4191 ;;Total ram usage:        2 bytes
  4192 ;; Hardware stack levels used: 1
  4193 ;; Hardware stack levels required when called: 4
  4194 ;; This function calls:
  4195 ;;		Nothing
  4196 ;; This function is called by:
  4197 ;;		_EUSART1_Initialize
  4198 ;; This function uses a non-reentrant model
  4199 ;;
  4200                           
  4201                           	psect	text29
  4202   00123A                     __ptext29:
  4203                           	callstack 0
  4204   00123A                     _EUSART1_SetRxInterruptHandler:
  4205                           	callstack 24
  4206   00123A                     
  4207                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  4208   00123A  C01F  F0EC         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  4209   00123E  C020  F0ED         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  4210   001242  0012               	return		;funcret
  4211   001244                     __end_of_EUSART1_SetRxInterruptHandler:
  4212                           	callstack 0
  4213                           
  4214 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  4215 ;; Defined at:
  4216 ;;		line 277 in file "mcc_generated_files/eusart1.c"
  4217 ;; Parameters:    Size  Location     Type
  4218 ;;  interruptHan    2   30[COMRAM] PTR FTN()void 
  4219 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  4220 ;; Auto vars:     Size  Location     Type
  4221 ;;		None
  4222 ;; Return value:  Size  Location     Type
  4223 ;;                  1    wreg      void 
  4224 ;; Registers used:
  4225 ;;		wreg, status,2, status,0
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4231 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4234 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4235 ;;Total ram usage:        2 bytes
  4236 ;; Hardware stack levels used: 1
  4237 ;; Hardware stack levels required when called: 4
  4238 ;; This function calls:
  4239 ;;		Nothing
  4240 ;; This function is called by:
  4241 ;;		_EUSART1_Initialize
  4242 ;; This function uses a non-reentrant model
  4243 ;;
  4244                           
  4245                           	psect	text30
  4246   001244                     __ptext30:
  4247                           	callstack 0
  4248   001244                     _EUSART1_SetOverrunErrorHandler:
  4249                           	callstack 24
  4250   001244                     
  4251                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
  4252   001244  C01F  F0E8         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  4253   001248  C020  F0E9         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  4254   00124C  0012               	return		;funcret
  4255   00124E                     __end_of_EUSART1_SetOverrunErrorHandler:
  4256                           	callstack 0
  4257                           
  4258 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  4259 ;; Defined at:
  4260 ;;		line 273 in file "mcc_generated_files/eusart1.c"
  4261 ;; Parameters:    Size  Location     Type
  4262 ;;  interruptHan    2   30[COMRAM] PTR FTN()void 
  4263 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  4264 ;; Auto vars:     Size  Location     Type
  4265 ;;		None
  4266 ;; Return value:  Size  Location     Type
  4267 ;;                  1    wreg      void 
  4268 ;; Registers used:
  4269 ;;		wreg, status,2, status,0
  4270 ;; Tracked objects:
  4271 ;;		On entry : 0/0
  4272 ;;		On exit  : 0/0
  4273 ;;		Unchanged: 0/0
  4274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4275 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4278 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4279 ;;Total ram usage:        2 bytes
  4280 ;; Hardware stack levels used: 1
  4281 ;; Hardware stack levels required when called: 4
  4282 ;; This function calls:
  4283 ;;		Nothing
  4284 ;; This function is called by:
  4285 ;;		_EUSART1_Initialize
  4286 ;; This function uses a non-reentrant model
  4287 ;;
  4288                           
  4289                           	psect	text31
  4290   00124E                     __ptext31:
  4291                           	callstack 0
  4292   00124E                     _EUSART1_SetFramingErrorHandler:
  4293                           	callstack 24
  4294   00124E                     
  4295                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
  4296   00124E  C01F  F0EA         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  4297   001252  C020  F0EB         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  4298   001256  0012               	return		;funcret
  4299   001258                     __end_of_EUSART1_SetFramingErrorHandler:
  4300                           	callstack 0
  4301                           
  4302 ;; *************** function _EUSART1_SetErrorHandler *****************
  4303 ;; Defined at:
  4304 ;;		line 281 in file "mcc_generated_files/eusart1.c"
  4305 ;; Parameters:    Size  Location     Type
  4306 ;;  interruptHan    2   30[COMRAM] PTR FTN()void 
  4307 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  4308 ;; Auto vars:     Size  Location     Type
  4309 ;;		None
  4310 ;; Return value:  Size  Location     Type
  4311 ;;                  1    wreg      void 
  4312 ;; Registers used:
  4313 ;;		wreg, status,2, status,0
  4314 ;; Tracked objects:
  4315 ;;		On entry : 0/0
  4316 ;;		On exit  : 0/0
  4317 ;;		Unchanged: 0/0
  4318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4319 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4322 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4323 ;;Total ram usage:        2 bytes
  4324 ;; Hardware stack levels used: 1
  4325 ;; Hardware stack levels required when called: 4
  4326 ;; This function calls:
  4327 ;;		Nothing
  4328 ;; This function is called by:
  4329 ;;		_EUSART1_Initialize
  4330 ;; This function uses a non-reentrant model
  4331 ;;
  4332                           
  4333                           	psect	text32
  4334   001258                     __ptext32:
  4335                           	callstack 0
  4336   001258                     _EUSART1_SetErrorHandler:
  4337                           	callstack 24
  4338   001258                     
  4339                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
  4340   001258  C01F  F0E6         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  4341   00125C  C020  F0E7         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  4342   001260  0012               	return		;funcret
  4343   001262                     __end_of_EUSART1_SetErrorHandler:
  4344                           	callstack 0
  4345                           
  4346 ;; *************** function _CCP5_Initialize *****************
  4347 ;; Defined at:
  4348 ;;		line 49 in file "mcc_generated_files/ccp5.c"
  4349 ;; Parameters:    Size  Location     Type
  4350 ;;		None
  4351 ;; Auto vars:     Size  Location     Type
  4352 ;;		None
  4353 ;; Return value:  Size  Location     Type
  4354 ;;                  1    wreg      void 
  4355 ;; Registers used:
  4356 ;;		wreg, status,2
  4357 ;; Tracked objects:
  4358 ;;		On entry : 0/0
  4359 ;;		On exit  : 0/0
  4360 ;;		Unchanged: 0/0
  4361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4366 ;;Total ram usage:        0 bytes
  4367 ;; Hardware stack levels used: 1
  4368 ;; Hardware stack levels required when called: 4
  4369 ;; This function calls:
  4370 ;;		Nothing
  4371 ;; This function is called by:
  4372 ;;		_SYSTEM_Initialize
  4373 ;; This function uses a non-reentrant model
  4374 ;;
  4375                           
  4376                           	psect	text33
  4377   0011C2                     __ptext33:
  4378                           	callstack 0
  4379   0011C2                     _CCP5_Initialize:
  4380                           	callstack 25
  4381   0011C2                     
  4382                           ;mcc_generated_files/ccp5.c: 53:  CCP5CON = 0x00;
  4383   0011C2  0E00               	movlw	0
  4384   0011C4  010F               	movlb	15	; () banked
  4385   0011C6  6F54               	movwf	84,b	;volatile
  4386                           
  4387                           ;mcc_generated_files/ccp5.c: 56:  CCPR5L = 0x00;
  4388   0011C8  0E00               	movlw	0
  4389   0011CA  6F55               	movwf	85,b	;volatile
  4390                           
  4391                           ;mcc_generated_files/ccp5.c: 59:  CCPR5H = 0x00;
  4392   0011CC  0E00               	movlw	0
  4393   0011CE  6F56               	movwf	86,b	;volatile
  4394   0011D0                     
  4395                           ; BSR set to: 15
  4396   0011D0  0012               	return		;funcret
  4397   0011D2                     __end_of_CCP5_Initialize:
  4398                           	callstack 0
  4399                           
  4400 ;; *************** function _ADC_Initialize *****************
  4401 ;; Defined at:
  4402 ;;		line 62 in file "mcc_generated_files/adc.c"
  4403 ;; Parameters:    Size  Location     Type
  4404 ;;		None
  4405 ;; Auto vars:     Size  Location     Type
  4406 ;;		None
  4407 ;; Return value:  Size  Location     Type
  4408 ;;                  1    wreg      void 
  4409 ;; Registers used:
  4410 ;;		wreg, status,2, status,0, cstack
  4411 ;; Tracked objects:
  4412 ;;		On entry : 0/0
  4413 ;;		On exit  : 0/0
  4414 ;;		Unchanged: 0/0
  4415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4420 ;;Total ram usage:        0 bytes
  4421 ;; Hardware stack levels used: 1
  4422 ;; Hardware stack levels required when called: 5
  4423 ;; This function calls:
  4424 ;;		_ADC_SetInterruptHandler
  4425 ;; This function is called by:
  4426 ;;		_SYSTEM_Initialize
  4427 ;; This function uses a non-reentrant model
  4428 ;;
  4429                           
  4430                           	psect	text34
  4431   001114                     __ptext34:
  4432                           	callstack 0
  4433   001114                     _ADC_Initialize:
  4434                           	callstack 24
  4435   001114                     
  4436                           ;mcc_generated_files/adc.c: 67:     ADCON0 = 0x01;
  4437   001114  0E01               	movlw	1
  4438   001116  6EC2               	movwf	194,c	;volatile
  4439                           
  4440                           ;mcc_generated_files/adc.c: 70:     ADCON1 = 0x00;
  4441   001118  0E00               	movlw	0
  4442   00111A  6EC1               	movwf	193,c	;volatile
  4443                           
  4444                           ;mcc_generated_files/adc.c: 73:     ADCON2 = 0x8C;
  4445   00111C  0E8C               	movlw	140
  4446   00111E  6EC0               	movwf	192,c	;volatile
  4447                           
  4448                           ;mcc_generated_files/adc.c: 76:     ADRESL = 0x00;
  4449   001120  0E00               	movlw	0
  4450   001122  6EC3               	movwf	195,c	;volatile
  4451                           
  4452                           ;mcc_generated_files/adc.c: 79:     ADRESH = 0x00;
  4453   001124  0E00               	movlw	0
  4454   001126  6EC4               	movwf	196,c	;volatile
  4455   001128                     
  4456                           ;mcc_generated_files/adc.c: 82:     PIE1bits.ADIE = 1;
  4457   001128  8C9D               	bsf	157,6,c	;volatile
  4458   00112A                     
  4459                           ;mcc_generated_files/adc.c: 85:     ADC_SetInterruptHandler(ADC_DefaultInterruptHandler)
      +                          ;
  4460   00112A  0E9C               	movlw	low _ADC_DefaultInterruptHandler
  4461   00112C  6E1F               	movwf	ADC_SetInterruptHandler@InterruptHandler^0,c
  4462   00112E  0E12               	movlw	high _ADC_DefaultInterruptHandler
  4463   001130  6E20               	movwf	(ADC_SetInterruptHandler@InterruptHandler+1)^0,c
  4464   001132  EC31  F009         	call	_ADC_SetInterruptHandler	;wreg free
  4465   001136  0012               	return		;funcret
  4466   001138                     __end_of_ADC_Initialize:
  4467                           	callstack 0
  4468                           
  4469 ;; *************** function _ADC_SetInterruptHandler *****************
  4470 ;; Defined at:
  4471 ;;		line 151 in file "mcc_generated_files/adc.c"
  4472 ;; Parameters:    Size  Location     Type
  4473 ;;  InterruptHan    2   30[COMRAM] PTR FTN()void 
  4474 ;;		 -> ADC_MyInterruptHandler(1), ADC_DefaultInterruptHandler(1), 
  4475 ;; Auto vars:     Size  Location     Type
  4476 ;;		None
  4477 ;; Return value:  Size  Location     Type
  4478 ;;                  1    wreg      void 
  4479 ;; Registers used:
  4480 ;;		wreg, status,2, status,0
  4481 ;; Tracked objects:
  4482 ;;		On entry : 0/0
  4483 ;;		On exit  : 0/0
  4484 ;;		Unchanged: 0/0
  4485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4486 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4489 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4490 ;;Total ram usage:        2 bytes
  4491 ;; Hardware stack levels used: 1
  4492 ;; Hardware stack levels required when called: 4
  4493 ;; This function calls:
  4494 ;;		Nothing
  4495 ;; This function is called by:
  4496 ;;		_ADC_Initialize
  4497 ;;		_main
  4498 ;; This function uses a non-reentrant model
  4499 ;;
  4500                           
  4501                           	psect	text35
  4502   001262                     __ptext35:
  4503                           	callstack 0
  4504   001262                     _ADC_SetInterruptHandler:
  4505                           	callstack 24
  4506   001262                     
  4507                           ;mcc_generated_files/adc.c: 152:     ADC_InterruptHandler = InterruptHandler;
  4508   001262  C01F  F03D         	movff	ADC_SetInterruptHandler@InterruptHandler,_ADC_InterruptHandler
  4509   001266  C020  F03E         	movff	ADC_SetInterruptHandler@InterruptHandler+1,_ADC_InterruptHandler+1
  4510   00126A  0012               	return		;funcret
  4511   00126C                     __end_of_ADC_SetInterruptHandler:
  4512                           	callstack 0
  4513                           
  4514 ;; *************** function _CheckUSART *****************
  4515 ;; Defined at:
  4516 ;;		line 215 in file "main.c"
  4517 ;; Parameters:    Size  Location     Type
  4518 ;;		None
  4519 ;; Auto vars:     Size  Location     Type
  4520 ;;		None
  4521 ;; Return value:  Size  Location     Type
  4522 ;;                  1    wreg      void 
  4523 ;; Registers used:
  4524 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4525 ;; Tracked objects:
  4526 ;;		On entry : 0/0
  4527 ;;		On exit  : 0/0
  4528 ;;		Unchanged: 0/0
  4529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4532 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4533 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4534 ;;Total ram usage:        2 bytes
  4535 ;; Hardware stack levels used: 1
  4536 ;; Hardware stack levels required when called: 5
  4537 ;; This function calls:
  4538 ;;		_EUSART1_Read
  4539 ;;		_EUSART1_Write
  4540 ;;		_EUSART1_is_rx_ready
  4541 ;; This function is called by:
  4542 ;;		_main
  4543 ;; This function uses a non-reentrant model
  4544 ;;
  4545                           
  4546                           	psect	text36
  4547   000BBA                     __ptext36:
  4548                           	callstack 0
  4549   000BBA                     _CheckUSART:
  4550                           	callstack 25
  4551   000BBA                     
  4552                           ;main.c: 216:     if (EUSART1_is_rx_ready()) {
  4553   000BBA  ECB9  F008         	call	_EUSART1_is_rx_ready	;wreg free
  4554   000BBE  0900               	iorlw	0
  4555   000BC0  B4D8               	btfsc	status,2,c
  4556   000BC2  EFE5  F005         	goto	u2181
  4557   000BC6  EFE7  F005         	goto	u2180
  4558   000BCA                     u2181:
  4559   000BCA  EF12  F006         	goto	l647
  4560   000BCE                     u2180:
  4561   000BCE                     
  4562                           ;main.c: 217:         rxData = EUSART1_Read();
  4563   000BCE  ECF6  F006         	call	_EUSART1_Read	;wreg free
  4564   000BD2  6E2E               	movwf	_rxData^0,c
  4565                           
  4566                           ;main.c: 218:         EUSART1_Write(rxData);
  4567   000BD4  502E               	movf	_rxData^0,w,c
  4568   000BD6  EC78  F006         	call	_EUSART1_Write
  4569                           
  4570                           ;main.c: 220:         switch (rxData) {
  4571   000BDA  EFFD  F005         	goto	l3383
  4572   000BDE                     l3375:
  4573                           
  4574                           ;main.c: 223:                 carater_recebido = 1;
  4575   000BDE  0E01               	movlw	1
  4576   000BE0  0100               	movlb	0	; () banked
  4577   000BE2  6FF0               	movwf	_carater_recebido& (0+255),b
  4578   000BE4                     
  4579                           ; BSR set to: 0
  4580                           ;main.c: 224:                 menu = rxData;
  4581   000BE4  C02E  F0F1         	movff	_rxData,_menu
  4582                           
  4583                           ;main.c: 225:                 break;
  4584   000BE8  EF12  F006         	goto	l647
  4585   000BEC                     l3379:
  4586                           
  4587                           ;main.c: 227:                 carater_recebido = 0;
  4588   000BEC  0E00               	movlw	0
  4589   000BEE  0100               	movlb	0	; () banked
  4590   000BF0  6FF0               	movwf	_carater_recebido& (0+255),b
  4591                           
  4592                           ;main.c: 228:                 menu = '0';
  4593   000BF2  0E30               	movlw	48
  4594   000BF4  6FF1               	movwf	_menu& (0+255),b
  4595                           
  4596                           ;main.c: 229:                 break;
  4597   000BF6  EF12  F006         	goto	l647
  4598   000BFA                     l3383:
  4599   000BFA  502E               	movf	_rxData^0,w,c
  4600   000BFC  6E20               	movwf	??_CheckUSART^0,c
  4601   000BFE  6A21               	clrf	(??_CheckUSART+1)^0,c
  4602                           
  4603                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4604                           ; Switch size 1, requested type "simple"
  4605                           ; Number of cases is 1, Range of values is 0 to 0
  4606                           ; switch strategies available:
  4607                           ; Name         Instructions Cycles
  4608                           ; simple_byte            4     3 (average)
  4609                           ;	Chosen strategy is simple_byte
  4610   000C00  5021               	movf	(??_CheckUSART+1)^0,w,c
  4611   000C02  0A00               	xorlw	0	; case 0
  4612   000C04  B4D8               	btfsc	status,2,c
  4613   000C06  EF07  F006         	goto	l3471
  4614   000C0A  EFF6  F005         	goto	l3379
  4615   000C0E                     l3471:
  4616                           
  4617                           ; Switch size 1, requested type "simple"
  4618                           ; Number of cases is 2, Range of values is 13 to 48
  4619                           ; switch strategies available:
  4620                           ; Name         Instructions Cycles
  4621                           ; simple_byte            7     4 (average)
  4622                           ;	Chosen strategy is simple_byte
  4623   000C0E  5020               	movf	??_CheckUSART^0,w,c
  4624   000C10  0A0D               	xorlw	13	; case 13
  4625   000C12  B4D8               	btfsc	status,2,c
  4626   000C14  EFEF  F005         	goto	l3375
  4627   000C18  0A3D               	xorlw	61	; case 48
  4628   000C1A  B4D8               	btfsc	status,2,c
  4629   000C1C  EFEF  F005         	goto	l3375
  4630   000C20  EFF6  F005         	goto	l3379
  4631   000C24                     l647:
  4632   000C24  0012               	return		;funcret
  4633   000C26                     __end_of_CheckUSART:
  4634                           	callstack 0
  4635                           
  4636 ;; *************** function _EUSART1_is_rx_ready *****************
  4637 ;; Defined at:
  4638 ;;		line 137 in file "mcc_generated_files/eusart1.c"
  4639 ;; Parameters:    Size  Location     Type
  4640 ;;		None
  4641 ;; Auto vars:     Size  Location     Type
  4642 ;;		None
  4643 ;; Return value:  Size  Location     Type
  4644 ;;                  1    wreg      _Bool 
  4645 ;; Registers used:
  4646 ;;		wreg, status,2
  4647 ;; Tracked objects:
  4648 ;;		On entry : 0/0
  4649 ;;		On exit  : 0/0
  4650 ;;		Unchanged: 0/0
  4651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4656 ;;Total ram usage:        0 bytes
  4657 ;; Hardware stack levels used: 1
  4658 ;; Hardware stack levels required when called: 4
  4659 ;; This function calls:
  4660 ;;		Nothing
  4661 ;; This function is called by:
  4662 ;;		_CheckUSART
  4663 ;; This function uses a non-reentrant model
  4664 ;;
  4665                           
  4666                           	psect	text37
  4667   001172                     __ptext37:
  4668                           	callstack 0
  4669   001172                     _EUSART1_is_rx_ready:
  4670                           	callstack 25
  4671   001172                     
  4672                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
  4673   001172  5031               	movf	_eusart1RxCount^0,w,c	;volatile
  4674   001174  A4D8               	btfss	status,2,c
  4675   001176  EFBF  F008         	goto	u1421
  4676   00117A  EFC2  F008         	goto	u1420
  4677   00117E                     u1421:
  4678   00117E  0E01               	movlw	1
  4679   001180  EFC3  F008         	goto	u1430
  4680   001184                     u1420:
  4681   001184  0E00               	movlw	0
  4682   001186                     u1430:
  4683   001186  0012               	return		;funcret
  4684   001188                     __end_of_EUSART1_is_rx_ready:
  4685                           	callstack 0
  4686                           
  4687 ;; *************** function _EUSART1_Write *****************
  4688 ;; Defined at:
  4689 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  4690 ;; Parameters:    Size  Location     Type
  4691 ;;  txData          1    wreg     unsigned char 
  4692 ;; Auto vars:     Size  Location     Type
  4693 ;;  txData          1   30[COMRAM] unsigned char 
  4694 ;; Return value:  Size  Location     Type
  4695 ;;                  1    wreg      void 
  4696 ;; Registers used:
  4697 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4698 ;; Tracked objects:
  4699 ;;		On entry : 0/0
  4700 ;;		On exit  : 0/0
  4701 ;;		Unchanged: 0/0
  4702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4704 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4706 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4707 ;;Total ram usage:        1 bytes
  4708 ;; Hardware stack levels used: 1
  4709 ;; Hardware stack levels required when called: 4
  4710 ;; This function calls:
  4711 ;;		Nothing
  4712 ;; This function is called by:
  4713 ;;		_putch
  4714 ;;		_ShowMenuInTerminal
  4715 ;;		_CheckUSART
  4716 ;; This function uses a non-reentrant model
  4717 ;;
  4718                           
  4719                           	psect	text38
  4720   000CF0                     __ptext38:
  4721                           	callstack 0
  4722   000CF0                     _EUSART1_Write:
  4723                           	callstack 21
  4724                           
  4725                           ;incstack = 0
  4726                           ;EUSART1_Write@txData stored from wreg
  4727   000CF0  6E1F               	movwf	EUSART1_Write@txData^0,c
  4728   000CF2                     l3047:
  4729                           
  4730                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
  4731   000CF2  5034               	movf	_eusart1TxBufferRemaining^0,w,c	;volatile
  4732   000CF4  B4D8               	btfsc	status,2,c
  4733   000CF6  EF7F  F006         	goto	u1811
  4734   000CFA  EF81  F006         	goto	u1810
  4735   000CFE                     u1811:
  4736   000CFE  EF79  F006         	goto	l3047
  4737   000D02                     u1810:
  4738   000D02                     
  4739                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE1bits.TX1IE)
  4740   000D02  B89D               	btfsc	157,4,c	;volatile
  4741   000D04  EF86  F006         	goto	u1821
  4742   000D08  EF88  F006         	goto	u1820
  4743   000D0C                     u1821:
  4744   000D0C  EF8C  F006         	goto	l249
  4745   000D10                     u1820:
  4746   000D10                     
  4747                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          XREG1 = txData;
  4748   000D10  C01F  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  4749                           
  4750                           ;mcc_generated_files/eusart1.c: 182:     }
  4751   000D14  EFA1  F006         	goto	l3061
  4752   000D18                     l249:
  4753                           
  4754                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE1bits.TX1IE = 0;
  4755   000D18  989D               	bcf	157,4,c	;volatile
  4756   000D1A                     
  4757                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
  4758   000D1A  0EB5               	movlw	low _eusart1TxBuffer
  4759   000D1C  2436               	addwf	_eusart1TxHead^0,w,c	;volatile
  4760   000D1E  6ED9               	movwf	fsr2l,c
  4761   000D20  6ADA               	clrf	fsr2h,c
  4762   000D22  0E00               	movlw	high _eusart1TxBuffer
  4763   000D24  22DA               	addwfc	fsr2h,f,c
  4764   000D26  C01F  FFDF         	movff	EUSART1_Write@txData,indf2
  4765   000D2A  2A36               	incf	_eusart1TxHead^0,f,c	;volatile
  4766   000D2C                     
  4767                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
  4768   000D2C  0E07               	movlw	7
  4769   000D2E  6436               	cpfsgt	_eusart1TxHead^0,c	;volatile
  4770   000D30  EF9C  F006         	goto	u1831
  4771   000D34  EF9E  F006         	goto	u1830
  4772   000D38                     u1831:
  4773   000D38  EFA0  F006         	goto	l3059
  4774   000D3C                     u1830:
  4775   000D3C                     
  4776                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
  4777   000D3C  0E00               	movlw	0
  4778   000D3E  6E36               	movwf	_eusart1TxHead^0,c	;volatile
  4779   000D40                     l3059:
  4780                           
  4781                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
  4782   000D40  0634               	decf	_eusart1TxBufferRemaining^0,f,c	;volatile
  4783   000D42                     l3061:
  4784                           
  4785                           ;mcc_generated_files/eusart1.c: 193:     PIE1bits.TX1IE = 1;
  4786   000D42  889D               	bsf	157,4,c	;volatile
  4787   000D44  0012               	return		;funcret
  4788   000D46                     __end_of_EUSART1_Write:
  4789                           	callstack 0
  4790                           
  4791 ;; *************** function _EUSART1_Read *****************
  4792 ;; Defined at:
  4793 ;;		line 151 in file "mcc_generated_files/eusart1.c"
  4794 ;; Parameters:    Size  Location     Type
  4795 ;;		None
  4796 ;; Auto vars:     Size  Location     Type
  4797 ;;  readValue       1   30[COMRAM] unsigned char 
  4798 ;; Return value:  Size  Location     Type
  4799 ;;                  1    wreg      unsigned char 
  4800 ;; Registers used:
  4801 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4802 ;; Tracked objects:
  4803 ;;		On entry : 0/0
  4804 ;;		On exit  : 0/0
  4805 ;;		Unchanged: 0/0
  4806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4808 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4810 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4811 ;;Total ram usage:        1 bytes
  4812 ;; Hardware stack levels used: 1
  4813 ;; Hardware stack levels required when called: 4
  4814 ;; This function calls:
  4815 ;;		Nothing
  4816 ;; This function is called by:
  4817 ;;		_CheckUSART
  4818 ;;		_getch
  4819 ;; This function uses a non-reentrant model
  4820 ;;
  4821                           
  4822                           	psect	text39
  4823   000DEC                     __ptext39:
  4824                           	callstack 0
  4825   000DEC                     _EUSART1_Read:
  4826                           	callstack 25
  4827   000DEC                     l2657:
  4828                           
  4829                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
  4830   000DEC  5031               	movf	_eusart1RxCount^0,w,c	;volatile
  4831   000DEE  B4D8               	btfsc	status,2,c
  4832   000DF0  EFFC  F006         	goto	u1441
  4833   000DF4  EFFE  F006         	goto	u1440
  4834   000DF8                     u1441:
  4835   000DF8  EFF6  F006         	goto	l2657
  4836   000DFC                     u1440:
  4837   000DFC                     
  4838                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
  4839   000DFC  0EA5               	movlw	low _eusart1RxStatusBuffer
  4840   000DFE  2432               	addwf	_eusart1RxTail^0,w,c	;volatile
  4841   000E00  6ED9               	movwf	fsr2l,c
  4842   000E02  6ADA               	clrf	fsr2h,c
  4843   000E04  0E00               	movlw	high _eusart1RxStatusBuffer
  4844   000E06  22DA               	addwfc	fsr2h,f,c
  4845   000E08  50DF               	movf	indf2,w,c
  4846   000E0A  6E30               	movwf	_eusart1RxLastError^0,c	;volatile
  4847                           
  4848                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
  4849   000E0C  0EAD               	movlw	low _eusart1RxBuffer
  4850   000E0E  2432               	addwf	_eusart1RxTail^0,w,c	;volatile
  4851   000E10  6ED9               	movwf	fsr2l,c
  4852   000E12  6ADA               	clrf	fsr2h,c
  4853   000E14  0E00               	movlw	high _eusart1RxBuffer
  4854   000E16  22DA               	addwfc	fsr2h,f,c
  4855   000E18  50DF               	movf	indf2,w,c
  4856   000E1A  6E1F               	movwf	EUSART1_Read@readValue^0,c
  4857   000E1C  2A32               	incf	_eusart1RxTail^0,f,c	;volatile
  4858   000E1E                     
  4859                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  4860   000E1E  0E07               	movlw	7
  4861   000E20  6432               	cpfsgt	_eusart1RxTail^0,c	;volatile
  4862   000E22  EF15  F007         	goto	u1451
  4863   000E26  EF17  F007         	goto	u1450
  4864   000E2A                     u1451:
  4865   000E2A  EF19  F007         	goto	l2667
  4866   000E2E                     u1450:
  4867   000E2E                     
  4868                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
  4869   000E2E  0E00               	movlw	0
  4870   000E30  6E32               	movwf	_eusart1RxTail^0,c	;volatile
  4871   000E32                     l2667:
  4872                           
  4873                           ;mcc_generated_files/eusart1.c: 166:     PIE1bits.RC1IE = 0;
  4874   000E32  9A9D               	bcf	157,5,c	;volatile
  4875   000E34                     
  4876                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
  4877   000E34  0631               	decf	_eusart1RxCount^0,f,c	;volatile
  4878   000E36                     
  4879                           ;mcc_generated_files/eusart1.c: 168:     PIE1bits.RC1IE = 1;
  4880   000E36  8A9D               	bsf	157,5,c	;volatile
  4881   000E38                     
  4882                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
  4883   000E38  501F               	movf	EUSART1_Read@readValue^0,w,c
  4884   000E3A  0012               	return		;funcret
  4885   000E3C                     __end_of_EUSART1_Read:
  4886                           	callstack 0
  4887                           
  4888 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  4889 ;; Defined at:
  4890 ;;		line 79 in file "mcc_generated_files/interrupt_manager.c"
  4891 ;; Parameters:    Size  Location     Type
  4892 ;;		None
  4893 ;; Auto vars:     Size  Location     Type
  4894 ;;		None
  4895 ;; Return value:  Size  Location     Type
  4896 ;;                  1    wreg      void 
  4897 ;; Registers used:
  4898 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  4899 ;; Tracked objects:
  4900 ;;		On entry : 0/0
  4901 ;;		On exit  : 0/0
  4902 ;;		Unchanged: 0/0
  4903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4906 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4907 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4908 ;;Total ram usage:        4 bytes
  4909 ;; Hardware stack levels used: 1
  4910 ;; Hardware stack levels required when called: 3
  4911 ;; This function calls:
  4912 ;;		NULL
  4913 ;;		_ADC_ISR
  4914 ;;		_EUSART1_Receive_ISR
  4915 ;;		_EUSART1_Transmit_ISR
  4916 ;;		_INT0_ISR
  4917 ;;		_TMR0_ISR
  4918 ;;		_TMR1_ISR
  4919 ;; This function is called by:
  4920 ;;		Interrupt level 2
  4921 ;; This function uses a non-reentrant model
  4922 ;;
  4923                           
  4924                           	psect	intcode
  4925   000008                     __pintcode:
  4926                           	callstack 0
  4927   000008                     _INTERRUPT_InterruptManagerHigh:
  4928                           	callstack 17
  4929                           
  4930                           ;incstack = 0
  4931   000008  8241               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4932   00000A  CFFA F01B          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
  4933   00000E  CFFB F01C          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
  4934   000012  CFD9 F01D          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+2
  4935   000016  CFDA F01E          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+3
  4936   00001A                     
  4937                           ;mcc_generated_files/interrupt_manager.c: 82:     if(PIE1bits.ADIE == 1 && PIR1bits.ADIF
      +                           == 1)
  4938   00001A  AC9D               	btfss	157,6,c	;volatile
  4939   00001C  EF12  F000         	goto	i2u164_41
  4940   000020  EF14  F000         	goto	i2u164_40
  4941   000024                     i2u164_41:
  4942   000024  EF1F  F000         	goto	i2l331
  4943   000028                     i2u164_40:
  4944   000028  AC9E               	btfss	158,6,c	;volatile
  4945   00002A  EF19  F000         	goto	i2u165_41
  4946   00002E  EF1B  F000         	goto	i2u165_40
  4947   000032                     i2u165_41:
  4948   000032  EF1F  F000         	goto	i2l331
  4949   000036                     i2u165_40:
  4950   000036                     
  4951                           ;mcc_generated_files/interrupt_manager.c: 83:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 84:         ADC_ISR();
  4952   000036  ECF6  F007         	call	_ADC_ISR	;wreg free
  4953                           
  4954                           ;mcc_generated_files/interrupt_manager.c: 85:     }
  4955   00003A  EF8F  F000         	goto	i2l343
  4956   00003E                     i2l331:
  4957   00003E  AAF2               	btfss	242,5,c	;volatile
  4958   000040  EF24  F000         	goto	i2u166_41
  4959   000044  EF26  F000         	goto	i2u166_40
  4960   000048                     i2u166_41:
  4961   000048  EF31  F000         	goto	i2l333
  4962   00004C                     i2u166_40:
  4963   00004C  A4F2               	btfss	242,2,c	;volatile
  4964   00004E  EF2B  F000         	goto	i2u167_41
  4965   000052  EF2D  F000         	goto	i2u167_40
  4966   000056                     i2u167_41:
  4967   000056  EF31  F000         	goto	i2l333
  4968   00005A                     i2u167_40:
  4969   00005A                     
  4970                           ;mcc_generated_files/interrupt_manager.c: 87:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 88:         TMR0_ISR();
  4971   00005A  ECDD  F007         	call	_TMR0_ISR	;wreg free
  4972                           
  4973                           ;mcc_generated_files/interrupt_manager.c: 89:     }
  4974   00005E  EF8F  F000         	goto	i2l343
  4975   000062                     i2l333:
  4976   000062  A8F2               	btfss	242,4,c	;volatile
  4977   000064  EF36  F000         	goto	i2u168_41
  4978   000068  EF38  F000         	goto	i2u168_40
  4979   00006C                     i2u168_41:
  4980   00006C  EF43  F000         	goto	i2l335
  4981   000070                     i2u168_40:
  4982   000070  A2F2               	btfss	242,1,c	;volatile
  4983   000072  EF3D  F000         	goto	i2u169_41
  4984   000076  EF3F  F000         	goto	i2u169_40
  4985   00007A                     i2u169_41:
  4986   00007A  EF43  F000         	goto	i2l335
  4987   00007E                     i2u169_40:
  4988   00007E                     
  4989                           ;mcc_generated_files/interrupt_manager.c: 91:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 92:         INT0_ISR();
  4990   00007E  EC36  F009         	call	_INT0_ISR	;wreg free
  4991                           
  4992                           ;mcc_generated_files/interrupt_manager.c: 93:     }
  4993   000082  EF8F  F000         	goto	i2l343
  4994   000086                     i2l335:
  4995   000086  A89D               	btfss	157,4,c	;volatile
  4996   000088  EF48  F000         	goto	i2u170_41
  4997   00008C  EF4A  F000         	goto	i2u170_40
  4998   000090                     i2u170_41:
  4999   000090  EF60  F000         	goto	i2l337
  5000   000094                     i2u170_40:
  5001   000094  A89E               	btfss	158,4,c	;volatile
  5002   000096  EF4F  F000         	goto	i2u171_41
  5003   00009A  EF51  F000         	goto	i2u171_40
  5004   00009E                     i2u171_41:
  5005   00009E  EF60  F000         	goto	i2l337
  5006   0000A2                     i2u171_40:
  5007   0000A2                     
  5008                           ;mcc_generated_files/interrupt_manager.c: 95:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 96:         EUSART1_TxDefaultInterruptHandler();
  5009   0000A2  D802               	call	i2u172_48
  5010   0000A4  EF5E  F000         	goto	i2u172_49
  5011   0000A8                     i2u172_48:
  5012   0000A8  0005               	push	
  5013   0000AA  6EFA               	movwf	pclath,c
  5014   0000AC  0100               	movlb	0	; () banked
  5015   0000AE  51EE               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
  5016   0000B0  6EFD               	movwf	tosl,c
  5017   0000B2  51EF               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
  5018   0000B4  6EFE               	movwf	tosh,c
  5019   0000B6  6AFF               	clrf	tosu,c
  5020   0000B8  50FA               	movf	pclath,w,c
  5021   0000BA  0012               	return		;indir
  5022   0000BC                     i2u172_49:
  5023                           
  5024                           ;mcc_generated_files/interrupt_manager.c: 97:     }
  5025   0000BC  EF8F  F000         	goto	i2l343
  5026   0000C0                     i2l337:
  5027   0000C0  AA9D               	btfss	157,5,c	;volatile
  5028   0000C2  EF65  F000         	goto	i2u173_41
  5029   0000C6  EF67  F000         	goto	i2u173_40
  5030   0000CA                     i2u173_41:
  5031   0000CA  EF7D  F000         	goto	i2l339
  5032   0000CE                     i2u173_40:
  5033   0000CE  AA9E               	btfss	158,5,c	;volatile
  5034   0000D0  EF6C  F000         	goto	i2u174_41
  5035   0000D4  EF6E  F000         	goto	i2u174_40
  5036   0000D8                     i2u174_41:
  5037   0000D8  EF7D  F000         	goto	i2l339
  5038   0000DC                     i2u174_40:
  5039   0000DC                     
  5040                           ;mcc_generated_files/interrupt_manager.c: 99:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 100:         EUSART1_RxDefaultInterruptHandler();
  5041   0000DC  D802               	call	i2u175_48
  5042   0000DE  EF7B  F000         	goto	i2u175_49
  5043   0000E2                     i2u175_48:
  5044   0000E2  0005               	push	
  5045   0000E4  6EFA               	movwf	pclath,c
  5046   0000E6  0100               	movlb	0	; () banked
  5047   0000E8  51EC               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
  5048   0000EA  6EFD               	movwf	tosl,c
  5049   0000EC  51ED               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
  5050   0000EE  6EFE               	movwf	tosh,c
  5051   0000F0  6AFF               	clrf	tosu,c
  5052   0000F2  50FA               	movf	pclath,w,c
  5053   0000F4  0012               	return		;indir
  5054   0000F6                     i2u175_49:
  5055                           
  5056                           ;mcc_generated_files/interrupt_manager.c: 101:     }
  5057   0000F6  EF8F  F000         	goto	i2l343
  5058   0000FA                     i2l339:
  5059   0000FA  A09D               	btfss	157,0,c	;volatile
  5060   0000FC  EF82  F000         	goto	i2u176_41
  5061   000100  EF84  F000         	goto	i2u176_40
  5062   000104                     i2u176_41:
  5063   000104  EF8F  F000         	goto	i2l338
  5064   000108                     i2u176_40:
  5065   000108  A09E               	btfss	158,0,c	;volatile
  5066   00010A  EF89  F000         	goto	i2u177_41
  5067   00010E  EF8B  F000         	goto	i2u177_40
  5068   000112                     i2u177_41:
  5069   000112  EF8F  F000         	goto	i2l338
  5070   000116                     i2u177_40:
  5071   000116                     
  5072                           ;mcc_generated_files/interrupt_manager.c: 103:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 104:         TMR1_ISR();
  5073   000116  ECA5  F007         	call	_TMR1_ISR	;wreg free
  5074                           
  5075                           ;mcc_generated_files/interrupt_manager.c: 105:     }
  5076   00011A  EF8F  F000         	goto	i2l343
  5077   00011E                     i2l338:
  5078   00011E                     i2l343:
  5079   00011E  C01E  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr2h
  5080   000122  C01D  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr2l
  5081   000126  C01C  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
  5082   00012A  C01B  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
  5083   00012E  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5084   000130  0011               	retfie		f
  5085   000132                     __end_of_INTERRUPT_InterruptManagerHigh:
  5086                           	callstack 0
  5087                           
  5088 ;; *************** function _TMR1_ISR *****************
  5089 ;; Defined at:
  5090 ;;		line 158 in file "mcc_generated_files/tmr1.c"
  5091 ;; Parameters:    Size  Location     Type
  5092 ;;		None
  5093 ;; Auto vars:     Size  Location     Type
  5094 ;;		None
  5095 ;; Return value:  Size  Location     Type
  5096 ;;                  1    wreg      void 
  5097 ;; Registers used:
  5098 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5099 ;; Tracked objects:
  5100 ;;		On entry : 0/0
  5101 ;;		On exit  : 0/0
  5102 ;;		Unchanged: 0/0
  5103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5108 ;;Total ram usage:        0 bytes
  5109 ;; Hardware stack levels used: 1
  5110 ;; Hardware stack levels required when called: 1
  5111 ;; This function calls:
  5112 ;;		NULL
  5113 ;;		_TMR1_DefaultInterruptHandler
  5114 ;;		_TMR1_MyInterruptHandler
  5115 ;;		_TMR1_WriteTimer
  5116 ;; This function is called by:
  5117 ;;		_INTERRUPT_InterruptManagerHigh
  5118 ;; This function uses a non-reentrant model
  5119 ;;
  5120                           
  5121                           	psect	text41
  5122   000F4A                     __ptext41:
  5123                           	callstack 0
  5124   000F4A                     _TMR1_ISR:
  5125                           	callstack 18
  5126   000F4A                     
  5127                           ;mcc_generated_files/tmr1.c: 162:     PIR1bits.TMR1IF = 0;
  5128   000F4A  909E               	bcf	158,0,c	;volatile
  5129   000F4C                     
  5130                           ;mcc_generated_files/tmr1.c: 163:     TMR1_WriteTimer(timer1ReloadVal);
  5131   000F4C  C02A  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
  5132   000F50  C02B  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
  5133   000F54  EC76  F008         	call	_TMR1_WriteTimer	;wreg free
  5134   000F58                     
  5135                           ;mcc_generated_files/tmr1.c: 165:     if(TMR1_InterruptHandler)
  5136   000F58  5037               	movf	_TMR1_InterruptHandler^0,w,c
  5137   000F5A  1038               	iorwf	(_TMR1_InterruptHandler+1)^0,w,c
  5138   000F5C  B4D8               	btfsc	status,2,c
  5139   000F5E  EFB3  F007         	goto	i2u161_41
  5140   000F62  EFB5  F007         	goto	i2u161_40
  5141   000F66                     i2u161_41:
  5142   000F66  EFC1  F007         	goto	i2l519
  5143   000F6A                     i2u161_40:
  5144   000F6A                     
  5145                           ;mcc_generated_files/tmr1.c: 166:     {;mcc_generated_files/tmr1.c: 167:         TMR1_In
      +                          terruptHandler();
  5146   000F6A  D802               	call	i2u162_48
  5147   000F6C  EFC1  F007         	goto	i2u162_49
  5148   000F70                     i2u162_48:
  5149   000F70  0005               	push	
  5150   000F72  6EFA               	movwf	pclath,c
  5151   000F74  5037               	movf	_TMR1_InterruptHandler^0,w,c
  5152   000F76  6EFD               	movwf	tosl,c
  5153   000F78  5038               	movf	(_TMR1_InterruptHandler+1)^0,w,c
  5154   000F7A  6EFE               	movwf	tosh,c
  5155   000F7C  6AFF               	clrf	tosu,c
  5156   000F7E  50FA               	movf	pclath,w,c
  5157   000F80  0012               	return		;indir
  5158   000F82                     i2u162_49:
  5159   000F82                     i2l519:
  5160   000F82  0012               	return		;funcret
  5161   000F84                     __end_of_TMR1_ISR:
  5162                           	callstack 0
  5163                           
  5164 ;; *************** function _TMR1_WriteTimer *****************
  5165 ;; Defined at:
  5166 ;;		line 121 in file "mcc_generated_files/tmr1.c"
  5167 ;; Parameters:    Size  Location     Type
  5168 ;;  timerVal        2    0[COMRAM] unsigned short 
  5169 ;; Auto vars:     Size  Location     Type
  5170 ;;		None
  5171 ;; Return value:  Size  Location     Type
  5172 ;;                  1    wreg      void 
  5173 ;; Registers used:
  5174 ;;		wreg, status,2
  5175 ;; Tracked objects:
  5176 ;;		On entry : 0/0
  5177 ;;		On exit  : 0/0
  5178 ;;		Unchanged: 0/0
  5179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5180 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5183 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5184 ;;Total ram usage:        2 bytes
  5185 ;; Hardware stack levels used: 1
  5186 ;; This function calls:
  5187 ;;		Nothing
  5188 ;; This function is called by:
  5189 ;;		_TMR1_ISR
  5190 ;;		_TMR1_Reload
  5191 ;; This function uses a non-reentrant model
  5192 ;;
  5193                           
  5194                           	psect	text42
  5195   0010EC                     __ptext42:
  5196                           	callstack 0
  5197   0010EC                     _TMR1_WriteTimer:
  5198                           	callstack 18
  5199   0010EC                     
  5200                           ;mcc_generated_files/tmr1.c: 121: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 122: {;mcc_generated_files/tmr1.c: 123:     if (T1CONbits.T1SYNC == 1)
  5201   0010EC  A4CD               	btfss	205,2,c	;volatile
  5202   0010EE  EF7B  F008         	goto	i2u146_41
  5203   0010F2  EF7D  F008         	goto	i2u146_40
  5204   0010F6                     i2u146_41:
  5205   0010F6  EF85  F008         	goto	i2l2723
  5206   0010FA                     i2u146_40:
  5207   0010FA                     
  5208                           ;mcc_generated_files/tmr1.c: 124:     {;mcc_generated_files/tmr1.c: 126:         T1CONbi
      +                          ts.TMR1ON = 0;
  5209   0010FA  90CD               	bcf	205,0,c	;volatile
  5210   0010FC                     
  5211                           ;mcc_generated_files/tmr1.c: 129:         TMR1H = (timerVal >> 8);
  5212   0010FC  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  5213   0010FE  6ECF               	movwf	207,c	;volatile
  5214   001100                     
  5215                           ;mcc_generated_files/tmr1.c: 130:         TMR1L = (uint8_t) timerVal;
  5216   001100  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  5217   001104                     
  5218                           ;mcc_generated_files/tmr1.c: 133:         T1CONbits.TMR1ON =1;
  5219   001104  80CD               	bsf	205,0,c	;volatile
  5220                           
  5221                           ;mcc_generated_files/tmr1.c: 134:     }
  5222   001106  EF89  F008         	goto	i2l506
  5223   00110A                     i2l2723:
  5224                           
  5225                           ;mcc_generated_files/tmr1.c: 136:     {;mcc_generated_files/tmr1.c: 138:         TMR1H =
      +                           (timerVal >> 8);
  5226   00110A  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  5227   00110C  6ECF               	movwf	207,c	;volatile
  5228   00110E                     
  5229                           ;mcc_generated_files/tmr1.c: 139:         TMR1L = (uint8_t) timerVal;
  5230   00110E  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  5231   001112                     i2l506:
  5232   001112  0012               	return		;funcret
  5233   001114                     __end_of_TMR1_WriteTimer:
  5234                           	callstack 0
  5235                           
  5236 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  5237 ;; Defined at:
  5238 ;;		line 176 in file "mcc_generated_files/tmr1.c"
  5239 ;; Parameters:    Size  Location     Type
  5240 ;;		None
  5241 ;; Auto vars:     Size  Location     Type
  5242 ;;		None
  5243 ;; Return value:  Size  Location     Type
  5244 ;;                  1    wreg      void 
  5245 ;; Registers used:
  5246 ;;		None
  5247 ;; Tracked objects:
  5248 ;;		On entry : 0/0
  5249 ;;		On exit  : 0/0
  5250 ;;		Unchanged: 0/0
  5251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5256 ;;Total ram usage:        0 bytes
  5257 ;; Hardware stack levels used: 1
  5258 ;; This function calls:
  5259 ;;		Nothing
  5260 ;; This function is called by:
  5261 ;;		_TMR1_Initialize
  5262 ;;		_TMR1_ISR
  5263 ;; This function uses a non-reentrant model
  5264 ;;
  5265                           
  5266                           	psect	text43
  5267   001294                     __ptext43:
  5268                           	callstack 0
  5269   001294                     _TMR1_DefaultInterruptHandler:
  5270                           	callstack 18
  5271   001294  0012               	return		;funcret
  5272   001296                     __end_of_TMR1_DefaultInterruptHandler:
  5273                           	callstack 0
  5274                           
  5275 ;; *************** function _TMR1_MyInterruptHandler *****************
  5276 ;; Defined at:
  5277 ;;		line 85 in file "main.c"
  5278 ;; Parameters:    Size  Location     Type
  5279 ;;		None
  5280 ;; Auto vars:     Size  Location     Type
  5281 ;;		None
  5282 ;; Return value:  Size  Location     Type
  5283 ;;                  1    wreg      void 
  5284 ;; Registers used:
  5285 ;;		wreg, status,2, status,0
  5286 ;; Tracked objects:
  5287 ;;		On entry : 0/0
  5288 ;;		On exit  : 0/0
  5289 ;;		Unchanged: 0/0
  5290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5293 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5294 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5295 ;;Total ram usage:        1 bytes
  5296 ;; Hardware stack levels used: 1
  5297 ;; This function calls:
  5298 ;;		Nothing
  5299 ;; This function is called by:
  5300 ;;		_main
  5301 ;;		_TMR1_ISR
  5302 ;; This function uses a non-reentrant model
  5303 ;;
  5304                           
  5305                           	psect	text44
  5306   000F84                     __ptext44:
  5307                           	callstack 0
  5308   000F84                     _TMR1_MyInterruptHandler:
  5309                           	callstack 18
  5310   000F84                     
  5311                           ;main.c: 87:     if (SistemaControloLigado) {
  5312   000F84  0100               	movlb	0	; () banked
  5313   000F86  51C5               	movf	_SistemaControloLigado& (0+255),w,b	;volatile
  5314   000F88  B4D8               	btfsc	status,2,c
  5315   000F8A  EFC9  F007         	goto	i2u147_41
  5316   000F8E  EFCB  F007         	goto	i2u147_40
  5317   000F92                     i2u147_41:
  5318   000F92  EFDC  F007         	goto	i2l588
  5319   000F96                     i2u147_40:
  5320   000F96                     
  5321                           ; BSR set to: 0
  5322   000F96  B88A               	btfsc	138,4,c	;volatile
  5323   000F98  EFD0  F007         	goto	i2u148_41
  5324   000F9C  EFD3  F007         	goto	i2u148_40
  5325   000FA0                     i2u148_41:
  5326   000FA0  0E01               	movlw	1
  5327   000FA2  EFD4  F007         	goto	i2u148_46
  5328   000FA6                     i2u148_40:
  5329   000FA6  0E00               	movlw	0
  5330   000FA8                     i2u148_46:
  5331   000FA8  0AFF               	xorlw	255
  5332   000FAA  6E01               	movwf	??_TMR1_MyInterruptHandler^0,c
  5333   000FAC  3A01               	swapf	??_TMR1_MyInterruptHandler^0,f,c
  5334   000FAE  508A               	movf	138,w,c	;volatile
  5335   000FB0  1801               	xorwf	??_TMR1_MyInterruptHandler^0,w,c
  5336   000FB2  0BEF               	andlw	-17
  5337   000FB4  1801               	xorwf	??_TMR1_MyInterruptHandler^0,w,c
  5338   000FB6  6E8A               	movwf	138,c	;volatile
  5339   000FB8                     i2l588:
  5340                           
  5341                           ; BSR set to: 0
  5342   000FB8  0012               	return		;funcret
  5343   000FBA                     __end_of_TMR1_MyInterruptHandler:
  5344                           	callstack 0
  5345                           
  5346 ;; *************** function _TMR0_ISR *****************
  5347 ;; Defined at:
  5348 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  5349 ;; Parameters:    Size  Location     Type
  5350 ;;		None
  5351 ;; Auto vars:     Size  Location     Type
  5352 ;;		None
  5353 ;; Return value:  Size  Location     Type
  5354 ;;                  1    wreg      void 
  5355 ;; Registers used:
  5356 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5357 ;; Tracked objects:
  5358 ;;		On entry : 0/0
  5359 ;;		On exit  : 0/0
  5360 ;;		Unchanged: 0/0
  5361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5366 ;;Total ram usage:        0 bytes
  5367 ;; Hardware stack levels used: 1
  5368 ;; Hardware stack levels required when called: 2
  5369 ;; This function calls:
  5370 ;;		NULL
  5371 ;;		_TMR0_DefaultInterruptHandler
  5372 ;;		_TMR0_MyInterruptHandler
  5373 ;; This function is called by:
  5374 ;;		_INTERRUPT_InterruptManagerHigh
  5375 ;; This function uses a non-reentrant model
  5376 ;;
  5377                           
  5378                           	psect	text45
  5379   000FBA                     __ptext45:
  5380                           	callstack 0
  5381   000FBA                     _TMR0_ISR:
  5382                           	callstack 17
  5383   000FBA                     
  5384                           ;mcc_generated_files/tmr0.c: 133:     INTCONbits.TMR0IF = 0;
  5385   000FBA  94F2               	bcf	242,2,c	;volatile
  5386                           
  5387                           ;mcc_generated_files/tmr0.c: 136:     TMR0L = timer0ReloadVal;
  5388   000FBC  C02F  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  5389   000FC0                     
  5390                           ;mcc_generated_files/tmr0.c: 138:     if(TMR0_InterruptHandler)
  5391   000FC0  5039               	movf	_TMR0_InterruptHandler^0,w,c
  5392   000FC2  103A               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  5393   000FC4  B4D8               	btfsc	status,2,c
  5394   000FC6  EFE7  F007         	goto	i2u159_41
  5395   000FCA  EFE9  F007         	goto	i2u159_40
  5396   000FCE                     i2u159_41:
  5397   000FCE  EFF5  F007         	goto	i2l457
  5398   000FD2                     i2u159_40:
  5399   000FD2                     
  5400                           ;mcc_generated_files/tmr0.c: 139:     {;mcc_generated_files/tmr0.c: 140:         TMR0_In
      +                          terruptHandler();
  5401   000FD2  D802               	call	i2u160_48
  5402   000FD4  EFF5  F007         	goto	i2u160_49
  5403   000FD8                     i2u160_48:
  5404   000FD8  0005               	push	
  5405   000FDA  6EFA               	movwf	pclath,c
  5406   000FDC  5039               	movf	_TMR0_InterruptHandler^0,w,c
  5407   000FDE  6EFD               	movwf	tosl,c
  5408   000FE0  503A               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  5409   000FE2  6EFE               	movwf	tosh,c
  5410   000FE4  6AFF               	clrf	tosu,c
  5411   000FE6  50FA               	movf	pclath,w,c
  5412   000FE8  0012               	return		;indir
  5413   000FEA                     i2u160_49:
  5414   000FEA                     i2l457:
  5415   000FEA  0012               	return		;funcret
  5416   000FEC                     __end_of_TMR0_ISR:
  5417                           	callstack 0
  5418                           
  5419 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  5420 ;; Defined at:
  5421 ;;		line 151 in file "mcc_generated_files/tmr0.c"
  5422 ;; Parameters:    Size  Location     Type
  5423 ;;		None
  5424 ;; Auto vars:     Size  Location     Type
  5425 ;;		None
  5426 ;; Return value:  Size  Location     Type
  5427 ;;                  1    wreg      void 
  5428 ;; Registers used:
  5429 ;;		None
  5430 ;; Tracked objects:
  5431 ;;		On entry : 0/0
  5432 ;;		On exit  : 0/0
  5433 ;;		Unchanged: 0/0
  5434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5439 ;;Total ram usage:        0 bytes
  5440 ;; Hardware stack levels used: 1
  5441 ;; This function calls:
  5442 ;;		Nothing
  5443 ;; This function is called by:
  5444 ;;		_TMR0_Initialize
  5445 ;;		_TMR0_ISR
  5446 ;; This function uses a non-reentrant model
  5447 ;;
  5448                           
  5449                           	psect	text46
  5450   001296                     __ptext46:
  5451                           	callstack 0
  5452   001296                     _TMR0_DefaultInterruptHandler:
  5453                           	callstack 18
  5454   001296  0012               	return		;funcret
  5455   001298                     __end_of_TMR0_DefaultInterruptHandler:
  5456                           	callstack 0
  5457                           
  5458 ;; *************** function _TMR0_MyInterruptHandler *****************
  5459 ;; Defined at:
  5460 ;;		line 80 in file "main.c"
  5461 ;; Parameters:    Size  Location     Type
  5462 ;;		None
  5463 ;; Auto vars:     Size  Location     Type
  5464 ;;		None
  5465 ;; Return value:  Size  Location     Type
  5466 ;;                  1    wreg      void 
  5467 ;; Registers used:
  5468 ;;		wreg, status,2, status,0, cstack
  5469 ;; Tracked objects:
  5470 ;;		On entry : 0/0
  5471 ;;		On exit  : 0/0
  5472 ;;		Unchanged: 0/0
  5473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5478 ;;Total ram usage:        0 bytes
  5479 ;; Hardware stack levels used: 1
  5480 ;; Hardware stack levels required when called: 1
  5481 ;; This function calls:
  5482 ;;		_ADC_SelectChannel
  5483 ;;		_ADC_StartConversion
  5484 ;; This function is called by:
  5485 ;;		_main
  5486 ;;		_TMR0_ISR
  5487 ;; This function uses a non-reentrant model
  5488 ;;
  5489                           
  5490                           	psect	text47
  5491   0011FC                     __ptext47:
  5492                           	callstack 0
  5493   0011FC                     _TMR0_MyInterruptHandler:
  5494                           	callstack 17
  5495   0011FC                     
  5496                           ;main.c: 81:     ADC_SelectChannel(channel_AN0);
  5497   0011FC  0E00               	movlw	0
  5498   0011FE  ECAD  F008         	call	_ADC_SelectChannel
  5499   001202                     
  5500                           ;main.c: 82:     ADC_StartConversion();
  5501   001202  EC46  F009         	call	_ADC_StartConversion	;wreg free
  5502   001206  0012               	return		;funcret
  5503   001208                     __end_of_TMR0_MyInterruptHandler:
  5504                           	callstack 0
  5505                           
  5506 ;; *************** function _ADC_StartConversion *****************
  5507 ;; Defined at:
  5508 ;;		line 96 in file "mcc_generated_files/adc.c"
  5509 ;; Parameters:    Size  Location     Type
  5510 ;;		None
  5511 ;; Auto vars:     Size  Location     Type
  5512 ;;		None
  5513 ;; Return value:  Size  Location     Type
  5514 ;;                  1    wreg      void 
  5515 ;; Registers used:
  5516 ;;		None
  5517 ;; Tracked objects:
  5518 ;;		On entry : 0/0
  5519 ;;		On exit  : 0/0
  5520 ;;		Unchanged: 0/0
  5521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5526 ;;Total ram usage:        0 bytes
  5527 ;; Hardware stack levels used: 1
  5528 ;; This function calls:
  5529 ;;		Nothing
  5530 ;; This function is called by:
  5531 ;;		_TMR0_MyInterruptHandler
  5532 ;; This function uses a non-reentrant model
  5533 ;;
  5534                           
  5535                           	psect	text48
  5536   00128C                     __ptext48:
  5537                           	callstack 0
  5538   00128C                     _ADC_StartConversion:
  5539                           	callstack 17
  5540   00128C                     
  5541                           ;mcc_generated_files/adc.c: 99:     ADCON0bits.GO_nDONE = 1;
  5542   00128C  82C2               	bsf	194,1,c	;volatile
  5543   00128E  0012               	return		;funcret
  5544   001290                     __end_of_ADC_StartConversion:
  5545                           	callstack 0
  5546                           
  5547 ;; *************** function _INT0_ISR *****************
  5548 ;; Defined at:
  5549 ;;		line 32 in file "mcc_generated_files/ext_int.c"
  5550 ;; Parameters:    Size  Location     Type
  5551 ;;		None
  5552 ;; Auto vars:     Size  Location     Type
  5553 ;;		None
  5554 ;; Return value:  Size  Location     Type
  5555 ;;                  1    wreg      void 
  5556 ;; Registers used:
  5557 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5558 ;; Tracked objects:
  5559 ;;		On entry : 0/0
  5560 ;;		On exit  : 0/0
  5561 ;;		Unchanged: 0/0
  5562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5567 ;;Total ram usage:        0 bytes
  5568 ;; Hardware stack levels used: 1
  5569 ;; Hardware stack levels required when called: 2
  5570 ;; This function calls:
  5571 ;;		_INT0_CallBack
  5572 ;; This function is called by:
  5573 ;;		_INTERRUPT_InterruptManagerHigh
  5574 ;; This function uses a non-reentrant model
  5575 ;;
  5576                           
  5577                           	psect	text49
  5578   00126C                     __ptext49:
  5579                           	callstack 0
  5580   00126C                     _INT0_ISR:
  5581                           	callstack 17
  5582   00126C                     
  5583                           ;mcc_generated_files/ext_int.c: 34:     (INTCONbits.INT0IF = 0);
  5584   00126C  92F2               	bcf	242,1,c	;volatile
  5585   00126E                     
  5586                           ;mcc_generated_files/ext_int.c: 37:     INT0_CallBack();
  5587   00126E  EC0D  F008         	call	_INT0_CallBack	;wreg free
  5588   001272  0012               	return		;funcret
  5589   001274                     __end_of_INT0_ISR:
  5590                           	callstack 0
  5591                           
  5592 ;; *************** function _INT0_CallBack *****************
  5593 ;; Defined at:
  5594 ;;		line 41 in file "mcc_generated_files/ext_int.c"
  5595 ;; Parameters:    Size  Location     Type
  5596 ;;		None
  5597 ;; Auto vars:     Size  Location     Type
  5598 ;;		None
  5599 ;; Return value:  Size  Location     Type
  5600 ;;                  1    wreg      void 
  5601 ;; Registers used:
  5602 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5603 ;; Tracked objects:
  5604 ;;		On entry : 0/0
  5605 ;;		On exit  : 0/0
  5606 ;;		Unchanged: 0/0
  5607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5612 ;;Total ram usage:        0 bytes
  5613 ;; Hardware stack levels used: 1
  5614 ;; Hardware stack levels required when called: 1
  5615 ;; This function calls:
  5616 ;;		NULL
  5617 ;;		_INT0_DefaultInterruptHandler
  5618 ;;		_INT0_MyInterruptHandler
  5619 ;; This function is called by:
  5620 ;;		_INT0_ISR
  5621 ;; This function uses a non-reentrant model
  5622 ;;
  5623                           
  5624                           	psect	text50
  5625   00101A                     __ptext50:
  5626                           	callstack 0
  5627   00101A                     _INT0_CallBack:
  5628                           	callstack 17
  5629   00101A                     
  5630                           ;mcc_generated_files/ext_int.c: 44:     if(INT0_InterruptHandler)
  5631   00101A  503B               	movf	_INT0_InterruptHandler^0,w,c
  5632   00101C  103C               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
  5633   00101E  B4D8               	btfsc	status,2,c
  5634   001020  EF14  F008         	goto	i2u140_41
  5635   001024  EF16  F008         	goto	i2u140_40
  5636   001028                     i2u140_41:
  5637   001028  EF22  F008         	goto	i2l140
  5638   00102C                     i2u140_40:
  5639   00102C                     
  5640                           ;mcc_generated_files/ext_int.c: 45:     {;mcc_generated_files/ext_int.c: 46:         INT
      +                          0_InterruptHandler();
  5641   00102C  D802               	call	i2u141_48
  5642   00102E  EF22  F008         	goto	i2u141_49
  5643   001032                     i2u141_48:
  5644   001032  0005               	push	
  5645   001034  6EFA               	movwf	pclath,c
  5646   001036  503B               	movf	_INT0_InterruptHandler^0,w,c
  5647   001038  6EFD               	movwf	tosl,c
  5648   00103A  503C               	movf	(_INT0_InterruptHandler+1)^0,w,c
  5649   00103C  6EFE               	movwf	tosh,c
  5650   00103E  6AFF               	clrf	tosu,c
  5651   001040  50FA               	movf	pclath,w,c
  5652   001042  0012               	return		;indir
  5653   001044                     i2u141_49:
  5654   001044                     i2l140:
  5655   001044  0012               	return		;funcret
  5656   001046                     __end_of_INT0_CallBack:
  5657                           	callstack 0
  5658                           
  5659 ;; *************** function _INT0_DefaultInterruptHandler *****************
  5660 ;; Defined at:
  5661 ;;		line 54 in file "mcc_generated_files/ext_int.c"
  5662 ;; Parameters:    Size  Location     Type
  5663 ;;		None
  5664 ;; Auto vars:     Size  Location     Type
  5665 ;;		None
  5666 ;; Return value:  Size  Location     Type
  5667 ;;                  1    wreg      void 
  5668 ;; Registers used:
  5669 ;;		None
  5670 ;; Tracked objects:
  5671 ;;		On entry : 0/0
  5672 ;;		On exit  : 0/0
  5673 ;;		Unchanged: 0/0
  5674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5679 ;;Total ram usage:        0 bytes
  5680 ;; Hardware stack levels used: 1
  5681 ;; This function calls:
  5682 ;;		Nothing
  5683 ;; This function is called by:
  5684 ;;		_EXT_INT_Initialize
  5685 ;;		_INT0_CallBack
  5686 ;; This function uses a non-reentrant model
  5687 ;;
  5688                           
  5689                           	psect	text51
  5690   001298                     __ptext51:
  5691                           	callstack 0
  5692   001298                     _INT0_DefaultInterruptHandler:
  5693                           	callstack 17
  5694   001298  0012               	return		;funcret
  5695   00129A                     __end_of_INT0_DefaultInterruptHandler:
  5696                           	callstack 0
  5697                           
  5698 ;; *************** function _INT0_MyInterruptHandler *****************
  5699 ;; Defined at:
  5700 ;;		line 60 in file "main.c"
  5701 ;; Parameters:    Size  Location     Type
  5702 ;;		None
  5703 ;; Auto vars:     Size  Location     Type
  5704 ;;		None
  5705 ;; Return value:  Size  Location     Type
  5706 ;;                  1    wreg      void 
  5707 ;; Registers used:
  5708 ;;		wreg, status,2
  5709 ;; Tracked objects:
  5710 ;;		On entry : 0/0
  5711 ;;		On exit  : 0/0
  5712 ;;		Unchanged: 0/0
  5713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5718 ;;Total ram usage:        0 bytes
  5719 ;; Hardware stack levels used: 1
  5720 ;; This function calls:
  5721 ;;		Nothing
  5722 ;; This function is called by:
  5723 ;;		_main
  5724 ;;		_INT0_CallBack
  5725 ;; This function uses a non-reentrant model
  5726 ;;
  5727                           
  5728                           	psect	text52
  5729   0011EE                     __ptext52:
  5730                           	callstack 0
  5731   0011EE                     _INT0_MyInterruptHandler:
  5732                           	callstack 17
  5733   0011EE                     
  5734                           ;main.c: 62:     BombaLigada = 0;
  5735   0011EE  0E00               	movlw	0
  5736   0011F0  0100               	movlb	0	; () banked
  5737   0011F2  6FC4               	movwf	_BombaLigada& (0+255),b	;volatile
  5738                           
  5739                           ;main.c: 63:     SistemaControloLigado = 0;
  5740   0011F4  0E00               	movlw	0
  5741   0011F6  6FC5               	movwf	_SistemaControloLigado& (0+255),b	;volatile
  5742   0011F8                     
  5743                           ; BSR set to: 0
  5744                           ;main.c: 65:     (INTCONbits.INT0IF = 0);
  5745   0011F8  92F2               	bcf	242,1,c	;volatile
  5746   0011FA                     
  5747                           ; BSR set to: 0
  5748   0011FA  0012               	return		;funcret
  5749   0011FC                     __end_of_INT0_MyInterruptHandler:
  5750                           	callstack 0
  5751                           
  5752 ;; *************** function _EUSART1_Transmit_ISR *****************
  5753 ;; Defined at:
  5754 ;;		line 206 in file "mcc_generated_files/eusart1.c"
  5755 ;; Parameters:    Size  Location     Type
  5756 ;;		None
  5757 ;; Auto vars:     Size  Location     Type
  5758 ;;		None
  5759 ;; Return value:  Size  Location     Type
  5760 ;;                  1    wreg      void 
  5761 ;; Registers used:
  5762 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5763 ;; Tracked objects:
  5764 ;;		On entry : 0/0
  5765 ;;		On exit  : 0/0
  5766 ;;		Unchanged: 0/0
  5767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5772 ;;Total ram usage:        0 bytes
  5773 ;; Hardware stack levels used: 1
  5774 ;; This function calls:
  5775 ;;		Nothing
  5776 ;; This function is called by:
  5777 ;;		_EUSART1_Initialize
  5778 ;;		_INTERRUPT_InterruptManagerHigh
  5779 ;; This function uses a non-reentrant model
  5780 ;;
  5781                           
  5782                           	psect	text53
  5783   000F0A                     __ptext53:
  5784                           	callstack 0
  5785   000F0A                     _EUSART1_Transmit_ISR:
  5786                           	callstack 19
  5787   000F0A                     
  5788                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  5789   000F0A  0E08               	movlw	8
  5790   000F0C  6034               	cpfslt	_eusart1TxBufferRemaining^0,c	;volatile
  5791   000F0E  EF8B  F007         	goto	i2u151_41
  5792   000F12  EF8D  F007         	goto	i2u151_40
  5793   000F16                     i2u151_41:
  5794   000F16  EFA3  F007         	goto	i2l261
  5795   000F1A                     i2u151_40:
  5796   000F1A                     
  5797                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          XREG1 = eusart1TxBuffer[eusart1TxTail++];
  5798   000F1A  0EB5               	movlw	low _eusart1TxBuffer
  5799   000F1C  2435               	addwf	_eusart1TxTail^0,w,c	;volatile
  5800   000F1E  6ED9               	movwf	fsr2l,c
  5801   000F20  6ADA               	clrf	fsr2h,c
  5802   000F22  0E00               	movlw	high _eusart1TxBuffer
  5803   000F24  22DA               	addwfc	fsr2h,f,c
  5804   000F26  50DF               	movf	indf2,w,c
  5805   000F28  6EAD               	movwf	173,c	;volatile
  5806   000F2A  2A35               	incf	_eusart1TxTail^0,f,c	;volatile
  5807   000F2C                     
  5808                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  5809   000F2C  0E07               	movlw	7
  5810   000F2E  6435               	cpfsgt	_eusart1TxTail^0,c	;volatile
  5811   000F30  EF9C  F007         	goto	i2u152_41
  5812   000F34  EF9E  F007         	goto	i2u152_40
  5813   000F38                     i2u152_41:
  5814   000F38  EFA0  F007         	goto	i2l2763
  5815   000F3C                     i2u152_40:
  5816   000F3C                     
  5817                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
  5818   000F3C  0E00               	movlw	0
  5819   000F3E  6E35               	movwf	_eusart1TxTail^0,c	;volatile
  5820   000F40                     i2l2763:
  5821                           
  5822                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
  5823   000F40  2A34               	incf	_eusart1TxBufferRemaining^0,f,c	;volatile
  5824                           
  5825                           ;mcc_generated_files/eusart1.c: 218:     }
  5826   000F42  EFA4  F007         	goto	i2l264
  5827   000F46                     i2l261:
  5828                           
  5829                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE1bits.TX1IE = 0;
  5830   000F46  989D               	bcf	157,4,c	;volatile
  5831   000F48                     i2l264:
  5832   000F48  0012               	return		;funcret
  5833   000F4A                     __end_of_EUSART1_Transmit_ISR:
  5834                           	callstack 0
  5835                           
  5836 ;; *************** function _EUSART1_Receive_ISR *****************
  5837 ;; Defined at:
  5838 ;;		line 225 in file "mcc_generated_files/eusart1.c"
  5839 ;; Parameters:    Size  Location     Type
  5840 ;;		None
  5841 ;; Auto vars:     Size  Location     Type
  5842 ;;		None
  5843 ;; Return value:  Size  Location     Type
  5844 ;;                  1    wreg      void 
  5845 ;; Registers used:
  5846 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5847 ;; Tracked objects:
  5848 ;;		On entry : 0/0
  5849 ;;		On exit  : 0/0
  5850 ;;		Unchanged: 0/0
  5851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5856 ;;Total ram usage:        0 bytes
  5857 ;; Hardware stack levels used: 1
  5858 ;; Hardware stack levels required when called: 2
  5859 ;; This function calls:
  5860 ;;		NULL
  5861 ;;		_EUSART1_DefaultErrorHandler
  5862 ;;		_EUSART1_DefaultFramingErrorHandler
  5863 ;;		_EUSART1_DefaultOverrunErrorHandler
  5864 ;;		_EUSART1_RxDataHandler
  5865 ;; This function is called by:
  5866 ;;		_EUSART1_Initialize
  5867 ;;		_INTERRUPT_InterruptManagerHigh
  5868 ;; This function uses a non-reentrant model
  5869 ;;
  5870                           
  5871                           	psect	text54
  5872   00095C                     __ptext54:
  5873                           	callstack 0
  5874   00095C                     _EUSART1_Receive_ISR:
  5875                           	callstack 17
  5876   00095C                     
  5877                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  5878   00095C  0EA5               	movlw	low _eusart1RxStatusBuffer
  5879   00095E  2433               	addwf	_eusart1RxHead^0,w,c	;volatile
  5880   000960  6ED9               	movwf	fsr2l,c
  5881   000962  6ADA               	clrf	fsr2h,c
  5882   000964  0E00               	movlw	high _eusart1RxStatusBuffer
  5883   000966  22DA               	addwfc	fsr2h,f,c
  5884   000968  6ADF               	clrf	indf2,c
  5885   00096A                     
  5886                           ;mcc_generated_files/eusart1.c: 230:     if(RCSTA1bits.FERR){
  5887   00096A  A4AB               	btfss	171,2,c	;volatile
  5888   00096C  EFBA  F004         	goto	i2u153_41
  5889   000970  EFBC  F004         	goto	i2u153_40
  5890   000974                     i2u153_41:
  5891   000974  EFD0  F004         	goto	i2l2773
  5892   000978                     i2u153_40:
  5893   000978                     
  5894                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  5895   000978  0EA5               	movlw	low _eusart1RxStatusBuffer
  5896   00097A  2433               	addwf	_eusart1RxHead^0,w,c	;volatile
  5897   00097C  6ED9               	movwf	fsr2l,c
  5898   00097E  6ADA               	clrf	fsr2h,c
  5899   000980  0E00               	movlw	high _eusart1RxStatusBuffer
  5900   000982  22DA               	addwfc	fsr2h,f,c
  5901   000984  0100               	movlb	0	; () banked
  5902   000986  82DF               	bsf	indf2,1,c
  5903   000988                     
  5904                           ; BSR set to: 0
  5905                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
  5906   000988  D802               	call	i2u154_48
  5907   00098A  EFD0  F004         	goto	i2u154_49
  5908   00098E                     i2u154_48:
  5909   00098E  0005               	push	
  5910   000990  6EFA               	movwf	pclath,c
  5911   000992  51EA               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
  5912   000994  6EFD               	movwf	tosl,c
  5913   000996  51EB               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
  5914   000998  6EFE               	movwf	tosh,c
  5915   00099A  6AFF               	clrf	tosu,c
  5916   00099C  50FA               	movf	pclath,w,c
  5917   00099E  0012               	return		;indir
  5918   0009A0                     i2u154_49:
  5919   0009A0                     i2l2773:
  5920                           
  5921                           ;mcc_generated_files/eusart1.c: 235:     if(RCSTA1bits.OERR){
  5922   0009A0  A2AB               	btfss	171,1,c	;volatile
  5923   0009A2  EFD5  F004         	goto	i2u155_41
  5924   0009A6  EFD7  F004         	goto	i2u155_40
  5925   0009AA                     i2u155_41:
  5926   0009AA  EFEB  F004         	goto	i2l2779
  5927   0009AE                     i2u155_40:
  5928   0009AE                     
  5929                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  5930   0009AE  0EA5               	movlw	low _eusart1RxStatusBuffer
  5931   0009B0  2433               	addwf	_eusart1RxHead^0,w,c	;volatile
  5932   0009B2  6ED9               	movwf	fsr2l,c
  5933   0009B4  6ADA               	clrf	fsr2h,c
  5934   0009B6  0E00               	movlw	high _eusart1RxStatusBuffer
  5935   0009B8  22DA               	addwfc	fsr2h,f,c
  5936   0009BA  0100               	movlb	0	; () banked
  5937   0009BC  84DF               	bsf	indf2,2,c
  5938   0009BE                     
  5939                           ; BSR set to: 0
  5940                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
  5941   0009BE  D802               	call	i2u156_48
  5942   0009C0  EFEB  F004         	goto	i2u156_49
  5943   0009C4                     i2u156_48:
  5944   0009C4  0005               	push	
  5945   0009C6  6EFA               	movwf	pclath,c
  5946   0009C8  51E8               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
  5947   0009CA  6EFD               	movwf	tosl,c
  5948   0009CC  51E9               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
  5949   0009CE  6EFE               	movwf	tosh,c
  5950   0009D0  6AFF               	clrf	tosu,c
  5951   0009D2  50FA               	movf	pclath,w,c
  5952   0009D4  0012               	return		;indir
  5953   0009D6                     i2u156_49:
  5954   0009D6                     i2l2779:
  5955                           
  5956                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  5957   0009D6  0EA5               	movlw	low _eusart1RxStatusBuffer
  5958   0009D8  2433               	addwf	_eusart1RxHead^0,w,c	;volatile
  5959   0009DA  6ED9               	movwf	fsr2l,c
  5960   0009DC  6ADA               	clrf	fsr2h,c
  5961   0009DE  0E00               	movlw	high _eusart1RxStatusBuffer
  5962   0009E0  22DA               	addwfc	fsr2h,f,c
  5963   0009E2  50DF               	movf	indf2,w,c
  5964   0009E4  B4D8               	btfsc	status,2,c
  5965   0009E6  EFF7  F004         	goto	i2u157_41
  5966   0009EA  EFF9  F004         	goto	i2u157_40
  5967   0009EE                     i2u157_41:
  5968   0009EE  EF08  F005         	goto	i2l2783
  5969   0009F2                     i2u157_40:
  5970   0009F2                     
  5971                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
  5972   0009F2  D802               	call	i2u158_48
  5973   0009F4  EF06  F005         	goto	i2u158_49
  5974   0009F8                     i2u158_48:
  5975   0009F8  0005               	push	
  5976   0009FA  6EFA               	movwf	pclath,c
  5977   0009FC  0100               	movlb	0	; () banked
  5978   0009FE  51E6               	movf	_EUSART1_ErrorHandler& (0+255),w,b
  5979   000A00  6EFD               	movwf	tosl,c
  5980   000A02  51E7               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
  5981   000A04  6EFE               	movwf	tosh,c
  5982   000A06  6AFF               	clrf	tosu,c
  5983   000A08  50FA               	movf	pclath,w,c
  5984   000A0A  0012               	return		;indir
  5985   000A0C                     i2u158_49:
  5986                           
  5987                           ;mcc_generated_files/eusart1.c: 242:     } else {
  5988   000A0C  EF0A  F005         	goto	i2l271
  5989   000A10                     i2l2783:
  5990                           
  5991                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
  5992   000A10  EC4D  F008         	call	_EUSART1_RxDataHandler	;wreg free
  5993   000A14                     i2l271:
  5994   000A14  0012               	return		;funcret
  5995   000A16                     __end_of_EUSART1_Receive_ISR:
  5996                           	callstack 0
  5997                           
  5998 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  5999 ;; Defined at:
  6000 ;;		line 261 in file "mcc_generated_files/eusart1.c"
  6001 ;; Parameters:    Size  Location     Type
  6002 ;;		None
  6003 ;; Auto vars:     Size  Location     Type
  6004 ;;		None
  6005 ;; Return value:  Size  Location     Type
  6006 ;;                  1    wreg      void 
  6007 ;; Registers used:
  6008 ;;		None
  6009 ;; Tracked objects:
  6010 ;;		On entry : 0/0
  6011 ;;		On exit  : 0/0
  6012 ;;		Unchanged: 0/0
  6013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6018 ;;Total ram usage:        0 bytes
  6019 ;; Hardware stack levels used: 1
  6020 ;; This function calls:
  6021 ;;		Nothing
  6022 ;; This function is called by:
  6023 ;;		_EUSART1_Initialize
  6024 ;;		_EUSART1_Receive_ISR
  6025 ;; This function uses a non-reentrant model
  6026 ;;
  6027                           
  6028                           	psect	text55
  6029   001274                     __ptext55:
  6030                           	callstack 0
  6031   001274                     _EUSART1_DefaultOverrunErrorHandler:
  6032                           	callstack 18
  6033   001274                     
  6034                           ;mcc_generated_files/eusart1.c: 264:     RCSTA1bits.CREN = 0;
  6035   001274  98AB               	bcf	171,4,c	;volatile
  6036                           
  6037                           ;mcc_generated_files/eusart1.c: 265:     RCSTA1bits.CREN = 1;
  6038   001276  88AB               	bsf	171,4,c	;volatile
  6039   001278  0012               	return		;funcret
  6040   00127A                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  6041                           	callstack 0
  6042                           
  6043 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  6044 ;; Defined at:
  6045 ;;		line 259 in file "mcc_generated_files/eusart1.c"
  6046 ;; Parameters:    Size  Location     Type
  6047 ;;		None
  6048 ;; Auto vars:     Size  Location     Type
  6049 ;;		None
  6050 ;; Return value:  Size  Location     Type
  6051 ;;                  1    wreg      void 
  6052 ;; Registers used:
  6053 ;;		None
  6054 ;; Tracked objects:
  6055 ;;		On entry : 0/0
  6056 ;;		On exit  : 0/0
  6057 ;;		Unchanged: 0/0
  6058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6063 ;;Total ram usage:        0 bytes
  6064 ;; Hardware stack levels used: 1
  6065 ;; This function calls:
  6066 ;;		Nothing
  6067 ;; This function is called by:
  6068 ;;		_EUSART1_Initialize
  6069 ;;		_EUSART1_Receive_ISR
  6070 ;; This function uses a non-reentrant model
  6071 ;;
  6072                           
  6073                           	psect	text56
  6074   00129A                     __ptext56:
  6075                           	callstack 0
  6076   00129A                     _EUSART1_DefaultFramingErrorHandler:
  6077                           	callstack 18
  6078   00129A  0012               	return		;funcret
  6079   00129C                     __end_of_EUSART1_DefaultFramingErrorHandler:
  6080                           	callstack 0
  6081                           
  6082 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  6083 ;; Defined at:
  6084 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  6085 ;; Parameters:    Size  Location     Type
  6086 ;;		None
  6087 ;; Auto vars:     Size  Location     Type
  6088 ;;		None
  6089 ;; Return value:  Size  Location     Type
  6090 ;;                  1    wreg      void 
  6091 ;; Registers used:
  6092 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6093 ;; Tracked objects:
  6094 ;;		On entry : 0/0
  6095 ;;		On exit  : 0/0
  6096 ;;		Unchanged: 0/0
  6097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6102 ;;Total ram usage:        0 bytes
  6103 ;; Hardware stack levels used: 1
  6104 ;; Hardware stack levels required when called: 1
  6105 ;; This function calls:
  6106 ;;		_EUSART1_RxDataHandler
  6107 ;; This function is called by:
  6108 ;;		_EUSART1_Initialize
  6109 ;;		_EUSART1_Receive_ISR
  6110 ;; This function uses a non-reentrant model
  6111 ;;
  6112                           
  6113                           	psect	text57
  6114   00127A                     __ptext57:
  6115                           	callstack 0
  6116   00127A                     _EUSART1_DefaultErrorHandler:
  6117                           	callstack 17
  6118   00127A                     
  6119                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
  6120   00127A  EC4D  F008         	call	_EUSART1_RxDataHandler	;wreg free
  6121   00127E  0012               	return		;funcret
  6122   001280                     __end_of_EUSART1_DefaultErrorHandler:
  6123                           	callstack 0
  6124                           
  6125 ;; *************** function _EUSART1_RxDataHandler *****************
  6126 ;; Defined at:
  6127 ;;		line 249 in file "mcc_generated_files/eusart1.c"
  6128 ;; Parameters:    Size  Location     Type
  6129 ;;		None
  6130 ;; Auto vars:     Size  Location     Type
  6131 ;;		None
  6132 ;; Return value:  Size  Location     Type
  6133 ;;                  1    wreg      void 
  6134 ;; Registers used:
  6135 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6136 ;; Tracked objects:
  6137 ;;		On entry : 0/0
  6138 ;;		On exit  : 0/0
  6139 ;;		Unchanged: 0/0
  6140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6145 ;;Total ram usage:        0 bytes
  6146 ;; Hardware stack levels used: 1
  6147 ;; This function calls:
  6148 ;;		Nothing
  6149 ;; This function is called by:
  6150 ;;		_EUSART1_Receive_ISR
  6151 ;;		_EUSART1_DefaultErrorHandler
  6152 ;; This function uses a non-reentrant model
  6153 ;;
  6154                           
  6155                           	psect	text58
  6156   00109A                     __ptext58:
  6157                           	callstack 0
  6158   00109A                     _EUSART1_RxDataHandler:
  6159                           	callstack 18
  6160   00109A                     
  6161                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  6162   00109A  0EAD               	movlw	low _eusart1RxBuffer
  6163   00109C  2433               	addwf	_eusart1RxHead^0,w,c	;volatile
  6164   00109E  6ED9               	movwf	fsr2l,c
  6165   0010A0  6ADA               	clrf	fsr2h,c
  6166   0010A2  0E00               	movlw	high _eusart1RxBuffer
  6167   0010A4  22DA               	addwfc	fsr2h,f,c
  6168   0010A6  CFAE FFDF          	movff	4014,indf2	;volatile
  6169   0010AA  2A33               	incf	_eusart1RxHead^0,f,c	;volatile
  6170   0010AC                     
  6171                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  6172   0010AC  0E07               	movlw	7
  6173   0010AE  6433               	cpfsgt	_eusart1RxHead^0,c	;volatile
  6174   0010B0  EF5C  F008         	goto	i2u130_41
  6175   0010B4  EF5E  F008         	goto	i2u130_40
  6176   0010B8                     i2u130_41:
  6177   0010B8  EF60  F008         	goto	i2l2529
  6178   0010BC                     i2u130_40:
  6179   0010BC                     
  6180                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
  6181   0010BC  0E00               	movlw	0
  6182   0010BE  6E33               	movwf	_eusart1RxHead^0,c	;volatile
  6183   0010C0                     i2l2529:
  6184                           
  6185                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
  6186   0010C0  2A31               	incf	_eusart1RxCount^0,f,c	;volatile
  6187   0010C2  0012               	return		;funcret
  6188   0010C4                     __end_of_EUSART1_RxDataHandler:
  6189                           	callstack 0
  6190                           
  6191 ;; *************** function _ADC_ISR *****************
  6192 ;; Defined at:
  6193 ;;		line 140 in file "mcc_generated_files/adc.c"
  6194 ;; Parameters:    Size  Location     Type
  6195 ;;		None
  6196 ;; Auto vars:     Size  Location     Type
  6197 ;;		None
  6198 ;; Return value:  Size  Location     Type
  6199 ;;                  1    wreg      void 
  6200 ;; Registers used:
  6201 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6202 ;; Tracked objects:
  6203 ;;		On entry : 0/0
  6204 ;;		On exit  : 0/0
  6205 ;;		Unchanged: 0/0
  6206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6211 ;;Total ram usage:        0 bytes
  6212 ;; Hardware stack levels used: 1
  6213 ;; Hardware stack levels required when called: 2
  6214 ;; This function calls:
  6215 ;;		NULL
  6216 ;;		_ADC_DefaultInterruptHandler
  6217 ;;		_ADC_MyInterruptHandler
  6218 ;; This function is called by:
  6219 ;;		_INTERRUPT_InterruptManagerHigh
  6220 ;; This function uses a non-reentrant model
  6221 ;;
  6222                           
  6223                           	psect	text59
  6224   000FEC                     __ptext59:
  6225                           	callstack 0
  6226   000FEC                     _ADC_ISR:
  6227                           	callstack 17
  6228   000FEC                     
  6229                           ;mcc_generated_files/adc.c: 143:     PIR1bits.ADIF = 0;
  6230   000FEC  9C9E               	bcf	158,6,c	;volatile
  6231   000FEE                     
  6232                           ;mcc_generated_files/adc.c: 145:  if(ADC_InterruptHandler)
  6233   000FEE  503D               	movf	_ADC_InterruptHandler^0,w,c
  6234   000FF0  103E               	iorwf	(_ADC_InterruptHandler+1)^0,w,c
  6235   000FF2  B4D8               	btfsc	status,2,c
  6236   000FF4  EFFE  F007         	goto	i2u149_41
  6237   000FF8  EF00  F008         	goto	i2u149_40
  6238   000FFC                     i2u149_41:
  6239   000FFC  EF0C  F008         	goto	i2l119
  6240   001000                     i2u149_40:
  6241   001000                     
  6242                           ;mcc_generated_files/adc.c: 146:     {;mcc_generated_files/adc.c: 147:         ADC_Inter
      +                          ruptHandler();
  6243   001000  D802               	call	i2u150_48
  6244   001002  EF0C  F008         	goto	i2u150_49
  6245   001006                     i2u150_48:
  6246   001006  0005               	push	
  6247   001008  6EFA               	movwf	pclath,c
  6248   00100A  503D               	movf	_ADC_InterruptHandler^0,w,c
  6249   00100C  6EFD               	movwf	tosl,c
  6250   00100E  503E               	movf	(_ADC_InterruptHandler+1)^0,w,c
  6251   001010  6EFE               	movwf	tosh,c
  6252   001012  6AFF               	clrf	tosu,c
  6253   001014  50FA               	movf	pclath,w,c
  6254   001016  0012               	return		;indir
  6255   001018                     i2u150_49:
  6256   001018                     i2l119:
  6257   001018  0012               	return		;funcret
  6258   00101A                     __end_of_ADC_ISR:
  6259                           	callstack 0
  6260                           
  6261 ;; *************** function _ADC_DefaultInterruptHandler *****************
  6262 ;; Defined at:
  6263 ;;		line 155 in file "mcc_generated_files/adc.c"
  6264 ;; Parameters:    Size  Location     Type
  6265 ;;		None
  6266 ;; Auto vars:     Size  Location     Type
  6267 ;;		None
  6268 ;; Return value:  Size  Location     Type
  6269 ;;                  1    wreg      void 
  6270 ;; Registers used:
  6271 ;;		None
  6272 ;; Tracked objects:
  6273 ;;		On entry : 0/0
  6274 ;;		On exit  : 0/0
  6275 ;;		Unchanged: 0/0
  6276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6281 ;;Total ram usage:        0 bytes
  6282 ;; Hardware stack levels used: 1
  6283 ;; This function calls:
  6284 ;;		Nothing
  6285 ;; This function is called by:
  6286 ;;		_ADC_Initialize
  6287 ;;		_ADC_ISR
  6288 ;; This function uses a non-reentrant model
  6289 ;;
  6290                           
  6291                           	psect	text60
  6292   00129C                     __ptext60:
  6293                           	callstack 0
  6294   00129C                     _ADC_DefaultInterruptHandler:
  6295                           	callstack 18
  6296   00129C  0012               	return		;funcret
  6297   00129E                     __end_of_ADC_DefaultInterruptHandler:
  6298                           	callstack 0
  6299                           
  6300 ;; *************** function _ADC_MyInterruptHandler *****************
  6301 ;; Defined at:
  6302 ;;		line 71 in file "main.c"
  6303 ;; Parameters:    Size  Location     Type
  6304 ;;		None
  6305 ;; Auto vars:     Size  Location     Type
  6306 ;;		None
  6307 ;; Return value:  Size  Location     Type
  6308 ;;                  1    wreg      void 
  6309 ;; Registers used:
  6310 ;;		wreg, status,2, status,0, cstack
  6311 ;; Tracked objects:
  6312 ;;		On entry : 0/0
  6313 ;;		On exit  : 0/0
  6314 ;;		Unchanged: 0/0
  6315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6320 ;;Total ram usage:        0 bytes
  6321 ;; Hardware stack levels used: 1
  6322 ;; Hardware stack levels required when called: 1
  6323 ;; This function calls:
  6324 ;;		_ADC_GetConversionResult
  6325 ;;		_ADC_SelectChannel
  6326 ;;		___aldiv
  6327 ;;		___lmul
  6328 ;; This function is called by:
  6329 ;;		_main
  6330 ;;		_ADC_ISR
  6331 ;; This function uses a non-reentrant model
  6332 ;;
  6333                           
  6334                           	psect	text61
  6335   000C90                     __ptext61:
  6336                           	callstack 0
  6337   000C90                     _ADC_MyInterruptHandler:
  6338                           	callstack 17
  6339   000C90                     
  6340                           ;main.c: 72:     ADC_SelectChannel(channel_AN0);
  6341   000C90  0E00               	movlw	0
  6342   000C92  ECAD  F008         	call	_ADC_SelectChannel
  6343                           
  6344                           ;main.c: 73:     convertedValue = ADC_GetConversionResult();
  6345   000C96  ECCE  F008         	call	_ADC_GetConversionResult	;wreg free
  6346   000C9A  C001  F028         	movff	?_ADC_GetConversionResult,_convertedValue
  6347   000C9E  C002  F029         	movff	?_ADC_GetConversionResult+1,_convertedValue+1
  6348                           
  6349                           ;main.c: 74:     nivel_agua = (long)convertedValue * 100 / 1023;
  6350   000CA2  C028  F001         	movff	_convertedValue,___lmul@multiplier
  6351   000CA6  C029  F002         	movff	_convertedValue+1,___lmul@multiplier+1
  6352   000CAA  6A03               	clrf	(___lmul@multiplier+2)^0,c
  6353   000CAC  6A04               	clrf	(___lmul@multiplier+3)^0,c
  6354   000CAE  0E64               	movlw	100
  6355   000CB0  6E05               	movwf	___lmul@multiplicand^0,c
  6356   000CB2  0E00               	movlw	0
  6357   000CB4  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  6358   000CB6  0E00               	movlw	0
  6359   000CB8  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  6360   000CBA  0E00               	movlw	0
  6361   000CBC  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  6362   000CBE  EC13  F006         	call	___lmul	;wreg free
  6363   000CC2  C001  F00D         	movff	?___lmul,___aldiv@dividend
  6364   000CC6  C002  F00E         	movff	?___lmul+1,___aldiv@dividend+1
  6365   000CCA  C003  F00F         	movff	?___lmul+2,___aldiv@dividend+2
  6366   000CCE  C004  F010         	movff	?___lmul+3,___aldiv@dividend+3
  6367   000CD2  0EFF               	movlw	255
  6368   000CD4  6E11               	movwf	___aldiv@divisor^0,c
  6369   000CD6  0E03               	movlw	3
  6370   000CD8  6E12               	movwf	(___aldiv@divisor+1)^0,c
  6371   000CDA  0E00               	movlw	0
  6372   000CDC  6E13               	movwf	(___aldiv@divisor+2)^0,c
  6373   000CDE  0E00               	movlw	0
  6374   000CE0  6E14               	movwf	(___aldiv@divisor+3)^0,c
  6375   000CE2  EC02  F003         	call	___aldiv	;wreg free
  6376   000CE6  C00D  F0C1         	movff	?___aldiv,_nivel_agua
  6377   000CEA  C00E  F0C2         	movff	?___aldiv+1,_nivel_agua+1
  6378   000CEE  0012               	return		;funcret
  6379   000CF0                     __end_of_ADC_MyInterruptHandler:
  6380                           	callstack 0
  6381                           
  6382 ;; *************** function ___lmul *****************
  6383 ;; Defined at:
  6384 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul32.c"
  6385 ;; Parameters:    Size  Location     Type
  6386 ;;  multiplier      4    0[COMRAM] unsigned long 
  6387 ;;  multiplicand    4    4[COMRAM] unsigned long 
  6388 ;; Auto vars:     Size  Location     Type
  6389 ;;  product         4    8[COMRAM] unsigned long 
  6390 ;; Return value:  Size  Location     Type
  6391 ;;                  4    0[COMRAM] unsigned long 
  6392 ;; Registers used:
  6393 ;;		wreg, status,2, status,0
  6394 ;; Tracked objects:
  6395 ;;		On entry : 0/0
  6396 ;;		On exit  : 0/0
  6397 ;;		Unchanged: 0/0
  6398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6399 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6400 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6402 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6403 ;;Total ram usage:       12 bytes
  6404 ;; Hardware stack levels used: 1
  6405 ;; This function calls:
  6406 ;;		Nothing
  6407 ;; This function is called by:
  6408 ;;		_ADC_MyInterruptHandler
  6409 ;; This function uses a non-reentrant model
  6410 ;;
  6411                           
  6412                           	psect	text62
  6413   000C26                     __ptext62:
  6414                           	callstack 0
  6415   000C26                     ___lmul:
  6416                           	callstack 17
  6417   000C26  0E00               	movlw	0
  6418   000C28  6E09               	movwf	___lmul@product^0,c
  6419   000C2A  0E00               	movlw	0
  6420   000C2C  6E0A               	movwf	(___lmul@product+1)^0,c
  6421   000C2E  0E00               	movlw	0
  6422   000C30  6E0B               	movwf	(___lmul@product+2)^0,c
  6423   000C32  0E00               	movlw	0
  6424   000C34  6E0C               	movwf	(___lmul@product+3)^0,c
  6425   000C36                     i2l2541:
  6426   000C36  A001               	btfss	___lmul@multiplier^0,0,c
  6427   000C38  EF20  F006         	goto	i2u131_41
  6428   000C3C  EF22  F006         	goto	i2u131_40
  6429   000C40                     i2u131_41:
  6430   000C40  EF2A  F006         	goto	i2l2545
  6431   000C44                     i2u131_40:
  6432   000C44  5005               	movf	___lmul@multiplicand^0,w,c
  6433   000C46  2609               	addwf	___lmul@product^0,f,c
  6434   000C48  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  6435   000C4A  220A               	addwfc	(___lmul@product+1)^0,f,c
  6436   000C4C  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  6437   000C4E  220B               	addwfc	(___lmul@product+2)^0,f,c
  6438   000C50  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  6439   000C52  220C               	addwfc	(___lmul@product+3)^0,f,c
  6440   000C54                     i2l2545:
  6441   000C54  90D8               	bcf	status,0,c
  6442   000C56  3605               	rlcf	___lmul@multiplicand^0,f,c
  6443   000C58  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  6444   000C5A  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  6445   000C5C  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  6446   000C5E  90D8               	bcf	status,0,c
  6447   000C60  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  6448   000C62  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  6449   000C64  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  6450   000C66  3201               	rrcf	___lmul@multiplier^0,f,c
  6451   000C68  5001               	movf	___lmul@multiplier^0,w,c
  6452   000C6A  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  6453   000C6C  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  6454   000C6E  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  6455   000C70  A4D8               	btfss	status,2,c
  6456   000C72  EF3D  F006         	goto	i2u132_41
  6457   000C76  EF3F  F006         	goto	i2u132_40
  6458   000C7A                     i2u132_41:
  6459   000C7A  EF1B  F006         	goto	i2l2541
  6460   000C7E                     i2u132_40:
  6461   000C7E  C009  F001         	movff	___lmul@product,?___lmul
  6462   000C82  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  6463   000C86  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  6464   000C8A  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  6465   000C8E  0012               	return		;funcret
  6466   000C90                     __end_of___lmul:
  6467                           	callstack 0
  6468                           
  6469 ;; *************** function ___aldiv *****************
  6470 ;; Defined at:
  6471 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\aldiv.c"
  6472 ;; Parameters:    Size  Location     Type
  6473 ;;  dividend        4   12[COMRAM] long 
  6474 ;;  divisor         4   16[COMRAM] long 
  6475 ;; Auto vars:     Size  Location     Type
  6476 ;;  quotient        4   22[COMRAM] long 
  6477 ;;  sign            1   21[COMRAM] unsigned char 
  6478 ;;  counter         1   20[COMRAM] unsigned char 
  6479 ;; Return value:  Size  Location     Type
  6480 ;;                  4   12[COMRAM] long 
  6481 ;; Registers used:
  6482 ;;		wreg, status,2, status,0
  6483 ;; Tracked objects:
  6484 ;;		On entry : 0/0
  6485 ;;		On exit  : 0/0
  6486 ;;		Unchanged: 0/0
  6487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6488 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6489 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6491 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6492 ;;Total ram usage:       14 bytes
  6493 ;; Hardware stack levels used: 1
  6494 ;; This function calls:
  6495 ;;		Nothing
  6496 ;; This function is called by:
  6497 ;;		_ADC_MyInterruptHandler
  6498 ;; This function uses a non-reentrant model
  6499 ;;
  6500                           
  6501                           	psect	text63
  6502   000604                     __ptext63:
  6503                           	callstack 0
  6504   000604                     ___aldiv:
  6505                           	callstack 17
  6506   000604  0E00               	movlw	0
  6507   000606  6E16               	movwf	___aldiv@sign^0,c
  6508   000608  BE14               	btfsc	(___aldiv@divisor+3)^0,7,c
  6509   00060A  EF0B  F003         	goto	i2u133_40
  6510   00060E  EF09  F003         	goto	i2u133_41
  6511   000612                     i2u133_41:
  6512   000612  EF15  F003         	goto	i2l2557
  6513   000616                     i2u133_40:
  6514   000616  1E14               	comf	(___aldiv@divisor+3)^0,f,c
  6515   000618  1E13               	comf	(___aldiv@divisor+2)^0,f,c
  6516   00061A  1E12               	comf	(___aldiv@divisor+1)^0,f,c
  6517   00061C  6C11               	negf	___aldiv@divisor^0,c
  6518   00061E  0E00               	movlw	0
  6519   000620  2212               	addwfc	(___aldiv@divisor+1)^0,f,c
  6520   000622  2213               	addwfc	(___aldiv@divisor+2)^0,f,c
  6521   000624  2214               	addwfc	(___aldiv@divisor+3)^0,f,c
  6522   000626  0E01               	movlw	1
  6523   000628  6E16               	movwf	___aldiv@sign^0,c
  6524   00062A                     i2l2557:
  6525   00062A  BE10               	btfsc	(___aldiv@dividend+3)^0,7,c
  6526   00062C  EF1C  F003         	goto	i2u134_40
  6527   000630  EF1A  F003         	goto	i2u134_41
  6528   000634                     i2u134_41:
  6529   000634  EF26  F003         	goto	i2l2563
  6530   000638                     i2u134_40:
  6531   000638  1E10               	comf	(___aldiv@dividend+3)^0,f,c
  6532   00063A  1E0F               	comf	(___aldiv@dividend+2)^0,f,c
  6533   00063C  1E0E               	comf	(___aldiv@dividend+1)^0,f,c
  6534   00063E  6C0D               	negf	___aldiv@dividend^0,c
  6535   000640  0E00               	movlw	0
  6536   000642  220E               	addwfc	(___aldiv@dividend+1)^0,f,c
  6537   000644  220F               	addwfc	(___aldiv@dividend+2)^0,f,c
  6538   000646  2210               	addwfc	(___aldiv@dividend+3)^0,f,c
  6539   000648  0E01               	movlw	1
  6540   00064A  1A16               	xorwf	___aldiv@sign^0,f,c
  6541   00064C                     i2l2563:
  6542   00064C  0E00               	movlw	0
  6543   00064E  6E17               	movwf	___aldiv@quotient^0,c
  6544   000650  0E00               	movlw	0
  6545   000652  6E18               	movwf	(___aldiv@quotient+1)^0,c
  6546   000654  0E00               	movlw	0
  6547   000656  6E19               	movwf	(___aldiv@quotient+2)^0,c
  6548   000658  0E00               	movlw	0
  6549   00065A  6E1A               	movwf	(___aldiv@quotient+3)^0,c
  6550   00065C  5011               	movf	___aldiv@divisor^0,w,c
  6551   00065E  1012               	iorwf	(___aldiv@divisor+1)^0,w,c
  6552   000660  1013               	iorwf	(___aldiv@divisor+2)^0,w,c
  6553   000662  1014               	iorwf	(___aldiv@divisor+3)^0,w,c
  6554   000664  B4D8               	btfsc	status,2,c
  6555   000666  EF37  F003         	goto	i2u135_41
  6556   00066A  EF39  F003         	goto	i2u135_40
  6557   00066E                     i2u135_41:
  6558   00066E  EF6F  F003         	goto	i2l2585
  6559   000672                     i2u135_40:
  6560   000672  0E01               	movlw	1
  6561   000674  6E15               	movwf	___aldiv@counter^0,c
  6562   000676  EF43  F003         	goto	i2l2571
  6563   00067A                     i2l2569:
  6564   00067A  90D8               	bcf	status,0,c
  6565   00067C  3611               	rlcf	___aldiv@divisor^0,f,c
  6566   00067E  3612               	rlcf	(___aldiv@divisor+1)^0,f,c
  6567   000680  3613               	rlcf	(___aldiv@divisor+2)^0,f,c
  6568   000682  3614               	rlcf	(___aldiv@divisor+3)^0,f,c
  6569   000684  2A15               	incf	___aldiv@counter^0,f,c
  6570   000686                     i2l2571:
  6571   000686  AE14               	btfss	(___aldiv@divisor+3)^0,7,c
  6572   000688  EF48  F003         	goto	i2u136_41
  6573   00068C  EF4A  F003         	goto	i2u136_40
  6574   000690                     i2u136_41:
  6575   000690  EF3D  F003         	goto	i2l2569
  6576   000694                     i2u136_40:
  6577   000694                     i2l2573:
  6578   000694  90D8               	bcf	status,0,c
  6579   000696  3617               	rlcf	___aldiv@quotient^0,f,c
  6580   000698  3618               	rlcf	(___aldiv@quotient+1)^0,f,c
  6581   00069A  3619               	rlcf	(___aldiv@quotient+2)^0,f,c
  6582   00069C  361A               	rlcf	(___aldiv@quotient+3)^0,f,c
  6583   00069E  5011               	movf	___aldiv@divisor^0,w,c
  6584   0006A0  5C0D               	subwf	___aldiv@dividend^0,w,c
  6585   0006A2  5012               	movf	(___aldiv@divisor+1)^0,w,c
  6586   0006A4  580E               	subwfb	(___aldiv@dividend+1)^0,w,c
  6587   0006A6  5013               	movf	(___aldiv@divisor+2)^0,w,c
  6588   0006A8  580F               	subwfb	(___aldiv@dividend+2)^0,w,c
  6589   0006AA  5014               	movf	(___aldiv@divisor+3)^0,w,c
  6590   0006AC  5810               	subwfb	(___aldiv@dividend+3)^0,w,c
  6591   0006AE  A0D8               	btfss	status,0,c
  6592   0006B0  EF5C  F003         	goto	i2u137_41
  6593   0006B4  EF5E  F003         	goto	i2u137_40
  6594   0006B8                     i2u137_41:
  6595   0006B8  EF67  F003         	goto	i2l2581
  6596   0006BC                     i2u137_40:
  6597   0006BC  5011               	movf	___aldiv@divisor^0,w,c
  6598   0006BE  5E0D               	subwf	___aldiv@dividend^0,f,c
  6599   0006C0  5012               	movf	(___aldiv@divisor+1)^0,w,c
  6600   0006C2  5A0E               	subwfb	(___aldiv@dividend+1)^0,f,c
  6601   0006C4  5013               	movf	(___aldiv@divisor+2)^0,w,c
  6602   0006C6  5A0F               	subwfb	(___aldiv@dividend+2)^0,f,c
  6603   0006C8  5014               	movf	(___aldiv@divisor+3)^0,w,c
  6604   0006CA  5A10               	subwfb	(___aldiv@dividend+3)^0,f,c
  6605   0006CC  8017               	bsf	___aldiv@quotient^0,0,c
  6606   0006CE                     i2l2581:
  6607   0006CE  90D8               	bcf	status,0,c
  6608   0006D0  3214               	rrcf	(___aldiv@divisor+3)^0,f,c
  6609   0006D2  3213               	rrcf	(___aldiv@divisor+2)^0,f,c
  6610   0006D4  3212               	rrcf	(___aldiv@divisor+1)^0,f,c
  6611   0006D6  3211               	rrcf	___aldiv@divisor^0,f,c
  6612   0006D8  2E15               	decfsz	___aldiv@counter^0,f,c
  6613   0006DA  EF4A  F003         	goto	i2l2573
  6614   0006DE                     i2l2585:
  6615   0006DE  5016               	movf	___aldiv@sign^0,w,c
  6616   0006E0  B4D8               	btfsc	status,2,c
  6617   0006E2  EF75  F003         	goto	i2u138_41
  6618   0006E6  EF77  F003         	goto	i2u138_40
  6619   0006EA                     i2u138_41:
  6620   0006EA  EF7F  F003         	goto	i2l2589
  6621   0006EE                     i2u138_40:
  6622   0006EE  1E1A               	comf	(___aldiv@quotient+3)^0,f,c
  6623   0006F0  1E19               	comf	(___aldiv@quotient+2)^0,f,c
  6624   0006F2  1E18               	comf	(___aldiv@quotient+1)^0,f,c
  6625   0006F4  6C17               	negf	___aldiv@quotient^0,c
  6626   0006F6  0E00               	movlw	0
  6627   0006F8  2218               	addwfc	(___aldiv@quotient+1)^0,f,c
  6628   0006FA  2219               	addwfc	(___aldiv@quotient+2)^0,f,c
  6629   0006FC  221A               	addwfc	(___aldiv@quotient+3)^0,f,c
  6630   0006FE                     i2l2589:
  6631   0006FE  C017  F00D         	movff	___aldiv@quotient,?___aldiv
  6632   000702  C018  F00E         	movff	___aldiv@quotient+1,?___aldiv+1
  6633   000706  C019  F00F         	movff	___aldiv@quotient+2,?___aldiv+2
  6634   00070A  C01A  F010         	movff	___aldiv@quotient+3,?___aldiv+3
  6635   00070E  0012               	return		;funcret
  6636   000710                     __end_of___aldiv:
  6637                           	callstack 0
  6638                           
  6639 ;; *************** function _ADC_SelectChannel *****************
  6640 ;; Defined at:
  6641 ;;		line 88 in file "mcc_generated_files/adc.c"
  6642 ;; Parameters:    Size  Location     Type
  6643 ;;  channel         1    wreg     enum E6020
  6644 ;; Auto vars:     Size  Location     Type
  6645 ;;  channel         1    1[COMRAM] enum E6020
  6646 ;; Return value:  Size  Location     Type
  6647 ;;                  1    wreg      void 
  6648 ;; Registers used:
  6649 ;;		wreg, status,2, status,0
  6650 ;; Tracked objects:
  6651 ;;		On entry : 0/0
  6652 ;;		On exit  : 0/0
  6653 ;;		Unchanged: 0/0
  6654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6656 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6657 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6658 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6659 ;;Total ram usage:        2 bytes
  6660 ;; Hardware stack levels used: 1
  6661 ;; This function calls:
  6662 ;;		Nothing
  6663 ;; This function is called by:
  6664 ;;		_ADC_MyInterruptHandler
  6665 ;;		_TMR0_MyInterruptHandler
  6666 ;; This function uses a non-reentrant model
  6667 ;;
  6668                           
  6669                           	psect	text64
  6670   00115A                     __ptext64:
  6671                           	callstack 0
  6672   00115A                     _ADC_SelectChannel:
  6673                           	callstack 17
  6674                           
  6675                           ;incstack = 0
  6676                           ;ADC_SelectChannel@channel stored from wreg
  6677   00115A  6E02               	movwf	ADC_SelectChannel@channel^0,c
  6678   00115C                     
  6679                           ;mcc_generated_files/adc.c: 88: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 89: {;mcc_generated_files/adc.c: 91:     ADCON0bits.CHS = channel;
  6680   00115C  C002  F001         	movff	ADC_SelectChannel@channel,??_ADC_SelectChannel
  6681   001160  4601               	rlncf	??_ADC_SelectChannel^0,f,c
  6682   001162  4601               	rlncf	??_ADC_SelectChannel^0,f,c
  6683   001164  50C2               	movf	194,w,c	;volatile
  6684   001166  1801               	xorwf	??_ADC_SelectChannel^0,w,c
  6685   001168  0B83               	andlw	-125
  6686   00116A  1801               	xorwf	??_ADC_SelectChannel^0,w,c
  6687   00116C  6EC2               	movwf	194,c	;volatile
  6688   00116E                     
  6689                           ;mcc_generated_files/adc.c: 93:     ADCON0bits.ADON = 1;
  6690   00116E  80C2               	bsf	194,0,c	;volatile
  6691   001170  0012               	return		;funcret
  6692   001172                     __end_of_ADC_SelectChannel:
  6693                           	callstack 0
  6694                           
  6695 ;; *************** function _ADC_GetConversionResult *****************
  6696 ;; Defined at:
  6697 ;;		line 109 in file "mcc_generated_files/adc.c"
  6698 ;; Parameters:    Size  Location     Type
  6699 ;;		None
  6700 ;; Auto vars:     Size  Location     Type
  6701 ;;		None
  6702 ;; Return value:  Size  Location     Type
  6703 ;;                  2    0[COMRAM] unsigned short 
  6704 ;; Registers used:
  6705 ;;		wreg, status,2, status,0
  6706 ;; Tracked objects:
  6707 ;;		On entry : 0/0
  6708 ;;		On exit  : 0/0
  6709 ;;		Unchanged: 0/0
  6710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6711 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6713 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6714 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6715 ;;Total ram usage:        4 bytes
  6716 ;; Hardware stack levels used: 1
  6717 ;; This function calls:
  6718 ;;		Nothing
  6719 ;; This function is called by:
  6720 ;;		_ADC_MyInterruptHandler
  6721 ;; This function uses a non-reentrant model
  6722 ;;
  6723                           
  6724                           	psect	text65
  6725   00119C                     __ptext65:
  6726                           	callstack 0
  6727   00119C                     _ADC_GetConversionResult:
  6728                           	callstack 17
  6729   00119C                     
  6730                           ;mcc_generated_files/adc.c: 112:      return ((adc_result_t)((ADRESH << 8) + ADRESL));
  6731   00119C  50C4               	movf	196,w,c	;volatile
  6732   00119E  6E04               	movwf	(??_ADC_GetConversionResult+1)^0,c
  6733   0011A0  6A03               	clrf	??_ADC_GetConversionResult^0,c
  6734   0011A2  50C3               	movf	195,w,c	;volatile
  6735   0011A4  2403               	addwf	??_ADC_GetConversionResult^0,w,c
  6736   0011A6  6E01               	movwf	?_ADC_GetConversionResult^0,c
  6737   0011A8  0E00               	movlw	0
  6738   0011AA  2004               	addwfc	(??_ADC_GetConversionResult+1)^0,w,c
  6739   0011AC  6E02               	movwf	(?_ADC_GetConversionResult+1)^0,c
  6740   0011AE  0012               	return		;funcret
  6741   0011B0                     __end_of_ADC_GetConversionResult:
  6742                           	callstack 0
  6743                           
  6744                           	psect	text66
  6745   000000                     __ptext66:
  6746                           	callstack 0
  6747   000000                     
  6748                           	psect	rparam
  6749   000000                     
  6750                           	psect	temp
  6751   000041                     btemp:
  6752                           	callstack 0
  6753   000041                     	ds	1
  6754   000000                     int$flags	set	btemp
  6755   000000                     wtemp8	set	btemp+1
  6756   000000                     ttemp5	set	btemp+1
  6757   000000                     ttemp6	set	btemp+4
  6758   000000                     ttemp7	set	btemp+8
  6759                           
  6760                           	psect	idloc
  6761                           
  6762                           ;Config register IDLOC0 @ 0x200000
  6763                           ;	unspecified, using default values
  6764   200000                     	org	2097152
  6765   200000  FF                 	db	255
  6766                           
  6767                           ;Config register IDLOC1 @ 0x200001
  6768                           ;	unspecified, using default values
  6769   200001                     	org	2097153
  6770   200001  FF                 	db	255
  6771                           
  6772                           ;Config register IDLOC2 @ 0x200002
  6773                           ;	unspecified, using default values
  6774   200002                     	org	2097154
  6775   200002  FF                 	db	255
  6776                           
  6777                           ;Config register IDLOC3 @ 0x200003
  6778                           ;	unspecified, using default values
  6779   200003                     	org	2097155
  6780   200003  FF                 	db	255
  6781                           
  6782                           ;Config register IDLOC4 @ 0x200004
  6783                           ;	unspecified, using default values
  6784   200004                     	org	2097156
  6785   200004  FF                 	db	255
  6786                           
  6787                           ;Config register IDLOC5 @ 0x200005
  6788                           ;	unspecified, using default values
  6789   200005                     	org	2097157
  6790   200005  FF                 	db	255
  6791                           
  6792                           ;Config register IDLOC6 @ 0x200006
  6793                           ;	unspecified, using default values
  6794   200006                     	org	2097158
  6795   200006  FF                 	db	255
  6796                           
  6797                           ;Config register IDLOC7 @ 0x200007
  6798                           ;	unspecified, using default values
  6799   200007                     	org	2097159
  6800   200007  FF                 	db	255
  6801                           
  6802                           	psect	config
  6803                           
  6804                           ; Padding undefined space
  6805   300000                     	org	3145728
  6806   300000  FF                 	db	255
  6807                           
  6808                           ;Config register CONFIG1H @ 0x300001
  6809                           ;	Oscillator Selection bits
  6810                           ;	FOSC = ECMP, EC oscillator, CLKOUT function on OSC2 (medium power, 500 kHz-16 MHz)
  6811                           ;	4X PLL Enable
  6812                           ;	PLLCFG = OFF, Oscillator used directly
  6813                           ;	Primary clock enable bit
  6814                           ;	PRICLKEN = ON, Primary clock is always enabled
  6815                           ;	Fail-Safe Clock Monitor Enable bit
  6816                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6817                           ;	Internal/External Oscillator Switchover bit
  6818                           ;	IESO = OFF, Oscillator Switchover mode disabled
  6819   300001                     	org	3145729
  6820   300001  2A                 	db	42
  6821                           
  6822                           ;Config register CONFIG2L @ 0x300002
  6823                           ;	Power-up Timer Enable bit
  6824                           ;	PWRTEN = OFF, Power up timer disabled
  6825                           ;	Brown-out Reset Enable bits
  6826                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  6827                           ;	Brown Out Reset Voltage bits
  6828                           ;	BORV = 190, VBOR set to 1.90 V nominal
  6829   300002                     	org	3145730
  6830   300002  1F                 	db	31
  6831                           
  6832                           ;Config register CONFIG2H @ 0x300003
  6833                           ;	Watchdog Timer Enable bits
  6834                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  6835                           ;	Watchdog Timer Postscale Select bits
  6836                           ;	WDTPS = 32768, 1:32768
  6837   300003                     	org	3145731
  6838   300003  3C                 	db	60
  6839                           
  6840                           ; Padding undefined space
  6841   300004                     	org	3145732
  6842   300004  FF                 	db	255
  6843                           
  6844                           ;Config register CONFIG3H @ 0x300005
  6845                           ;	CCP2 MUX bit
  6846                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  6847                           ;	PORTB A/D Enable bit
  6848                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  6849                           ;	P3A/CCP3 Mux bit
  6850                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  6851                           ;	HFINTOSC Fast Start-up
  6852                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  6853                           ;	Timer3 Clock input mux bit
  6854                           ;	T3CMX = PORTC0, T3CKI is on RC0
  6855                           ;	ECCP2 B output mux bit
  6856                           ;	P2BMX = PORTD2, P2B is on RD2
  6857                           ;	MCLR Pin Enable bit
  6858                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  6859   300005                     	org	3145733
  6860   300005  BF                 	db	191
  6861                           
  6862                           ;Config register CONFIG4L @ 0x300006
  6863                           ;	Stack Full/Underflow Reset Enable bit
  6864                           ;	STVREN = ON, Stack full/underflow will cause Reset
  6865                           ;	Single-Supply ICSP Enable bit
  6866                           ;	LVP = OFF, Single-Supply ICSP disabled
  6867                           ;	Extended Instruction Set Enable bit
  6868                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6869                           ;	Background Debug
  6870                           ;	DEBUG = OFF, Disabled
  6871   300006                     	org	3145734
  6872   300006  81                 	db	129
  6873                           
  6874                           ; Padding undefined space
  6875   300007                     	org	3145735
  6876   300007  FF                 	db	255
  6877                           
  6878                           ;Config register CONFIG5L @ 0x300008
  6879                           ;	Code Protection Block 0
  6880                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  6881                           ;	Code Protection Block 1
  6882                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  6883                           ;	Code Protection Block 2
  6884                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  6885                           ;	Code Protection Block 3
  6886                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  6887   300008                     	org	3145736
  6888   300008  0F                 	db	15
  6889                           
  6890                           ;Config register CONFIG5H @ 0x300009
  6891                           ;	Boot Block Code Protection bit
  6892                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  6893                           ;	Data EEPROM Code Protection bit
  6894                           ;	CPD = OFF, Data EEPROM not code-protected
  6895   300009                     	org	3145737
  6896   300009  C0                 	db	192
  6897                           
  6898                           ;Config register CONFIG6L @ 0x30000A
  6899                           ;	Write Protection Block 0
  6900                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  6901                           ;	Write Protection Block 1
  6902                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  6903                           ;	Write Protection Block 2
  6904                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  6905                           ;	Write Protection Block 3
  6906                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  6907   30000A                     	org	3145738
  6908   30000A  0F                 	db	15
  6909                           
  6910                           ;Config register CONFIG6H @ 0x30000B
  6911                           ;	Configuration Register Write Protection bit
  6912                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  6913                           ;	Boot Block Write Protection bit
  6914                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  6915                           ;	Data EEPROM Write Protection bit
  6916                           ;	WRTD = OFF, Data EEPROM not write-protected
  6917   30000B                     	org	3145739
  6918   30000B  E0                 	db	224
  6919                           
  6920                           ;Config register CONFIG7L @ 0x30000C
  6921                           ;	Table Read Protection Block 0
  6922                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  6923                           ;	Table Read Protection Block 1
  6924                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  6925                           ;	Table Read Protection Block 2
  6926                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  6927                           ;	Table Read Protection Block 3
  6928                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  6929   30000C                     	org	3145740
  6930   30000C  0F                 	db	15
  6931                           
  6932                           ;Config register CONFIG7H @ 0x30000D
  6933                           ;	Boot Block Table Read Protection bit
  6934                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  6935   30000D                     	org	3145741
  6936   30000D  40                 	db	64
  6937                           tosu	equ	0xFFF
  6938                           tosh	equ	0xFFE
  6939                           tosl	equ	0xFFD
  6940                           stkptr	equ	0xFFC
  6941                           pclatu	equ	0xFFB
  6942                           pclath	equ	0xFFA
  6943                           pcl	equ	0xFF9
  6944                           tblptru	equ	0xFF8
  6945                           tblptrh	equ	0xFF7
  6946                           tblptrl	equ	0xFF6
  6947                           tablat	equ	0xFF5
  6948                           prodh	equ	0xFF4
  6949                           prodl	equ	0xFF3
  6950                           indf0	equ	0xFEF
  6951                           postinc0	equ	0xFEE
  6952                           postdec0	equ	0xFED
  6953                           preinc0	equ	0xFEC
  6954                           plusw0	equ	0xFEB
  6955                           fsr0h	equ	0xFEA
  6956                           fsr0l	equ	0xFE9
  6957                           wreg	equ	0xFE8
  6958                           indf1	equ	0xFE7
  6959                           postinc1	equ	0xFE6
  6960                           postdec1	equ	0xFE5
  6961                           preinc1	equ	0xFE4
  6962                           plusw1	equ	0xFE3
  6963                           fsr1h	equ	0xFE2
  6964                           fsr1l	equ	0xFE1
  6965                           bsr	equ	0xFE0
  6966                           indf2	equ	0xFDF
  6967                           postinc2	equ	0xFDE
  6968                           postdec2	equ	0xFDD
  6969                           preinc2	equ	0xFDC
  6970                           plusw2	equ	0xFDB
  6971                           fsr2h	equ	0xFDA
  6972                           fsr2l	equ	0xFD9
  6973                           status	equ	0xFD8

Data Sizes:
    Strings     450
    Constant    4
    Data        4
    BSS         86
    Persistent  18
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     33      64
    BANK0           160     69     146
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2004$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S2004$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 48
		 -> STR_25(CODE[40]), STR_24(CODE[17]), STR_23(CODE[10]), STR_22(CODE[31]), 
		 -> STR_21(CODE[10]), STR_20(CODE[31]), STR_19(CODE[10]), STR_18(CODE[31]), 
		 -> STR_17(CODE[11]), STR_16(CODE[35]), STR_15(CODE[10]), STR_14(CODE[31]), 
		 -> STR_13(CODE[36]), STR_12(CODE[10]), STR_11(CODE[31]), STR_10(CODE[26]), 
		 -> STR_9(CODE[10]), STR_8(CODE[31]), STR_7(CODE[41]), STR_6(CODE[39]), 
		 -> STR_5(CODE[48]), STR_4(CODE[39]), STR_3(CODE[29]), STR_2(CODE[17]), 
		 -> STR_1(CODE[31]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 48
		 -> STR_25(CODE[40]), STR_24(CODE[17]), STR_23(CODE[10]), STR_22(CODE[31]), 
		 -> STR_21(CODE[10]), STR_20(CODE[31]), STR_19(CODE[10]), STR_18(CODE[31]), 
		 -> STR_17(CODE[11]), STR_16(CODE[35]), STR_15(CODE[10]), STR_14(CODE[31]), 
		 -> STR_13(CODE[36]), STR_12(CODE[10]), STR_11(CODE[31]), STR_10(CODE[26]), 
		 -> STR_9(CODE[10]), STR_8(CODE[31]), STR_7(CODE[41]), STR_6(CODE[39]), 
		 -> STR_5(CODE[48]), STR_4(CODE[39]), STR_3(CODE[29]), STR_2(CODE[17]), 
		 -> STR_1(CODE[31]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 48
		 -> STR_25(CODE[40]), STR_24(CODE[17]), STR_23(CODE[10]), STR_22(CODE[31]), 
		 -> STR_21(CODE[10]), STR_20(CODE[31]), STR_19(CODE[10]), STR_18(CODE[31]), 
		 -> STR_17(CODE[11]), STR_16(CODE[35]), STR_15(CODE[10]), STR_14(CODE[31]), 
		 -> STR_13(CODE[36]), STR_12(CODE[10]), STR_11(CODE[31]), STR_10(CODE[26]), 
		 -> STR_9(CODE[10]), STR_8(CODE[31]), STR_7(CODE[41]), STR_6(CODE[39]), 
		 -> STR_5(CODE[48]), STR_4(CODE[39]), STR_3(CODE[29]), STR_2(CODE[17]), 
		 -> STR_1(CODE[31]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2044$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 48
		 -> STR_25(CODE[40]), STR_24(CODE[17]), STR_23(CODE[10]), STR_22(CODE[31]), 
		 -> STR_21(CODE[10]), STR_20(CODE[31]), STR_19(CODE[10]), STR_18(CODE[31]), 
		 -> STR_17(CODE[11]), STR_16(CODE[35]), STR_15(CODE[10]), STR_14(CODE[31]), 
		 -> STR_13(CODE[36]), STR_12(CODE[10]), STR_11(CODE[31]), STR_10(CODE[26]), 
		 -> STR_9(CODE[10]), STR_8(CODE[31]), STR_7(CODE[41]), STR_6(CODE[39]), 
		 -> STR_5(CODE[48]), STR_4(CODE[39]), STR_3(CODE[29]), STR_2(CODE[17]), 
		 -> STR_1(CODE[31]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_MyInterruptHandler(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_MyInterruptHandler(), TMR1_DefaultInterruptHandler(), NULL(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_MyInterruptHandler(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_MyInterruptHandler(), TMR0_DefaultInterruptHandler(), NULL(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), NULL(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), NULL(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), NULL(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), NULL(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), NULL(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_MyInterruptHandler(), INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_MyInterruptHandler(), INT0_DefaultInterruptHandler(), NULL(), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_MyInterruptHandler(), ADC_DefaultInterruptHandler(), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_MyInterruptHandler(), NULL(), ADC_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_CheckUSART
    _dtoa->_pad
    _fputc->_putch
    _putch->_EUSART1_Write
    _abs->___awmod
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ADC_Initialize->_ADC_SetInterruptHandler
    _CheckUSART->_EUSART1_Read
    _CheckUSART->_EUSART1_Write

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _TMR1_ISR->_TMR1_WriteTimer
    _TMR0_MyInterruptHandler->_ADC_SelectChannel
    _ADC_MyInterruptHandler->___aldiv
    ___aldiv->___lmul

Critical Paths under _main in BANK0

    _main->_ShowMenuInTerminal
    _ShowMenuInTerminal->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   20842
            _ADC_SetInterruptHandler
                         _CheckUSART
           _INT0_SetInterruptHandler
                  _SYSTEM_Initialize
                 _ShowMenuInTerminal
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
                     _TMR1_StopTimer
                             _printf
 ---------------------------------------------------------------------------------
 (1) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ShowMenuInTerminal                                   2     2      0    9468
                                             67 BANK0      2     2      0
                      _EUSART1_Write
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    9406
                                             61 BANK0      6     2      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7075
                                             53 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           19    13      6    6614
                                             39 BANK0     14     8      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                13     9      4    4954
                                             26 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2719
                                             32 COMRAM     1     1      0
                                             16 BANK0     10     4      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1270
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     950
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      93
                                             31 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                              4 BANK0      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                             30 COMRAM     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1186
                     _ADC_Initialize
                    _CCP5_Initialize
                 _EUSART1_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                             30 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                             30 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     174
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2     174
                                             30 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                             30 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                             30 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             30 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             30 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             30 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0     174
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADC_SetInterruptHandler                              2     0      2     174
                                             30 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _CheckUSART                                           2     2      0      86
                                             31 COMRAM     2     2      0
                       _EUSART1_Read
                      _EUSART1_Write
                _EUSART1_is_rx_ready
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      62
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      24
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManagerHigh                      4     4      0    1106
                                             26 COMRAM     4     4      0
                                NULL *
                            _ADC_ISR
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _INT0_ISR
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR1_ISR                                            0     0      0     240
                                NULL *
       _TMR1_DefaultInterruptHandler *
            _TMR1_MyInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) _TMR1_MyInterruptHandler                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            0     0      0      22
                                NULL *
       _TMR0_DefaultInterruptHandler *
            _TMR0_MyInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _TMR0_MyInterruptHandler                             0     0      0      22
                  _ADC_SelectChannel
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (14) _ADC_StartConversion                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT0_CallBack                                       0     0      0       0
                                NULL *
       _INT0_DefaultInterruptHandler *
            _INT0_MyInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT0_MyInterruptHandler                             0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Receive_ISR                                 0     0      0       0
                                NULL *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ADC_ISR                                             0     0      0     844
                                NULL *
        _ADC_DefaultInterruptHandler *
             _ADC_MyInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _ADC_MyInterruptHandler                              0     0      0     844
            _ADC_GetConversionResult
                  _ADC_SelectChannel
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (14) ___lmul                                             12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (14) ___aldiv                                            14     6      8     452
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (14) _ADC_SelectChannel                                   2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (14) _ADC_GetConversionResult                             4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (13) _ADC_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (13) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_SetInterruptHandler
   _CheckUSART
     _EUSART1_Read
     _EUSART1_Write
     _EUSART1_is_rx_ready
   _INT0_SetInterruptHandler
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _CCP5_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   _ShowMenuInTerminal
     _EUSART1_Write
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
           _fputc
   _TMR0_SetInterruptHandler
   _TMR0_StartTimer
   _TMR1_SetInterruptHandler
   _TMR1_StartTimer
   _TMR1_StopTimer
   _printf

 _INTERRUPT_InterruptManagerHigh (ROOT)
   NULL(Fake) *
   _ADC_ISR *
     NULL(Fake) *
     _ADC_DefaultInterruptHandler *
     _ADC_MyInterruptHandler *
       _ADC_GetConversionResult
       _ADC_SelectChannel
       ___aldiv
         ___lmul (ARG)
       ___lmul
   _EUSART1_Receive_ISR *
     NULL(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _INT0_ISR *
     _INT0_CallBack
       NULL(Fake) *
       _INT0_DefaultInterruptHandler *
       _INT0_MyInterruptHandler *
   _TMR0_ISR *
     NULL(Fake) *
     _TMR0_DefaultInterruptHandler *
     _TMR0_MyInterruptHandler *
       _ADC_SelectChannel
       _ADC_StartConversion
   _TMR1_ISR *
     NULL(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_MyInterruptHandler *
     _TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      51        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     45      92       5       91.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     21      40       1       68.1%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRhllllh     27      0       0      47        0.0%
BITBIGSFRhhlhhh     19      0       0      37        0.0%
BITBIGSFRlh         17      0       0      49        0.0%
BITBIGSFRhhh         D      0       0      36        0.0%
BITBIGSFRhlhhll      B      0       0      43        0.0%
BITBIGSFRhlllll      A      0       0      48        0.0%
BITBIGSFRhlhhll      7      0       0      42        0.0%
BITBIGSFRhlhhlh      7      0       0      41        0.0%
BITBIGSFRhlhllh      4      0       0      45        0.0%
BITBIGSFRhllhl       4      0       0      46        0.0%
BITBIGSFRhhlll       2      0       0      40        0.0%
BITBIGSFRhlhlh       1      0       0      44        0.0%
BITBIGSFRhhlhhl      1      0       0      38        0.0%
BITBIGSFRhhlhl       1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D2      50        0.0%
DATA                 0      0      D2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Jan 05 09:34:25 2024

                      _eusart1TxBufferRemaining 0034                                               l9 11D0  
                                             _s 00BD                                              l30 11C0  
                                            l94 1136                                    ___awdiv@sign 0065  
                      ?_INT0_MyInterruptHandler 0001                             ?_ShowMenuInTerminal 0001  
                               _timer0ReloadVal 002F                       fp__ADC_MyInterruptHandler 0000  
                                           l122 126A                                             l230 1186  
                                           l143 122E                                             l224 0BB8  
                                           l243 0E3A                                             l252 0D44  
                                           l149 119A                                             l326 11EC  
                                           l414 0EC6                                             l248 0D02  
                                           l249 0D18                                             l441 128A  
                                           l290 124C                                             l522 121A  
                                           l258 1210                                             l460 1224  
                                           l372 106E                                             l620 0934  
                                           l293 1260                                             l438 1158  
                                           l287 1256                                             l375 11DE  
                                           l296 1238                                             l617 092E  
                                           l299 1242                                             l492 1098  
                                           l637 033C                                             l647 0C24  
                                           l495 1286                                             l498 1282  
                                           l881 08A0                                             l894 0AC6  
                    ??_INT0_SetInterruptHandler 0021                                 _timer1ReloadVal 002A  
                                           _abs 0EC8                                             _pad 0AC8  
                               __end_of_ADC_ISR 101A                 __end_of_ADC_SetInterruptHandler 126C  
                                  ___awmod@sign 0020                                             tosl 0FFD  
                                           wreg 0FE8                                      _TXSTA1bits 0FAC  
                                 _INT0_CallBack 101A                                      _CheckUSART 0BBA  
                  ?_ADC_DefaultInterruptHandler 0001                        ?_TMR1_MyInterruptHandler 0001  
                               _CCP5_Initialize 11C2                                            ?_abs 0064  
                                          l3101 0816                                            l1405 07DA  
                                          l1413 0E82                                            l1350 0AEC  
                                          l3111 084E                                            l3103 081E  
                                          l1328 10EA                                            l3121 087A  
                                          l3113 0854                                            l3105 0830  
                                          l3201 03BC                                            l1361 038E  
                                          l1354 0B44                                            l1362 03D4  
                                          l3051 0D1A                                            l3115 086A  
                                          l3107 0838                                            l3123 0880  
                                          l3131 0A16                                            l3211 03EA  
                                          l3203 03C8                                            l1380 0602  
                                          l3053 0D2A                                            l3061 0D42  
                                          l3045 0CF2                                            l3125 0890  
                                          l3117 0872                                            l3109 0840  
                                          l3141 0A44                                            l3133 0A1A  
                                          l1373 04D4                                            l3221 0462  
                                          l3213 041E                                            l3205 03D0  
                                          l3301 01B0                                            l1390 0F00  
                                          l3055 0D2C                                            l3047 0CF2  
                                          l2511 123A                                            l3127 0898  
                                          l3119 0874                                            l3151 0A7C  
                                          l3143 0A4C                                            l3135 0A2A  
                                          l3063 120A                                            l3071 0740  
                                          l3231 04B4                                            l3223 0474  
                                          l3215 0424                                            l3207 03DC  
                                          l1359 0386                                            l3311 01EA  
                                          l3303 01BA                                            l3057 0D3C  
                                          l3049 0D10                                            l2513 1230  
                                          l3161 0AB6                                            l3153 0A92  
                                          l3145 0A5E                                            l3137 0A32  
                                          l1393 0F08                                            l3073 075E  
                                          l3065 0710                                            l3081 0E4A  
                                          l3225 048E                                            l3217 042A  
                                          l3209 03E4                                            l3241 0516  
                                          l3321 020E                                            l3305 01C0  
                                          l3401 08D4                                            l1386 0D98  
                                          l3059 0D40                                            l2611 1114  
                                          l2603 11C2                                            l2515 124E  
                                          l2531 121C                                            l3091 07F0  
                                          l3163 0ABE                                            l3155 0A9A  
                                          l3147 0A66                                            l3139 0A36  
                                          l3075 0794                                            l3067 0724  
                                          l3083 0E5C                                            l3171 0AE4  
                                          l3227 049E                                            l3219 0446  
                                          l3251 05AC                                            l3243 051A  
                                          l3235 04D6                                            l3331 0248  
                                          l3323 021A                                            l3315 01F4  
                                          l3307 01CE                                            l3411 090E  
                                          l3403 08E4                                            l2613 1128  
                                          l2517 1244                                            l2509 1226  
                                          l2621 1188                                            l2605 11B0  
                                          l2533 1212                                            l2701 1094  
                                          l3093 07F8                                            l3157 0AA0  
                                          l3149 0A6E                                            l3181 0EC8  
                                          l3069 0736                                            l3085 0E62  
                                          l3173 0AF8                                            l3229 04A4  
                                          l3245 052A                                            l3237 04FC  
                                          l3341 0284                                            l3333 025E  
                                          l3317 01FA                                            l3309 01DC  
                                          l3421 0936                                            l3413 0910  
                                          l3405 08F2                                            l2615 112A  
                                          l2519 1258                                            l2631 0B54  
                                          l2623 118C                                            l2607 11BC  
                                          l2711 1154                                            l2703 1138  
                                          l3095 07FC                                            l3087 07DC  
                                          l3159 0AA6                                            l3183 0EE4  
                                          l3079 0E3C                                            l3175 0B0C  
                                          l3167 0AC8                                            l3191 036C  
                                          l3255 05C4                                            l3247 0548  
                                          l3239 050A                                            l3271 0D8E  
                                          l3351 02B8                                            l3343 0292  
                                          l3335 026C                                            l3327 022C  
                                          l3319 0208                                            l3423 0946  
                                          l3415 0916                                            l3407 08F8  
                                          l2641 0B72                                            l2633 0B62  
                                          l2625 1198                                            l2609 11BE  
                                          l2705 1144                                            l2801 104A  
                                          l3097 080A                                            l3089 07E2  
                                          l3177 0B12                                            l3169 0AD8  
                                          l3193 037A                                            l3185 033E  
                                          l3249 0566                                            l3265 0D46  
                                          l3329 0232                                            l3281 0136  
                                          l3425 094A                                            l3417 091A  
                                          l3409 090A                                            l2651 1172  
                                          l3371 0BBA                                            l2643 0B76  
                                          l2635 0B66                                            l2627 0B46  
                                          l2707 1146                                            l2811 105E  
                                          l2803 104E                                            l3099 0812  
                                          l3179 0B30                                            l3195 0396  
                                          l3187 0354                                            l3259 05D6  
                                          l3267 0D52                                            l3275 10C4  
                                          l3355 02CA                                            l3347 02A4  
                                          l3339 027E                                            l3291 016A  
                                          l3283 013A                                            l3427 0950  
                                          l3419 091C                                            l2661 0E1C  
                                          l3373 0BCE                                            l2645 0B82  
                                          l2637 0B6A                                            l2629 0B48  
                                          l2709 1148                                            l2813 1062  
                                          l2805 1052                                            l3197 03A6  
                                          l3189 0364                                            l3269 0D70  
                                          l3277 10CE                                            l3357 02D0  
                                          l3349 02AA                                            l3293 0178  
                                          l3285 0140                                            l3365 02F0  
                                          l2821 1284                                            l2671 0E36  
                                          l2663 0E1E                                            l2655 0DEC  
                                          l3471 0C0E                                            l3375 0BDE  
                                          l3383 0BFA                                            l2647 0B8E  
                                          l2639 0B6E                                            l2815 1066  
                                          l2807 1056                                            l3199 03AC  
                                          l3359 02DE                                            l3295 0186  
                                          l3287 014E                                            l2823 1280  
                                          l3391 08A2                                            l2673 0E38  
                                          l2665 0E2E                                            l2657 0DEC  
                                          l3377 0BE4                                            l2497 1262  
                                          l2649 0BB6                                            l2681 11E0  
                                          l2817 106A                                            l2809 105A  
                                          l3297 0194                                            l3289 015C  
                                          l3393 08A6                                            l2667 0E32  
                                          l2659 0DFC                                            l3379 0BEC  
                                          l2683 0E84                                            l2691 1070  
                                          l3299 01A2                                            l2819 1288  
                                          l3395 08A8                                            l2669 0E34  
                                          l2685 0EA8                                            l2693 107C  
                                          l3469 0306                                            l3397 08AA  
                                          ?_pad 0070                                            l2687 0EC4  
                                          l2695 1084                                            l3399 08D0  
                                          l2689 11D2                                            l2697 1086  
                                          l2699 1088                                            l2799 1046  
                                          STR_1 FF53                                            STR_2 FFC8  
                                          STR_3 FF91                                            STR_4 FEE5  
                                          STR_5 FE3D                                            STR_6 FEBE  
                                          STR_7 FE6D                                            STR_8 FF72  
                                          STR_9 FFF5                                            u2000 0AB6  
                                          u2001 0AB2                                            u2010 0AD8  
                                          u2011 0AD4                                            u2020 0B30  
                                          u2100 0462                                            u2021 0B2C  
                                          u2101 045E                                            u2030 0EE4  
                                          u2110 0474                                            u2031 0EE0  
                                          u2111 0470                                            u2120 048E  
                                          u2040 0350                                            u2200 092E  
                                          u2121 048A                                            u2041 034A  
                                          u2201 092A                                            u2130 049E  
                                          u2050 0352                                            u2210 0946  
                                          u2131 049A                                            u2211 0942  
                                          u1420 1184                                            u2060 0364  
                                          u2140 04FC                                            u1421 117E  
                                          u2061 0360                                            u2141 04F8  
                                          _LATA 0F89                                            u1430 1186  
                                          u2070 037A                                            u2150 0548  
                                          _LATB 0F8A                                            u2071 0376  
                                          u2151 0544                                            _LATC 0F8B  
                                          u1440 0DFC                                            u2080 03A6  
                                          u2160 0566                                            _LATD 0F8C  
                                          u1441 0DF8                                            u2081 03A2  
                                          u2161 0562                                            _LATE 0F8D  
                                          u1450 0E2E                                            u2090 03BC  
                                          u2170 0D8E                                            u1451 0E2A  
                                          u2091 03B8                                            u2171 0D8A  
                                          u2180 0BCE                                            u2181 0BCA  
                                          u2190 090A                                            u2191 0906  
                                          u1810 0D02                                            u1811 0CFE  
                                          u1820 0D10                                            u1900 080A  
                                          u1821 0D0C                                            u1901 0806  
                                          u1830 0D3C                                            u1910 0830  
                                          u1831 0D38                                            u1911 082C  
                                          u1920 084E                                            u1840 0724  
                                          u1921 084A                                            u1841 0720  
                                          u1930 086A                                            u1850 0736  
                                          u1931 0866                                            u1851 0732  
                                          u1940 0890                                            u1860 075E  
                                          u1941 088C                                            u1861 075A  
                                          u1950 0A2A                                            u1870 0794  
                                          u1951 0A26                                            u1871 0790  
                                          u1960 0A44                                            u1880 0E82  
                                          u1961 0A40                                            u1881 0E7E  
                                          u1890 07F0                                            u1970 0A5E  
                                          u1891 07EC                                            u1971 0A5A  
                                          u1980 0A7C                                            u1981 0A78  
                                          u1990 0A92                                            u1991 0A8E  
                                          i2l97 1170                                            _TMR1 0FCE  
                                          _WPUB 0F61                            ??_ShowMenuInTerminal 00A3  
                                 _EUSART1_Write 0CF0                                            abs@a 0064  
                                          _dbuf 00C6                                            _main 08A2  
                                          _dtoa 033E                                            _menu 00F1  
                                 ?_EUSART1_Read 0001                                            _prec 0024  
                               _TMR0_StartTimer 1288                                            pad@i 0076  
                                          pad@p 0074                                            fsr1h 0FE2  
                                          fsr2h 0FDA                                            indf2 0FDF  
                                          fsr1l 0FE1                                            pad@w 0078  
                                          fsr2l 0FD9                                            btemp 0041  
                                          start 0132                      ??_TMR1_SetInterruptHandler 0021  
                fp__EUSART1_DefaultErrorHandler 0000                                    ___param_bank 0000  
                       ?_ADC_MyInterruptHandler 0001                                           ??_abs 0066  
                                         ??_pad 0021                         __end_of_TMR0_Initialize 115A  
                              __end_of_INT0_ISR 1274                  ??_TMR0_DefaultInterruptHandler 0001  
                 __end_of_OSCILLATOR_Initialize 11E0                           _eusart1RxStatusBuffer 00A5  
                               __end_of___aldiv 0710                                           ?_main 0001  
                                         ?_dtoa 007A                                 __end_of___awdiv 08A2  
                                         STR_10 FFAE                                           STR_11 FF72  
                                         STR_12 FFF5                                           STR_20 FF72  
                                         STR_21 FFF5                                           STR_13 FF0C  
                                         STR_22 FF72                                           STR_14 FF72  
                                         STR_23 FFF5                                           STR_15 FFF5  
                                         STR_24 FFD9                                           STR_16 FF30  
                                         STR_17 FFEA                                           STR_25 FE96  
                                         STR_18 FF72                                           STR_19 FFF5  
                               __end_of___awmod 0AC8                                 _TMR1_StartTimer 1284  
                                         _T0CON 0FD5                                 ___awdiv@divisor 0062  
                                         _T1CON 0FCD                                           i2l100 128E  
                                         i2l106 11AE                                           i2l140 1044  
                                         i2l125 129C                                           i2l119 1018  
                                         i2l136 1272                                           i2l146 1298  
                                         i2l331 003E                                           i2l261 0F46  
                                         i2l333 0062                                           i2l271 0A14  
                                         i2l335 0086                                           i2l343 011E  
                                         i2l264 0F48                                           i2l281 1278  
                                         i2l337 00C0                                           i2l506 1112  
                                         i2l338 011E                                           i2l275 10C2  
                                         i2l339 00FA                                           i2l284 127E  
                                         i2l525 1294                                           i2l278 129A  
                                         i2l463 1296                                           i2l519 0F82  
                                         i2l457 0FEA                                           i2l661 0C7E  
                                         i2l662 0C8E                                           i2l582 1206  
                                         i2l576 11FA                                           i2l729 070E  
                                         i2l579 0CEE                                           i2l588 0FB8  
                               ___awdiv@counter 0064                                    vfpfcnvrt@fmt 0089  
                                         _TMR0H 0FD7                                           _TMR1H 0FCF  
                                         _TMR0L 0FD6                                           _TMR1L 0FCE  
                                         _TRISA 0F92                                           _TRISB 0F93  
                                ?_INT0_CallBack 0001                                           _TRISC 0F94  
                                         _TRISD 0F95                                           _TRISE 0F96  
                           ___lmul@multiplicand 0005                       ?_TMR0_SetInterruptHandler 001F  
                          _EUSART1_Transmit_ISR 0F0A                                __end_of_TMR0_ISR 0FEC  
                              __end_of_TMR1_ISR 0F84                                           _flags 00C3  
                                         _fputc 0710                                           _fputs 0E3C  
                                         pad@fp 0070                                           _width 0022  
                                         _putch 1208                                           dtoa@d 007C  
                                         dtoa@i 0085                                           dtoa@p 0080  
                                         dtoa@s 0084                                           dtoa@w 0082  
                                ?_EUSART1_Write 0001                         __end_of_TMR1_Initialize 109A  
                                         pclath 0FFA                                           pclatu 0FFB  
                                         tablat 0FF5                                  ??_EUSART1_Read 001F  
                                         ttemp5 0042                                           ttemp6 0045  
                                         ttemp7 0049                                           status 0FD8  
                                         wtemp8 0042           fp__EUSART1_DefaultFramingErrorHandler 0000  
    __end_of_EUSART1_DefaultFramingErrorHandler 129C            ??_EUSART1_DefaultFramingErrorHandler 0001  
           ?_EUSART1_DefaultFramingErrorHandler 0001              _EUSART1_DefaultFramingErrorHandler 129A  
                               _TMR1_WriteTimer 10EC                  __end_of_ADC_MyInterruptHandler 0CF0  
                               __initialization 0D9A                 __end_of_INT0_MyInterruptHandler 11FC  
                    __end_of_EUSART1_Initialize 0BBA                                    __end_of_main 095C  
                                  __end_of_dtoa 04D6                                     _BombaLigada 00C4  
                                     ??_ADC_ISR 001B                                          ??_main 0022  
                                        ??_dtoa 0022                         __end_of_CCP5_Initialize 11D2  
               __end_of_TMR1_MyInterruptHandler 0FBA                                   __activetblptr 0003  
                         ?_EUSART1_Transmit_ISR 0001                                  _convertedValue 0028  
                                   ?_CheckUSART 0001                         __end_of_TMR0_StartTimer 128C  
                                        _ADCON0 0FC2                                          _ADCON1 0FC1  
                                        _ADCON2 0FC0                                          ?_fputc 0060  
                                        ?_fputs 0069                                          _ADRESH 0FC4  
                                        _ADRESL 0FC3                                          _CCPR5H 0F56  
                                        _CCPR5L 0F55                                ___awdiv@dividend 0060  
                                        _ANSELA 0F38                                          ?_putch 0001  
                                        _ANSELB 0F39                                          _ANSELC 0F3A  
                                        _ANSELD 0F3B                                          _ANSELE 0F3C  
                                        _T1GCON 0FCC                         TMR1_WriteTimer@timerVal 0001  
                                        i2l2501 116E                                          i2l2503 128C  
                                        i2l2505 119C                                          i2l2521 109A  
                                        i2l2523 10AA                                          i2l2541 0C36  
                                        i2l2525 10AC                                          i2l2551 0608  
                                        i2l2543 0C44                                          i2l2527 10BC  
                                        i2l2535 11EE                                          i2l2561 0648  
                                        i2l2553 0616                                          i2l2545 0C54  
                                        i2l2529 10C0                                          i2l2537 11F8  
                                        i2l2617 101A                                          i2l2721 1104  
                                        i2l2713 10EC                                          i2l2571 0686  
                                        i2l2563 064C                                          i2l2555 0626  
                                        i2l2547 0C5E                                          i2l2539 0C26  
                                        i2l2619 102C                                          i2l2731 1202  
                                        i2l2715 10FA                                          i2l2723 110A  
                                        i2l2581 06CE                                          i2l2573 0694  
                                        i2l2565 065C                                          i2l2557 062A  
                                        i2l2549 0604                                          i2l2733 0F84  
                                        i2l2725 110E                                          i2l2717 10FC  
                                        i2l2583 06D8                                          i2l2575 069E  
                                        i2l2567 0672                                          i2l2559 0638  
                                        i2l2727 0C90                                          i2l2743 0FEC  
                                        i2l2751 126E                                          i2l2735 0F96  
                                        i2l2719 1100                                          i2l2577 06BC  
                                        i2l2569 067A                                          i2l2585 06DE  
                                        i2l2745 0FEE                                          i2l2761 0F3C  
                                        i2l2753 0F0A                                          i2l2729 11FC  
                                        i2l2499 115C                                          i2l2587 06EE  
                                        i2l2579 06CC                                          i2l2747 1000  
                                        i2l2771 0988                                          i2l2763 0F40  
                                        i2l2755 0F1A                                          i2l2589 06FE  
                                        i2l2677 1274                                          i2l2781 09F2  
                                        i2l2773 09A0                                          i2l2765 095C  
                                        i2l2757 0F2A                                          i2l2749 126C  
                                        i2l2941 0028                                          i2l2679 127A  
                                        i2l2783 0A10                                          i2l2775 09AE  
                                        i2l2767 096A                                          i2l2759 0F2C  
                                        i2l2791 0F4A                                          i2l2951 007E  
                                        i2l2943 0036                                          i2l2777 09BE  
                                        i2l2769 0978                                          i2l2785 0FBA  
                                        i2l2793 0F4C                                          i2l2961 0108  
                                        i2l2953 0094                                          i2l2945 004C  
                                        i2l2779 09D6                                          i2l2787 0FC0  
                                        i2l2795 0F58                                          i2l2963 0116  
                                        i2l2955 00A2                                          i2l2947 005A  
                                        i2l2939 001A                                          i2l2789 0FD2  
                                        i2l2797 0F6A                                          i2l2957 00CE  
                                        i2l2949 0070                                          i2l2959 00DC  
                                        _RCREG1 0FAE                                          _RCSTA1 0FAB  
                                        _OSCCON 0FD3                                          _SPBRG1 0FAF  
                                        _TXREG1 0FAD                                          _TXSTA1 0FAC  
          __end_of_TMR1_DefaultInterruptHandler 1296                    _TMR1_DefaultInterruptHandler 1294  
                                  vfprintf@cfmt 009B                                          ___lmul 0C26  
                       __end_of_TMR1_StartTimer 1288                                       ??___aldiv 0015  
                                     ??___awdiv 001F                                       ??___awmod 001F  
                      ?_EUSART1_SetErrorHandler 001F                                ?_TMR0_Initialize 0001  
                                        clear_0 0DD0                                          clear_1 0DDC  
                                        _rxData 002E                                ___awdiv@quotient 0066  
                               ___awmod@divisor 0062                                          isa$std 0001  
                               ___awmod@counter 001F                                          _printf 10C4  
                                        pad@buf 0072                ??_EUSART1_SetOverrunErrorHandler 0021  
               ?_EUSART1_SetOverrunErrorHandler 001F                                 ??_INT0_CallBack 0001  
                                        dtoa@fp 007A                                          fputc@c 0060  
                                        fputs@c 006D                                          fputs@i 006E  
                                  __pdataCOMRAM 003F                                          fputs@s 0069  
                                  __mediumconst FE38                                          tblptrh 0FF7  
                                        tblptrl 0FF6                                          tblptru 0FF8  
                              __end_of_vfprintf 0D9A                                 ??_EUSART1_Write 001F  
      TMR1_SetInterruptHandler@InterruptHandler 001F        TMR0_SetInterruptHandler@InterruptHandler 001F  
      INT0_SetInterruptHandler@InterruptHandler 001F         ADC_SetInterruptHandler@InterruptHandler 001F  
                       __end_of_TMR1_WriteTimer 1114                                 _eusart1RxBuffer 00AD  
                               _eusart1TxBuffer 00B5                                ?_TMR1_Initialize 0001  
              ??_INTERRUPT_InterruptManagerHigh 001B                 ?_INTERRUPT_InterruptManagerHigh 0001  
                             _SYSTEM_Initialize 1046                                      __accesstop 0060  
                       __end_of__initialization 0DE2                                       ?_INT0_ISR 0001  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 0001  
                 __end_of_EUSART1_RxDataHandler 10C4                                  __pcstackCOMRAM 0001  
                                  __pidataBANK0 1292                             ??_SYSTEM_Initialize 0021  
                                     ?_TMR0_ISR 0001                                       ?_TMR1_ISR 0001  
               fp__TMR1_DefaultInterruptHandler 0000                   ?_TMR1_DefaultInterruptHandler 0001  
                                 __end_of_fputc 07DC                                   __end_of_fputs 0E84  
                             ??_SPI1_Initialize 001F                                   __end_of_putch 1212  
                              _carater_recebido 00F0                            __end_of_EUSART1_Read 0E3C  
                              ?_CCP5_Initialize 0001                          ??_EUSART1_Transmit_ISR 0001  
                       _ADC_GetConversionResult 119C                              _spi1_configuration FE39  
                   __end_of_EUSART1_Receive_ISR 0A16                                ?_TMR0_StartTimer 0001  
                                       ??_fputc 0064                       __end_of_SYSTEM_Initialize 1070  
                                       ??_fputs 0021                                         ??_putch 0020  
                                 _eusart1RxHead 0033                                   _eusart1TxHead 0036  
                                 _eusart1RxTail 0032                                      __pbssBANK0 00A5  
                                 _eusart1TxTail 0035               _EUSART1_TxDefaultInterruptHandler 00EE  
               ??_EUSART1_SetRxInterruptHandler 0021                           _INT0_InterruptHandler 003B  
                                    ??_INT0_ISR 0001                                      __pnvCOMRAM 0037  
               __end_of_EUSART1_SetErrorHandler 1262                __end_of_TMR0_SetInterruptHandler 1226  
                                       ?___lmul 0001                                ?_TMR1_StartTimer 0001  
                                    ??_TMR0_ISR 0003                                      ??_TMR1_ISR 0003  
                                       _CCP5CON 0F54                                         _ADC_ISR 0FEC  
                                ___lmul@product 0009                                         ?_printf 009D  
        __end_of_EUSART1_SetFramingErrorHandler 1258                  _EUSART1_SetFramingErrorHandler 124E  
                  ?_EUSART1_DefaultErrorHandler 0001                                         _OSCCON2 0FD2  
                      ?_TMR0_MyInterruptHandler 0001                                         _OSCTUNE 0F9B  
                                       _SPBRGH1 0FB0                                         _SSP1ADD 0FC8  
                                       _SSP1BUF 0FC9                                ?_TMR1_WriteTimer 0001  
                     ?_INT0_SetInterruptHandler 001F                            _ADC_InterruptHandler 003D  
                                       __Hparam 0000                         _ADC_SetInterruptHandler 1262  
                                       __Lparam 0000                                         ___aldiv 0604  
                                       ___awdiv 07DC                                         ___awmod 0A16  
                                     ?_vfprintf 0095                             _EUSART1_is_rx_ready 1172  
                     ??_ADC_GetConversionResult 0003                                         __pcinit 0D9A  
                                       __ramtop 1000                                         __ptext0 08A2  
                                       __ptext1 1280                                         __ptext2 1284  
                                       __ptext3 1288                                         __ptext4 0136  
                                       __ptext5 10C4                                         __ptext6 0D46  
                                       __ptext7 04D6                                         __ptext8 033E  
                                       __ptext9 0AC8                                       _T0CONbits 0FD5  
                ??_TMR1_DefaultInterruptHandler 0001                                       _T1CONbits 0FCD  
                         _OSCILLATOR_Initialize 11D2                                ___awmod@dividend 0060  
                              ___aldiv@dividend 000D                              _EUSART1_Initialize 0B46  
                      ??_PIN_MANAGER_Initialize 001F                       ?_TMR1_SetInterruptHandler 001F  
                                  ??_CheckUSART 0020                   ??_EUSART1_DefaultErrorHandler 0001  
                          end_of_initialization 0DE2                            ?_EUSART1_is_rx_ready 0001  
                           ?_EUSART1_Initialize 0001                                      _nivel_agua 00C1  
                                       fputc@fp 0062                     _EUSART1_OverrunErrorHandler 00E8  
                                       fputs@fp 006B           __end_of_EUSART1_SetRxInterruptHandler 1244  
                 _EUSART1_SetRxInterruptHandler 123A                               __end_of_vfpfcnvrt 0604  
                              ___aldiv@quotient 0017                                         postdec2 0FDD  
                                       postinc0 0FEE                                         postinc1 0FE6  
                                       postinc2 0FDE                                vfpfcnvrt@convarg 008F  
                            __end_of_CheckUSART 0C26                                      ??_vfprintf 0022  
                          ??_EUSART1_Initialize 0021                        _TMR0_SetInterruptHandler 121C  
               __end_of_TMR0_MyInterruptHandler 1208             __end_of_ADC_DefaultInterruptHandler 129E  
                   _ADC_DefaultInterruptHandler 129C                                       _TRISCbits 0F94  
                           _ADC_StartConversion 128C                         fp__EUSART1_Transmit_ISR 0000  
                       _INT0_MyInterruptHandler 11EE                      fp__INT0_MyInterruptHandler 0000  
                           EUSART1_Write@txData 001F                           ??_EUSART1_is_rx_ready 001F  
                 ??_ADC_DefaultInterruptHandler 0001                       ??_ADC_SetInterruptHandler 0021  
                               _SPI1_Initialize 11B0                                    _EUSART1_Read 0DEC  
                       _TMR1_MyInterruptHandler 0F84                      fp__TMR1_MyInterruptHandler 0000  
                          ?_ADC_StartConversion 0001                    __end_of_INTERRUPT_Initialize 11EE  
          __end_of_INT0_DefaultInterruptHandler 129A                    _INT0_DefaultInterruptHandler 1298  
                                __end_of___lmul 0C90                                     vfpfcnvrt@ap 008B  
                                   vfpfcnvrt@cp 0093                                     vfpfcnvrt@fp 0087  
                                 __pidataCOMRAM 1290                                  _ADC_Initialize 1114  
                                _TMR1_StopTimer 1280                          ?_OSCILLATOR_Initialize 0001  
                                __end_of_printf 10EC                           __end_of_INT0_CallBack 1046  
                           start_initialization 0D9A                                     __end_of_abs 0F0A  
                                   __end_of_pad 0B46   EUSART1_SetRxInterruptHandler@interruptHandler 001F  
 EUSART1_SetTxInterruptHandler@interruptHandler 001F                                     putch@txData 0020  
                         __end_of_EUSART1_Write 0D46                        ??_ADC_MyInterruptHandler 001B  
                        fp__EUSART1_Receive_ISR 0000                           ??_ADC_StartConversion 0001  
                                   vfprintf@fmt 0097                                        ??___lmul 0009  
                         _EUSART1_RxDataHandler 109A                  ?_EUSART1_SetRxInterruptHandler 001F  
                        __end_of_ADC_Initialize 1138                          __end_of_TMR1_StopTimer 1284  
                                   __pdataBANK0 00F0                                        ?_ADC_ISR 0001  
                    __end_of_EXT_INT_Initialize 119C                 fp__INT0_DefaultInterruptHandler 0000  
                 ?_INT0_DefaultInterruptHandler 0001                                        ??_printf 0022  
                                _eusart1RxCount 0031                       ??_INT0_MyInterruptHandler 0001  
                                   __pbssCOMRAM 0022               _EUSART1_RxDefaultInterruptHandler 00EC  
              __end_of_INT0_SetInterruptHandler 1230                                   __pcstackBANK0 0060  
                       __end_of_SPI1_Initialize 11C2                       ??_TMR1_MyInterruptHandler 0001  
               ??_EUSART1_SetTxInterruptHandler 0021                ??_EUSART1_SetFramingErrorHandler 0021  
               ?_EUSART1_SetFramingErrorHandler 001F                           _TMR0_InterruptHandler 0039  
                                     __pnvBANK0 00E6                          _PIN_MANAGER_Initialize 0E84  
                                     _dtoa$2071 007E                                       __pintcode 0008  
                             _ADC_SelectChannel 115A                __end_of_TMR1_SetInterruptHandler 121C  
                                 __pmediumconst FE38                                        ?___aldiv 000D  
                                      ?___awdiv 0060                                        ?___awmod 0060  
                               ?_ADC_Initialize 0001                                 ?_TMR1_StopTimer 0001  
                            ?_ADC_SelectChannel 0001                                        _BAUDCON1 0FB8  
         fp__EUSART1_DefaultOverrunErrorHandler 0000      __end_of_EUSART1_DefaultOverrunErrorHandler 127A  
          ??_EUSART1_DefaultOverrunErrorHandler 0001             ?_EUSART1_DefaultOverrunErrorHandler 0001  
            _EUSART1_DefaultOverrunErrorHandler 1274                             ??_ADC_SelectChannel 0001  
                          _EUSART1_ErrorHandler 00E6                         _EUSART1_SetErrorHandler 1258  
                    __end_of_ShowMenuInTerminal 033E                            _INTERRUPT_Initialize 11E0  
                               ___aldiv@divisor 0011                               ??_TMR0_Initialize 0021  
                               ___aldiv@counter 0015                                        _INT0_ISR 126C  
       EUSART1_SetErrorHandler@interruptHandler 001F                                        _LATBbits 0F8A  
                                      _IPR1bits 0F9F                                        _PIE1bits 0F9D  
                     __end_of_ADC_SelectChannel 1172                                        i2u130_40 10BC  
                                      i2u130_41 10B8                                        i2u131_40 0C44  
                                      i2u131_41 0C40                                        i2u132_40 0C7E  
                                      i2u140_40 102C                                        i2u132_41 0C7A  
                                      i2u140_41 1028                                        i2u133_40 0616  
                                      i2u133_41 0612                                        i2u134_40 0638  
                                      i2u141_48 1032                                        i2u134_41 0634  
                                      i2u141_49 1044                                        i2u135_40 0672  
                                      i2u150_48 1006                                        i2u151_40 0F1A  
                                      i2u135_41 066E                                        i2u150_49 1018  
                                      i2u151_41 0F16                                        i2u136_40 0694  
                                      i2u152_40 0F3C                                        i2u136_41 0690  
                                      i2u152_41 0F38                                        i2u137_40 06BC  
                                      i2u153_40 0978                                        i2u160_48 0FD8  
                                      i2u161_40 0F6A                                        i2u137_41 06B8  
                                      i2u153_41 0974                                        i2u160_49 0FEA  
                                      i2u161_41 0F66                                        i2u138_40 06EE  
                                      i2u146_40 10FA                                        i2u170_40 0094  
                                      i2u138_41 06EA                                        i2u146_41 10F6  
                                      i2u170_41 0090                                        i2u155_40 09AE  
                                      i2u154_48 098E                                        i2u147_40 0F96  
                                      i2u162_48 0F70                                        i2u171_40 00A2  
                                      i2u155_41 09AA                                        i2u154_49 09A0  
                                      i2u147_41 0F92                                        i2u162_49 0F82  
                                      i2u171_41 009E                                        i2u148_40 0FA6  
                                      i2u164_40 0028                                        i2u148_41 0FA0  
                                      i2u164_41 0024                                        i2u148_46 0FA8  
                                      i2u149_40 1000                                        i2u157_40 09F2  
                                      i2u156_48 09C4                                        i2u173_40 00CE  
                                      i2u172_48 00A8                                        i2u165_40 0036  
                    ??_TMR0_SetInterruptHandler 0021                                        i2u149_41 0FFC  
                                      i2u157_41 09EE                                        i2u156_49 09D6  
                                      i2u173_41 00CA                                        i2u172_49 00BC  
                                      i2u165_41 0032                                        i2u174_40 00DC  
                                      i2u166_40 004C                                        i2u174_41 00D8  
                                      i2u166_41 0048                                        i2u158_48 09F8  
                                      i2u159_40 0FD2                                        i2u167_40 005A  
                                      i2u158_49 0A0C                                        i2u159_41 0FCE  
                                      i2u167_41 0056                                        i2u176_40 0108  
                                      i2u175_48 00E2                                        i2u168_40 0070  
                                      i2u176_41 0104                                        i2u175_49 00F6  
                                      i2u168_41 006C                                        i2u177_40 0116  
                                      i2u169_40 007E                                        i2u177_41 0112  
                                      i2u169_41 007A                                        _PIR1bits 0F9E  
                        ?_EUSART1_RxDataHandler 0001                                        _RCONbits 0FD0  
                fp__ADC_DefaultInterruptHandler 0000                                        _SSP1CON1 0FC6  
                                      _SSP1CON2 0FC5                                        _TMR0_ISR 0FBA  
                         _SistemaControloLigado 00C5                                        _TMR1_ISR 0F4A  
                                      _SSP1STAT 0FC7                                       _vfpfcnvrt 04D6  
                             ??_TMR1_Initialize 0021                                      _ADCON0bits 0FC2  
                      ADC_SelectChannel@channel 0002                  ??_INT0_DefaultInterruptHandler 0001  
                              ?_SPI1_Initialize 0001                               ___lmul@multiplier 0001  
                                   _INTCON2bits 0FF1                           ?_INTERRUPT_Initialize 0001  
                      _INT0_SetInterruptHandler 1226                           EUSART1_Read@readValue 001F  
                             ??_CCP5_Initialize 001F           __end_of_EUSART1_SetTxInterruptHandler 123A  
                 _EUSART1_SetTxInterruptHandler 1230                                        __Hrparam 0000  
                                    vfprintf@ap 0099                                        __Lrparam 0000  
                                    vfprintf@fp 0095                        ?_ADC_GetConversionResult 0001  
                       ??_OSCILLATOR_Initialize 001F                               ??_TMR0_StartTimer 001F  
                        _ADC_MyInterruptHandler 0C90                                      ?_vfpfcnvrt 0087  
                      _TMR1_SetInterruptHandler 1212                           _TMR1_InterruptHandler 0037  
                     ??_EUSART1_SetErrorHandler 0021             __end_of_EUSART1_DefaultErrorHandler 1280  
                   _EUSART1_DefaultErrorHandler 127A                     __end_of_EUSART1_is_rx_ready 1188  
                                      __ptext10 0E3C                                        __ptext11 0710  
                                      __ptext20 121C                                        __ptext12 1208  
                                      __ptext21 11B0                                        __ptext13 0EC8  
                                    _T1GCONbits 0FCC                                        __ptext30 1244  
                                      __ptext22 0E84                                        __ptext14 0A16  
                                      __ptext31 124E                                        __ptext23 11D2  
                                      __ptext15 07DC                                        __ptext32 1258  
                                      __ptext24 11E0                                        __ptext16 1046  
                                      __ptext41 0F4A                                        __ptext33 11C2  
                                      __ptext25 1188                                        __ptext17 1070  
                                      __ptext50 101A                                        __ptext42 10EC  
                                      __ptext34 1114                                        __ptext26 1226  
                                      __ptext18 1212                                        __ptext51 1298  
                                      __ptext43 1294                                        __ptext35 1262  
                                      __ptext27 0B46                                        __ptext19 1138  
                                      __ptext60 129C                                        __ptext52 11EE  
                                      __ptext44 0F84                                        __ptext36 0BBA  
                                      __ptext28 1230                                        __ptext61 0C90  
                                      __ptext53 0F0A                                        __ptext45 0FBA  
                                      __ptext37 1172                                        __ptext29 123A  
                                      __ptext62 0C26                                        __ptext54 095C  
                                      __ptext46 1296                                        __ptext38 0CF0  
                                      __ptext63 0604                                        __ptext55 1274  
                                      __ptext47 11FC                                        __ptext39 0DEC  
                                      __ptext64 115A                                        __ptext56 129A  
                                      __ptext48 128C                                        __ptext65 119C  
                                      __ptext57 127A                                        __ptext49 126C  
                                      __ptext66 0000                                        __ptext58 109A  
                                      __ptext59 0FEC                                    _SSP1CON1bits 0FC6  
                                      _cnt_char 002D                               ??_TMR1_StartTimer 001F  
                              _nivel_referencia 0026                         _TMR0_MyInterruptHandler 11FC  
                    fp__TMR0_MyInterruptHandler 0000            __end_of_TMR0_DefaultInterruptHandler 1298  
                  _TMR0_DefaultInterruptHandler 1296  EUSART1_SetOverrunErrorHandler@interruptHandler 001F  
                                      isa$xinst 0000                                        int$flags 0041  
                                      _vfprintf 0D46                                       printf@fmt 009D  
                             ??_TMR1_WriteTimer 0003                                     _intro_valor 002C  
                   _EUSART1_FramingErrorHandler 00EA                             _EUSART1_Receive_ISR 095C  
                                    _INTCONbits 0FF2                          ??_INTERRUPT_Initialize 001F  
                            _EXT_INT_Initialize 1188                        ?_ADC_SetInterruptHandler 001F  
                                      intlevel2 0000                            ?_EUSART1_Receive_ISR 0001  
                   __end_of_ADC_StartConversion 1290                         ?_PIN_MANAGER_Initialize 0001  
               __end_of_ADC_GetConversionResult 11B0                             ?_EXT_INT_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 124E                  _EUSART1_SetOverrunErrorHandler 1244  
                                    _RCSTA1bits 0FAB                    __end_of_EUSART1_Transmit_ISR 0F4A  
                              ??_ADC_Initialize 0021                                ??_TMR1_StopTimer 001F  
               fp__TMR0_DefaultInterruptHandler 0000                   ?_TMR0_DefaultInterruptHandler 0001  
                                      printf@ap 00A1  EUSART1_SetFramingErrorHandler@interruptHandler 001F  
                ?_EUSART1_SetTxInterruptHandler 001F                                     ??_vfpfcnvrt 008D  
                            _eusart1RxLastError 0030          __end_of_INTERRUPT_InterruptManagerHigh 0132  
                _INTERRUPT_InterruptManagerHigh 0008                            ??_EXT_INT_Initialize 0021  
                                   _temperatura 003F                                 _TMR0_Initialize 1138  
                                  ___aldiv@sign 0016                           ??_EUSART1_Receive_ISR 0001  
                __end_of_PIN_MANAGER_Initialize 0EC8                       ??_TMR0_MyInterruptHandler 0003  
                       ??_EUSART1_RxDataHandler 0001                                 _TMR1_Initialize 1070  
                    __end_of_spi1_configuration FE3D                              _ShowMenuInTerminal 0136  
