

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Dec 14 13:49:11 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    86                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    87                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    88                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    89   000000                     
    90                           ; Version 2.40
    91                           ; Generated 17/11/2021 GMT
    92                           ; 
    93                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    94                           ; All rights reserved.
    95                           ; 
    96                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    97                           ; 
    98                           ; Redistribution and use in source and binary forms, with or without modification, are
    99                           ; permitted provided that the following conditions are met:
   100                           ; 
   101                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   102                           ;        conditions and the following disclaimer.
   103                           ; 
   104                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   105                           ;        of conditions and the following disclaimer in the documentation and/or other
   106                           ;        materials provided with the distribution. Publication is not required when
   107                           ;        this file is used in an embedded application.
   108                           ; 
   109                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   110                           ;        software without specific prior written permission.
   111                           ; 
   112                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   113                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   114                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   115                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   116                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   117                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   118                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   119                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   120                           ; 
   121                           ; 
   122                           ; Code-generator required, PIC18F46K22 Definitions
   123                           ; 
   124                           ; SFR Addresses
   125   000000                     
   126                           	psect	idataCOMRAM
   127   00128C                     __pidataCOMRAM:
   128                           	callstack 0
   129                           
   130                           ;initializer for _temperatura
   131   00128C  0012               	dw	18
   132                           
   133                           	psect	idataBANK0
   134   00128E                     __pidataBANK0:
   135                           	callstack 0
   136                           
   137                           ;initializer for _carater_recebido
   138   00128E  01                 	db	1
   139                           
   140                           ;initializer for _menu
   141   00128F  30                 	db	48
   142                           
   143                           	psect	mediumconst
   144   00FE38                     __pmediumconst:
   145                           	callstack 0
   146   00FE38  00                 	db	0
   147   00FE39                     _spi1_configuration:
   148                           	callstack 0
   149   00FE39  00                 	db	0
   150   00FE3A  40                 	db	64
   151   00FE3B  01                 	db	1
   152   00FE3C  00                 	db	0
   153   00FE3D                     __end_of_spi1_configuration:
   154                           	callstack 0
   155   000000                     _T1CON	set	4045
   156   000000                     _TMR1L	set	4046
   157   000000                     _TMR1H	set	4047
   158   000000                     _ANSELA	set	3896
   159   000000                     _ANSELB	set	3897
   160   000000                     _ANSELC	set	3898
   161   000000                     _ANSELD	set	3899
   162   000000                     _TRISD	set	3989
   163   000000                     _TRISB	set	3987
   164   000000                     _TRISE	set	3990
   165   000000                     _LATC	set	3979
   166   000000                     _LATB	set	3978
   167   000000                     _OSCTUNE	set	3995
   168   000000                     _RCREG1	set	4014
   169   000000                     _TXREG1	set	4013
   170   000000                     _SPBRG1	set	4015
   171   000000                     _TXSTA1	set	4012
   172   000000                     _PIE1bits	set	3997
   173   000000                     _ADRESH	set	4036
   174   000000                     _ADRESL	set	4035
   175   000000                     _PIR1bits	set	3998
   176   000000                     _SSP1CON2	set	4037
   177   000000                     _CCP5CON	set	3924
   178   00FE3D                     STR_5:
   179   00FE3D  0D                 	db	13
   180   00FE3E  0A                 	db	10
   181   00FE3F  33                 	db	51	;'3'
   182   00FE40  20                 	db	32
   183   00FE41  2D                 	db	45
   184   00FE42  20                 	db	32
   185   00FE43  56                 	db	86	;'V'
   186   00FE44  69                 	db	105	;'i'
   187   00FE45  73                 	db	115	;'s'
   188   00FE46  75                 	db	117	;'u'
   189   00FE47  61                 	db	97	;'a'
   190   00FE48  6C                 	db	108	;'l'
   191   00FE49  69                 	db	105	;'i'
   192   00FE4A  7A                 	db	122	;'z'
   193   00FE4B  61                 	db	97	;'a'
   194   00FE4C  72                 	db	114	;'r'
   195   00FE4D  20                 	db	32
   196   00FE4E  61                 	db	97	;'a'
   197   00FE4F  20                 	db	32
   198   00FE50  70                 	db	112	;'p'
   199   00FE51  65                 	db	101	;'e'
   200   00FE52  72                 	db	114	;'r'
   201   00FE53  63                 	db	99	;'c'
   202   00FE54  65                 	db	101	;'e'
   203   00FE55  6E                 	db	110	;'n'
   204   00FE56  74                 	db	116	;'t'
   205   00FE57  61                 	db	97	;'a'
   206   00FE58  67                 	db	103	;'g'
   207   00FE59  65                 	db	101	;'e'
   208   00FE5A  6D                 	db	109	;'m'
   209   00FE5B  20                 	db	32
   210   00FE5C  64                 	db	100	;'d'
   211   00FE5D  6F                 	db	111	;'o'
   212   00FE5E  20                 	db	32
   213   00FE5F  6E                 	db	110	;'n'
   214   00FE60  69                 	db	105	;'i'
   215   00FE61  76                 	db	118	;'v'
   216   00FE62  65                 	db	101	;'e'
   217   00FE63  6C                 	db	108	;'l'
   218   00FE64  20                 	db	32
   219   00FE65  64                 	db	100	;'d'
   220   00FE66  65                 	db	101	;'e'
   221   00FE67  20                 	db	32
   222   00FE68  61                 	db	97	;'a'
   223   00FE69  67                 	db	103	;'g'
   224   00FE6A  75                 	db	117	;'u'
   225   00FE6B  61                 	db	97	;'a'
   226   00FE6C  00                 	db	0
   227   00FE6D                     STR_7:
   228   00FE6D  0D                 	db	13
   229   00FE6E  0A                 	db	10
   230   00FE6F  35                 	db	53	;'5'
   231   00FE70  20                 	db	32
   232   00FE71  2D                 	db	45
   233   00FE72  20                 	db	32
   234   00FE73  50                 	db	80	;'P'
   235   00FE74  72                 	db	114	;'r'
   236   00FE75  6F                 	db	111	;'o'
   237   00FE76  67                 	db	103	;'g'
   238   00FE77  72                 	db	114	;'r'
   239   00FE78  61                 	db	97	;'a'
   240   00FE79  6D                 	db	109	;'m'
   241   00FE7A  61                 	db	97	;'a'
   242   00FE7B  72                 	db	114	;'r'
   243   00FE7C  20                 	db	32
   244   00FE7D  6E                 	db	110	;'n'
   245   00FE7E  6F                 	db	111	;'o'
   246   00FE7F  76                 	db	118	;'v'
   247   00FE80  6F                 	db	111	;'o'
   248   00FE81  20                 	db	32
   249   00FE82  76                 	db	118	;'v'
   250   00FE83  61                 	db	97	;'a'
   251   00FE84  6C                 	db	108	;'l'
   252   00FE85  6F                 	db	111	;'o'
   253   00FE86  72                 	db	114	;'r'
   254   00FE87  20                 	db	32
   255   00FE88  64                 	db	100	;'d'
   256   00FE89  65                 	db	101	;'e'
   257   00FE8A  20                 	db	32
   258   00FE8B  72                 	db	114	;'r'
   259   00FE8C  65                 	db	101	;'e'
   260   00FE8D  66                 	db	102	;'f'
   261   00FE8E  65                 	db	101	;'e'
   262   00FE8F  72                 	db	114	;'r'
   263   00FE90  65                 	db	101	;'e'
   264   00FE91  6E                 	db	110	;'n'
   265   00FE92  63                 	db	99	;'c'
   266   00FE93  69                 	db	105	;'i'
   267   00FE94  61                 	db	97	;'a'
   268   00FE95  00                 	db	0
   269   00FE96                     STR_25:
   270   00FE96  0D                 	db	13
   271   00FE97  0A                 	db	10
   272   00FE98  50                 	db	80	;'P'
   273   00FE99  72                 	db	114	;'r'
   274   00FE9A  69                 	db	105	;'i'
   275   00FE9B  6D                 	db	109	;'m'
   276   00FE9C  61                 	db	97	;'a'
   277   00FE9D  20                 	db	32
   278   00FE9E  30                 	db	48	;'0'
   279   00FE9F  20                 	db	32
   280   00FEA0  70                 	db	112	;'p'
   281   00FEA1  61                 	db	97	;'a'
   282   00FEA2  72                 	db	114	;'r'
   283   00FEA3  61                 	db	97	;'a'
   284   00FEA4  20                 	db	32
   285   00FEA5  76                 	db	118	;'v'
   286   00FEA6  6F                 	db	111	;'o'
   287   00FEA7  6C                 	db	108	;'l'
   288   00FEA8  74                 	db	116	;'t'
   289   00FEA9  61                 	db	97	;'a'
   290   00FEAA  72                 	db	114	;'r'
   291   00FEAB  20                 	db	32
   292   00FEAC  61                 	db	97	;'a'
   293   00FEAD  6F                 	db	111	;'o'
   294   00FEAE  20                 	db	32
   295   00FEAF  4D                 	db	77	;'M'
   296   00FEB0  65                 	db	101	;'e'
   297   00FEB1  6E                 	db	110	;'n'
   298   00FEB2  75                 	db	117	;'u'
   299   00FEB3  20                 	db	32
   300   00FEB4  50                 	db	80	;'P'
   301   00FEB5  72                 	db	114	;'r'
   302   00FEB6  69                 	db	105	;'i'
   303   00FEB7  6E                 	db	110	;'n'
   304   00FEB8  63                 	db	99	;'c'
   305   00FEB9  69                 	db	105	;'i'
   306   00FEBA  70                 	db	112	;'p'
   307   00FEBB  61                 	db	97	;'a'
   308   00FEBC  6C                 	db	108	;'l'
   309   00FEBD  00                 	db	0
   310   00FEBE                     STR_6:
   311   00FEBE  0D                 	db	13
   312   00FEBF  0A                 	db	10
   313   00FEC0  34                 	db	52	;'4'
   314   00FEC1  20                 	db	32
   315   00FEC2  2D                 	db	45
   316   00FEC3  20                 	db	32
   317   00FEC4  56                 	db	86	;'V'
   318   00FEC5  69                 	db	105	;'i'
   319   00FEC6  73                 	db	115	;'s'
   320   00FEC7  75                 	db	117	;'u'
   321   00FEC8  61                 	db	97	;'a'
   322   00FEC9  6C                 	db	108	;'l'
   323   00FECA  69                 	db	105	;'i'
   324   00FECB  7A                 	db	122	;'z'
   325   00FECC  61                 	db	97	;'a'
   326   00FECD  72                 	db	114	;'r'
   327   00FECE  20                 	db	32
   328   00FECF  6F                 	db	111	;'o'
   329   00FED0  20                 	db	32
   330   00FED1  6E                 	db	110	;'n'
   331   00FED2  69                 	db	105	;'i'
   332   00FED3  76                 	db	118	;'v'
   333   00FED4  65                 	db	101	;'e'
   334   00FED5  6C                 	db	108	;'l'
   335   00FED6  20                 	db	32
   336   00FED7  64                 	db	100	;'d'
   337   00FED8  65                 	db	101	;'e'
   338   00FED9  20                 	db	32
   339   00FEDA  72                 	db	114	;'r'
   340   00FEDB  65                 	db	101	;'e'
   341   00FEDC  66                 	db	102	;'f'
   342   00FEDD  65                 	db	101	;'e'
   343   00FEDE  72                 	db	114	;'r'
   344   00FEDF  65                 	db	101	;'e'
   345   00FEE0  6E                 	db	110	;'n'
   346   00FEE1  63                 	db	99	;'c'
   347   00FEE2  69                 	db	105	;'i'
   348   00FEE3  61                 	db	97	;'a'
   349   00FEE4  00                 	db	0
   350   00FEE5                     STR_4:
   351   00FEE5  0D                 	db	13
   352   00FEE6  0A                 	db	10
   353   00FEE7  32                 	db	50	;'2'
   354   00FEE8  20                 	db	32
   355   00FEE9  2D                 	db	45
   356   00FEEA  20                 	db	32
   357   00FEEB  41                 	db	65	;'A'
   358   00FEEC  74                 	db	116	;'t'
   359   00FEED  69                 	db	105	;'i'
   360   00FEEE  76                 	db	118	;'v'
   361   00FEEF  61                 	db	97	;'a'
   362   00FEF0  72                 	db	114	;'r'
   363   00FEF1  20                 	db	32
   364   00FEF2  63                 	db	99	;'c'
   365   00FEF3  6F                 	db	111	;'o'
   366   00FEF4  6D                 	db	109	;'m'
   367   00FEF5  74                 	db	116	;'t'
   368   00FEF6  72                 	db	114	;'r'
   369   00FEF7  6F                 	db	111	;'o'
   370   00FEF8  6C                 	db	108	;'l'
   371   00FEF9  6F                 	db	111	;'o'
   372   00FEFA  20                 	db	32
   373   00FEFB  64                 	db	100	;'d'
   374   00FEFC  6F                 	db	111	;'o'
   375   00FEFD  20                 	db	32
   376   00FEFE  6E                 	db	110	;'n'
   377   00FEFF  69                 	db	105	;'i'
   378   00FF00  76                 	db	118	;'v'
   379   00FF01  65                 	db	101	;'e'
   380   00FF02  6C                 	db	108	;'l'
   381   00FF03  20                 	db	32
   382   00FF04  64                 	db	100	;'d'
   383   00FF05  65                 	db	101	;'e'
   384   00FF06  20                 	db	32
   385   00FF07  61                 	db	97	;'a'
   386   00FF08  67                 	db	103	;'g'
   387   00FF09  75                 	db	117	;'u'
   388   00FF0A  61                 	db	97	;'a'
   389   00FF0B  00                 	db	0
   390   00FF0C                     STR_13:
   391   00FF0C  0D                 	db	13
   392   00FF0D  0A                 	db	10
   393   00FF0E  43                 	db	67	;'C'
   394   00FF0F  6F                 	db	111	;'o'
   395   00FF10  6E                 	db	110	;'n'
   396   00FF11  74                 	db	116	;'t'
   397   00FF12  72                 	db	114	;'r'
   398   00FF13  6F                 	db	111	;'o'
   399   00FF14  6C                 	db	108	;'l'
   400   00FF15  6F                 	db	111	;'o'
   401   00FF16  20                 	db	32
   402   00FF17  64                 	db	100	;'d'
   403   00FF18  6F                 	db	111	;'o'
   404   00FF19  20                 	db	32
   405   00FF1A  6E                 	db	110	;'n'
   406   00FF1B  69                 	db	105	;'i'
   407   00FF1C  76                 	db	118	;'v'
   408   00FF1D  65                 	db	101	;'e'
   409   00FF1E  6C                 	db	108	;'l'
   410   00FF1F  20                 	db	32
   411   00FF20  64                 	db	100	;'d'
   412   00FF21  65                 	db	101	;'e'
   413   00FF22  20                 	db	32
   414   00FF23  61                 	db	97	;'a'
   415   00FF24  67                 	db	103	;'g'
   416   00FF25  75                 	db	117	;'u'
   417   00FF26  61                 	db	97	;'a'
   418   00FF27  20                 	db	32
   419   00FF28  61                 	db	97	;'a'
   420   00FF29  74                 	db	116	;'t'
   421   00FF2A  69                 	db	105	;'i'
   422   00FF2B  76                 	db	118	;'v'
   423   00FF2C  61                 	db	97	;'a'
   424   00FF2D  64                 	db	100	;'d'
   425   00FF2E  6F                 	db	111	;'o'
   426   00FF2F  00                 	db	0
   427   00FF30                     STR_16:
   428   00FF30  0D                 	db	13
   429   00FF31  0A                 	db	10
   430   00FF32  50                 	db	80	;'P'
   431   00FF33  65                 	db	101	;'e'
   432   00FF34  72                 	db	114	;'r'
   433   00FF35  63                 	db	99	;'c'
   434   00FF36  65                 	db	101	;'e'
   435   00FF37  6E                 	db	110	;'n'
   436   00FF38  74                 	db	116	;'t'
   437   00FF39  61                 	db	97	;'a'
   438   00FF3A  67                 	db	103	;'g'
   439   00FF3B  65                 	db	101	;'e'
   440   00FF3C  6D                 	db	109	;'m'
   441   00FF3D  20                 	db	32
   442   00FF3E  64                 	db	100	;'d'
   443   00FF3F  6F                 	db	111	;'o'
   444   00FF40  20                 	db	32
   445   00FF41  6E                 	db	110	;'n'
   446   00FF42  69                 	db	105	;'i'
   447   00FF43  76                 	db	118	;'v'
   448   00FF44  65                 	db	101	;'e'
   449   00FF45  6C                 	db	108	;'l'
   450   00FF46  20                 	db	32
   451   00FF47  64                 	db	100	;'d'
   452   00FF48  65                 	db	101	;'e'
   453   00FF49  20                 	db	32
   454   00FF4A  61                 	db	97	;'a'
   455   00FF4B  67                 	db	103	;'g'
   456   00FF4C  75                 	db	117	;'u'
   457   00FF4D  61                 	db	97	;'a'
   458   00FF4E  3A                 	db	58	;':'
   459   00FF4F  20                 	db	32
   460   00FF50  25                 	db	37
   461   00FF51  64                 	db	100	;'d'
   462   00FF52  00                 	db	0
   463   00FF53                     STR_1:
   464   00FF53  53                 	db	83	;'S'
   465   00FF54  45                 	db	69	;'E'
   466   00FF55  54                 	db	84	;'T'
   467   00FF56  55                 	db	85	;'U'
   468   00FF57  50                 	db	80	;'P'
   469   00FF58  20                 	db	32
   470   00FF59  43                 	db	67	;'C'
   471   00FF5A  4F                 	db	79	;'O'
   472   00FF5B  4D                 	db	77	;'M'
   473   00FF5C  50                 	db	80	;'P'
   474   00FF5D  4C                 	db	76	;'L'
   475   00FF5E  45                 	db	69	;'E'
   476   00FF5F  54                 	db	84	;'T'
   477   00FF60  45                 	db	69	;'E'
   478   00FF61  44                 	db	68	;'D'
   479   00FF62  20                 	db	32
   480   00FF63  53                 	db	83	;'S'
   481   00FF64  55                 	db	85	;'U'
   482   00FF65  43                 	db	67	;'C'
   483   00FF66  43                 	db	67	;'C'
   484   00FF67  45                 	db	69	;'E'
   485   00FF68  53                 	db	83	;'S'
   486   00FF69  53                 	db	83	;'S'
   487   00FF6A  46                 	db	70	;'F'
   488   00FF6B  55                 	db	85	;'U'
   489   00FF6C  4C                 	db	76	;'L'
   490   00FF6D  4C                 	db	76	;'L'
   491   00FF6E  59                 	db	89	;'Y'
   492   00FF6F  0D                 	db	13
   493   00FF70  0A                 	db	10
   494   00FF71  00                 	db	0
   495   00FF72                     STR_8:
   496   00FF72  0D                 	db	13
   497   00FF73  0A                 	db	10
   498   00FF74  30                 	db	48	;'0'
   499   00FF75  20                 	db	32
   500   00FF76  2D                 	db	45
   501   00FF77  20                 	db	32
   502   00FF78  56                 	db	86	;'V'
   503   00FF79  6F                 	db	111	;'o'
   504   00FF7A  6C                 	db	108	;'l'
   505   00FF7B  74                 	db	116	;'t'
   506   00FF7C  61                 	db	97	;'a'
   507   00FF7D  72                 	db	114	;'r'
   508   00FF7E  20                 	db	32
   509   00FF7F  61                 	db	97	;'a'
   510   00FF80  6F                 	db	111	;'o'
   511   00FF81  20                 	db	32
   512   00FF82  4D                 	db	77	;'M'
   513   00FF83  65                 	db	101	;'e'
   514   00FF84  6E                 	db	110	;'n'
   515   00FF85  75                 	db	117	;'u'
   516   00FF86  20                 	db	32
   517   00FF87  50                 	db	80	;'P'
   518   00FF88  72                 	db	114	;'r'
   519   00FF89  69                 	db	105	;'i'
   520   00FF8A  6E                 	db	110	;'n'
   521   00FF8B  63                 	db	99	;'c'
   522   00FF8C  69                 	db	105	;'i'
   523   00FF8D  70                 	db	112	;'p'
   524   00FF8E  61                 	db	97	;'a'
   525   00FF8F  6C                 	db	108	;'l'
   526   00FF90  00                 	db	0
   527   00FF91                     STR_3:
   528   00FF91  0D                 	db	13
   529   00FF92  0A                 	db	10
   530   00FF93  31                 	db	49	;'1'
   531   00FF94  20                 	db	32
   532   00FF95  2D                 	db	45
   533   00FF96  20                 	db	32
   534   00FF97  44                 	db	68	;'D'
   535   00FF98  65                 	db	101	;'e'
   536   00FF99  73                 	db	115	;'s'
   537   00FF9A  6C                 	db	108	;'l'
   538   00FF9B  69                 	db	105	;'i'
   539   00FF9C  67                 	db	103	;'g'
   540   00FF9D  61                 	db	97	;'a'
   541   00FF9E  72                 	db	114	;'r'
   542   00FF9F  20                 	db	32
   543   00FFA0  62                 	db	98	;'b'
   544   00FFA1  6F                 	db	111	;'o'
   545   00FFA2  6D                 	db	109	;'m'
   546   00FFA3  62                 	db	98	;'b'
   547   00FFA4  61                 	db	97	;'a'
   548   00FFA5  20                 	db	32
   549   00FFA6  64                 	db	100	;'d'
   550   00FFA7  65                 	db	101	;'e'
   551   00FFA8  20                 	db	32
   552   00FFA9  61                 	db	97	;'a'
   553   00FFAA  67                 	db	103	;'g'
   554   00FFAB  75                 	db	117	;'u'
   555   00FFAC  61                 	db	97	;'a'
   556   00FFAD  00                 	db	0
   557   00FFAE                     STR_10:
   558   00FFAE  0D                 	db	13
   559   00FFAF  0A                 	db	10
   560   00FFB0  42                 	db	66	;'B'
   561   00FFB1  6F                 	db	111	;'o'
   562   00FFB2  6D                 	db	109	;'m'
   563   00FFB3  62                 	db	98	;'b'
   564   00FFB4  61                 	db	97	;'a'
   565   00FFB5  20                 	db	32
   566   00FFB6  64                 	db	100	;'d'
   567   00FFB7  65                 	db	101	;'e'
   568   00FFB8  20                 	db	32
   569   00FFB9  61                 	db	97	;'a'
   570   00FFBA  67                 	db	103	;'g'
   571   00FFBB  75                 	db	117	;'u'
   572   00FFBC  61                 	db	97	;'a'
   573   00FFBD  20                 	db	32
   574   00FFBE  64                 	db	100	;'d'
   575   00FFBF  65                 	db	101	;'e'
   576   00FFC0  73                 	db	115	;'s'
   577   00FFC1  6C                 	db	108	;'l'
   578   00FFC2  69                 	db	105	;'i'
   579   00FFC3  67                 	db	103	;'g'
   580   00FFC4  61                 	db	97	;'a'
   581   00FFC5  64                 	db	100	;'d'
   582   00FFC6  61                 	db	97	;'a'
   583   00FFC7  00                 	db	0
   584   00FFC8                     STR_2:
   585   00FFC8  0D                 	db	13
   586   00FFC9  0A                 	db	10
   587   00FFCA  4D                 	db	77	;'M'
   588   00FFCB  45                 	db	69	;'E'
   589   00FFCC  4E                 	db	78	;'N'
   590   00FFCD  55                 	db	85	;'U'
   591   00FFCE  20                 	db	32
   592   00FFCF  50                 	db	80	;'P'
   593   00FFD0  52                 	db	82	;'R'
   594   00FFD1  49                 	db	73	;'I'
   595   00FFD2  4E                 	db	78	;'N'
   596   00FFD3  43                 	db	67	;'C'
   597   00FFD4  49                 	db	73	;'I'
   598   00FFD5  50                 	db	80	;'P'
   599   00FFD6  41                 	db	65	;'A'
   600   00FFD7  4C                 	db	76	;'L'
   601   00FFD8  00                 	db	0
   602   00FFD9                     STR_24:
   603   00FFD9  0D                 	db	13
   604   00FFDA  0A                 	db	10
   605   00FFDB  4F                 	db	79	;'O'
   606   00FFDC  70                 	db	112	;'p'
   607   00FFDD  63                 	db	99	;'c'
   608   00FFDE  61                 	db	97	;'a'
   609   00FFDF  6F                 	db	111	;'o'
   610   00FFE0  20                 	db	32
   611   00FFE1  49                 	db	73	;'I'
   612   00FFE2  6E                 	db	110	;'n'
   613   00FFE3  76                 	db	118	;'v'
   614   00FFE4  61                 	db	97	;'a'
   615   00FFE5  6C                 	db	108	;'l'
   616   00FFE6  69                 	db	105	;'i'
   617   00FFE7  64                 	db	100	;'d'
   618   00FFE8  61                 	db	97	;'a'
   619   00FFE9  00                 	db	0
   620   00FFEA                     STR_17:
   621   00FFEA  0D                 	db	13
   622   00FFEB  0A                 	db	10
   623   00FFEC  62                 	db	98	;'b'
   624   00FFED  69                 	db	105	;'i'
   625   00FFEE  74                 	db	116	;'t'
   626   00FFEF  73                 	db	115	;'s'
   627   00FFF0  3A                 	db	58	;':'
   628   00FFF1  20                 	db	32
   629   00FFF2  25                 	db	37
   630   00FFF3  64                 	db	100	;'d'
   631   00FFF4  00                 	db	0
   632   00FFF5                     STR_9:
   633   00FFF5  0D                 	db	13
   634   00FFF6  0A                 	db	10
   635   00FFF7  4F                 	db	79	;'O'
   636   00FFF8  70                 	db	112	;'p'
   637   00FFF9  63                 	db	99	;'c'
   638   00FFFA  61                 	db	97	;'a'
   639   00FFFB  6F                 	db	111	;'o'
   640   00FFFC  3A                 	db	58	;':'
   641   00FFFD  20                 	db	32
   642   00FFFE  00                 	db	0
   643   00FFFF  00                 	db	0	; dummy byte at the end
   644   000000                     
   645                           	psect	nvCOMRAM
   646   000037                     __pnvCOMRAM:
   647                           	callstack 0
   648   000037                     _TMR1_InterruptHandler:
   649                           	callstack 0
   650   000037                     	ds	2
   651   000039                     _TMR0_InterruptHandler:
   652                           	callstack 0
   653   000039                     	ds	2
   654   00003B                     _INT0_InterruptHandler:
   655                           	callstack 0
   656   00003B                     	ds	2
   657   00003D                     _ADC_InterruptHandler:
   658                           	callstack 0
   659   00003D                     	ds	2
   660                           
   661                           	psect	nvBANK0
   662   0000E6                     __pnvBANK0:
   663                           	callstack 0
   664   0000E6                     _EUSART1_ErrorHandler:
   665                           	callstack 0
   666   0000E6                     	ds	2
   667   0000E8                     _EUSART1_OverrunErrorHandler:
   668                           	callstack 0
   669   0000E8                     	ds	2
   670   0000EA                     _EUSART1_FramingErrorHandler:
   671                           	callstack 0
   672   0000EA                     	ds	2
   673   0000EC                     _EUSART1_RxDefaultInterruptHandler:
   674                           	callstack 0
   675   0000EC                     	ds	2
   676   0000EE                     _EUSART1_TxDefaultInterruptHandler:
   677                           	callstack 0
   678   0000EE                     	ds	2
   679   000000                     _TMR1	set	4046
   680   000000                     _LATBbits	set	3978
   681   000000                     _T1GCONbits	set	4044
   682   000000                     _T1CONbits	set	4045
   683   000000                     _T0CONbits	set	4053
   684   000000                     _TRISC	set	3988
   685   000000                     _RCSTA1bits	set	4011
   686   000000                     _TXSTA1bits	set	4012
   687   000000                     _ADCON0bits	set	4034
   688   000000                     _SSP1CON1bits	set	4038
   689   000000                     _WPUB	set	3937
   690   000000                     _LATA	set	3977
   691   000000                     _LATD	set	3980
   692   000000                     _LATE	set	3981
   693   000000                     _TRISCbits	set	3988
   694   000000                     _SSP1CON1	set	4038
   695   000000                     _SSP1STAT	set	4039
   696   000000                     _CCPR5H	set	3926
   697   000000                     _CCPR5L	set	3925
   698   000000                     _T1GCON	set	4044
   699   000000                     _RCONbits	set	4048
   700   000000                     _INTCON2bits	set	4081
   701   000000                     _INTCONbits	set	4082
   702   000000                     _SSP1BUF	set	4041
   703   000000                     _SSP1ADD	set	4040
   704   000000                     _IPR1bits	set	3999
   705   000000                     _RCSTA1	set	4011
   706   000000                     _BAUDCON1	set	4024
   707   000000                     _ADCON2	set	4032
   708   000000                     _ADCON1	set	4033
   709   000000                     _ADCON0	set	4034
   710   000000                     _SPBRGH1	set	4016
   711   000000                     _OSCCON2	set	4050
   712   000000                     _OSCCON	set	4051
   713   000000                     _T0CON	set	4053
   714   000000                     _TMR0L	set	4054
   715   000000                     _TMR0H	set	4055
   716   000000                     _TRISA	set	3986
   717   000000                     _ANSELE	set	3900
   718                           
   719                           ; #config settings
   720                           
   721                           	psect	cinit
   722   000D96                     __pcinit:
   723                           	callstack 0
   724   000D96                     start_initialization:
   725                           	callstack 0
   726   000D96                     __initialization:
   727                           	callstack 0
   728                           
   729                           ; Initialize objects allocated to BANK0 (2 bytes)
   730                           ; load TBLPTR registers with __pidataBANK0
   731   000D96  0E8E               	movlw	low __pidataBANK0
   732   000D98  6EF6               	movwf	tblptrl,c
   733   000D9A  0E12               	movlw	high __pidataBANK0
   734   000D9C  6EF7               	movwf	tblptrh,c
   735   000D9E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   736   000DA0  6EF8               	movwf	tblptru,c
   737   000DA2  0009               	tblrd		*+	;fetch initializer
   738   000DA4  CFF5 F0F0          	movff	tablat,__pdataBANK0
   739   000DA8  0009               	tblrd		*+	;fetch initializer
   740   000DAA  CFF5 F0F1          	movff	tablat,__pdataBANK0+1
   741                           
   742                           ; Initialize objects allocated to COMRAM (2 bytes)
   743                           ; load TBLPTR registers with __pidataCOMRAM
   744   000DAE  0E8C               	movlw	low __pidataCOMRAM
   745   000DB0  6EF6               	movwf	tblptrl,c
   746   000DB2  0E12               	movlw	high __pidataCOMRAM
   747   000DB4  6EF7               	movwf	tblptrh,c
   748   000DB6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   749   000DB8  6EF8               	movwf	tblptru,c
   750   000DBA  0009               	tblrd		*+	;fetch initializer
   751   000DBC  CFF5 F03F          	movff	tablat,__pdataCOMRAM
   752   000DC0  0009               	tblrd		*+	;fetch initializer
   753   000DC2  CFF5 F040          	movff	tablat,__pdataCOMRAM+1
   754                           
   755                           ; Clear objects allocated to BANK0 (65 bytes)
   756   000DC6  EE00  F0A5         	lfsr	0,__pbssBANK0
   757   000DCA  0E41               	movlw	65
   758   000DCC                     clear_0:
   759   000DCC  6AEE               	clrf	postinc0,c
   760   000DCE  06E8               	decf	wreg,f,c
   761   000DD0  E1FD               	bnz	clear_0
   762                           
   763                           ; Clear objects allocated to COMRAM (21 bytes)
   764   000DD2  EE00  F022         	lfsr	0,__pbssCOMRAM
   765   000DD6  0E15               	movlw	21
   766   000DD8                     clear_1:
   767   000DD8  6AEE               	clrf	postinc0,c
   768   000DDA  06E8               	decf	wreg,f,c
   769   000DDC  E1FD               	bnz	clear_1
   770   000DDE                     end_of_initialization:
   771                           	callstack 0
   772   000DDE                     __end_of__initialization:
   773                           	callstack 0
   774   000DDE  9041               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   775   000DE0  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   776   000DE2  0100               	movlb	0
   777   000DE4  EF4F  F004         	goto	_main	;jump to C main() function
   778                           
   779                           	psect	bssCOMRAM
   780   000022                     __pbssCOMRAM:
   781                           	callstack 0
   782   000022                     _width:
   783                           	callstack 0
   784   000022                     	ds	2
   785   000024                     _prec:
   786                           	callstack 0
   787   000024                     	ds	2
   788   000026                     _nivel_referencia:
   789                           	callstack 0
   790   000026                     	ds	2
   791   000028                     _convertedValue:
   792                           	callstack 0
   793   000028                     	ds	2
   794   00002A                     _timer1ReloadVal:
   795                           	callstack 0
   796   00002A                     	ds	2
   797   00002C                     _intro_valor:
   798                           	callstack 0
   799   00002C                     	ds	1
   800   00002D                     _cnt_char:
   801                           	callstack 0
   802   00002D                     	ds	1
   803   00002E                     _rxData:
   804                           	callstack 0
   805   00002E                     	ds	1
   806   00002F                     _timer0ReloadVal:
   807                           	callstack 0
   808   00002F                     	ds	1
   809   000030                     _eusart1RxLastError:
   810                           	callstack 0
   811   000030                     	ds	1
   812   000031                     _eusart1RxCount:
   813                           	callstack 0
   814   000031                     	ds	1
   815   000032                     _eusart1RxTail:
   816                           	callstack 0
   817   000032                     	ds	1
   818   000033                     _eusart1RxHead:
   819                           	callstack 0
   820   000033                     	ds	1
   821   000034                     _eusart1TxBufferRemaining:
   822                           	callstack 0
   823   000034                     	ds	1
   824   000035                     _eusart1TxTail:
   825                           	callstack 0
   826   000035                     	ds	1
   827   000036                     _eusart1TxHead:
   828                           	callstack 0
   829   000036                     	ds	1
   830                           
   831                           	psect	dataCOMRAM
   832   00003F                     __pdataCOMRAM:
   833                           	callstack 0
   834   00003F                     _temperatura:
   835                           	callstack 0
   836   00003F                     	ds	2
   837                           
   838                           	psect	bssBANK0
   839   0000A5                     __pbssBANK0:
   840                           	callstack 0
   841   0000A5                     _eusart1RxStatusBuffer:
   842                           	callstack 0
   843   0000A5                     	ds	8
   844   0000AD                     _eusart1RxBuffer:
   845                           	callstack 0
   846   0000AD                     	ds	8
   847   0000B5                     _eusart1TxBuffer:
   848                           	callstack 0
   849   0000B5                     	ds	8
   850   0000BD                     _s:
   851                           	callstack 0
   852   0000BD                     	ds	4
   853   0000C1                     _nivel_agua:
   854                           	callstack 0
   855   0000C1                     	ds	2
   856   0000C3                     _flags:
   857                           	callstack 0
   858   0000C3                     	ds	1
   859   0000C4                     _BombaLigada:
   860                           	callstack 0
   861   0000C4                     	ds	1
   862   0000C5                     _SistemaControloLigado:
   863                           	callstack 0
   864   0000C5                     	ds	1
   865   0000C6                     _dbuf:
   866                           	callstack 0
   867   0000C6                     	ds	32
   868                           
   869                           	psect	dataBANK0
   870   0000F0                     __pdataBANK0:
   871                           	callstack 0
   872   0000F0                     _carater_recebido:
   873                           	callstack 0
   874   0000F0                     	ds	1
   875   0000F1                     _menu:
   876                           	callstack 0
   877   0000F1                     	ds	1
   878                           
   879                           	psect	cstackBANK0
   880   000060                     __pcstackBANK0:
   881                           	callstack 0
   882   000060                     ?___awdiv:
   883                           	callstack 0
   884   000060                     ?___awmod:
   885                           	callstack 0
   886   000060                     ___awdiv@dividend:
   887                           	callstack 0
   888   000060                     ___awmod@dividend:
   889                           	callstack 0
   890   000060                     fputc@c:
   891                           	callstack 0
   892                           
   893                           ; 2 bytes @ 0x0
   894   000060                     	ds	2
   895   000062                     ___awdiv@divisor:
   896                           	callstack 0
   897   000062                     ___awmod@divisor:
   898                           	callstack 0
   899   000062                     fputc@fp:
   900                           	callstack 0
   901                           
   902                           ; 2 bytes @ 0x2
   903   000062                     	ds	2
   904   000064                     ??_fputc:
   905   000064                     ?_abs:
   906                           	callstack 0
   907   000064                     ___awdiv@counter:
   908                           	callstack 0
   909   000064                     abs@a:
   910                           	callstack 0
   911                           
   912                           ; 2 bytes @ 0x4
   913   000064                     	ds	1
   914   000065                     ___awdiv@sign:
   915                           	callstack 0
   916                           
   917                           ; 1 bytes @ 0x5
   918   000065                     	ds	1
   919   000066                     ??_abs:
   920   000066                     ___awdiv@quotient:
   921                           	callstack 0
   922                           
   923                           ; 2 bytes @ 0x6
   924   000066                     	ds	3
   925   000069                     fputs@s:
   926                           	callstack 0
   927                           
   928                           ; 2 bytes @ 0x9
   929   000069                     	ds	2
   930   00006B                     fputs@fp:
   931                           	callstack 0
   932                           
   933                           ; 2 bytes @ 0xB
   934   00006B                     	ds	2
   935   00006D                     fputs@c:
   936                           	callstack 0
   937                           
   938                           ; 1 bytes @ 0xD
   939   00006D                     	ds	1
   940   00006E                     fputs@i:
   941                           	callstack 0
   942                           
   943                           ; 2 bytes @ 0xE
   944   00006E                     	ds	2
   945   000070                     pad@fp:
   946                           	callstack 0
   947                           
   948                           ; 2 bytes @ 0x10
   949   000070                     	ds	2
   950   000072                     pad@buf:
   951                           	callstack 0
   952                           
   953                           ; 2 bytes @ 0x12
   954   000072                     	ds	2
   955   000074                     pad@p:
   956                           	callstack 0
   957                           
   958                           ; 2 bytes @ 0x14
   959   000074                     	ds	2
   960   000076                     pad@i:
   961                           	callstack 0
   962                           
   963                           ; 2 bytes @ 0x16
   964   000076                     	ds	2
   965   000078                     pad@w:
   966                           	callstack 0
   967                           
   968                           ; 2 bytes @ 0x18
   969   000078                     	ds	2
   970   00007A                     dtoa@fp:
   971                           	callstack 0
   972                           
   973                           ; 2 bytes @ 0x1A
   974   00007A                     	ds	2
   975   00007C                     dtoa@d:
   976                           	callstack 0
   977                           
   978                           ; 2 bytes @ 0x1C
   979   00007C                     	ds	2
   980   00007E                     _dtoa$2071:
   981                           	callstack 0
   982                           
   983                           ; 2 bytes @ 0x1E
   984   00007E                     	ds	2
   985   000080                     dtoa@p:
   986                           	callstack 0
   987                           
   988                           ; 2 bytes @ 0x20
   989   000080                     	ds	2
   990   000082                     dtoa@w:
   991                           	callstack 0
   992                           
   993                           ; 2 bytes @ 0x22
   994   000082                     	ds	2
   995   000084                     dtoa@s:
   996                           	callstack 0
   997                           
   998                           ; 1 bytes @ 0x24
   999   000084                     	ds	1
  1000   000085                     dtoa@i:
  1001                           	callstack 0
  1002                           
  1003                           ; 2 bytes @ 0x25
  1004   000085                     	ds	2
  1005   000087                     vfpfcnvrt@fp:
  1006                           	callstack 0
  1007                           
  1008                           ; 2 bytes @ 0x27
  1009   000087                     	ds	2
  1010   000089                     vfpfcnvrt@fmt:
  1011                           	callstack 0
  1012                           
  1013                           ; 2 bytes @ 0x29
  1014   000089                     	ds	2
  1015   00008B                     vfpfcnvrt@ap:
  1016                           	callstack 0
  1017                           
  1018                           ; 2 bytes @ 0x2B
  1019   00008B                     	ds	2
  1020   00008D                     ??_vfpfcnvrt:
  1021                           
  1022                           ; 1 bytes @ 0x2D
  1023   00008D                     	ds	2
  1024   00008F                     vfpfcnvrt@convarg:
  1025                           	callstack 0
  1026                           
  1027                           ; 4 bytes @ 0x2F
  1028   00008F                     	ds	4
  1029   000093                     vfpfcnvrt@cp:
  1030                           	callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x33
  1033   000093                     	ds	2
  1034   000095                     ?_vfprintf:
  1035                           	callstack 0
  1036   000095                     vfprintf@fp:
  1037                           	callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x35
  1040   000095                     	ds	2
  1041   000097                     vfprintf@fmt:
  1042                           	callstack 0
  1043                           
  1044                           ; 2 bytes @ 0x37
  1045   000097                     	ds	2
  1046   000099                     vfprintf@ap:
  1047                           	callstack 0
  1048                           
  1049                           ; 2 bytes @ 0x39
  1050   000099                     	ds	2
  1051   00009B                     vfprintf@cfmt:
  1052                           	callstack 0
  1053                           
  1054                           ; 2 bytes @ 0x3B
  1055   00009B                     	ds	2
  1056   00009D                     ?_printf:
  1057                           	callstack 0
  1058   00009D                     printf@fmt:
  1059                           	callstack 0
  1060                           
  1061                           ; 2 bytes @ 0x3D
  1062   00009D                     	ds	4
  1063   0000A1                     printf@ap:
  1064                           	callstack 0
  1065                           
  1066                           ; 2 bytes @ 0x41
  1067   0000A1                     	ds	2
  1068   0000A3                     ??_ShowMenuInTerminal:
  1069                           
  1070                           ; 1 bytes @ 0x43
  1071   0000A3                     	ds	2
  1072                           
  1073                           	psect	cstackCOMRAM
  1074   000001                     __pcstackCOMRAM:
  1075                           	callstack 0
  1076   000001                     ??_ADC_SelectChannel:
  1077   000001                     ??_TMR1_MyInterruptHandler:
  1078   000001                     ?_ADC_GetConversionResult:
  1079                           	callstack 0
  1080   000001                     ?___lmul:
  1081                           	callstack 0
  1082   000001                     TMR1_WriteTimer@timerVal:
  1083                           	callstack 0
  1084   000001                     ___lmul@multiplier:
  1085                           	callstack 0
  1086                           
  1087                           ; 4 bytes @ 0x0
  1088   000001                     	ds	1
  1089   000002                     ADC_SelectChannel@channel:
  1090                           	callstack 0
  1091                           
  1092                           ; 1 bytes @ 0x1
  1093   000002                     	ds	1
  1094   000003                     ??_ADC_GetConversionResult:
  1095   000003                     
  1096                           ; 1 bytes @ 0x2
  1097   000003                     	ds	2
  1098   000005                     ___lmul@multiplicand:
  1099                           	callstack 0
  1100                           
  1101                           ; 4 bytes @ 0x4
  1102   000005                     	ds	4
  1103   000009                     ___lmul@product:
  1104                           	callstack 0
  1105                           
  1106                           ; 4 bytes @ 0x8
  1107   000009                     	ds	4
  1108   00000D                     ?___aldiv:
  1109                           	callstack 0
  1110   00000D                     ___aldiv@dividend:
  1111                           	callstack 0
  1112                           
  1113                           ; 4 bytes @ 0xC
  1114   00000D                     	ds	4
  1115   000011                     ___aldiv@divisor:
  1116                           	callstack 0
  1117                           
  1118                           ; 4 bytes @ 0x10
  1119   000011                     	ds	4
  1120   000015                     ___aldiv@counter:
  1121                           	callstack 0
  1122                           
  1123                           ; 1 bytes @ 0x14
  1124   000015                     	ds	1
  1125   000016                     ___aldiv@sign:
  1126                           	callstack 0
  1127                           
  1128                           ; 1 bytes @ 0x15
  1129   000016                     	ds	1
  1130   000017                     ___aldiv@quotient:
  1131                           	callstack 0
  1132                           
  1133                           ; 4 bytes @ 0x16
  1134   000017                     	ds	4
  1135   00001B                     ??_INTERRUPT_InterruptManagerHigh:
  1136   00001B                     
  1137                           ; 1 bytes @ 0x1A
  1138   00001B                     	ds	4
  1139   00001F                     EUSART1_Read@readValue:
  1140                           	callstack 0
  1141   00001F                     EUSART1_Write@txData:
  1142                           	callstack 0
  1143   00001F                     ___awmod@counter:
  1144                           	callstack 0
  1145   00001F                     ADC_SetInterruptHandler@InterruptHandler:
  1146                           	callstack 0
  1147   00001F                     INT0_SetInterruptHandler@InterruptHandler:
  1148                           	callstack 0
  1149   00001F                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1150                           	callstack 0
  1151   00001F                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1152                           	callstack 0
  1153   00001F                     EUSART1_SetErrorHandler@interruptHandler:
  1154                           	callstack 0
  1155   00001F                     EUSART1_SetTxInterruptHandler@interruptHandler:
  1156                           	callstack 0
  1157   00001F                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1158                           	callstack 0
  1159   00001F                     TMR0_SetInterruptHandler@InterruptHandler:
  1160                           	callstack 0
  1161   00001F                     TMR1_SetInterruptHandler@InterruptHandler:
  1162                           	callstack 0
  1163                           
  1164                           ; 2 bytes @ 0x1E
  1165   00001F                     	ds	1
  1166   000020                     putch@txData:
  1167                           	callstack 0
  1168   000020                     ___awmod@sign:
  1169                           	callstack 0
  1170                           
  1171                           ; 1 bytes @ 0x1F
  1172   000020                     	ds	1
  1173   000021                     ??_pad:
  1174                           
  1175                           ; 1 bytes @ 0x20
  1176   000021                     	ds	1
  1177   000022                     
  1178                           ; 1 bytes @ 0x21
  1179 ;;
  1180 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1181 ;;
  1182 ;; *************** function _main *****************
  1183 ;; Defined at:
  1184 ;;		line 101 in file "main.c"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;		None
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;		None
  1189 ;; Return value:  Size  Location     Type
  1190 ;;                  1    wreg      void 
  1191 ;; Registers used:
  1192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1202 ;;Total ram usage:        0 bytes
  1203 ;; Hardware stack levels required when called: 14
  1204 ;; This function calls:
  1205 ;;		_ADC_SetInterruptHandler
  1206 ;;		_CheckUSART
  1207 ;;		_INT0_SetInterruptHandler
  1208 ;;		_SYSTEM_Initialize
  1209 ;;		_ShowMenuInTerminal
  1210 ;;		_TMR0_SetInterruptHandler
  1211 ;;		_TMR0_StartTimer
  1212 ;;		_TMR1_SetInterruptHandler
  1213 ;;		_TMR1_StartTimer
  1214 ;;		_TMR1_StopTimer
  1215 ;;		_printf
  1216 ;; This function is called by:
  1217 ;;		Startup code after reset
  1218 ;; This function uses a non-reentrant model
  1219 ;;
  1220                           
  1221                           	psect	text0
  1222   00089E                     __ptext0:
  1223                           	callstack 0
  1224   00089E                     _main:
  1225                           	callstack 17
  1226   00089E                     
  1227                           ;main.c: 103:     SYSTEM_Initialize();
  1228   00089E  EC21  F008         	call	_SYSTEM_Initialize	;wreg free
  1229   0008A2                     
  1230                           ;main.c: 110:     (INTCONbits.GIEH = 1);
  1231   0008A2  8EF2               	bsf	242,7,c	;volatile
  1232   0008A4                     
  1233                           ;main.c: 113:     (INTCONbits.GIEL = 1);
  1234   0008A4  8CF2               	bsf	242,6,c	;volatile
  1235   0008A6                     
  1236                           ;main.c: 122:     (INTCONbits.PEIE = 1);
  1237   0008A6  8CF2               	bsf	242,6,c	;volatile
  1238                           
  1239                           ;main.c: 127:     INT0_SetInterruptHandler(INT0_MyInterruptHandler);
  1240   0008A8  0EEA               	movlw	low _INT0_MyInterruptHandler
  1241   0008AA  6E1F               	movwf	INT0_SetInterruptHandler@InterruptHandler^0,c
  1242   0008AC  0E11               	movlw	high _INT0_MyInterruptHandler
  1243   0008AE  6E20               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,c
  1244   0008B0  EC11  F009         	call	_INT0_SetInterruptHandler	;wreg free
  1245                           
  1246                           ;main.c: 128:     ADC_SetInterruptHandler(ADC_MyInterruptHandler);
  1247   0008B4  0E8C               	movlw	low _ADC_MyInterruptHandler
  1248   0008B6  6E1F               	movwf	ADC_SetInterruptHandler@InterruptHandler^0,c
  1249   0008B8  0E0C               	movlw	high _ADC_MyInterruptHandler
  1250   0008BA  6E20               	movwf	(ADC_SetInterruptHandler@InterruptHandler+1)^0,c
  1251   0008BC  EC2F  F009         	call	_ADC_SetInterruptHandler	;wreg free
  1252                           
  1253                           ;main.c: 129:     TMR0_SetInterruptHandler(TMR0_MyInterruptHandler);
  1254   0008C0  0EF8               	movlw	low _TMR0_MyInterruptHandler
  1255   0008C2  6E1F               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  1256   0008C4  0E11               	movlw	high _TMR0_MyInterruptHandler
  1257   0008C6  6E20               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  1258   0008C8  EC0C  F009         	call	_TMR0_SetInterruptHandler	;wreg free
  1259   0008CC                     
  1260                           ;main.c: 130:     TMR0_StartTimer();
  1261   0008CC  EC42  F009         	call	_TMR0_StartTimer	;wreg free
  1262   0008D0                     
  1263                           ;main.c: 132:     TMR1_SetInterruptHandler(TMR1_MyInterruptHandler);
  1264   0008D0  0E80               	movlw	low _TMR1_MyInterruptHandler
  1265   0008D2  6E1F               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
  1266   0008D4  0E0F               	movlw	high _TMR1_MyInterruptHandler
  1267   0008D6  6E20               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
  1268   0008D8  EC07  F009         	call	_TMR1_SetInterruptHandler	;wreg free
  1269                           
  1270                           ;main.c: 133:     TMR1_StartTimer();
  1271   0008DC  EC40  F009         	call	_TMR1_StartTimer	;wreg free
  1272   0008E0                     
  1273                           ;main.c: 135:     printf("SETUP COMPLETED SUCCESSFULLY\r\n");
  1274   0008E0  0E53               	movlw	low STR_1
  1275   0008E2  0100               	movlb	0	; () banked
  1276   0008E4  6F9D               	movwf	printf@fmt& (0+255),b
  1277   0008E6  0EFF               	movlw	high STR_1
  1278   0008E8  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1279   0008EA  EC60  F008         	call	_printf	;wreg free
  1280   0008EE                     
  1281                           ;main.c: 136:     SistemaControloLigado = 1;
  1282   0008EE  0E01               	movlw	1
  1283   0008F0  0100               	movlb	0	; () banked
  1284   0008F2  6FC5               	movwf	_SistemaControloLigado& (0+255),b	;volatile
  1285   0008F4                     l3356:
  1286                           
  1287                           ;main.c: 140:         if (!SistemaControloLigado) {
  1288   0008F4  0100               	movlb	0	; () banked
  1289   0008F6  51C5               	movf	_SistemaControloLigado& (0+255),w,b	;volatile
  1290   0008F8  A4D8               	btfss	status,2,c
  1291   0008FA  EF81  F004         	goto	u2281
  1292   0008FE  EF83  F004         	goto	u2280
  1293   000902                     u2281:
  1294   000902  EF89  F004         	goto	l3364
  1295   000906                     u2280:
  1296   000906                     
  1297                           ; BSR set to: 0
  1298                           ;main.c: 141:             TMR1_StopTimer();
  1299   000906  EC3E  F009         	call	_TMR1_StopTimer	;wreg free
  1300   00090A  988A               	bcf	138,4,c	;volatile
  1301   00090C  868A               	bsf	138,3,c	;volatile
  1302   00090E  EF8C  F004         	goto	l3368
  1303   000912                     l3364:
  1304                           
  1305                           ; BSR set to: 0
  1306                           ;main.c: 145:             TMR1_StartTimer();
  1307   000912  EC40  F009         	call	_TMR1_StartTimer	;wreg free
  1308   000916  968A               	bcf	138,3,c	;volatile
  1309   000918                     l3368:
  1310                           
  1311                           ;main.c: 150:         if (BombaLigada) {
  1312   000918  0100               	movlb	0	; () banked
  1313   00091A  51C4               	movf	_BombaLigada& (0+255),w,b	;volatile
  1314   00091C  B4D8               	btfsc	status,2,c
  1315   00091E  EF93  F004         	goto	u2291
  1316   000922  EF95  F004         	goto	u2290
  1317   000926                     u2291:
  1318   000926  EF98  F004         	goto	l620
  1319   00092A                     u2290:
  1320   00092A                     
  1321                           ; BSR set to: 0
  1322   00092A  8A8A               	bsf	138,5,c	;volatile
  1323   00092C  EF99  F004         	goto	l3370
  1324   000930                     l620:
  1325                           
  1326                           ; BSR set to: 0
  1327   000930  9A8A               	bcf	138,5,c	;volatile
  1328   000932                     l3370:
  1329                           
  1330                           ; BSR set to: 0
  1331                           ;main.c: 156:         if (carater_recebido) {
  1332   000932  51F0               	movf	_carater_recebido& (0+255),w,b
  1333   000934  B4D8               	btfsc	status,2,c
  1334   000936  EF9F  F004         	goto	u2301
  1335   00093A  EFA1  F004         	goto	u2300
  1336   00093E                     u2301:
  1337   00093E  EFA6  F004         	goto	l3376
  1338   000942                     u2300:
  1339   000942                     
  1340                           ; BSR set to: 0
  1341                           ;main.c: 157:             ShowMenuInTerminal();
  1342   000942  EC9B  F000         	call	_ShowMenuInTerminal	;wreg free
  1343   000946                     
  1344                           ;main.c: 158:             carater_recebido = 0;
  1345   000946  0E00               	movlw	0
  1346   000948  0100               	movlb	0	; () banked
  1347   00094A  6FF0               	movwf	_carater_recebido& (0+255),b
  1348   00094C                     l3376:
  1349                           
  1350                           ; BSR set to: 0
  1351                           ;main.c: 160:         CheckUSART();
  1352   00094C  ECDB  F005         	call	_CheckUSART	;wreg free
  1353   000950  EF7A  F004         	goto	l3356
  1354   000954  EF99  F000         	goto	start
  1355   000958                     __end_of_main:
  1356                           	callstack 0
  1357                           
  1358 ;; *************** function _TMR1_StopTimer *****************
  1359 ;; Defined at:
  1360 ;;		line 99 in file "mcc_generated_files/tmr1.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;		None
  1363 ;; Auto vars:     Size  Location     Type
  1364 ;;		None
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  1    wreg      void 
  1367 ;; Registers used:
  1368 ;;		None
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1378 ;;Total ram usage:        0 bytes
  1379 ;; Hardware stack levels used: 1
  1380 ;; Hardware stack levels required when called: 4
  1381 ;; This function calls:
  1382 ;;		Nothing
  1383 ;; This function is called by:
  1384 ;;		_main
  1385 ;; This function uses a non-reentrant model
  1386 ;;
  1387                           
  1388                           	psect	text1
  1389   00127C                     __ptext1:
  1390                           	callstack 0
  1391   00127C                     _TMR1_StopTimer:
  1392                           	callstack 26
  1393   00127C                     
  1394                           ;mcc_generated_files/tmr1.c: 102:     T1CONbits.TMR1ON = 0;
  1395   00127C  90CD               	bcf	205,0,c	;volatile
  1396   00127E  0012               	return		;funcret
  1397   001280                     __end_of_TMR1_StopTimer:
  1398                           	callstack 0
  1399                           
  1400 ;; *************** function _TMR1_StartTimer *****************
  1401 ;; Defined at:
  1402 ;;		line 93 in file "mcc_generated_files/tmr1.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;		None
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;		None
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  1    wreg      void 
  1409 ;; Registers used:
  1410 ;;		None
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1420 ;;Total ram usage:        0 bytes
  1421 ;; Hardware stack levels used: 1
  1422 ;; Hardware stack levels required when called: 4
  1423 ;; This function calls:
  1424 ;;		Nothing
  1425 ;; This function is called by:
  1426 ;;		_main
  1427 ;; This function uses a non-reentrant model
  1428 ;;
  1429                           
  1430                           	psect	text2
  1431   001280                     __ptext2:
  1432                           	callstack 0
  1433   001280                     _TMR1_StartTimer:
  1434                           	callstack 26
  1435   001280                     
  1436                           ;mcc_generated_files/tmr1.c: 96:     T1CONbits.TMR1ON = 1;
  1437   001280  80CD               	bsf	205,0,c	;volatile
  1438   001282  0012               	return		;funcret
  1439   001284                     __end_of_TMR1_StartTimer:
  1440                           	callstack 0
  1441                           
  1442 ;; *************** function _TMR0_StartTimer *****************
  1443 ;; Defined at:
  1444 ;;		line 94 in file "mcc_generated_files/tmr0.c"
  1445 ;; Parameters:    Size  Location     Type
  1446 ;;		None
  1447 ;; Auto vars:     Size  Location     Type
  1448 ;;		None
  1449 ;; Return value:  Size  Location     Type
  1450 ;;                  1    wreg      void 
  1451 ;; Registers used:
  1452 ;;		None
  1453 ;; Tracked objects:
  1454 ;;		On entry : 0/0
  1455 ;;		On exit  : 0/0
  1456 ;;		Unchanged: 0/0
  1457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1462 ;;Total ram usage:        0 bytes
  1463 ;; Hardware stack levels used: 1
  1464 ;; Hardware stack levels required when called: 4
  1465 ;; This function calls:
  1466 ;;		Nothing
  1467 ;; This function is called by:
  1468 ;;		_main
  1469 ;; This function uses a non-reentrant model
  1470 ;;
  1471                           
  1472                           	psect	text3
  1473   001284                     __ptext3:
  1474                           	callstack 0
  1475   001284                     _TMR0_StartTimer:
  1476                           	callstack 26
  1477   001284                     
  1478                           ;mcc_generated_files/tmr0.c: 97:     T0CONbits.TMR0ON = 1;
  1479   001284  8ED5               	bsf	213,7,c	;volatile
  1480   001286  0012               	return		;funcret
  1481   001288                     __end_of_TMR0_StartTimer:
  1482                           	callstack 0
  1483                           
  1484 ;; *************** function _ShowMenuInTerminal *****************
  1485 ;; Defined at:
  1486 ;;		line 168 in file "main.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;		None
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;		None
  1491 ;; Return value:  Size  Location     Type
  1492 ;;                  1    wreg      void 
  1493 ;; Registers used:
  1494 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1495 ;; Tracked objects:
  1496 ;;		On entry : 0/0
  1497 ;;		On exit  : 0/0
  1498 ;;		Unchanged: 0/0
  1499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1502 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1503 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1504 ;;Total ram usage:        2 bytes
  1505 ;; Hardware stack levels used: 1
  1506 ;; Hardware stack levels required when called: 13
  1507 ;; This function calls:
  1508 ;;		_EUSART1_Write
  1509 ;;		_printf
  1510 ;; This function is called by:
  1511 ;;		_main
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515                           	psect	text4
  1516   000136                     __ptext4:
  1517                           	callstack 0
  1518   000136                     _ShowMenuInTerminal:
  1519                           	callstack 17
  1520   000136                     
  1521                           ;main.c: 169:     switch (menu) {
  1522   000136  EF76  F001         	goto	l3316
  1523   00013A                     l3236:
  1524                           
  1525                           ; BSR set to: 0
  1526                           ;main.c: 171:             EUSART1_Write(12);
  1527   00013A  0E0C               	movlw	12
  1528   00013C  EC76  F006         	call	_EUSART1_Write
  1529   000140                     
  1530                           ;main.c: 172:             printf("\r\nMENU PRINCIPAL");
  1531   000140  0EC8               	movlw	low STR_2
  1532   000142  0100               	movlb	0	; () banked
  1533   000144  6F9D               	movwf	printf@fmt& (0+255),b
  1534   000146  0EFF               	movlw	high STR_2
  1535   000148  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1536   00014A  EC60  F008         	call	_printf	;wreg free
  1537   00014E                     
  1538                           ;main.c: 173:             printf("\r\n1 - Desligar bomba de agua");
  1539   00014E  0E91               	movlw	low STR_3
  1540   000150  0100               	movlb	0	; () banked
  1541   000152  6F9D               	movwf	printf@fmt& (0+255),b
  1542   000154  0EFF               	movlw	high STR_3
  1543   000156  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1544   000158  EC60  F008         	call	_printf	;wreg free
  1545   00015C                     
  1546                           ;main.c: 174:             printf("\r\n2 - Ativar comtrolo do nivel de agua");
  1547   00015C  0EE5               	movlw	low STR_4
  1548   00015E  0100               	movlb	0	; () banked
  1549   000160  6F9D               	movwf	printf@fmt& (0+255),b
  1550   000162  0EFE               	movlw	high STR_4
  1551   000164  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1552   000166  EC60  F008         	call	_printf	;wreg free
  1553   00016A                     
  1554                           ;main.c: 175:             printf("\r\n3 - Visualizar a percentagem do nivel de agua");
  1555   00016A  0E3D               	movlw	low STR_5
  1556   00016C  0100               	movlb	0	; () banked
  1557   00016E  6F9D               	movwf	printf@fmt& (0+255),b
  1558   000170  0EFE               	movlw	high STR_5
  1559   000172  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1560   000174  EC60  F008         	call	_printf	;wreg free
  1561   000178                     
  1562                           ;main.c: 176:             printf("\r\n4 - Visualizar o nivel de referencia");
  1563   000178  0EBE               	movlw	low STR_6
  1564   00017A  0100               	movlb	0	; () banked
  1565   00017C  6F9D               	movwf	printf@fmt& (0+255),b
  1566   00017E  0EFE               	movlw	high STR_6
  1567   000180  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1568   000182  EC60  F008         	call	_printf	;wreg free
  1569   000186                     
  1570                           ;main.c: 177:             printf("\r\n5 - Programar novo valor de referencia");
  1571   000186  0E6D               	movlw	low STR_7
  1572   000188  0100               	movlb	0	; () banked
  1573   00018A  6F9D               	movwf	printf@fmt& (0+255),b
  1574   00018C  0EFE               	movlw	high STR_7
  1575   00018E  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1576   000190  EC60  F008         	call	_printf	;wreg free
  1577   000194                     
  1578                           ;main.c: 178:             printf("\r\n0 - Voltar ao Menu Principal");
  1579   000194  0E72               	movlw	low STR_8
  1580   000196  0100               	movlb	0	; () banked
  1581   000198  6F9D               	movwf	printf@fmt& (0+255),b
  1582   00019A  0EFF               	movlw	high STR_8
  1583   00019C  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1584   00019E  EC60  F008         	call	_printf	;wreg free
  1585   0001A2                     
  1586                           ;main.c: 179:             printf("\r\nOpcao: ");
  1587   0001A2  0EF5               	movlw	low STR_9
  1588   0001A4  0100               	movlb	0	; () banked
  1589   0001A6  6F9D               	movwf	printf@fmt& (0+255),b
  1590   0001A8  0EFF               	movlw	high STR_9
  1591   0001AA  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1592   0001AC  EC60  F008         	call	_printf	;wreg free
  1593   0001B0                     l3254:
  1594                           
  1595                           ;main.c: 180:             menu = 0;
  1596   0001B0  0E00               	movlw	0
  1597   0001B2  0100               	movlb	0	; () banked
  1598   0001B4  6FF1               	movwf	_menu& (0+255),b
  1599                           
  1600                           ;main.c: 181:             break;
  1601   0001B6  EF9C  F001         	goto	l637
  1602   0001BA                     l3256:
  1603                           
  1604                           ; BSR set to: 0
  1605                           ;main.c: 183:             EUSART1_Write(12);
  1606   0001BA  0E0C               	movlw	12
  1607   0001BC  EC76  F006         	call	_EUSART1_Write
  1608   0001C0                     
  1609                           ;main.c: 185:             printf("\r\nBomba de agua desligada");
  1610   0001C0  0EAE               	movlw	low STR_10
  1611   0001C2  0100               	movlb	0	; () banked
  1612   0001C4  6F9D               	movwf	printf@fmt& (0+255),b
  1613   0001C6  0EFF               	movlw	high STR_10
  1614   0001C8  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1615   0001CA  EC60  F008         	call	_printf	;wreg free
  1616   0001CE                     
  1617                           ;main.c: 186:             printf("\r\n0 - Voltar ao Menu Principal");
  1618   0001CE  0E72               	movlw	low STR_8
  1619   0001D0  0100               	movlb	0	; () banked
  1620   0001D2  6F9D               	movwf	printf@fmt& (0+255),b
  1621   0001D4  0EFF               	movlw	high STR_8
  1622   0001D6  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1623   0001D8  EC60  F008         	call	_printf	;wreg free
  1624   0001DC                     
  1625                           ;main.c: 187:             printf("\r\nOpcao: ");
  1626   0001DC  0EF5               	movlw	low STR_9
  1627   0001DE  0100               	movlb	0	; () banked
  1628   0001E0  6F9D               	movwf	printf@fmt& (0+255),b
  1629   0001E2  0EFF               	movlw	high STR_9
  1630   0001E4  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1631   0001E6  EC60  F008         	call	_printf	;wreg free
  1632   0001EA                     
  1633                           ;main.c: 188:             BombaLigada = 0;
  1634   0001EA  0E00               	movlw	0
  1635   0001EC  0100               	movlb	0	; () banked
  1636   0001EE  6FC4               	movwf	_BombaLigada& (0+255),b	;volatile
  1637   0001F0  EFD8  F000         	goto	l3254
  1638   0001F4                     l3268:
  1639                           
  1640                           ; BSR set to: 0
  1641                           ;main.c: 192:             EUSART1_Write(12);
  1642   0001F4  0E0C               	movlw	12
  1643   0001F6  EC76  F006         	call	_EUSART1_Write
  1644   0001FA                     
  1645                           ;main.c: 194:             printf("\r\nControlo do nivel de agua ativado");
  1646   0001FA  0E0C               	movlw	low STR_13
  1647   0001FC  0100               	movlb	0	; () banked
  1648   0001FE  6F9D               	movwf	printf@fmt& (0+255),b
  1649   000200  0EFF               	movlw	high STR_13
  1650   000202  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1651   000204  EC60  F008         	call	_printf	;wreg free
  1652   000208                     
  1653                           ;main.c: 195:             printf("\r\n0 - Voltar ao Menu Principal");
  1654   000208  0E72               	movlw	low STR_8
  1655   00020A  0100               	movlb	0	; () banked
  1656   00020C  6F9D               	movwf	printf@fmt& (0+255),b
  1657   00020E  0EFF               	movlw	high STR_8
  1658   000210  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1659   000212  EC60  F008         	call	_printf	;wreg free
  1660   000216                     
  1661                           ;main.c: 196:             printf("\r\nOpcao: ");
  1662   000216  0EF5               	movlw	low STR_9
  1663   000218  0100               	movlb	0	; () banked
  1664   00021A  6F9D               	movwf	printf@fmt& (0+255),b
  1665   00021C  0EFF               	movlw	high STR_9
  1666   00021E  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1667   000220  EC60  F008         	call	_printf	;wreg free
  1668   000224  EFD8  F000         	goto	l3254
  1669   000228                     l3278:
  1670                           
  1671                           ; BSR set to: 0
  1672                           ;main.c: 200:             EUSART1_Write(12);
  1673   000228  0E0C               	movlw	12
  1674   00022A  EC76  F006         	call	_EUSART1_Write
  1675   00022E                     
  1676                           ;main.c: 202:             printf("\r\nPercentagem do nivel de agua: %d", nivel_agua);
  1677   00022E  0E30               	movlw	low STR_16
  1678   000230  0100               	movlb	0	; () banked
  1679   000232  6F9D               	movwf	printf@fmt& (0+255),b
  1680   000234  0EFF               	movlw	high STR_16
  1681   000236  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1682   000238  C0C1  F09F         	movff	_nivel_agua,?_printf+2
  1683   00023C  C0C2  F0A0         	movff	_nivel_agua+1,?_printf+3
  1684   000240  EC60  F008         	call	_printf	;wreg free
  1685   000244                     
  1686                           ;main.c: 203:             printf("\r\nbits: %d", convertedValue);
  1687   000244  0EEA               	movlw	low STR_17
  1688   000246  0100               	movlb	0	; () banked
  1689   000248  6F9D               	movwf	printf@fmt& (0+255),b
  1690   00024A  0EFF               	movlw	high STR_17
  1691   00024C  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1692   00024E  C028  F09F         	movff	_convertedValue,?_printf+2
  1693   000252  C029  F0A0         	movff	_convertedValue+1,?_printf+3
  1694   000256  EC60  F008         	call	_printf	;wreg free
  1695   00025A                     
  1696                           ;main.c: 204:             printf("\r\n0 - Voltar ao Menu Principal");
  1697   00025A  0E72               	movlw	low STR_8
  1698   00025C  0100               	movlb	0	; () banked
  1699   00025E  6F9D               	movwf	printf@fmt& (0+255),b
  1700   000260  0EFF               	movlw	high STR_8
  1701   000262  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1702   000264  EC60  F008         	call	_printf	;wreg free
  1703   000268                     
  1704                           ;main.c: 205:             printf("\r\nOpcao: ");
  1705   000268  0EF5               	movlw	low STR_9
  1706   00026A  0100               	movlb	0	; () banked
  1707   00026C  6F9D               	movwf	printf@fmt& (0+255),b
  1708   00026E  0EFF               	movlw	high STR_9
  1709   000270  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1710   000272  EC60  F008         	call	_printf	;wreg free
  1711   000276  EFD8  F000         	goto	l3254
  1712   00027A                     l3290:
  1713                           
  1714                           ; BSR set to: 0
  1715                           ;main.c: 209:             EUSART1_Write(12);
  1716   00027A  0E0C               	movlw	12
  1717   00027C  EC76  F006         	call	_EUSART1_Write
  1718   000280                     
  1719                           ;main.c: 211:             printf("\r\n0 - Voltar ao Menu Principal");
  1720   000280  0E72               	movlw	low STR_8
  1721   000282  0100               	movlb	0	; () banked
  1722   000284  6F9D               	movwf	printf@fmt& (0+255),b
  1723   000286  0EFF               	movlw	high STR_8
  1724   000288  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1725   00028A  EC60  F008         	call	_printf	;wreg free
  1726   00028E                     
  1727                           ;main.c: 212:             printf("\r\nOpcao: ");
  1728   00028E  0EF5               	movlw	low STR_9
  1729   000290  0100               	movlb	0	; () banked
  1730   000292  6F9D               	movwf	printf@fmt& (0+255),b
  1731   000294  0EFF               	movlw	high STR_9
  1732   000296  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1733   000298  EC60  F008         	call	_printf	;wreg free
  1734   00029C  EFD8  F000         	goto	l3254
  1735   0002A0                     l3298:
  1736                           
  1737                           ; BSR set to: 0
  1738                           ;main.c: 216:             EUSART1_Write(12);
  1739   0002A0  0E0C               	movlw	12
  1740   0002A2  EC76  F006         	call	_EUSART1_Write
  1741   0002A6                     
  1742                           ;main.c: 218:             printf("\r\n0 - Voltar ao Menu Principal");
  1743   0002A6  0E72               	movlw	low STR_8
  1744   0002A8  0100               	movlb	0	; () banked
  1745   0002AA  6F9D               	movwf	printf@fmt& (0+255),b
  1746   0002AC  0EFF               	movlw	high STR_8
  1747   0002AE  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1748   0002B0  EC60  F008         	call	_printf	;wreg free
  1749   0002B4                     
  1750                           ;main.c: 219:             printf("\r\nOpcao: ");
  1751   0002B4  0EF5               	movlw	low STR_9
  1752   0002B6  0100               	movlb	0	; () banked
  1753   0002B8  6F9D               	movwf	printf@fmt& (0+255),b
  1754   0002BA  0EFF               	movlw	high STR_9
  1755   0002BC  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1756   0002BE  EC60  F008         	call	_printf	;wreg free
  1757   0002C2  EFD8  F000         	goto	l3254
  1758   0002C6                     l3306:
  1759                           
  1760                           ; BSR set to: 0
  1761                           ;main.c: 223:             EUSART1_Write(12);
  1762   0002C6  0E0C               	movlw	12
  1763   0002C8  EC76  F006         	call	_EUSART1_Write
  1764   0002CC                     
  1765                           ;main.c: 224:             printf("\r\nOpcao Invalida");
  1766   0002CC  0ED9               	movlw	low STR_24
  1767   0002CE  0100               	movlb	0	; () banked
  1768   0002D0  6F9D               	movwf	printf@fmt& (0+255),b
  1769   0002D2  0EFF               	movlw	high STR_24
  1770   0002D4  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1771   0002D6  EC60  F008         	call	_printf	;wreg free
  1772   0002DA                     
  1773                           ;main.c: 225:             printf("\r\nPrima 0 para voltar ao Menu Principal");
  1774   0002DA  0E96               	movlw	low STR_25
  1775   0002DC  0100               	movlb	0	; () banked
  1776   0002DE  6F9D               	movwf	printf@fmt& (0+255),b
  1777   0002E0  0EFE               	movlw	high STR_25
  1778   0002E2  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1779   0002E4  EC60  F008         	call	_printf	;wreg free
  1780   0002E8  EFD8  F000         	goto	l3254
  1781   0002EC                     l3316:
  1782   0002EC  0100               	movlb	0	; () banked
  1783   0002EE  51F1               	movf	_menu& (0+255),w,b
  1784   0002F0  6FA3               	movwf	??_ShowMenuInTerminal& (0+255),b
  1785   0002F2  6BA4               	clrf	(??_ShowMenuInTerminal+1)& (0+255),b
  1786                           
  1787                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1788                           ; Switch size 1, requested type "simple"
  1789                           ; Number of cases is 1, Range of values is 0 to 0
  1790                           ; switch strategies available:
  1791                           ; Name         Instructions Cycles
  1792                           ; simple_byte            4     3 (average)
  1793                           ;	Chosen strategy is simple_byte
  1794   0002F4  51A4               	movf	(??_ShowMenuInTerminal+1)& (0+255),w,b
  1795   0002F6  0A00               	xorlw	0	; case 0
  1796   0002F8  B4D8               	btfsc	status,2,c
  1797   0002FA  EF81  F001         	goto	l3398
  1798   0002FE  EF63  F001         	goto	l3306
  1799   000302                     l3398:
  1800                           
  1801                           ; BSR set to: 0
  1802                           ; Switch size 1, requested type "simple"
  1803                           ; Number of cases is 6, Range of values is 48 to 53
  1804                           ; switch strategies available:
  1805                           ; Name         Instructions Cycles
  1806                           ; simple_byte           19    10 (average)
  1807                           ;	Chosen strategy is simple_byte
  1808   000302  51A3               	movf	??_ShowMenuInTerminal& (0+255),w,b
  1809   000304  0A30               	xorlw	48	; case 48
  1810   000306  B4D8               	btfsc	status,2,c
  1811   000308  EF9D  F000         	goto	l3236
  1812   00030C  0A01               	xorlw	1	; case 49
  1813   00030E  B4D8               	btfsc	status,2,c
  1814   000310  EFDD  F000         	goto	l3256
  1815   000314  0A03               	xorlw	3	; case 50
  1816   000316  B4D8               	btfsc	status,2,c
  1817   000318  EFFA  F000         	goto	l3268
  1818   00031C  0A01               	xorlw	1	; case 51
  1819   00031E  B4D8               	btfsc	status,2,c
  1820   000320  EF14  F001         	goto	l3278
  1821   000324  0A07               	xorlw	7	; case 52
  1822   000326  B4D8               	btfsc	status,2,c
  1823   000328  EF3D  F001         	goto	l3290
  1824   00032C  0A01               	xorlw	1	; case 53
  1825   00032E  B4D8               	btfsc	status,2,c
  1826   000330  EF50  F001         	goto	l3298
  1827   000334  EF63  F001         	goto	l3306
  1828   000338                     l637:
  1829                           
  1830                           ; BSR set to: 0
  1831   000338  0012               	return		;funcret
  1832   00033A                     __end_of_ShowMenuInTerminal:
  1833                           	callstack 0
  1834                           
  1835 ;; *************** function _printf *****************
  1836 ;; Defined at:
  1837 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\printf.c"
  1838 ;; Parameters:    Size  Location     Type
  1839 ;;  fmt             2   61[BANK0 ] PTR const unsigned char 
  1840 ;;		 -> STR_25(40), STR_24(17), STR_23(10), STR_22(31), 
  1841 ;;		 -> STR_21(10), STR_20(31), STR_19(10), STR_18(31), 
  1842 ;;		 -> STR_17(11), STR_16(35), STR_15(10), STR_14(31), 
  1843 ;;		 -> STR_13(36), STR_12(10), STR_11(31), STR_10(26), 
  1844 ;;		 -> STR_9(10), STR_8(31), STR_7(41), STR_6(39), 
  1845 ;;		 -> STR_5(48), STR_4(39), STR_3(29), STR_2(17), 
  1846 ;;		 -> STR_1(31), 
  1847 ;; Auto vars:     Size  Location     Type
  1848 ;;  ap              2   65[BANK0 ] PTR void [1]
  1849 ;;		 -> ?_printf(2), 
  1850 ;;  ret             2    0        int 
  1851 ;; Return value:  Size  Location     Type
  1852 ;;                  2   61[BANK0 ] int 
  1853 ;; Registers used:
  1854 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1855 ;; Tracked objects:
  1856 ;;		On entry : 0/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1860 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1861 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1863 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1864 ;;Total ram usage:        6 bytes
  1865 ;; Hardware stack levels used: 1
  1866 ;; Hardware stack levels required when called: 12
  1867 ;; This function calls:
  1868 ;;		_vfprintf
  1869 ;; This function is called by:
  1870 ;;		_main
  1871 ;;		_ShowMenuInTerminal
  1872 ;; This function uses a non-reentrant model
  1873 ;;
  1874                           
  1875                           	psect	text5
  1876   0010C0                     __ptext5:
  1877                           	callstack 0
  1878   0010C0                     _printf:
  1879                           	callstack 18
  1880   0010C0  0E9F               	movlw	low (?_printf+2)
  1881   0010C2  0100               	movlb	0	; () banked
  1882   0010C4  6FA1               	movwf	printf@ap& (0+255),b
  1883   0010C6  0E00               	movlw	high (?_printf+2)
  1884   0010C8  6FA2               	movwf	(printf@ap+1)& (0+255),b
  1885   0010CA                     
  1886                           ; BSR set to: 0
  1887   0010CA  0E00               	movlw	0
  1888   0010CC  6F95               	movwf	vfprintf@fp& (0+255),b
  1889   0010CE  0E00               	movlw	0
  1890   0010D0  6F96               	movwf	(vfprintf@fp+1)& (0+255),b
  1891   0010D2  C09D  F097         	movff	printf@fmt,vfprintf@fmt
  1892   0010D6  C09E  F098         	movff	printf@fmt+1,vfprintf@fmt+1
  1893   0010DA  0EA1               	movlw	low printf@ap
  1894   0010DC  6F99               	movwf	vfprintf@ap& (0+255),b
  1895   0010DE  0E00               	movlw	high printf@ap
  1896   0010E0  6F9A               	movwf	(vfprintf@ap+1)& (0+255),b
  1897   0010E2  ECA1  F006         	call	_vfprintf	;wreg free
  1898   0010E6  0012               	return		;funcret
  1899   0010E8                     __end_of_printf:
  1900                           	callstack 0
  1901                           
  1902 ;; *************** function _vfprintf *****************
  1903 ;; Defined at:
  1904 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1905 ;; Parameters:    Size  Location     Type
  1906 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
  1907 ;;		 -> NULL(0), 
  1908 ;;  fmt             2   55[BANK0 ] PTR const unsigned char 
  1909 ;;		 -> STR_25(40), STR_24(17), STR_23(10), STR_22(31), 
  1910 ;;		 -> STR_21(10), STR_20(31), STR_19(10), STR_18(31), 
  1911 ;;		 -> STR_17(11), STR_16(35), STR_15(10), STR_14(31), 
  1912 ;;		 -> STR_13(36), STR_12(10), STR_11(31), STR_10(26), 
  1913 ;;		 -> STR_9(10), STR_8(31), STR_7(41), STR_6(39), 
  1914 ;;		 -> STR_5(48), STR_4(39), STR_3(29), STR_2(17), 
  1915 ;;		 -> STR_1(31), 
  1916 ;;  ap              2   57[BANK0 ] PTR PTR void 
  1917 ;;		 -> printf@ap(2), 
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;  cfmt            2   59[BANK0 ] PTR unsigned char 
  1920 ;;		 -> STR_25(40), STR_24(17), STR_23(10), STR_22(31), 
  1921 ;;		 -> STR_21(10), STR_20(31), STR_19(10), STR_18(31), 
  1922 ;;		 -> STR_17(11), STR_16(35), STR_15(10), STR_14(31), 
  1923 ;;		 -> STR_13(36), STR_12(10), STR_11(31), STR_10(26), 
  1924 ;;		 -> STR_9(10), STR_8(31), STR_7(41), STR_6(39), 
  1925 ;;		 -> STR_5(48), STR_4(39), STR_3(29), STR_2(17), 
  1926 ;;		 -> STR_1(31), 
  1927 ;; Return value:  Size  Location     Type
  1928 ;;                  2   53[BANK0 ] int 
  1929 ;; Registers used:
  1930 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1936 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1937 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1939 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1940 ;;Total ram usage:        8 bytes
  1941 ;; Hardware stack levels used: 1
  1942 ;; Hardware stack levels required when called: 11
  1943 ;; This function calls:
  1944 ;;		_vfpfcnvrt
  1945 ;; This function is called by:
  1946 ;;		_printf
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950                           	psect	text6
  1951   000D42                     __ptext6:
  1952                           	callstack 0
  1953   000D42                     _vfprintf:
  1954                           	callstack 18
  1955   000D42                     
  1956                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  1957   000D42  C097  F09B         	movff	vfprintf@fmt,vfprintf@cfmt
  1958   000D46  C098  F09C         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1959                           
  1960                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1961   000D4A  EFB6  F006         	goto	l3222
  1962   000D4E                     l3220:
  1963                           
  1964                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1965   000D4E  C095  F087         	movff	vfprintf@fp,vfpfcnvrt@fp
  1966   000D52  C096  F088         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1967   000D56  0E9B               	movlw	low vfprintf@cfmt
  1968   000D58  0100               	movlb	0	; () banked
  1969   000D5A  6F89               	movwf	vfpfcnvrt@fmt& (0+255),b
  1970   000D5C  0E00               	movlw	high vfprintf@cfmt
  1971   000D5E  6F8A               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1972   000D60  C099  F08B         	movff	vfprintf@ap,vfpfcnvrt@ap
  1973   000D64  C09A  F08C         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1974   000D68  EC69  F002         	call	_vfpfcnvrt	;wreg free
  1975   000D6C                     l3222:
  1976                           
  1977                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1978   000D6C  C09B  FFF6         	movff	vfprintf@cfmt,tblptrl
  1979   000D70  C09C  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1980   000D74                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1981   000D74  6AF8               	clrf	tblptru,c
  1982   000D76                     	endif
  1983   000D76                     	if	0	;tblptru may be non-zero
  1984   000D76                     	endif
  1985   000D76  0008               	tblrd		*
  1986   000D78  50F5               	movf	tablat,w,c
  1987   000D7A  0900               	iorlw	0
  1988   000D7C  A4D8               	btfss	status,2,c
  1989   000D7E  EFC3  F006         	goto	u2231
  1990   000D82  EFC5  F006         	goto	u2230
  1991   000D86                     u2231:
  1992   000D86  EFA7  F006         	goto	l3220
  1993   000D8A                     u2230:
  1994   000D8A                     
  1995                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  1996   000D8A  0E00               	movlw	0
  1997   000D8C  0100               	movlb	0	; () banked
  1998   000D8E  6F96               	movwf	(?_vfprintf+1)& (0+255),b
  1999   000D90  0E00               	movlw	0
  2000   000D92  6F95               	movwf	?_vfprintf& (0+255),b
  2001   000D94                     
  2002                           ; BSR set to: 0
  2003   000D94  0012               	return		;funcret
  2004   000D96                     __end_of_vfprintf:
  2005                           	callstack 0
  2006                           
  2007 ;; *************** function _vfpfcnvrt *****************
  2008 ;; Defined at:
  2009 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;  fp              2   39[BANK0 ] PTR struct _IO_FILE
  2012 ;;		 -> NULL(0), 
  2013 ;;  fmt             2   41[BANK0 ] PTR PTR unsigned char 
  2014 ;;		 -> vfprintf@cfmt(2), 
  2015 ;;  ap              2   43[BANK0 ] PTR PTR void 
  2016 ;;		 -> printf@ap(2), 
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;  convarg         4   47[BANK0 ] struct .
  2019 ;;  cp              2   51[BANK0 ] PTR unsigned char 
  2020 ;;		 -> STR_25(40), STR_24(17), STR_23(10), STR_22(31), 
  2021 ;;		 -> STR_21(10), STR_20(31), STR_19(10), STR_18(31), 
  2022 ;;		 -> STR_17(11), STR_16(35), STR_15(10), STR_14(31), 
  2023 ;;		 -> STR_13(36), STR_12(10), STR_11(31), STR_10(26), 
  2024 ;;		 -> STR_9(10), STR_8(31), STR_7(41), STR_6(39), 
  2025 ;;		 -> STR_5(48), STR_4(39), STR_3(29), STR_2(17), 
  2026 ;;		 -> STR_1(31), 
  2027 ;;  i               2    0        int 
  2028 ;;  done            2    0        int 
  2029 ;;  c               1    0        unsigned char 
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  1    wreg      void 
  2032 ;; Registers used:
  2033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2039 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2040 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2041 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2042 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2043 ;;Total ram usage:       14 bytes
  2044 ;; Hardware stack levels used: 1
  2045 ;; Hardware stack levels required when called: 10
  2046 ;; This function calls:
  2047 ;;		_dtoa
  2048 ;;		_fputc
  2049 ;; This function is called by:
  2050 ;;		_vfprintf
  2051 ;; This function uses a non-reentrant model
  2052 ;;
  2053                           
  2054                           	psect	text7
  2055   0004D2                     __ptext7:
  2056                           	callstack 0
  2057   0004D2                     _vfpfcnvrt:
  2058                           	callstack 18
  2059   0004D2                     
  2060                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  2061   0004D2  C089  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2062   0004D6  C08A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2063   0004DA  CFDE FFF6          	movff	postinc2,tblptrl
  2064   0004DE  CFDD FFF7          	movff	postdec2,tblptrh
  2065   0004E2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2066   0004E2  6AF8               	clrf	tblptru,c
  2067   0004E4                     	endif
  2068   0004E4                     	if	0	;tblptru may be non-zero
  2069   0004E4                     	endif
  2070   0004E4  0008               	tblrd		*
  2071   0004E6  50F5               	movf	tablat,w,c
  2072   0004E8  0A25               	xorlw	37
  2073   0004EA  A4D8               	btfss	status,2,c
  2074   0004EC  EF7A  F002         	goto	u2201
  2075   0004F0  EF7C  F002         	goto	u2200
  2076   0004F4                     u2201:
  2077   0004F4  EFE9  F002         	goto	l3212
  2078   0004F8                     u2200:
  2079   0004F8                     
  2080                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  2081   0004F8  C089  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2082   0004FC  C08A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2083   000500  2ADE               	incf	postinc2,f,c
  2084   000502  0E00               	movlw	0
  2085   000504  22DD               	addwfc	postdec2,f,c
  2086   000506                     
  2087                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  2088   000506  0E00               	movlw	0
  2089   000508  6E23               	movwf	(_width+1)^0,c
  2090   00050A  0E00               	movlw	0
  2091   00050C  6E22               	movwf	_width^0,c
  2092   00050E  C022  F0C3         	movff	_width,_flags
  2093   000512                     
  2094                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  2095   000512  6824               	setf	_prec^0,c
  2096   000514  6825               	setf	(_prec+1)^0,c
  2097   000516                     
  2098                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  2099   000516  C089  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2100   00051A  C08A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2101   00051E  CFDE F093          	movff	postinc2,vfpfcnvrt@cp
  2102   000522  CFDD F094          	movff	postdec2,vfpfcnvrt@cp+1
  2103   000526                     
  2104                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2105   000526  C093  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2106   00052A  C094  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2107   00052E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2108   00052E  6AF8               	clrf	tblptru,c
  2109   000530                     	endif
  2110   000530                     	if	0	;tblptru may be non-zero
  2111   000530                     	endif
  2112   000530  0008               	tblrd		*
  2113   000532  50F5               	movf	tablat,w,c
  2114   000534  0A64               	xorlw	100
  2115   000536  B4D8               	btfsc	status,2,c
  2116   000538  EFA0  F002         	goto	u2211
  2117   00053C  EFA2  F002         	goto	u2210
  2118   000540                     u2211:
  2119   000540  EFB1  F002         	goto	l3202
  2120   000544                     u2210:
  2121   000544  C093  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2122   000548  C094  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2123   00054C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2124   00054C  6AF8               	clrf	tblptru,c
  2125   00054E                     	endif
  2126   00054E                     	if	0	;tblptru may be non-zero
  2127   00054E                     	endif
  2128   00054E  0008               	tblrd		*
  2129   000550  50F5               	movf	tablat,w,c
  2130   000552  0A69               	xorlw	105
  2131   000554  A4D8               	btfss	status,2,c
  2132   000556  EFAF  F002         	goto	u2221
  2133   00055A  EFB1  F002         	goto	u2220
  2134   00055E                     u2221:
  2135   00055E  EFE0  F002         	goto	l3208
  2136   000562                     u2220:
  2137   000562                     l3202:
  2138                           
  2139                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2140   000562  C08B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2141   000566  C08C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2142   00056A  CFDF F08D          	movff	indf2,??_vfpfcnvrt
  2143   00056E  0E02               	movlw	2
  2144   000570  26DE               	addwf	postinc2,f,c
  2145   000572  CFDF F08E          	movff	indf2,??_vfpfcnvrt+1
  2146   000576  0E00               	movlw	0
  2147   000578  22DD               	addwfc	postdec2,f,c
  2148   00057A  C08D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2149   00057E  C08E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2150   000582  CFDE F08F          	movff	postinc2,vfpfcnvrt@convarg
  2151   000586  CFDD F090          	movff	postdec2,vfpfcnvrt@convarg+1
  2152                           
  2153                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  2154   00058A  0E01               	movlw	1
  2155   00058C  0100               	movlb	0	; () banked
  2156   00058E  2593               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2157   000590  6F8D               	movwf	??_vfpfcnvrt& (0+255),b
  2158   000592  0E00               	movlw	0
  2159   000594  2194               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2160   000596  6F8E               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2161   000598  C089  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2162   00059C  C08A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2163   0005A0  C08D  FFDE         	movff	??_vfpfcnvrt,postinc2
  2164   0005A4  C08E  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2165   0005A8                     
  2166                           ; BSR set to: 0
  2167                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  2168   0005A8  C087  F07A         	movff	vfpfcnvrt@fp,dtoa@fp
  2169   0005AC  C088  F07B         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2170   0005B0  C08F  F07C         	movff	vfpfcnvrt@convarg,dtoa@d
  2171   0005B4  C090  F07D         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2172   0005B8  EC9D  F001         	call	_dtoa	;wreg free
  2173   0005BC  EFFF  F002         	goto	l1381
  2174   0005C0                     l3208:
  2175                           
  2176                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  2177   0005C0  C089  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2178   0005C4  C08A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2179   0005C8  2ADE               	incf	postinc2,f,c
  2180   0005CA  0E00               	movlw	0
  2181   0005CC  22DD               	addwfc	postdec2,f,c
  2182   0005CE  EFFF  F002         	goto	l1381
  2183   0005D2                     l3212:
  2184                           
  2185                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  2186   0005D2  C089  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2187   0005D6  C08A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2188   0005DA  CFDE FFF6          	movff	postinc2,tblptrl
  2189   0005DE  CFDD FFF7          	movff	postdec2,tblptrh
  2190   0005E2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2191   0005E2  6AF8               	clrf	tblptru,c
  2192   0005E4                     	endif
  2193   0005E4                     	if	0	;tblptru may be non-zero
  2194   0005E4                     	endif
  2195   0005E4  0008               	tblrd		*
  2196   0005E6  50F5               	movf	tablat,w,c
  2197   0005E8  0100               	movlb	0	; () banked
  2198   0005EA  6F60               	movwf	fputc@c& (0+255),b
  2199   0005EC  6B61               	clrf	(fputc@c+1)& (0+255),b
  2200   0005EE  C087  F062         	movff	vfpfcnvrt@fp,fputc@fp
  2201   0005F2  C088  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2202   0005F6  EC86  F003         	call	_fputc	;wreg free
  2203   0005FA  EFE0  F002         	goto	l3208
  2204   0005FE                     l1381:
  2205   0005FE  0012               	return		;funcret
  2206   000600                     __end_of_vfpfcnvrt:
  2207                           	callstack 0
  2208                           
  2209 ;; *************** function _dtoa *****************
  2210 ;; Defined at:
  2211 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2212 ;; Parameters:    Size  Location     Type
  2213 ;;  fp              2   26[BANK0 ] PTR struct _IO_FILE
  2214 ;;		 -> NULL(0), 
  2215 ;;  d               2   28[BANK0 ] int 
  2216 ;; Auto vars:     Size  Location     Type
  2217 ;;  i               2   37[BANK0 ] int 
  2218 ;;  w               2   34[BANK0 ] int 
  2219 ;;  p               2   32[BANK0 ] int 
  2220 ;;  s               1   36[BANK0 ] unsigned char 
  2221 ;; Return value:  Size  Location     Type
  2222 ;;                  1    wreg      void 
  2223 ;; Registers used:
  2224 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2225 ;; Tracked objects:
  2226 ;;		On entry : 0/0
  2227 ;;		On exit  : 0/0
  2228 ;;		Unchanged: 0/0
  2229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2230 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2231 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2233 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2234 ;;Total ram usage:       13 bytes
  2235 ;; Hardware stack levels used: 1
  2236 ;; Hardware stack levels required when called: 9
  2237 ;; This function calls:
  2238 ;;		___awdiv
  2239 ;;		___awmod
  2240 ;;		_abs
  2241 ;;		_pad
  2242 ;; This function is called by:
  2243 ;;		_vfpfcnvrt
  2244 ;; This function uses a non-reentrant model
  2245 ;;
  2246                           
  2247                           	psect	text8
  2248   00033A                     __ptext8:
  2249                           	callstack 0
  2250   00033A                     _dtoa:
  2251                           	callstack 18
  2252   00033A                     
  2253                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  2254   00033A  0100               	movlb	0	; () banked
  2255   00033C  BF7D               	btfsc	(dtoa@d+1)& (0+255),7,b
  2256   00033E  EFA3  F001         	goto	u2101
  2257   000342  EFA6  F001         	goto	u2100
  2258   000346                     u2101:
  2259   000346  0E01               	movlw	1
  2260   000348  EFA7  F001         	goto	u2110
  2261   00034C                     u2100:
  2262   00034C  0E00               	movlw	0
  2263   00034E                     u2110:
  2264   00034E  6F84               	movwf	dtoa@s& (0+255),b
  2265   000350                     
  2266                           ; BSR set to: 0
  2267                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  2268   000350  5184               	movf	dtoa@s& (0+255),w,b
  2269   000352  B4D8               	btfsc	status,2,c
  2270   000354  EFAE  F001         	goto	u2121
  2271   000358  EFB0  F001         	goto	u2120
  2272   00035C                     u2121:
  2273   00035C  EFB4  F001         	goto	l3144
  2274   000360                     u2120:
  2275   000360                     
  2276                           ; BSR set to: 0
  2277                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  2278   000360  6D7C               	negf	dtoa@d& (0+255),b
  2279   000362  1F7D               	comf	(dtoa@d+1)& (0+255),f,b
  2280   000364  B0D8               	btfsc	status,0,c
  2281   000366  2B7D               	incf	(dtoa@d+1)& (0+255),f,b
  2282   000368                     l3144:
  2283                           
  2284                           ; BSR set to: 0
  2285                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  2286   000368  BE25               	btfsc	(_prec+1)^0,7,c
  2287   00036A  EFBB  F001         	goto	u2130
  2288   00036E  EFB9  F001         	goto	u2131
  2289   000372                     u2131:
  2290   000372  EFC1  F001         	goto	l1360
  2291   000376                     u2130:
  2292   000376                     
  2293                           ; BSR set to: 0
  2294   000376  0E00               	movlw	0
  2295   000378  6F81               	movwf	(dtoa@p+1)& (0+255),b
  2296   00037A  0E01               	movlw	1
  2297   00037C  6F80               	movwf	dtoa@p& (0+255),b
  2298   00037E  EFC5  F001         	goto	l1362
  2299   000382                     l1360:
  2300                           
  2301                           ; BSR set to: 0
  2302   000382  C024  F080         	movff	_prec,dtoa@p
  2303   000386  C025  F081         	movff	_prec+1,dtoa@p+1
  2304   00038A                     l1362:
  2305                           
  2306                           ; BSR set to: 0
  2307                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  2308   00038A  C022  F082         	movff	_width,dtoa@w
  2309   00038E  C023  F083         	movff	_width+1,dtoa@w+1
  2310   000392                     
  2311                           ; BSR set to: 0
  2312                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  2313   000392  5184               	movf	dtoa@s& (0+255),w,b
  2314   000394  B4D8               	btfsc	status,2,c
  2315   000396  EFCF  F001         	goto	u2141
  2316   00039A  EFD1  F001         	goto	u2140
  2317   00039E                     u2141:
  2318   00039E  EFE8  F001         	goto	l1363
  2319   0003A2                     u2140:
  2320   0003A2                     
  2321                           ; BSR set to: 0
  2322                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  2323   0003A2  0782               	decf	dtoa@w& (0+255),f,b
  2324   0003A4  A0D8               	btfss	status,0,c
  2325   0003A6  0783               	decf	(dtoa@w+1)& (0+255),f,b
  2326   0003A8                     
  2327                           ; BSR set to: 0
  2328                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  2329   0003A8  5184               	movf	dtoa@s& (0+255),w,b
  2330   0003AA  A4D8               	btfss	status,2,c
  2331   0003AC  EFDA  F001         	goto	u2151
  2332   0003B0  EFDC  F001         	goto	u2150
  2333   0003B4                     u2151:
  2334   0003B4  EFE2  F001         	goto	l3156
  2335   0003B8                     u2150:
  2336   0003B8                     
  2337                           ; BSR set to: 0
  2338   0003B8  0E00               	movlw	0
  2339   0003BA  6F7F               	movwf	(_dtoa$2071+1)& (0+255),b
  2340   0003BC  0E2B               	movlw	43
  2341   0003BE  6F7E               	movwf	_dtoa$2071& (0+255),b
  2342   0003C0  EFE6  F001         	goto	l3158
  2343   0003C4                     l3156:
  2344                           
  2345                           ; BSR set to: 0
  2346   0003C4  0E00               	movlw	0
  2347   0003C6  6F7F               	movwf	(_dtoa$2071+1)& (0+255),b
  2348   0003C8  0E2D               	movlw	45
  2349   0003CA  6F7E               	movwf	_dtoa$2071& (0+255),b
  2350   0003CC                     l3158:
  2351                           
  2352                           ; BSR set to: 0
  2353   0003CC  C07E  F084         	movff	_dtoa$2071,dtoa@s
  2354   0003D0                     l1363:
  2355                           
  2356                           ; BSR set to: 0
  2357                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  2358   0003D0  0E00               	movlw	0
  2359   0003D2  6F86               	movwf	(dtoa@i+1)& (0+255),b
  2360   0003D4  0E1F               	movlw	31
  2361   0003D6  6F85               	movwf	dtoa@i& (0+255),b
  2362   0003D8                     
  2363                           ; BSR set to: 0
  2364                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  2365   0003D8  0E00               	movlw	0
  2366   0003DA  6FE5               	movwf	(_dbuf+31)& (0+255),b
  2367                           
  2368                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2369   0003DC  EF21  F002         	goto	l3172
  2370   0003E0                     l3162:
  2371                           
  2372                           ; BSR set to: 0
  2373                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  2374   0003E0  0785               	decf	dtoa@i& (0+255),f,b
  2375   0003E2  A0D8               	btfss	status,0,c
  2376   0003E4  0786               	decf	(dtoa@i+1)& (0+255),f,b
  2377   0003E6                     
  2378                           ; BSR set to: 0
  2379                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  2380   0003E6  0EC6               	movlw	low _dbuf
  2381   0003E8  2585               	addwf	dtoa@i& (0+255),w,b
  2382   0003EA  6ED9               	movwf	fsr2l,c
  2383   0003EC  0E00               	movlw	high _dbuf
  2384   0003EE  2186               	addwfc	(dtoa@i+1)& (0+255),w,b
  2385   0003F0  6EDA               	movwf	fsr2h,c
  2386   0003F2  C07C  F060         	movff	dtoa@d,___awmod@dividend
  2387   0003F6  C07D  F061         	movff	dtoa@d+1,___awmod@dividend+1
  2388   0003FA  0E00               	movlw	0
  2389   0003FC  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  2390   0003FE  0E0A               	movlw	10
  2391   000400  6F62               	movwf	___awmod@divisor& (0+255),b
  2392   000402  EC09  F005         	call	___awmod	;wreg free
  2393   000406  C060  F064         	movff	?___awmod,abs@a
  2394   00040A  C061  F065         	movff	?___awmod+1,abs@a+1
  2395   00040E  EC62  F007         	call	_abs	;wreg free
  2396   000412  0100               	movlb	0	; () banked
  2397   000414  5164               	movf	?_abs& (0+255),w,b
  2398   000416  0F30               	addlw	48
  2399   000418  6EDF               	movwf	indf2,c
  2400   00041A                     
  2401                           ; BSR set to: 0
  2402                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  2403   00041A  0780               	decf	dtoa@p& (0+255),f,b
  2404   00041C  A0D8               	btfss	status,0,c
  2405   00041E  0781               	decf	(dtoa@p+1)& (0+255),f,b
  2406   000420                     
  2407                           ; BSR set to: 0
  2408                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  2409   000420  0782               	decf	dtoa@w& (0+255),f,b
  2410   000422  A0D8               	btfss	status,0,c
  2411   000424  0783               	decf	(dtoa@w+1)& (0+255),f,b
  2412   000426                     
  2413                           ; BSR set to: 0
  2414                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  2415   000426  C07C  F060         	movff	dtoa@d,___awdiv@dividend
  2416   00042A  C07D  F061         	movff	dtoa@d+1,___awdiv@dividend+1
  2417   00042E  0E00               	movlw	0
  2418   000430  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  2419   000432  0E0A               	movlw	10
  2420   000434  6F62               	movwf	___awdiv@divisor& (0+255),b
  2421   000436  ECEC  F003         	call	___awdiv	;wreg free
  2422   00043A  C060  F07C         	movff	?___awdiv,dtoa@d
  2423   00043E  C061  F07D         	movff	?___awdiv+1,dtoa@d+1
  2424   000442                     l3172:
  2425                           
  2426                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2427   000442  0100               	movlb	0	; () banked
  2428   000444  BF86               	btfsc	(dtoa@i+1)& (0+255),7,b
  2429   000446  EF2D  F002         	goto	u2161
  2430   00044A  5186               	movf	(dtoa@i+1)& (0+255),w,b
  2431   00044C  E108               	bnz	u2160
  2432   00044E  0585               	decf	dtoa@i& (0+255),w,b
  2433   000450  A0D8               	btfss	status,0,c
  2434   000452  EF2D  F002         	goto	u2161
  2435   000456  EF2F  F002         	goto	u2160
  2436   00045A                     u2161:
  2437   00045A  EF45  F002         	goto	l3178
  2438   00045E                     u2160:
  2439   00045E                     
  2440                           ; BSR set to: 0
  2441   00045E  517C               	movf	dtoa@d& (0+255),w,b
  2442   000460  117D               	iorwf	(dtoa@d+1)& (0+255),w,b
  2443   000462  A4D8               	btfss	status,2,c
  2444   000464  EF36  F002         	goto	u2171
  2445   000468  EF38  F002         	goto	u2170
  2446   00046C                     u2171:
  2447   00046C  EFF0  F001         	goto	l3162
  2448   000470                     u2170:
  2449   000470                     
  2450                           ; BSR set to: 0
  2451   000470  BF81               	btfsc	(dtoa@p+1)& (0+255),7,b
  2452   000472  EF45  F002         	goto	u2180
  2453   000476  5181               	movf	(dtoa@p+1)& (0+255),w,b
  2454   000478  E106               	bnz	u2181
  2455   00047A  0580               	decf	dtoa@p& (0+255),w,b
  2456   00047C  B0D8               	btfsc	status,0,c
  2457   00047E  EF43  F002         	goto	u2181
  2458   000482  EF45  F002         	goto	u2180
  2459   000486                     u2181:
  2460   000486  EFF0  F001         	goto	l3162
  2461   00048A                     u2180:
  2462   00048A                     l3178:
  2463                           
  2464                           ; BSR set to: 0
  2465                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  2466   00048A  5184               	movf	dtoa@s& (0+255),w,b
  2467   00048C  B4D8               	btfsc	status,2,c
  2468   00048E  EF4B  F002         	goto	u2191
  2469   000492  EF4D  F002         	goto	u2190
  2470   000496                     u2191:
  2471   000496  EF58  F002         	goto	l3184
  2472   00049A                     u2190:
  2473   00049A                     
  2474                           ; BSR set to: 0
  2475                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  2476   00049A  0785               	decf	dtoa@i& (0+255),f,b
  2477   00049C  A0D8               	btfss	status,0,c
  2478   00049E  0786               	decf	(dtoa@i+1)& (0+255),f,b
  2479   0004A0                     
  2480                           ; BSR set to: 0
  2481                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  2482   0004A0  0EC6               	movlw	low _dbuf
  2483   0004A2  2585               	addwf	dtoa@i& (0+255),w,b
  2484   0004A4  6ED9               	movwf	fsr2l,c
  2485   0004A6  0E00               	movlw	high _dbuf
  2486   0004A8  2186               	addwfc	(dtoa@i+1)& (0+255),w,b
  2487   0004AA  6EDA               	movwf	fsr2h,c
  2488   0004AC  C084  FFDF         	movff	dtoa@s,indf2
  2489   0004B0                     l3184:
  2490                           
  2491                           ; BSR set to: 0
  2492                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2493   0004B0  C07A  F070         	movff	dtoa@fp,pad@fp
  2494   0004B4  C07B  F071         	movff	dtoa@fp+1,pad@fp+1
  2495   0004B8  0EC6               	movlw	low _dbuf
  2496   0004BA  2585               	addwf	dtoa@i& (0+255),w,b
  2497   0004BC  6F72               	movwf	pad@buf& (0+255),b
  2498   0004BE  0E00               	movlw	high _dbuf
  2499   0004C0  2186               	addwfc	(dtoa@i+1)& (0+255),w,b
  2500   0004C2  6F73               	movwf	(pad@buf+1)& (0+255),b
  2501   0004C4  C082  F074         	movff	dtoa@w,pad@p
  2502   0004C8  C083  F075         	movff	dtoa@w+1,pad@p+1
  2503   0004CC  EC62  F005         	call	_pad	;wreg free
  2504   0004D0  0012               	return		;funcret
  2505   0004D2                     __end_of_dtoa:
  2506                           	callstack 0
  2507                           
  2508 ;; *************** function _pad *****************
  2509 ;; Defined at:
  2510 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2511 ;; Parameters:    Size  Location     Type
  2512 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  2513 ;;		 -> NULL(0), 
  2514 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  2515 ;;		 -> dbuf(32), 
  2516 ;;  p               2   20[BANK0 ] int 
  2517 ;; Auto vars:     Size  Location     Type
  2518 ;;  w               2   24[BANK0 ] int 
  2519 ;;  i               2   22[BANK0 ] int 
  2520 ;; Return value:  Size  Location     Type
  2521 ;;                  1    wreg      void 
  2522 ;; Registers used:
  2523 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2524 ;; Tracked objects:
  2525 ;;		On entry : 0/0
  2526 ;;		On exit  : 0/0
  2527 ;;		Unchanged: 0/0
  2528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2529 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2530 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2531 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2532 ;;      Totals:         1      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2533 ;;Total ram usage:       11 bytes
  2534 ;; Hardware stack levels used: 1
  2535 ;; Hardware stack levels required when called: 8
  2536 ;; This function calls:
  2537 ;;		_fputc
  2538 ;;		_fputs
  2539 ;; This function is called by:
  2540 ;;		_dtoa
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           	psect	text9
  2545   000AC4                     __ptext9:
  2546                           	callstack 0
  2547   000AC4                     _pad:
  2548                           	callstack 18
  2549   000AC4                     
  2550                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  2551   000AC4  0100               	movlb	0	; () banked
  2552   000AC6  BF75               	btfsc	(pad@p+1)& (0+255),7,b
  2553   000AC8  EF68  F005         	goto	u2071
  2554   000ACC  EF6A  F005         	goto	u2070
  2555   000AD0                     u2071:
  2556   000AD0  EF70  F005         	goto	l3124
  2557   000AD4                     u2070:
  2558   000AD4                     
  2559                           ; BSR set to: 0
  2560   000AD4  C074  F078         	movff	pad@p,pad@w
  2561   000AD8  C075  F079         	movff	pad@p+1,pad@w+1
  2562   000ADC  EF74  F005         	goto	l1351
  2563   000AE0                     l3124:
  2564                           
  2565                           ; BSR set to: 0
  2566   000AE0  0E00               	movlw	0
  2567   000AE2  6F79               	movwf	(pad@w+1)& (0+255),b
  2568   000AE4  0E00               	movlw	0
  2569   000AE6  6F78               	movwf	pad@w& (0+255),b
  2570   000AE8                     l1351:
  2571                           
  2572                           ; BSR set to: 0
  2573                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  2574   000AE8  0E00               	movlw	0
  2575   000AEA  6F77               	movwf	(pad@i+1)& (0+255),b
  2576   000AEC  0E00               	movlw	0
  2577   000AEE  6F76               	movwf	pad@i& (0+255),b
  2578                           
  2579                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2580   000AF0  EF87  F005         	goto	l3130
  2581   000AF4                     l3126:
  2582                           
  2583                           ; BSR set to: 0
  2584                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  2585   000AF4  0E00               	movlw	0
  2586   000AF6  6F61               	movwf	(fputc@c+1)& (0+255),b
  2587   000AF8  0E20               	movlw	32
  2588   000AFA  6F60               	movwf	fputc@c& (0+255),b
  2589   000AFC  C070  F062         	movff	pad@fp,fputc@fp
  2590   000B00  C071  F063         	movff	pad@fp+1,fputc@fp+1
  2591   000B04  EC86  F003         	call	_fputc	;wreg free
  2592   000B08                     
  2593                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  2594   000B08  0100               	movlb	0	; () banked
  2595   000B0A  4B76               	infsnz	pad@i& (0+255),f,b
  2596   000B0C  2B77               	incf	(pad@i+1)& (0+255),f,b
  2597   000B0E                     l3130:
  2598                           
  2599                           ; BSR set to: 0
  2600                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2601   000B0E  5178               	movf	pad@w& (0+255),w,b
  2602   000B10  5D76               	subwf	pad@i& (0+255),w,b
  2603   000B12  5177               	movf	(pad@i+1)& (0+255),w,b
  2604   000B14  0A80               	xorlw	128
  2605   000B16  6E21               	movwf	??_pad^0,c
  2606   000B18  5179               	movf	(pad@w+1)& (0+255),w,b
  2607   000B1A  0A80               	xorlw	128
  2608   000B1C  5821               	subwfb	??_pad^0,w,c
  2609   000B1E  A0D8               	btfss	status,0,c
  2610   000B20  EF94  F005         	goto	u2081
  2611   000B24  EF96  F005         	goto	u2080
  2612   000B28                     u2081:
  2613   000B28  EF7A  F005         	goto	l3126
  2614   000B2C                     u2080:
  2615   000B2C                     
  2616                           ; BSR set to: 0
  2617                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  2618   000B2C  C072  F069         	movff	pad@buf,fputs@s
  2619   000B30  C073  F06A         	movff	pad@buf+1,fputs@s+1
  2620   000B34  C070  F06B         	movff	pad@fp,fputs@fp
  2621   000B38  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  2622   000B3C  EC1C  F007         	call	_fputs	;wreg free
  2623   000B40  0012               	return		;funcret
  2624   000B42                     __end_of_pad:
  2625                           	callstack 0
  2626                           
  2627 ;; *************** function _fputs *****************
  2628 ;; Defined at:
  2629 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  2630 ;; Parameters:    Size  Location     Type
  2631 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  2632 ;;		 -> dbuf(32), 
  2633 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  2634 ;;		 -> NULL(0), 
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;  i               2   14[BANK0 ] int 
  2637 ;;  c               1   13[BANK0 ] unsigned char 
  2638 ;; Return value:  Size  Location     Type
  2639 ;;                  2    9[BANK0 ] int 
  2640 ;; Registers used:
  2641 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2642 ;; Tracked objects:
  2643 ;;		On entry : 0/0
  2644 ;;		On exit  : 0/0
  2645 ;;		Unchanged: 0/0
  2646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2647 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2648 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2650 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2651 ;;Total ram usage:        7 bytes
  2652 ;; Hardware stack levels used: 1
  2653 ;; Hardware stack levels required when called: 7
  2654 ;; This function calls:
  2655 ;;		_fputc
  2656 ;; This function is called by:
  2657 ;;		_pad
  2658 ;; This function uses a non-reentrant model
  2659 ;;
  2660                           
  2661                           	psect	text10
  2662   000E38                     __ptext10:
  2663                           	callstack 0
  2664   000E38                     _fputs:
  2665                           	callstack 18
  2666   000E38  0E00               	movlw	0
  2667   000E3A  0100               	movlb	0	; () banked
  2668   000E3C  6F6F               	movwf	(fputs@i+1)& (0+255),b
  2669   000E3E  0E00               	movlw	0
  2670   000E40  6F6E               	movwf	fputs@i& (0+255),b
  2671   000E42  EF2F  F007         	goto	l3038
  2672   000E46                     l3034:
  2673                           
  2674                           ; BSR set to: 0
  2675   000E46  C06D  F060         	movff	fputs@c,fputc@c
  2676   000E4A  6B61               	clrf	(fputc@c+1)& (0+255),b
  2677   000E4C  C06B  F062         	movff	fputs@fp,fputc@fp
  2678   000E50  C06C  F063         	movff	fputs@fp+1,fputc@fp+1
  2679   000E54  EC86  F003         	call	_fputc	;wreg free
  2680   000E58  0100               	movlb	0	; () banked
  2681   000E5A  4B6E               	infsnz	fputs@i& (0+255),f,b
  2682   000E5C  2B6F               	incf	(fputs@i+1)& (0+255),f,b
  2683   000E5E                     l3038:
  2684                           
  2685                           ; BSR set to: 0
  2686   000E5E  516E               	movf	fputs@i& (0+255),w,b
  2687   000E60  2569               	addwf	fputs@s& (0+255),w,b
  2688   000E62  6ED9               	movwf	fsr2l,c
  2689   000E64  516F               	movf	(fputs@i+1)& (0+255),w,b
  2690   000E66  216A               	addwfc	(fputs@s+1)& (0+255),w,b
  2691   000E68  6EDA               	movwf	fsr2h,c
  2692   000E6A  50DF               	movf	indf2,w,c
  2693   000E6C  6F6D               	movwf	fputs@c& (0+255),b
  2694   000E6E  516D               	movf	fputs@c& (0+255),w,b
  2695   000E70  A4D8               	btfss	status,2,c
  2696   000E72  EF3D  F007         	goto	u1941
  2697   000E76  EF3F  F007         	goto	u1940
  2698   000E7A                     u1941:
  2699   000E7A  EF23  F007         	goto	l3034
  2700   000E7E                     u1940:
  2701   000E7E                     
  2702                           ; BSR set to: 0
  2703   000E7E  0012               	return		;funcret
  2704   000E80                     __end_of_fputs:
  2705                           	callstack 0
  2706                           
  2707 ;; *************** function _fputc *****************
  2708 ;; Defined at:
  2709 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  2710 ;; Parameters:    Size  Location     Type
  2711 ;;  c               2    0[BANK0 ] int 
  2712 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  2713 ;;		 -> NULL(0), 
  2714 ;; Auto vars:     Size  Location     Type
  2715 ;;		None
  2716 ;; Return value:  Size  Location     Type
  2717 ;;                  2    0[BANK0 ] int 
  2718 ;; Registers used:
  2719 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2720 ;; Tracked objects:
  2721 ;;		On entry : 0/0
  2722 ;;		On exit  : 0/0
  2723 ;;		Unchanged: 0/0
  2724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2725 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2727 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2728 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2729 ;;Total ram usage:        9 bytes
  2730 ;; Hardware stack levels used: 1
  2731 ;; Hardware stack levels required when called: 6
  2732 ;; This function calls:
  2733 ;;		_putch
  2734 ;; This function is called by:
  2735 ;;		_pad
  2736 ;;		_vfpfcnvrt
  2737 ;;		_fputs
  2738 ;; This function uses a non-reentrant model
  2739 ;;
  2740                           
  2741                           	psect	text11
  2742   00070C                     __ptext11:
  2743                           	callstack 0
  2744   00070C                     _fputc:
  2745                           	callstack 21
  2746   00070C  0100               	movlb	0	; () banked
  2747   00070E  5162               	movf	fputc@fp& (0+255),w,b
  2748   000710  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  2749   000712  B4D8               	btfsc	status,2,c
  2750   000714  EF8E  F003         	goto	u1901
  2751   000718  EF90  F003         	goto	u1900
  2752   00071C                     u1901:
  2753   00071C  EF99  F003         	goto	l3022
  2754   000720                     u1900:
  2755   000720                     
  2756                           ; BSR set to: 0
  2757   000720  5162               	movf	fputc@fp& (0+255),w,b
  2758   000722  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  2759   000724  A4D8               	btfss	status,2,c
  2760   000726  EF97  F003         	goto	u1911
  2761   00072A  EF99  F003         	goto	u1910
  2762   00072E                     u1911:
  2763   00072E  EF9E  F003         	goto	l3024
  2764   000732                     u1910:
  2765   000732                     l3022:
  2766                           
  2767                           ; BSR set to: 0
  2768   000732  5160               	movf	fputc@c& (0+255),w,b
  2769   000734  EC02  F009         	call	_putch
  2770   000738  EFEB  F003         	goto	l1406
  2771   00073C                     l3024:
  2772                           
  2773                           ; BSR set to: 0
  2774   00073C  EE20 F00A          	lfsr	2,10
  2775   000740  5162               	movf	fputc@fp& (0+255),w,b
  2776   000742  26D9               	addwf	fsr2l,f,c
  2777   000744  5163               	movf	(fputc@fp+1)& (0+255),w,b
  2778   000746  22DA               	addwfc	fsr2h,f,c
  2779   000748  50DE               	movf	postinc2,w,c
  2780   00074A  10DE               	iorwf	postinc2,w,c
  2781   00074C  B4D8               	btfsc	status,2,c
  2782   00074E  EFAB  F003         	goto	u1921
  2783   000752  EFAD  F003         	goto	u1920
  2784   000756                     u1921:
  2785   000756  EFC8  F003         	goto	l3028
  2786   00075A                     u1920:
  2787   00075A                     
  2788                           ; BSR set to: 0
  2789   00075A  EE20 F00A          	lfsr	2,10
  2790   00075E  5162               	movf	fputc@fp& (0+255),w,b
  2791   000760  26D9               	addwf	fsr2l,f,c
  2792   000762  5163               	movf	(fputc@fp+1)& (0+255),w,b
  2793   000764  22DA               	addwfc	fsr2h,f,c
  2794   000766  EE10 F003          	lfsr	1,3
  2795   00076A  5162               	movf	fputc@fp& (0+255),w,b
  2796   00076C  26E1               	addwf	fsr1l,f,c
  2797   00076E  5163               	movf	(fputc@fp+1)& (0+255),w,b
  2798   000770  22E2               	addwfc	fsr1h,f,c
  2799   000772  50DE               	movf	postinc2,w,c
  2800   000774  5CE6               	subwf	postinc1,w,c
  2801   000776  50E6               	movf	postinc1,w,c
  2802   000778  0A80               	xorlw	128
  2803   00077A  6F68               	movwf	(??_fputc+4)& (0+255),b
  2804   00077C  50DE               	movf	postinc2,w,c
  2805   00077E  0A80               	xorlw	128
  2806   000780  5968               	subwfb	(??_fputc+4)& (0+255),w,b
  2807   000782  B0D8               	btfsc	status,0,c
  2808   000784  EFC6  F003         	goto	u1931
  2809   000788  EFC8  F003         	goto	u1930
  2810   00078C                     u1931:
  2811   00078C  EFEB  F003         	goto	l1406
  2812   000790                     u1930:
  2813   000790                     l3028:
  2814                           
  2815                           ; BSR set to: 0
  2816   000790  EE20 F003          	lfsr	2,3
  2817   000794  5162               	movf	fputc@fp& (0+255),w,b
  2818   000796  26D9               	addwf	fsr2l,f,c
  2819   000798  5163               	movf	(fputc@fp+1)& (0+255),w,b
  2820   00079A  22DA               	addwfc	fsr2h,f,c
  2821   00079C  CFDE F064          	movff	postinc2,??_fputc
  2822   0007A0  CFDD F065          	movff	postdec2,??_fputc+1
  2823   0007A4  C062  FFD9         	movff	fputc@fp,fsr2l
  2824   0007A8  C063  FFDA         	movff	fputc@fp+1,fsr2h
  2825   0007AC  CFDE F066          	movff	postinc2,??_fputc+2
  2826   0007B0  CFDD F067          	movff	postdec2,??_fputc+3
  2827   0007B4  5164               	movf	??_fputc& (0+255),w,b
  2828   0007B6  2566               	addwf	(??_fputc+2)& (0+255),w,b
  2829   0007B8  6ED9               	movwf	fsr2l,c
  2830   0007BA  5165               	movf	(??_fputc+1)& (0+255),w,b
  2831   0007BC  2167               	addwfc	(??_fputc+3)& (0+255),w,b
  2832   0007BE  6EDA               	movwf	fsr2h,c
  2833   0007C0  C060  FFDF         	movff	fputc@c,indf2
  2834   0007C4  EE20 F003          	lfsr	2,3
  2835   0007C8  5162               	movf	fputc@fp& (0+255),w,b
  2836   0007CA  26D9               	addwf	fsr2l,f,c
  2837   0007CC  5163               	movf	(fputc@fp+1)& (0+255),w,b
  2838   0007CE  22DA               	addwfc	fsr2h,f,c
  2839   0007D0  2ADE               	incf	postinc2,f,c
  2840   0007D2  0E00               	movlw	0
  2841   0007D4  22DD               	addwfc	postdec2,f,c
  2842   0007D6                     l1406:
  2843   0007D6  0012               	return		;funcret
  2844   0007D8                     __end_of_fputc:
  2845                           	callstack 0
  2846                           
  2847 ;; *************** function _putch *****************
  2848 ;; Defined at:
  2849 ;;		line 201 in file "mcc_generated_files/eusart1.c"
  2850 ;; Parameters:    Size  Location     Type
  2851 ;;  txData          1    wreg     unsigned char 
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;  txData          1   31[COMRAM] unsigned char 
  2854 ;; Return value:  Size  Location     Type
  2855 ;;                  1    wreg      void 
  2856 ;; Registers used:
  2857 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2858 ;; Tracked objects:
  2859 ;;		On entry : 0/0
  2860 ;;		On exit  : 0/0
  2861 ;;		Unchanged: 0/0
  2862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2864 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2866 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2867 ;;Total ram usage:        1 bytes
  2868 ;; Hardware stack levels used: 1
  2869 ;; Hardware stack levels required when called: 5
  2870 ;; This function calls:
  2871 ;;		_EUSART1_Write
  2872 ;; This function is called by:
  2873 ;;		_fputc
  2874 ;; This function uses a non-reentrant model
  2875 ;;
  2876                           
  2877                           	psect	text12
  2878   001204                     __ptext12:
  2879                           	callstack 0
  2880   001204                     _putch:
  2881                           	callstack 21
  2882                           
  2883                           ;incstack = 0
  2884                           ;putch@txData stored from wreg
  2885   001204  6E20               	movwf	putch@txData^0,c
  2886   001206                     
  2887                           ;mcc_generated_files/eusart1.c: 201: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 202: {;mcc_generated_files/eusart1.c: 203:     EUSART1_Write(txData);
  2888   001206  5020               	movf	putch@txData^0,w,c
  2889   001208  EC76  F006         	call	_EUSART1_Write
  2890   00120C  0012               	return		;funcret
  2891   00120E                     __end_of_putch:
  2892                           	callstack 0
  2893                           
  2894 ;; *************** function _abs *****************
  2895 ;; Defined at:
  2896 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  2897 ;; Parameters:    Size  Location     Type
  2898 ;;  a               2    4[BANK0 ] int 
  2899 ;; Auto vars:     Size  Location     Type
  2900 ;;		None
  2901 ;; Return value:  Size  Location     Type
  2902 ;;                  2    4[BANK0 ] int 
  2903 ;; Registers used:
  2904 ;;		wreg, status,2, status,0
  2905 ;; Tracked objects:
  2906 ;;		On entry : 0/0
  2907 ;;		On exit  : 0/0
  2908 ;;		Unchanged: 0/0
  2909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2910 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2912 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2913 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2914 ;;Total ram usage:        4 bytes
  2915 ;; Hardware stack levels used: 1
  2916 ;; Hardware stack levels required when called: 4
  2917 ;; This function calls:
  2918 ;;		Nothing
  2919 ;; This function is called by:
  2920 ;;		_dtoa
  2921 ;; This function uses a non-reentrant model
  2922 ;;
  2923                           
  2924                           	psect	text13
  2925   000EC4                     __ptext13:
  2926                           	callstack 0
  2927   000EC4                     _abs:
  2928                           	callstack 22
  2929   000EC4  0100               	movlb	0	; () banked
  2930   000EC6  BF65               	btfsc	(abs@a+1)& (0+255),7,b
  2931   000EC8  EF70  F007         	goto	u2090
  2932   000ECC  5165               	movf	(abs@a+1)& (0+255),w,b
  2933   000ECE  E106               	bnz	u2091
  2934   000ED0  0564               	decf	abs@a& (0+255),w,b
  2935   000ED2  B0D8               	btfsc	status,0,c
  2936   000ED4  EF6E  F007         	goto	u2091
  2937   000ED8  EF70  F007         	goto	u2090
  2938   000EDC                     u2091:
  2939   000EDC  EF7E  F007         	goto	l1391
  2940   000EE0                     u2090:
  2941   000EE0                     
  2942                           ; BSR set to: 0
  2943   000EE0  C064  F066         	movff	abs@a,??_abs
  2944   000EE4  C065  F067         	movff	abs@a+1,??_abs+1
  2945   000EE8  1F66               	comf	??_abs& (0+255),f,b
  2946   000EEA  1F67               	comf	(??_abs+1)& (0+255),f,b
  2947   000EEC  4B66               	infsnz	??_abs& (0+255),f,b
  2948   000EEE  2B67               	incf	(??_abs+1)& (0+255),f,b
  2949   000EF0  C066  F064         	movff	??_abs,?_abs
  2950   000EF4  C067  F065         	movff	??_abs+1,?_abs+1
  2951   000EF8  EF82  F007         	goto	l1394
  2952   000EFC                     l1391:
  2953                           
  2954                           ; BSR set to: 0
  2955   000EFC  C064  F064         	movff	abs@a,?_abs
  2956   000F00  C065  F065         	movff	abs@a+1,?_abs+1
  2957   000F04                     l1394:
  2958                           
  2959                           ; BSR set to: 0
  2960   000F04  0012               	return		;funcret
  2961   000F06                     __end_of_abs:
  2962                           	callstack 0
  2963                           
  2964 ;; *************** function ___awmod *****************
  2965 ;; Defined at:
  2966 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  2967 ;; Parameters:    Size  Location     Type
  2968 ;;  dividend        2    0[BANK0 ] int 
  2969 ;;  divisor         2    2[BANK0 ] int 
  2970 ;; Auto vars:     Size  Location     Type
  2971 ;;  sign            1   31[COMRAM] unsigned char 
  2972 ;;  counter         1   30[COMRAM] unsigned char 
  2973 ;; Return value:  Size  Location     Type
  2974 ;;                  2    0[BANK0 ] int 
  2975 ;; Registers used:
  2976 ;;		wreg, status,2, status,0
  2977 ;; Tracked objects:
  2978 ;;		On entry : 0/0
  2979 ;;		On exit  : 0/0
  2980 ;;		Unchanged: 0/0
  2981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2982 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2983 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2985 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2986 ;;Total ram usage:        6 bytes
  2987 ;; Hardware stack levels used: 1
  2988 ;; Hardware stack levels required when called: 4
  2989 ;; This function calls:
  2990 ;;		Nothing
  2991 ;; This function is called by:
  2992 ;;		_dtoa
  2993 ;; This function uses a non-reentrant model
  2994 ;;
  2995                           
  2996                           	psect	text14
  2997   000A12                     __ptext14:
  2998                           	callstack 0
  2999   000A12                     ___awmod:
  3000                           	callstack 22
  3001   000A12  0E00               	movlw	0
  3002   000A14  6E20               	movwf	___awmod@sign^0,c
  3003   000A16  0100               	movlb	0	; () banked
  3004   000A18  BF61               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  3005   000A1A  EF13  F005         	goto	u2010
  3006   000A1E  EF11  F005         	goto	u2011
  3007   000A22                     u2011:
  3008   000A22  EF19  F005         	goto	l3092
  3009   000A26                     u2010:
  3010   000A26                     
  3011                           ; BSR set to: 0
  3012   000A26  6D60               	negf	___awmod@dividend& (0+255),b
  3013   000A28  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  3014   000A2A  B0D8               	btfsc	status,0,c
  3015   000A2C  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  3016   000A2E                     
  3017                           ; BSR set to: 0
  3018   000A2E  0E01               	movlw	1
  3019   000A30  6E20               	movwf	___awmod@sign^0,c
  3020   000A32                     l3092:
  3021                           
  3022                           ; BSR set to: 0
  3023   000A32  BF63               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  3024   000A34  EF20  F005         	goto	u2020
  3025   000A38  EF1E  F005         	goto	u2021
  3026   000A3C                     u2021:
  3027   000A3C  EF24  F005         	goto	l3096
  3028   000A40                     u2020:
  3029   000A40                     
  3030                           ; BSR set to: 0
  3031   000A40  6D62               	negf	___awmod@divisor& (0+255),b
  3032   000A42  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  3033   000A44  B0D8               	btfsc	status,0,c
  3034   000A46  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  3035   000A48                     l3096:
  3036                           
  3037                           ; BSR set to: 0
  3038   000A48  5162               	movf	___awmod@divisor& (0+255),w,b
  3039   000A4A  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  3040   000A4C  B4D8               	btfsc	status,2,c
  3041   000A4E  EF2B  F005         	goto	u2031
  3042   000A52  EF2D  F005         	goto	u2030
  3043   000A56                     u2031:
  3044   000A56  EF51  F005         	goto	l3112
  3045   000A5A                     u2030:
  3046   000A5A                     
  3047                           ; BSR set to: 0
  3048   000A5A  0E01               	movlw	1
  3049   000A5C  6E1F               	movwf	___awmod@counter^0,c
  3050   000A5E  EF35  F005         	goto	l3102
  3051   000A62                     l3100:
  3052                           
  3053                           ; BSR set to: 0
  3054   000A62  90D8               	bcf	status,0,c
  3055   000A64  3762               	rlcf	___awmod@divisor& (0+255),f,b
  3056   000A66  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  3057   000A68  2A1F               	incf	___awmod@counter^0,f,c
  3058   000A6A                     l3102:
  3059                           
  3060                           ; BSR set to: 0
  3061   000A6A  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  3062   000A6C  EF3A  F005         	goto	u2041
  3063   000A70  EF3C  F005         	goto	u2040
  3064   000A74                     u2041:
  3065   000A74  EF31  F005         	goto	l3100
  3066   000A78                     u2040:
  3067   000A78                     l3104:
  3068                           
  3069                           ; BSR set to: 0
  3070   000A78  5162               	movf	___awmod@divisor& (0+255),w,b
  3071   000A7A  5D60               	subwf	___awmod@dividend& (0+255),w,b
  3072   000A7C  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  3073   000A7E  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  3074   000A80  A0D8               	btfss	status,0,c
  3075   000A82  EF45  F005         	goto	u2051
  3076   000A86  EF47  F005         	goto	u2050
  3077   000A8A                     u2051:
  3078   000A8A  EF4B  F005         	goto	l3108
  3079   000A8E                     u2050:
  3080   000A8E                     
  3081                           ; BSR set to: 0
  3082   000A8E  5162               	movf	___awmod@divisor& (0+255),w,b
  3083   000A90  5F60               	subwf	___awmod@dividend& (0+255),f,b
  3084   000A92  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  3085   000A94  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  3086   000A96                     l3108:
  3087                           
  3088                           ; BSR set to: 0
  3089   000A96  90D8               	bcf	status,0,c
  3090   000A98  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  3091   000A9A  3362               	rrcf	___awmod@divisor& (0+255),f,b
  3092   000A9C                     
  3093                           ; BSR set to: 0
  3094   000A9C  2E1F               	decfsz	___awmod@counter^0,f,c
  3095   000A9E  EF3C  F005         	goto	l3104
  3096   000AA2                     l3112:
  3097                           
  3098                           ; BSR set to: 0
  3099   000AA2  5020               	movf	___awmod@sign^0,w,c
  3100   000AA4  B4D8               	btfsc	status,2,c
  3101   000AA6  EF57  F005         	goto	u2061
  3102   000AAA  EF59  F005         	goto	u2060
  3103   000AAE                     u2061:
  3104   000AAE  EF5D  F005         	goto	l3116
  3105   000AB2                     u2060:
  3106   000AB2                     
  3107                           ; BSR set to: 0
  3108   000AB2  6D60               	negf	___awmod@dividend& (0+255),b
  3109   000AB4  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  3110   000AB6  B0D8               	btfsc	status,0,c
  3111   000AB8  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  3112   000ABA                     l3116:
  3113                           
  3114                           ; BSR set to: 0
  3115   000ABA  C060  F060         	movff	___awmod@dividend,?___awmod
  3116   000ABE  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
  3117   000AC2                     
  3118                           ; BSR set to: 0
  3119   000AC2  0012               	return		;funcret
  3120   000AC4                     __end_of___awmod:
  3121                           	callstack 0
  3122                           
  3123 ;; *************** function ___awdiv *****************
  3124 ;; Defined at:
  3125 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  3126 ;; Parameters:    Size  Location     Type
  3127 ;;  dividend        2    0[BANK0 ] int 
  3128 ;;  divisor         2    2[BANK0 ] int 
  3129 ;; Auto vars:     Size  Location     Type
  3130 ;;  quotient        2    6[BANK0 ] int 
  3131 ;;  sign            1    5[BANK0 ] unsigned char 
  3132 ;;  counter         1    4[BANK0 ] unsigned char 
  3133 ;; Return value:  Size  Location     Type
  3134 ;;                  2    0[BANK0 ] int 
  3135 ;; Registers used:
  3136 ;;		wreg, status,2, status,0
  3137 ;; Tracked objects:
  3138 ;;		On entry : 0/0
  3139 ;;		On exit  : 0/0
  3140 ;;		Unchanged: 0/0
  3141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3142 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3143 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3145 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3146 ;;Total ram usage:        8 bytes
  3147 ;; Hardware stack levels used: 1
  3148 ;; Hardware stack levels required when called: 4
  3149 ;; This function calls:
  3150 ;;		Nothing
  3151 ;; This function is called by:
  3152 ;;		_dtoa
  3153 ;; This function uses a non-reentrant model
  3154 ;;
  3155                           
  3156                           	psect	text15
  3157   0007D8                     __ptext15:
  3158                           	callstack 0
  3159   0007D8                     ___awdiv:
  3160                           	callstack 22
  3161   0007D8  0E00               	movlw	0
  3162   0007DA  0100               	movlb	0	; () banked
  3163   0007DC  6F65               	movwf	___awdiv@sign& (0+255),b
  3164   0007DE                     
  3165                           ; BSR set to: 0
  3166   0007DE  BF63               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  3167   0007E0  EFF6  F003         	goto	u1950
  3168   0007E4  EFF4  F003         	goto	u1951
  3169   0007E8                     u1951:
  3170   0007E8  EFFC  F003         	goto	l3048
  3171   0007EC                     u1950:
  3172   0007EC                     
  3173                           ; BSR set to: 0
  3174   0007EC  6D62               	negf	___awdiv@divisor& (0+255),b
  3175   0007EE  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  3176   0007F0  B0D8               	btfsc	status,0,c
  3177   0007F2  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  3178   0007F4                     
  3179                           ; BSR set to: 0
  3180   0007F4  0E01               	movlw	1
  3181   0007F6  6F65               	movwf	___awdiv@sign& (0+255),b
  3182   0007F8                     l3048:
  3183                           
  3184                           ; BSR set to: 0
  3185   0007F8  BF61               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  3186   0007FA  EF03  F004         	goto	u1960
  3187   0007FE  EF01  F004         	goto	u1961
  3188   000802                     u1961:
  3189   000802  EF09  F004         	goto	l3054
  3190   000806                     u1960:
  3191   000806                     
  3192                           ; BSR set to: 0
  3193   000806  6D60               	negf	___awdiv@dividend& (0+255),b
  3194   000808  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  3195   00080A  B0D8               	btfsc	status,0,c
  3196   00080C  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  3197   00080E                     
  3198                           ; BSR set to: 0
  3199   00080E  0E01               	movlw	1
  3200   000810  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  3201   000812                     l3054:
  3202                           
  3203                           ; BSR set to: 0
  3204   000812  0E00               	movlw	0
  3205   000814  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  3206   000816  0E00               	movlw	0
  3207   000818  6F66               	movwf	___awdiv@quotient& (0+255),b
  3208   00081A                     
  3209                           ; BSR set to: 0
  3210   00081A  5162               	movf	___awdiv@divisor& (0+255),w,b
  3211   00081C  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  3212   00081E  B4D8               	btfsc	status,2,c
  3213   000820  EF14  F004         	goto	u1971
  3214   000824  EF16  F004         	goto	u1970
  3215   000828                     u1971:
  3216   000828  EF3E  F004         	goto	l3076
  3217   00082C                     u1970:
  3218   00082C                     
  3219                           ; BSR set to: 0
  3220   00082C  0E01               	movlw	1
  3221   00082E  6F64               	movwf	___awdiv@counter& (0+255),b
  3222   000830  EF1E  F004         	goto	l3062
  3223   000834                     l3060:
  3224                           
  3225                           ; BSR set to: 0
  3226   000834  90D8               	bcf	status,0,c
  3227   000836  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  3228   000838  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  3229   00083A  2B64               	incf	___awdiv@counter& (0+255),f,b
  3230   00083C                     l3062:
  3231                           
  3232                           ; BSR set to: 0
  3233   00083C  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  3234   00083E  EF23  F004         	goto	u1981
  3235   000842  EF25  F004         	goto	u1980
  3236   000846                     u1981:
  3237   000846  EF1A  F004         	goto	l3060
  3238   00084A                     u1980:
  3239   00084A                     l3064:
  3240                           
  3241                           ; BSR set to: 0
  3242   00084A  90D8               	bcf	status,0,c
  3243   00084C  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  3244   00084E  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  3245   000850                     
  3246                           ; BSR set to: 0
  3247   000850  5162               	movf	___awdiv@divisor& (0+255),w,b
  3248   000852  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  3249   000854  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3250   000856  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  3251   000858  A0D8               	btfss	status,0,c
  3252   00085A  EF31  F004         	goto	u1991
  3253   00085E  EF33  F004         	goto	u1990
  3254   000862                     u1991:
  3255   000862  EF38  F004         	goto	l3072
  3256   000866                     u1990:
  3257   000866                     
  3258                           ; BSR set to: 0
  3259   000866  5162               	movf	___awdiv@divisor& (0+255),w,b
  3260   000868  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  3261   00086A  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3262   00086C  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  3263   00086E                     
  3264                           ; BSR set to: 0
  3265   00086E  8166               	bsf	___awdiv@quotient& (0+255),0,b
  3266   000870                     l3072:
  3267                           
  3268                           ; BSR set to: 0
  3269   000870  90D8               	bcf	status,0,c
  3270   000872  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  3271   000874  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  3272   000876                     
  3273                           ; BSR set to: 0
  3274   000876  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  3275   000878  EF25  F004         	goto	l3064
  3276   00087C                     l3076:
  3277                           
  3278                           ; BSR set to: 0
  3279   00087C  5165               	movf	___awdiv@sign& (0+255),w,b
  3280   00087E  B4D8               	btfsc	status,2,c
  3281   000880  EF44  F004         	goto	u2001
  3282   000884  EF46  F004         	goto	u2000
  3283   000888                     u2001:
  3284   000888  EF4A  F004         	goto	l3080
  3285   00088C                     u2000:
  3286   00088C                     
  3287                           ; BSR set to: 0
  3288   00088C  6D66               	negf	___awdiv@quotient& (0+255),b
  3289   00088E  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  3290   000890  B0D8               	btfsc	status,0,c
  3291   000892  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  3292   000894                     l3080:
  3293                           
  3294                           ; BSR set to: 0
  3295   000894  C066  F060         	movff	___awdiv@quotient,?___awdiv
  3296   000898  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  3297   00089C                     
  3298                           ; BSR set to: 0
  3299   00089C  0012               	return		;funcret
  3300   00089E                     __end_of___awdiv:
  3301                           	callstack 0
  3302                           
  3303 ;; *************** function _SYSTEM_Initialize *****************
  3304 ;; Defined at:
  3305 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3306 ;; Parameters:    Size  Location     Type
  3307 ;;		None
  3308 ;; Auto vars:     Size  Location     Type
  3309 ;;		None
  3310 ;; Return value:  Size  Location     Type
  3311 ;;                  1    wreg      void 
  3312 ;; Registers used:
  3313 ;;		wreg, status,2, status,0, cstack
  3314 ;; Tracked objects:
  3315 ;;		On entry : 0/0
  3316 ;;		On exit  : 0/0
  3317 ;;		Unchanged: 0/0
  3318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3323 ;;Total ram usage:        0 bytes
  3324 ;; Hardware stack levels used: 1
  3325 ;; Hardware stack levels required when called: 6
  3326 ;; This function calls:
  3327 ;;		_ADC_Initialize
  3328 ;;		_CCP5_Initialize
  3329 ;;		_EUSART1_Initialize
  3330 ;;		_EXT_INT_Initialize
  3331 ;;		_INTERRUPT_Initialize
  3332 ;;		_OSCILLATOR_Initialize
  3333 ;;		_PIN_MANAGER_Initialize
  3334 ;;		_SPI1_Initialize
  3335 ;;		_TMR0_Initialize
  3336 ;;		_TMR1_Initialize
  3337 ;; This function is called by:
  3338 ;;		_main
  3339 ;; This function uses a non-reentrant model
  3340 ;;
  3341                           
  3342                           	psect	text16
  3343   001042                     __ptext16:
  3344                           	callstack 0
  3345   001042                     _SYSTEM_Initialize:
  3346                           	callstack 24
  3347   001042                     
  3348                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  3349   001042  ECEE  F008         	call	_INTERRUPT_Initialize	;wreg free
  3350   001046                     
  3351                           ;mcc_generated_files/mcc.c: 54:     SPI1_Initialize();
  3352   001046  ECD6  F008         	call	_SPI1_Initialize	;wreg free
  3353   00104A                     
  3354                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  3355   00104A  EC40  F007         	call	_PIN_MANAGER_Initialize	;wreg free
  3356   00104E                     
  3357                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  3358   00104E  ECE7  F008         	call	_OSCILLATOR_Initialize	;wreg free
  3359   001052                     
  3360                           ;mcc_generated_files/mcc.c: 57:     CCP5_Initialize();
  3361   001052  ECDF  F008         	call	_CCP5_Initialize	;wreg free
  3362   001056                     
  3363                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
  3364   001056  EC88  F008         	call	_ADC_Initialize	;wreg free
  3365   00105A                     
  3366                           ;mcc_generated_files/mcc.c: 59:     EXT_INT_Initialize();
  3367   00105A  ECC2  F008         	call	_EXT_INT_Initialize	;wreg free
  3368   00105E                     
  3369                           ;mcc_generated_files/mcc.c: 60:     TMR1_Initialize();
  3370   00105E  EC36  F008         	call	_TMR1_Initialize	;wreg free
  3371   001062                     
  3372                           ;mcc_generated_files/mcc.c: 61:     TMR0_Initialize();
  3373   001062  EC9A  F008         	call	_TMR0_Initialize	;wreg free
  3374   001066                     
  3375                           ;mcc_generated_files/mcc.c: 62:     EUSART1_Initialize();
  3376   001066  ECA1  F005         	call	_EUSART1_Initialize	;wreg free
  3377   00106A  0012               	return		;funcret
  3378   00106C                     __end_of_SYSTEM_Initialize:
  3379                           	callstack 0
  3380                           
  3381 ;; *************** function _TMR1_Initialize *****************
  3382 ;; Defined at:
  3383 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;		None
  3386 ;; Auto vars:     Size  Location     Type
  3387 ;;		None
  3388 ;; Return value:  Size  Location     Type
  3389 ;;                  1    wreg      void 
  3390 ;; Registers used:
  3391 ;;		wreg, status,2, status,0, cstack
  3392 ;; Tracked objects:
  3393 ;;		On entry : 0/0
  3394 ;;		On exit  : 0/0
  3395 ;;		Unchanged: 0/0
  3396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3401 ;;Total ram usage:        0 bytes
  3402 ;; Hardware stack levels used: 1
  3403 ;; Hardware stack levels required when called: 5
  3404 ;; This function calls:
  3405 ;;		_TMR1_SetInterruptHandler
  3406 ;; This function is called by:
  3407 ;;		_SYSTEM_Initialize
  3408 ;; This function uses a non-reentrant model
  3409 ;;
  3410                           
  3411                           	psect	text17
  3412   00106C                     __ptext17:
  3413                           	callstack 0
  3414   00106C                     _TMR1_Initialize:
  3415                           	callstack 24
  3416   00106C                     
  3417                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  3418   00106C  0E00               	movlw	0
  3419   00106E  6ECC               	movwf	204,c	;volatile
  3420                           
  3421                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x0B;
  3422   001070  0E0B               	movlw	11
  3423   001072  6ECF               	movwf	207,c	;volatile
  3424                           
  3425                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xDC;
  3426   001074  0EDC               	movlw	220
  3427   001076  6ECE               	movwf	206,c	;volatile
  3428   001078                     
  3429                           ;mcc_generated_files/tmr1.c: 78:     timer1ReloadVal=TMR1;
  3430   001078  CFCE F02A          	movff	4046,_timer1ReloadVal	;volatile
  3431   00107C  CFCF F02B          	movff	4047,_timer1ReloadVal+1	;volatile
  3432   001080                     
  3433                           ;mcc_generated_files/tmr1.c: 81:     PIR1bits.TMR1IF = 0;
  3434   001080  909E               	bcf	158,0,c	;volatile
  3435   001082                     
  3436                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  3437   001082  809D               	bsf	157,0,c	;volatile
  3438   001084                     
  3439                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  3440   001084  0E90               	movlw	low _TMR1_DefaultInterruptHandler
  3441   001086  6E1F               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
  3442   001088  0E12               	movlw	high _TMR1_DefaultInterruptHandler
  3443   00108A  6E20               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
  3444   00108C  EC07  F009         	call	_TMR1_SetInterruptHandler	;wreg free
  3445   001090                     
  3446                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x31;
  3447   001090  0E31               	movlw	49
  3448   001092  6ECD               	movwf	205,c	;volatile
  3449   001094  0012               	return		;funcret
  3450   001096                     __end_of_TMR1_Initialize:
  3451                           	callstack 0
  3452                           
  3453 ;; *************** function _TMR1_SetInterruptHandler *****************
  3454 ;; Defined at:
  3455 ;;		line 172 in file "mcc_generated_files/tmr1.c"
  3456 ;; Parameters:    Size  Location     Type
  3457 ;;  InterruptHan    2   30[COMRAM] PTR FTN()void 
  3458 ;;		 -> TMR1_MyInterruptHandler(1), TMR1_DefaultInterruptHandler(1), 
  3459 ;; Auto vars:     Size  Location     Type
  3460 ;;		None
  3461 ;; Return value:  Size  Location     Type
  3462 ;;                  1    wreg      void 
  3463 ;; Registers used:
  3464 ;;		wreg, status,2, status,0
  3465 ;; Tracked objects:
  3466 ;;		On entry : 0/0
  3467 ;;		On exit  : 0/0
  3468 ;;		Unchanged: 0/0
  3469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3470 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3473 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3474 ;;Total ram usage:        2 bytes
  3475 ;; Hardware stack levels used: 1
  3476 ;; Hardware stack levels required when called: 4
  3477 ;; This function calls:
  3478 ;;		Nothing
  3479 ;; This function is called by:
  3480 ;;		_TMR1_Initialize
  3481 ;;		_main
  3482 ;; This function uses a non-reentrant model
  3483 ;;
  3484                           
  3485                           	psect	text18
  3486   00120E                     __ptext18:
  3487                           	callstack 0
  3488   00120E                     _TMR1_SetInterruptHandler:
  3489                           	callstack 26
  3490   00120E                     
  3491                           ;mcc_generated_files/tmr1.c: 173:     TMR1_InterruptHandler = InterruptHandler;
  3492   00120E  C01F  F037         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  3493   001212  C020  F038         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  3494   001216  0012               	return		;funcret
  3495   001218                     __end_of_TMR1_SetInterruptHandler:
  3496                           	callstack 0
  3497                           
  3498 ;; *************** function _TMR0_Initialize *****************
  3499 ;; Defined at:
  3500 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  3501 ;; Parameters:    Size  Location     Type
  3502 ;;		None
  3503 ;; Auto vars:     Size  Location     Type
  3504 ;;		None
  3505 ;; Return value:  Size  Location     Type
  3506 ;;                  1    wreg      void 
  3507 ;; Registers used:
  3508 ;;		wreg, status,2, status,0, cstack
  3509 ;; Tracked objects:
  3510 ;;		On entry : 0/0
  3511 ;;		On exit  : 0/0
  3512 ;;		Unchanged: 0/0
  3513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3518 ;;Total ram usage:        0 bytes
  3519 ;; Hardware stack levels used: 1
  3520 ;; Hardware stack levels required when called: 5
  3521 ;; This function calls:
  3522 ;;		_TMR0_SetInterruptHandler
  3523 ;; This function is called by:
  3524 ;;		_SYSTEM_Initialize
  3525 ;; This function uses a non-reentrant model
  3526 ;;
  3527                           
  3528                           	psect	text19
  3529   001134                     __ptext19:
  3530                           	callstack 0
  3531   001134                     _TMR0_Initialize:
  3532                           	callstack 24
  3533   001134                     
  3534                           ;mcc_generated_files/tmr0.c: 72:     TMR0H = 0x00;
  3535   001134  0E00               	movlw	0
  3536   001136  6ED7               	movwf	215,c	;volatile
  3537                           
  3538                           ;mcc_generated_files/tmr0.c: 75:     TMR0L = 0x3D;
  3539   001138  0E3D               	movlw	61
  3540   00113A  6ED6               	movwf	214,c	;volatile
  3541                           
  3542                           ;mcc_generated_files/tmr0.c: 79:     timer0ReloadVal = 61;
  3543   00113C  0E3D               	movlw	61
  3544   00113E  6E2F               	movwf	_timer0ReloadVal^0,c	;volatile
  3545   001140                     
  3546                           ;mcc_generated_files/tmr0.c: 82:     INTCONbits.TMR0IF = 0;
  3547   001140  94F2               	bcf	242,2,c	;volatile
  3548   001142                     
  3549                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IE = 1;
  3550   001142  8AF2               	bsf	242,5,c	;volatile
  3551   001144                     
  3552                           ;mcc_generated_files/tmr0.c: 88:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  3553   001144  0E92               	movlw	low _TMR0_DefaultInterruptHandler
  3554   001146  6E1F               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  3555   001148  0E12               	movlw	high _TMR0_DefaultInterruptHandler
  3556   00114A  6E20               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  3557   00114C  EC0C  F009         	call	_TMR0_SetInterruptHandler	;wreg free
  3558   001150                     
  3559                           ;mcc_generated_files/tmr0.c: 91:     T0CON = 0x57;
  3560   001150  0E57               	movlw	87
  3561   001152  6ED5               	movwf	213,c	;volatile
  3562   001154  0012               	return		;funcret
  3563   001156                     __end_of_TMR0_Initialize:
  3564                           	callstack 0
  3565                           
  3566 ;; *************** function _TMR0_SetInterruptHandler *****************
  3567 ;; Defined at:
  3568 ;;		line 147 in file "mcc_generated_files/tmr0.c"
  3569 ;; Parameters:    Size  Location     Type
  3570 ;;  InterruptHan    2   30[COMRAM] PTR FTN()void 
  3571 ;;		 -> TMR0_MyInterruptHandler(1), TMR0_DefaultInterruptHandler(1), 
  3572 ;; Auto vars:     Size  Location     Type
  3573 ;;		None
  3574 ;; Return value:  Size  Location     Type
  3575 ;;                  1    wreg      void 
  3576 ;; Registers used:
  3577 ;;		wreg, status,2, status,0
  3578 ;; Tracked objects:
  3579 ;;		On entry : 0/0
  3580 ;;		On exit  : 0/0
  3581 ;;		Unchanged: 0/0
  3582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3583 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3586 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3587 ;;Total ram usage:        2 bytes
  3588 ;; Hardware stack levels used: 1
  3589 ;; Hardware stack levels required when called: 4
  3590 ;; This function calls:
  3591 ;;		Nothing
  3592 ;; This function is called by:
  3593 ;;		_TMR0_Initialize
  3594 ;;		_main
  3595 ;; This function uses a non-reentrant model
  3596 ;;
  3597                           
  3598                           	psect	text20
  3599   001218                     __ptext20:
  3600                           	callstack 0
  3601   001218                     _TMR0_SetInterruptHandler:
  3602                           	callstack 26
  3603   001218                     
  3604                           ;mcc_generated_files/tmr0.c: 148:     TMR0_InterruptHandler = InterruptHandler;
  3605   001218  C01F  F039         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  3606   00121C  C020  F03A         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  3607   001220  0012               	return		;funcret
  3608   001222                     __end_of_TMR0_SetInterruptHandler:
  3609                           	callstack 0
  3610                           
  3611 ;; *************** function _SPI1_Initialize *****************
  3612 ;; Defined at:
  3613 ;;		line 62 in file "mcc_generated_files/spi1.c"
  3614 ;; Parameters:    Size  Location     Type
  3615 ;;		None
  3616 ;; Auto vars:     Size  Location     Type
  3617 ;;		None
  3618 ;; Return value:  Size  Location     Type
  3619 ;;                  1    wreg      void 
  3620 ;; Registers used:
  3621 ;;		wreg, status,2
  3622 ;; Tracked objects:
  3623 ;;		On entry : 0/0
  3624 ;;		On exit  : 0/0
  3625 ;;		Unchanged: 0/0
  3626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3631 ;;Total ram usage:        0 bytes
  3632 ;; Hardware stack levels used: 1
  3633 ;; Hardware stack levels required when called: 4
  3634 ;; This function calls:
  3635 ;;		Nothing
  3636 ;; This function is called by:
  3637 ;;		_SYSTEM_Initialize
  3638 ;; This function uses a non-reentrant model
  3639 ;;
  3640                           
  3641                           	psect	text21
  3642   0011AC                     __ptext21:
  3643                           	callstack 0
  3644   0011AC                     _SPI1_Initialize:
  3645                           	callstack 25
  3646   0011AC                     
  3647                           ;mcc_generated_files/spi1.c: 65:     SSP1STAT = 0x40;
  3648   0011AC  0E40               	movlw	64
  3649   0011AE  6EC7               	movwf	199,c	;volatile
  3650                           
  3651                           ;mcc_generated_files/spi1.c: 66:     SSP1CON1 = 0x00;
  3652   0011B0  0E00               	movlw	0
  3653   0011B2  6EC6               	movwf	198,c	;volatile
  3654                           
  3655                           ;mcc_generated_files/spi1.c: 67:     SSP1ADD = 0x01;
  3656   0011B4  0E01               	movlw	1
  3657   0011B6  6EC8               	movwf	200,c	;volatile
  3658   0011B8                     
  3659                           ;mcc_generated_files/spi1.c: 68:     TRISCbits.TRISC3 = 0;
  3660   0011B8  9694               	bcf	148,3,c	;volatile
  3661   0011BA                     
  3662                           ;mcc_generated_files/spi1.c: 69:     SSP1CON1bits.SSPEN = 0;
  3663   0011BA  9AC6               	bcf	198,5,c	;volatile
  3664   0011BC  0012               	return		;funcret
  3665   0011BE                     __end_of_SPI1_Initialize:
  3666                           	callstack 0
  3667                           
  3668 ;; *************** function _PIN_MANAGER_Initialize *****************
  3669 ;; Defined at:
  3670 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3671 ;; Parameters:    Size  Location     Type
  3672 ;;		None
  3673 ;; Auto vars:     Size  Location     Type
  3674 ;;		None
  3675 ;; Return value:  Size  Location     Type
  3676 ;;                  1    wreg      void 
  3677 ;; Registers used:
  3678 ;;		wreg, status,2
  3679 ;; Tracked objects:
  3680 ;;		On entry : 0/0
  3681 ;;		On exit  : 0/0
  3682 ;;		Unchanged: 0/0
  3683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3688 ;;Total ram usage:        0 bytes
  3689 ;; Hardware stack levels used: 1
  3690 ;; Hardware stack levels required when called: 4
  3691 ;; This function calls:
  3692 ;;		Nothing
  3693 ;; This function is called by:
  3694 ;;		_SYSTEM_Initialize
  3695 ;; This function uses a non-reentrant model
  3696 ;;
  3697                           
  3698                           	psect	text22
  3699   000E80                     __ptext22:
  3700                           	callstack 0
  3701   000E80                     _PIN_MANAGER_Initialize:
  3702                           	callstack 25
  3703   000E80                     
  3704                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  3705   000E80  0E00               	movlw	0
  3706   000E82  6E8D               	movwf	141,c	;volatile
  3707                           
  3708                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  3709   000E84  0E00               	movlw	0
  3710   000E86  6E8C               	movwf	140,c	;volatile
  3711                           
  3712                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  3713   000E88  0E00               	movlw	0
  3714   000E8A  6E89               	movwf	137,c	;volatile
  3715                           
  3716                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  3717   000E8C  0E00               	movlw	0
  3718   000E8E  6E8A               	movwf	138,c	;volatile
  3719                           
  3720                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  3721   000E90  0E00               	movlw	0
  3722   000E92  6E8B               	movwf	139,c	;volatile
  3723                           
  3724                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  3725   000E94  0E07               	movlw	7
  3726   000E96  6E96               	movwf	150,c	;volatile
  3727                           
  3728                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xBF;
  3729   000E98  0EBF               	movlw	191
  3730   000E9A  6E92               	movwf	146,c	;volatile
  3731                           
  3732                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xC7;
  3733   000E9C  0EC7               	movlw	199
  3734   000E9E  6E93               	movwf	147,c	;volatile
  3735                           
  3736                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x9F;
  3737   000EA0  0E9F               	movlw	159
  3738   000EA2  6E94               	movwf	148,c	;volatile
  3739   000EA4                     
  3740                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  3741   000EA4  6895               	setf	149,c	;volatile
  3742                           
  3743                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x00;
  3744   000EA6  0E00               	movlw	0
  3745   000EA8  010F               	movlb	15	; () banked
  3746   000EAA  6F3B               	movwf	59,b	;volatile
  3747                           
  3748                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x00;
  3749   000EAC  0E00               	movlw	0
  3750   000EAE  6F3A               	movwf	58,b	;volatile
  3751                           
  3752                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x06;
  3753   000EB0  0E06               	movlw	6
  3754   000EB2  6F39               	movwf	57,b	;volatile
  3755                           
  3756                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  3757   000EB4  0E07               	movlw	7
  3758   000EB6  6F3C               	movwf	60,b	;volatile
  3759                           
  3760                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x2F;
  3761   000EB8  0E2F               	movlw	47
  3762   000EBA  6F38               	movwf	56,b	;volatile
  3763                           
  3764                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
  3765   000EBC  0E00               	movlw	0
  3766   000EBE  6E61               	movwf	97,c	;volatile
  3767   000EC0                     
  3768                           ; BSR set to: 15
  3769                           ;mcc_generated_files/pin_manager.c: 88:     INTCON2bits.nRBPU = 0;
  3770   000EC0  9EF1               	bcf	241,7,c	;volatile
  3771   000EC2                     
  3772                           ; BSR set to: 15
  3773   000EC2  0012               	return		;funcret
  3774   000EC4                     __end_of_PIN_MANAGER_Initialize:
  3775                           	callstack 0
  3776                           
  3777 ;; *************** function _OSCILLATOR_Initialize *****************
  3778 ;; Defined at:
  3779 ;;		line 65 in file "mcc_generated_files/mcc.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;		None
  3782 ;; Auto vars:     Size  Location     Type
  3783 ;;		None
  3784 ;; Return value:  Size  Location     Type
  3785 ;;                  1    wreg      void 
  3786 ;; Registers used:
  3787 ;;		wreg, status,2
  3788 ;; Tracked objects:
  3789 ;;		On entry : 0/0
  3790 ;;		On exit  : 0/0
  3791 ;;		Unchanged: 0/0
  3792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3797 ;;Total ram usage:        0 bytes
  3798 ;; Hardware stack levels used: 1
  3799 ;; Hardware stack levels required when called: 4
  3800 ;; This function calls:
  3801 ;;		Nothing
  3802 ;; This function is called by:
  3803 ;;		_SYSTEM_Initialize
  3804 ;; This function uses a non-reentrant model
  3805 ;;
  3806                           
  3807                           	psect	text23
  3808   0011CE                     __ptext23:
  3809                           	callstack 0
  3810   0011CE                     _OSCILLATOR_Initialize:
  3811                           	callstack 25
  3812   0011CE                     
  3813                           ;mcc_generated_files/mcc.c: 68:     OSCCON = 0x30;
  3814   0011CE  0E30               	movlw	48
  3815   0011D0  6ED3               	movwf	211,c	;volatile
  3816                           
  3817                           ;mcc_generated_files/mcc.c: 70:     OSCCON2 = 0x04;
  3818   0011D2  0E04               	movlw	4
  3819   0011D4  6ED2               	movwf	210,c	;volatile
  3820                           
  3821                           ;mcc_generated_files/mcc.c: 72:     OSCTUNE = 0x00;
  3822   0011D6  0E00               	movlw	0
  3823   0011D8  6E9B               	movwf	155,c	;volatile
  3824   0011DA  0012               	return		;funcret
  3825   0011DC                     __end_of_OSCILLATOR_Initialize:
  3826                           	callstack 0
  3827                           
  3828 ;; *************** function _INTERRUPT_Initialize *****************
  3829 ;; Defined at:
  3830 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;		None
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;		None
  3835 ;; Return value:  Size  Location     Type
  3836 ;;                  1    wreg      void 
  3837 ;; Registers used:
  3838 ;;		None
  3839 ;; Tracked objects:
  3840 ;;		On entry : 0/0
  3841 ;;		On exit  : 0/0
  3842 ;;		Unchanged: 0/0
  3843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3848 ;;Total ram usage:        0 bytes
  3849 ;; Hardware stack levels used: 1
  3850 ;; Hardware stack levels required when called: 4
  3851 ;; This function calls:
  3852 ;;		Nothing
  3853 ;; This function is called by:
  3854 ;;		_SYSTEM_Initialize
  3855 ;; This function uses a non-reentrant model
  3856 ;;
  3857                           
  3858                           	psect	text24
  3859   0011DC                     __ptext24:
  3860                           	callstack 0
  3861   0011DC                     _INTERRUPT_Initialize:
  3862                           	callstack 25
  3863   0011DC                     
  3864                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 1;
  3865   0011DC  8ED0               	bsf	208,7,c	;volatile
  3866                           
  3867                           ;mcc_generated_files/interrupt_manager.c: 60:     IPR1bits.ADIP = 1;
  3868   0011DE  8C9F               	bsf	159,6,c	;volatile
  3869                           
  3870                           ;mcc_generated_files/interrupt_manager.c: 63:     INTCON2bits.TMR0IP = 1;
  3871   0011E0  84F1               	bsf	241,2,c	;volatile
  3872                           
  3873                           ;mcc_generated_files/interrupt_manager.c: 68:     IPR1bits.TX1IP = 1;
  3874   0011E2  889F               	bsf	159,4,c	;volatile
  3875                           
  3876                           ;mcc_generated_files/interrupt_manager.c: 71:     IPR1bits.RC1IP = 1;
  3877   0011E4  8A9F               	bsf	159,5,c	;volatile
  3878                           
  3879                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR1bits.TMR1IP = 1;
  3880   0011E6  809F               	bsf	159,0,c	;volatile
  3881   0011E8  0012               	return		;funcret
  3882   0011EA                     __end_of_INTERRUPT_Initialize:
  3883                           	callstack 0
  3884                           
  3885 ;; *************** function _EXT_INT_Initialize *****************
  3886 ;; Defined at:
  3887 ;;		line 59 in file "mcc_generated_files/ext_int.c"
  3888 ;; Parameters:    Size  Location     Type
  3889 ;;		None
  3890 ;; Auto vars:     Size  Location     Type
  3891 ;;		None
  3892 ;; Return value:  Size  Location     Type
  3893 ;;                  1    wreg      void 
  3894 ;; Registers used:
  3895 ;;		wreg, status,2, status,0, cstack
  3896 ;; Tracked objects:
  3897 ;;		On entry : 0/0
  3898 ;;		On exit  : 0/0
  3899 ;;		Unchanged: 0/0
  3900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3905 ;;Total ram usage:        0 bytes
  3906 ;; Hardware stack levels used: 1
  3907 ;; Hardware stack levels required when called: 5
  3908 ;; This function calls:
  3909 ;;		_INT0_SetInterruptHandler
  3910 ;; This function is called by:
  3911 ;;		_SYSTEM_Initialize
  3912 ;; This function uses a non-reentrant model
  3913 ;;
  3914                           
  3915                           	psect	text25
  3916   001184                     __ptext25:
  3917                           	callstack 0
  3918   001184                     _EXT_INT_Initialize:
  3919                           	callstack 24
  3920   001184                     
  3921                           ;mcc_generated_files/ext_int.c: 64:     (INTCONbits.INT0IF = 0);
  3922   001184  92F2               	bcf	242,1,c	;volatile
  3923                           
  3924                           ;mcc_generated_files/ext_int.c: 65:     (INTCON2bits.INTEDG0 = 0);
  3925   001186  9CF1               	bcf	241,6,c	;volatile
  3926   001188                     
  3927                           ;mcc_generated_files/ext_int.c: 67:     INT0_SetInterruptHandler(INT0_DefaultInterruptHa
      +                          ndler);
  3928   001188  0E94               	movlw	low _INT0_DefaultInterruptHandler
  3929   00118A  6E1F               	movwf	INT0_SetInterruptHandler@InterruptHandler^0,c
  3930   00118C  0E12               	movlw	high _INT0_DefaultInterruptHandler
  3931   00118E  6E20               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,c
  3932   001190  EC11  F009         	call	_INT0_SetInterruptHandler	;wreg free
  3933   001194                     
  3934                           ;mcc_generated_files/ext_int.c: 68:     (INTCONbits.INT0IE = 1);
  3935   001194  88F2               	bsf	242,4,c	;volatile
  3936   001196  0012               	return		;funcret
  3937   001198                     __end_of_EXT_INT_Initialize:
  3938                           	callstack 0
  3939                           
  3940 ;; *************** function _INT0_SetInterruptHandler *****************
  3941 ;; Defined at:
  3942 ;;		line 50 in file "mcc_generated_files/ext_int.c"
  3943 ;; Parameters:    Size  Location     Type
  3944 ;;  InterruptHan    2   30[COMRAM] PTR FTN()void 
  3945 ;;		 -> INT0_MyInterruptHandler(1), INT0_DefaultInterruptHandler(1), 
  3946 ;; Auto vars:     Size  Location     Type
  3947 ;;		None
  3948 ;; Return value:  Size  Location     Type
  3949 ;;                  1    wreg      void 
  3950 ;; Registers used:
  3951 ;;		wreg, status,2, status,0
  3952 ;; Tracked objects:
  3953 ;;		On entry : 0/0
  3954 ;;		On exit  : 0/0
  3955 ;;		Unchanged: 0/0
  3956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3957 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3960 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3961 ;;Total ram usage:        2 bytes
  3962 ;; Hardware stack levels used: 1
  3963 ;; Hardware stack levels required when called: 4
  3964 ;; This function calls:
  3965 ;;		Nothing
  3966 ;; This function is called by:
  3967 ;;		_EXT_INT_Initialize
  3968 ;;		_main
  3969 ;; This function uses a non-reentrant model
  3970 ;;
  3971                           
  3972                           	psect	text26
  3973   001222                     __ptext26:
  3974                           	callstack 0
  3975   001222                     _INT0_SetInterruptHandler:
  3976                           	callstack 24
  3977   001222                     
  3978                           ;mcc_generated_files/ext_int.c: 51:     INT0_InterruptHandler = InterruptHandler;
  3979   001222  C01F  F03B         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  3980   001226  C020  F03C         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  3981   00122A  0012               	return		;funcret
  3982   00122C                     __end_of_INT0_SetInterruptHandler:
  3983                           	callstack 0
  3984                           
  3985 ;; *************** function _EUSART1_Initialize *****************
  3986 ;; Defined at:
  3987 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  3988 ;; Parameters:    Size  Location     Type
  3989 ;;		None
  3990 ;; Auto vars:     Size  Location     Type
  3991 ;;		None
  3992 ;; Return value:  Size  Location     Type
  3993 ;;                  1    wreg      void 
  3994 ;; Registers used:
  3995 ;;		wreg, status,2, status,0, cstack
  3996 ;; Tracked objects:
  3997 ;;		On entry : 0/0
  3998 ;;		On exit  : 0/0
  3999 ;;		Unchanged: 0/0
  4000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4005 ;;Total ram usage:        0 bytes
  4006 ;; Hardware stack levels used: 1
  4007 ;; Hardware stack levels required when called: 5
  4008 ;; This function calls:
  4009 ;;		_EUSART1_SetErrorHandler
  4010 ;;		_EUSART1_SetFramingErrorHandler
  4011 ;;		_EUSART1_SetOverrunErrorHandler
  4012 ;;		_EUSART1_SetRxInterruptHandler
  4013 ;;		_EUSART1_SetTxInterruptHandler
  4014 ;; This function is called by:
  4015 ;;		_SYSTEM_Initialize
  4016 ;; This function uses a non-reentrant model
  4017 ;;
  4018                           
  4019                           	psect	text27
  4020   000B42                     __ptext27:
  4021                           	callstack 0
  4022   000B42                     _EUSART1_Initialize:
  4023                           	callstack 24
  4024   000B42                     
  4025                           ;mcc_generated_files/eusart1.c: 91:     PIE1bits.RC1IE = 0;
  4026   000B42  9A9D               	bcf	157,5,c	;volatile
  4027   000B44                     
  4028                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  4029   000B44  0E58               	movlw	low _EUSART1_Receive_ISR
  4030   000B46  6E1F               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  4031   000B48  0E09               	movlw	high _EUSART1_Receive_ISR
  4032   000B4A  6E20               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  4033   000B4C  EC1B  F009         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  4034   000B50                     
  4035                           ;mcc_generated_files/eusart1.c: 93:     PIE1bits.TX1IE = 0;
  4036   000B50  989D               	bcf	157,4,c	;volatile
  4037                           
  4038                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  4039   000B52  0E06               	movlw	low _EUSART1_Transmit_ISR
  4040   000B54  6E1F               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
  4041   000B56  0E0F               	movlw	high _EUSART1_Transmit_ISR
  4042   000B58  6E20               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
  4043   000B5A  EC16  F009         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  4044   000B5E                     
  4045                           ;mcc_generated_files/eusart1.c: 98:     BAUDCON1 = 0x08;
  4046   000B5E  0E08               	movlw	8
  4047   000B60  6EB8               	movwf	184,c	;volatile
  4048   000B62                     
  4049                           ;mcc_generated_files/eusart1.c: 101:     RCSTA1 = 0x90;
  4050   000B62  0E90               	movlw	144
  4051   000B64  6EAB               	movwf	171,c	;volatile
  4052   000B66                     
  4053                           ;mcc_generated_files/eusart1.c: 104:     TXSTA1 = 0x24;
  4054   000B66  0E24               	movlw	36
  4055   000B68  6EAC               	movwf	172,c	;volatile
  4056   000B6A                     
  4057                           ;mcc_generated_files/eusart1.c: 107:     SPBRG1 = 0xCF;
  4058   000B6A  0ECF               	movlw	207
  4059   000B6C  6EAF               	movwf	175,c	;volatile
  4060   000B6E                     
  4061                           ;mcc_generated_files/eusart1.c: 110:     SPBRGH1 = 0x00;
  4062   000B6E  0E00               	movlw	0
  4063   000B70  6EB0               	movwf	176,c	;volatile
  4064   000B72                     
  4065                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  4066   000B72  0E96               	movlw	low _EUSART1_DefaultFramingErrorHandler
  4067   000B74  6E1F               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  4068   000B76  0E12               	movlw	high _EUSART1_DefaultFramingErrorHandler
  4069   000B78  6E20               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  4070   000B7A  EC25  F009         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  4071   000B7E                     
  4072                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  4073   000B7E  0E70               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  4074   000B80  6E1F               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  4075   000B82  0E12               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  4076   000B84  6E20               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  4077   000B86  EC20  F009         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  4078   000B8A                     
  4079                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  4080   000B8A  0E76               	movlw	low _EUSART1_DefaultErrorHandler
  4081   000B8C  6E1F               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  4082   000B8E  0E12               	movlw	high _EUSART1_DefaultErrorHandler
  4083   000B90  6E20               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  4084   000B92  EC2A  F009         	call	_EUSART1_SetErrorHandler	;wreg free
  4085                           
  4086                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  4087   000B96  0E00               	movlw	0
  4088   000B98  6E30               	movwf	_eusart1RxLastError^0,c	;volatile
  4089                           
  4090                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  4091   000B9A  0E00               	movlw	0
  4092   000B9C  6E36               	movwf	_eusart1TxHead^0,c	;volatile
  4093                           
  4094                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  4095   000B9E  0E00               	movlw	0
  4096   000BA0  6E35               	movwf	_eusart1TxTail^0,c	;volatile
  4097                           
  4098                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  4099   000BA2  0E08               	movlw	8
  4100   000BA4  6E34               	movwf	_eusart1TxBufferRemaining^0,c	;volatile
  4101                           
  4102                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  4103   000BA6  0E00               	movlw	0
  4104   000BA8  6E33               	movwf	_eusart1RxHead^0,c	;volatile
  4105                           
  4106                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  4107   000BAA  0E00               	movlw	0
  4108   000BAC  6E32               	movwf	_eusart1RxTail^0,c	;volatile
  4109                           
  4110                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  4111   000BAE  0E00               	movlw	0
  4112   000BB0  6E31               	movwf	_eusart1RxCount^0,c	;volatile
  4113   000BB2                     
  4114                           ;mcc_generated_files/eusart1.c: 129:     PIE1bits.RC1IE = 1;
  4115   000BB2  8A9D               	bsf	157,5,c	;volatile
  4116   000BB4  0012               	return		;funcret
  4117   000BB6                     __end_of_EUSART1_Initialize:
  4118                           	callstack 0
  4119                           
  4120 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  4121 ;; Defined at:
  4122 ;;		line 285 in file "mcc_generated_files/eusart1.c"
  4123 ;; Parameters:    Size  Location     Type
  4124 ;;  interruptHan    2   30[COMRAM] PTR FTN()void 
  4125 ;;		 -> EUSART1_Transmit_ISR(1), 
  4126 ;; Auto vars:     Size  Location     Type
  4127 ;;		None
  4128 ;; Return value:  Size  Location     Type
  4129 ;;                  1    wreg      void 
  4130 ;; Registers used:
  4131 ;;		wreg, status,2, status,0
  4132 ;; Tracked objects:
  4133 ;;		On entry : 0/0
  4134 ;;		On exit  : 0/0
  4135 ;;		Unchanged: 0/0
  4136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4137 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4140 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4141 ;;Total ram usage:        2 bytes
  4142 ;; Hardware stack levels used: 1
  4143 ;; Hardware stack levels required when called: 4
  4144 ;; This function calls:
  4145 ;;		Nothing
  4146 ;; This function is called by:
  4147 ;;		_EUSART1_Initialize
  4148 ;; This function uses a non-reentrant model
  4149 ;;
  4150                           
  4151                           	psect	text28
  4152   00122C                     __ptext28:
  4153                           	callstack 0
  4154   00122C                     _EUSART1_SetTxInterruptHandler:
  4155                           	callstack 24
  4156   00122C                     
  4157                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  4158   00122C  C01F  F0EE         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  4159   001230  C020  F0EF         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  4160   001234  0012               	return		;funcret
  4161   001236                     __end_of_EUSART1_SetTxInterruptHandler:
  4162                           	callstack 0
  4163                           
  4164 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  4165 ;; Defined at:
  4166 ;;		line 289 in file "mcc_generated_files/eusart1.c"
  4167 ;; Parameters:    Size  Location     Type
  4168 ;;  interruptHan    2   30[COMRAM] PTR FTN()void 
  4169 ;;		 -> EUSART1_Receive_ISR(1), 
  4170 ;; Auto vars:     Size  Location     Type
  4171 ;;		None
  4172 ;; Return value:  Size  Location     Type
  4173 ;;                  1    wreg      void 
  4174 ;; Registers used:
  4175 ;;		wreg, status,2, status,0
  4176 ;; Tracked objects:
  4177 ;;		On entry : 0/0
  4178 ;;		On exit  : 0/0
  4179 ;;		Unchanged: 0/0
  4180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4181 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4184 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4185 ;;Total ram usage:        2 bytes
  4186 ;; Hardware stack levels used: 1
  4187 ;; Hardware stack levels required when called: 4
  4188 ;; This function calls:
  4189 ;;		Nothing
  4190 ;; This function is called by:
  4191 ;;		_EUSART1_Initialize
  4192 ;; This function uses a non-reentrant model
  4193 ;;
  4194                           
  4195                           	psect	text29
  4196   001236                     __ptext29:
  4197                           	callstack 0
  4198   001236                     _EUSART1_SetRxInterruptHandler:
  4199                           	callstack 24
  4200   001236                     
  4201                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  4202   001236  C01F  F0EC         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  4203   00123A  C020  F0ED         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  4204   00123E  0012               	return		;funcret
  4205   001240                     __end_of_EUSART1_SetRxInterruptHandler:
  4206                           	callstack 0
  4207                           
  4208 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  4209 ;; Defined at:
  4210 ;;		line 277 in file "mcc_generated_files/eusart1.c"
  4211 ;; Parameters:    Size  Location     Type
  4212 ;;  interruptHan    2   30[COMRAM] PTR FTN()void 
  4213 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  4214 ;; Auto vars:     Size  Location     Type
  4215 ;;		None
  4216 ;; Return value:  Size  Location     Type
  4217 ;;                  1    wreg      void 
  4218 ;; Registers used:
  4219 ;;		wreg, status,2, status,0
  4220 ;; Tracked objects:
  4221 ;;		On entry : 0/0
  4222 ;;		On exit  : 0/0
  4223 ;;		Unchanged: 0/0
  4224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4225 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4228 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4229 ;;Total ram usage:        2 bytes
  4230 ;; Hardware stack levels used: 1
  4231 ;; Hardware stack levels required when called: 4
  4232 ;; This function calls:
  4233 ;;		Nothing
  4234 ;; This function is called by:
  4235 ;;		_EUSART1_Initialize
  4236 ;; This function uses a non-reentrant model
  4237 ;;
  4238                           
  4239                           	psect	text30
  4240   001240                     __ptext30:
  4241                           	callstack 0
  4242   001240                     _EUSART1_SetOverrunErrorHandler:
  4243                           	callstack 24
  4244   001240                     
  4245                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
  4246   001240  C01F  F0E8         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  4247   001244  C020  F0E9         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  4248   001248  0012               	return		;funcret
  4249   00124A                     __end_of_EUSART1_SetOverrunErrorHandler:
  4250                           	callstack 0
  4251                           
  4252 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  4253 ;; Defined at:
  4254 ;;		line 273 in file "mcc_generated_files/eusart1.c"
  4255 ;; Parameters:    Size  Location     Type
  4256 ;;  interruptHan    2   30[COMRAM] PTR FTN()void 
  4257 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  4258 ;; Auto vars:     Size  Location     Type
  4259 ;;		None
  4260 ;; Return value:  Size  Location     Type
  4261 ;;                  1    wreg      void 
  4262 ;; Registers used:
  4263 ;;		wreg, status,2, status,0
  4264 ;; Tracked objects:
  4265 ;;		On entry : 0/0
  4266 ;;		On exit  : 0/0
  4267 ;;		Unchanged: 0/0
  4268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4269 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4272 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4273 ;;Total ram usage:        2 bytes
  4274 ;; Hardware stack levels used: 1
  4275 ;; Hardware stack levels required when called: 4
  4276 ;; This function calls:
  4277 ;;		Nothing
  4278 ;; This function is called by:
  4279 ;;		_EUSART1_Initialize
  4280 ;; This function uses a non-reentrant model
  4281 ;;
  4282                           
  4283                           	psect	text31
  4284   00124A                     __ptext31:
  4285                           	callstack 0
  4286   00124A                     _EUSART1_SetFramingErrorHandler:
  4287                           	callstack 24
  4288   00124A                     
  4289                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
  4290   00124A  C01F  F0EA         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  4291   00124E  C020  F0EB         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  4292   001252  0012               	return		;funcret
  4293   001254                     __end_of_EUSART1_SetFramingErrorHandler:
  4294                           	callstack 0
  4295                           
  4296 ;; *************** function _EUSART1_SetErrorHandler *****************
  4297 ;; Defined at:
  4298 ;;		line 281 in file "mcc_generated_files/eusart1.c"
  4299 ;; Parameters:    Size  Location     Type
  4300 ;;  interruptHan    2   30[COMRAM] PTR FTN()void 
  4301 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  4302 ;; Auto vars:     Size  Location     Type
  4303 ;;		None
  4304 ;; Return value:  Size  Location     Type
  4305 ;;                  1    wreg      void 
  4306 ;; Registers used:
  4307 ;;		wreg, status,2, status,0
  4308 ;; Tracked objects:
  4309 ;;		On entry : 0/0
  4310 ;;		On exit  : 0/0
  4311 ;;		Unchanged: 0/0
  4312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4313 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4316 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4317 ;;Total ram usage:        2 bytes
  4318 ;; Hardware stack levels used: 1
  4319 ;; Hardware stack levels required when called: 4
  4320 ;; This function calls:
  4321 ;;		Nothing
  4322 ;; This function is called by:
  4323 ;;		_EUSART1_Initialize
  4324 ;; This function uses a non-reentrant model
  4325 ;;
  4326                           
  4327                           	psect	text32
  4328   001254                     __ptext32:
  4329                           	callstack 0
  4330   001254                     _EUSART1_SetErrorHandler:
  4331                           	callstack 24
  4332   001254                     
  4333                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
  4334   001254  C01F  F0E6         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  4335   001258  C020  F0E7         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  4336   00125C  0012               	return		;funcret
  4337   00125E                     __end_of_EUSART1_SetErrorHandler:
  4338                           	callstack 0
  4339                           
  4340 ;; *************** function _CCP5_Initialize *****************
  4341 ;; Defined at:
  4342 ;;		line 49 in file "mcc_generated_files/ccp5.c"
  4343 ;; Parameters:    Size  Location     Type
  4344 ;;		None
  4345 ;; Auto vars:     Size  Location     Type
  4346 ;;		None
  4347 ;; Return value:  Size  Location     Type
  4348 ;;                  1    wreg      void 
  4349 ;; Registers used:
  4350 ;;		wreg, status,2
  4351 ;; Tracked objects:
  4352 ;;		On entry : 0/0
  4353 ;;		On exit  : 0/0
  4354 ;;		Unchanged: 0/0
  4355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4360 ;;Total ram usage:        0 bytes
  4361 ;; Hardware stack levels used: 1
  4362 ;; Hardware stack levels required when called: 4
  4363 ;; This function calls:
  4364 ;;		Nothing
  4365 ;; This function is called by:
  4366 ;;		_SYSTEM_Initialize
  4367 ;; This function uses a non-reentrant model
  4368 ;;
  4369                           
  4370                           	psect	text33
  4371   0011BE                     __ptext33:
  4372                           	callstack 0
  4373   0011BE                     _CCP5_Initialize:
  4374                           	callstack 25
  4375   0011BE                     
  4376                           ;mcc_generated_files/ccp5.c: 53:  CCP5CON = 0x00;
  4377   0011BE  0E00               	movlw	0
  4378   0011C0  010F               	movlb	15	; () banked
  4379   0011C2  6F54               	movwf	84,b	;volatile
  4380                           
  4381                           ;mcc_generated_files/ccp5.c: 56:  CCPR5L = 0x00;
  4382   0011C4  0E00               	movlw	0
  4383   0011C6  6F55               	movwf	85,b	;volatile
  4384                           
  4385                           ;mcc_generated_files/ccp5.c: 59:  CCPR5H = 0x00;
  4386   0011C8  0E00               	movlw	0
  4387   0011CA  6F56               	movwf	86,b	;volatile
  4388   0011CC                     
  4389                           ; BSR set to: 15
  4390   0011CC  0012               	return		;funcret
  4391   0011CE                     __end_of_CCP5_Initialize:
  4392                           	callstack 0
  4393                           
  4394 ;; *************** function _ADC_Initialize *****************
  4395 ;; Defined at:
  4396 ;;		line 62 in file "mcc_generated_files/adc.c"
  4397 ;; Parameters:    Size  Location     Type
  4398 ;;		None
  4399 ;; Auto vars:     Size  Location     Type
  4400 ;;		None
  4401 ;; Return value:  Size  Location     Type
  4402 ;;                  1    wreg      void 
  4403 ;; Registers used:
  4404 ;;		wreg, status,2, status,0, cstack
  4405 ;; Tracked objects:
  4406 ;;		On entry : 0/0
  4407 ;;		On exit  : 0/0
  4408 ;;		Unchanged: 0/0
  4409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4414 ;;Total ram usage:        0 bytes
  4415 ;; Hardware stack levels used: 1
  4416 ;; Hardware stack levels required when called: 5
  4417 ;; This function calls:
  4418 ;;		_ADC_SetInterruptHandler
  4419 ;; This function is called by:
  4420 ;;		_SYSTEM_Initialize
  4421 ;; This function uses a non-reentrant model
  4422 ;;
  4423                           
  4424                           	psect	text34
  4425   001110                     __ptext34:
  4426                           	callstack 0
  4427   001110                     _ADC_Initialize:
  4428                           	callstack 24
  4429   001110                     
  4430                           ;mcc_generated_files/adc.c: 67:     ADCON0 = 0x01;
  4431   001110  0E01               	movlw	1
  4432   001112  6EC2               	movwf	194,c	;volatile
  4433                           
  4434                           ;mcc_generated_files/adc.c: 70:     ADCON1 = 0x00;
  4435   001114  0E00               	movlw	0
  4436   001116  6EC1               	movwf	193,c	;volatile
  4437                           
  4438                           ;mcc_generated_files/adc.c: 73:     ADCON2 = 0x8C;
  4439   001118  0E8C               	movlw	140
  4440   00111A  6EC0               	movwf	192,c	;volatile
  4441                           
  4442                           ;mcc_generated_files/adc.c: 76:     ADRESL = 0x00;
  4443   00111C  0E00               	movlw	0
  4444   00111E  6EC3               	movwf	195,c	;volatile
  4445                           
  4446                           ;mcc_generated_files/adc.c: 79:     ADRESH = 0x00;
  4447   001120  0E00               	movlw	0
  4448   001122  6EC4               	movwf	196,c	;volatile
  4449   001124                     
  4450                           ;mcc_generated_files/adc.c: 82:     PIE1bits.ADIE = 1;
  4451   001124  8C9D               	bsf	157,6,c	;volatile
  4452   001126                     
  4453                           ;mcc_generated_files/adc.c: 85:     ADC_SetInterruptHandler(ADC_DefaultInterruptHandler)
      +                          ;
  4454   001126  0E98               	movlw	low _ADC_DefaultInterruptHandler
  4455   001128  6E1F               	movwf	ADC_SetInterruptHandler@InterruptHandler^0,c
  4456   00112A  0E12               	movlw	high _ADC_DefaultInterruptHandler
  4457   00112C  6E20               	movwf	(ADC_SetInterruptHandler@InterruptHandler+1)^0,c
  4458   00112E  EC2F  F009         	call	_ADC_SetInterruptHandler	;wreg free
  4459   001132  0012               	return		;funcret
  4460   001134                     __end_of_ADC_Initialize:
  4461                           	callstack 0
  4462                           
  4463 ;; *************** function _ADC_SetInterruptHandler *****************
  4464 ;; Defined at:
  4465 ;;		line 151 in file "mcc_generated_files/adc.c"
  4466 ;; Parameters:    Size  Location     Type
  4467 ;;  InterruptHan    2   30[COMRAM] PTR FTN()void 
  4468 ;;		 -> ADC_MyInterruptHandler(1), ADC_DefaultInterruptHandler(1), 
  4469 ;; Auto vars:     Size  Location     Type
  4470 ;;		None
  4471 ;; Return value:  Size  Location     Type
  4472 ;;                  1    wreg      void 
  4473 ;; Registers used:
  4474 ;;		wreg, status,2, status,0
  4475 ;; Tracked objects:
  4476 ;;		On entry : 0/0
  4477 ;;		On exit  : 0/0
  4478 ;;		Unchanged: 0/0
  4479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4480 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4483 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4484 ;;Total ram usage:        2 bytes
  4485 ;; Hardware stack levels used: 1
  4486 ;; Hardware stack levels required when called: 4
  4487 ;; This function calls:
  4488 ;;		Nothing
  4489 ;; This function is called by:
  4490 ;;		_ADC_Initialize
  4491 ;;		_main
  4492 ;; This function uses a non-reentrant model
  4493 ;;
  4494                           
  4495                           	psect	text35
  4496   00125E                     __ptext35:
  4497                           	callstack 0
  4498   00125E                     _ADC_SetInterruptHandler:
  4499                           	callstack 24
  4500   00125E                     
  4501                           ;mcc_generated_files/adc.c: 152:     ADC_InterruptHandler = InterruptHandler;
  4502   00125E  C01F  F03D         	movff	ADC_SetInterruptHandler@InterruptHandler,_ADC_InterruptHandler
  4503   001262  C020  F03E         	movff	ADC_SetInterruptHandler@InterruptHandler+1,_ADC_InterruptHandler+1
  4504   001266  0012               	return		;funcret
  4505   001268                     __end_of_ADC_SetInterruptHandler:
  4506                           	callstack 0
  4507                           
  4508 ;; *************** function _CheckUSART *****************
  4509 ;; Defined at:
  4510 ;;		line 231 in file "main.c"
  4511 ;; Parameters:    Size  Location     Type
  4512 ;;		None
  4513 ;; Auto vars:     Size  Location     Type
  4514 ;;		None
  4515 ;; Return value:  Size  Location     Type
  4516 ;;                  1    wreg      void 
  4517 ;; Registers used:
  4518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4519 ;; Tracked objects:
  4520 ;;		On entry : 0/0
  4521 ;;		On exit  : 0/0
  4522 ;;		Unchanged: 0/0
  4523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4528 ;;Total ram usage:        0 bytes
  4529 ;; Hardware stack levels used: 1
  4530 ;; Hardware stack levels required when called: 5
  4531 ;; This function calls:
  4532 ;;		_EUSART1_Read
  4533 ;;		_EUSART1_Write
  4534 ;;		_EUSART1_is_rx_ready
  4535 ;; This function is called by:
  4536 ;;		_main
  4537 ;; This function uses a non-reentrant model
  4538 ;;
  4539                           
  4540                           	psect	text36
  4541   000BB6                     __ptext36:
  4542                           	callstack 0
  4543   000BB6                     _CheckUSART:
  4544                           	callstack 25
  4545   000BB6                     
  4546                           ;main.c: 232:     if (EUSART1_is_rx_ready()) {
  4547   000BB6  ECB7  F008         	call	_EUSART1_is_rx_ready	;wreg free
  4548   000BBA  0900               	iorlw	0
  4549   000BBC  B4D8               	btfsc	status,2,c
  4550   000BBE  EFE3  F005         	goto	u2241
  4551   000BC2  EFE5  F005         	goto	u2240
  4552   000BC6                     u2241:
  4553   000BC6  EF10  F006         	goto	l648
  4554   000BCA                     u2240:
  4555   000BCA                     
  4556                           ;main.c: 233:         rxData = EUSART1_Read();
  4557   000BCA  ECF4  F006         	call	_EUSART1_Read	;wreg free
  4558   000BCE  6E2E               	movwf	_rxData^0,c
  4559                           
  4560                           ;main.c: 234:         EUSART1_Write(rxData);
  4561   000BD0  502E               	movf	_rxData^0,w,c
  4562   000BD2  EC76  F006         	call	_EUSART1_Write
  4563   000BD6                     
  4564                           ;main.c: 235:         if ((rxData >= '0' && rxData <= '9') || rxData == 13)
  4565   000BD6  0E2F               	movlw	47
  4566   000BD8  642E               	cpfsgt	_rxData^0,c
  4567   000BDA  EFF1  F005         	goto	u2251
  4568   000BDE  EFF3  F005         	goto	u2250
  4569   000BE2                     u2251:
  4570   000BE2  EFFB  F005         	goto	l3330
  4571   000BE6                     u2250:
  4572   000BE6  0E39               	movlw	57
  4573   000BE8  642E               	cpfsgt	_rxData^0,c
  4574   000BEA  EFF9  F005         	goto	u2261
  4575   000BEE  EFFB  F005         	goto	u2260
  4576   000BF2                     u2261:
  4577   000BF2  EF04  F006         	goto	l3332
  4578   000BF6                     u2260:
  4579   000BF6                     l3330:
  4580   000BF6  0E0D               	movlw	13
  4581   000BF8  182E               	xorwf	_rxData^0,w,c
  4582   000BFA  A4D8               	btfss	status,2,c
  4583   000BFC  EF02  F006         	goto	u2271
  4584   000C00  EF04  F006         	goto	u2270
  4585   000C04                     u2271:
  4586   000C04  EF0B  F006         	goto	l3336
  4587   000C08                     u2270:
  4588   000C08                     l3332:
  4589                           
  4590                           ;main.c: 236:         {;main.c: 237:             carater_recebido = 1;
  4591   000C08  0E01               	movlw	1
  4592   000C0A  0100               	movlb	0	; () banked
  4593   000C0C  6FF0               	movwf	_carater_recebido& (0+255),b
  4594   000C0E                     
  4595                           ; BSR set to: 0
  4596                           ;main.c: 238:             menu = rxData;
  4597   000C0E  C02E  F0F1         	movff	_rxData,_menu
  4598                           
  4599                           ;main.c: 239:         } else {
  4600   000C12  EF10  F006         	goto	l648
  4601   000C16                     l3336:
  4602                           
  4603                           ;main.c: 240:             carater_recebido = 0;
  4604   000C16  0E00               	movlw	0
  4605   000C18  0100               	movlb	0	; () banked
  4606   000C1A  6FF0               	movwf	_carater_recebido& (0+255),b
  4607                           
  4608                           ;main.c: 241:             menu = '0';
  4609   000C1C  0E30               	movlw	48
  4610   000C1E  6FF1               	movwf	_menu& (0+255),b
  4611   000C20                     l648:
  4612   000C20  0012               	return		;funcret
  4613   000C22                     __end_of_CheckUSART:
  4614                           	callstack 0
  4615                           
  4616 ;; *************** function _EUSART1_is_rx_ready *****************
  4617 ;; Defined at:
  4618 ;;		line 137 in file "mcc_generated_files/eusart1.c"
  4619 ;; Parameters:    Size  Location     Type
  4620 ;;		None
  4621 ;; Auto vars:     Size  Location     Type
  4622 ;;		None
  4623 ;; Return value:  Size  Location     Type
  4624 ;;                  1    wreg      _Bool 
  4625 ;; Registers used:
  4626 ;;		wreg, status,2
  4627 ;; Tracked objects:
  4628 ;;		On entry : 0/0
  4629 ;;		On exit  : 0/0
  4630 ;;		Unchanged: 0/0
  4631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4636 ;;Total ram usage:        0 bytes
  4637 ;; Hardware stack levels used: 1
  4638 ;; Hardware stack levels required when called: 4
  4639 ;; This function calls:
  4640 ;;		Nothing
  4641 ;; This function is called by:
  4642 ;;		_CheckUSART
  4643 ;; This function uses a non-reentrant model
  4644 ;;
  4645                           
  4646                           	psect	text37
  4647   00116E                     __ptext37:
  4648                           	callstack 0
  4649   00116E                     _EUSART1_is_rx_ready:
  4650                           	callstack 25
  4651   00116E                     
  4652                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
  4653   00116E  5031               	movf	_eusart1RxCount^0,w,c	;volatile
  4654   001170  A4D8               	btfss	status,2,c
  4655   001172  EFBD  F008         	goto	u1451
  4656   001176  EFC0  F008         	goto	u1450
  4657   00117A                     u1451:
  4658   00117A  0E01               	movlw	1
  4659   00117C  EFC1  F008         	goto	u1460
  4660   001180                     u1450:
  4661   001180  0E00               	movlw	0
  4662   001182                     u1460:
  4663   001182  0012               	return		;funcret
  4664   001184                     __end_of_EUSART1_is_rx_ready:
  4665                           	callstack 0
  4666                           
  4667 ;; *************** function _EUSART1_Write *****************
  4668 ;; Defined at:
  4669 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  4670 ;; Parameters:    Size  Location     Type
  4671 ;;  txData          1    wreg     unsigned char 
  4672 ;; Auto vars:     Size  Location     Type
  4673 ;;  txData          1   30[COMRAM] unsigned char 
  4674 ;; Return value:  Size  Location     Type
  4675 ;;                  1    wreg      void 
  4676 ;; Registers used:
  4677 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4678 ;; Tracked objects:
  4679 ;;		On entry : 0/0
  4680 ;;		On exit  : 0/0
  4681 ;;		Unchanged: 0/0
  4682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4684 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4686 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4687 ;;Total ram usage:        1 bytes
  4688 ;; Hardware stack levels used: 1
  4689 ;; Hardware stack levels required when called: 4
  4690 ;; This function calls:
  4691 ;;		Nothing
  4692 ;; This function is called by:
  4693 ;;		_putch
  4694 ;;		_ShowMenuInTerminal
  4695 ;;		_CheckUSART
  4696 ;; This function uses a non-reentrant model
  4697 ;;
  4698                           
  4699                           	psect	text38
  4700   000CEC                     __ptext38:
  4701                           	callstack 0
  4702   000CEC                     _EUSART1_Write:
  4703                           	callstack 21
  4704                           
  4705                           ;incstack = 0
  4706                           ;EUSART1_Write@txData stored from wreg
  4707   000CEC  6E1F               	movwf	EUSART1_Write@txData^0,c
  4708   000CEE                     l3000:
  4709                           
  4710                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
  4711   000CEE  5034               	movf	_eusart1TxBufferRemaining^0,w,c	;volatile
  4712   000CF0  B4D8               	btfsc	status,2,c
  4713   000CF2  EF7D  F006         	goto	u1871
  4714   000CF6  EF7F  F006         	goto	u1870
  4715   000CFA                     u1871:
  4716   000CFA  EF77  F006         	goto	l3000
  4717   000CFE                     u1870:
  4718   000CFE                     
  4719                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE1bits.TX1IE)
  4720   000CFE  B89D               	btfsc	157,4,c	;volatile
  4721   000D00  EF84  F006         	goto	u1881
  4722   000D04  EF86  F006         	goto	u1880
  4723   000D08                     u1881:
  4724   000D08  EF8A  F006         	goto	l249
  4725   000D0C                     u1880:
  4726   000D0C                     
  4727                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          XREG1 = txData;
  4728   000D0C  C01F  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  4729                           
  4730                           ;mcc_generated_files/eusart1.c: 182:     }
  4731   000D10  EF9F  F006         	goto	l3014
  4732   000D14                     l249:
  4733                           
  4734                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE1bits.TX1IE = 0;
  4735   000D14  989D               	bcf	157,4,c	;volatile
  4736   000D16                     
  4737                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
  4738   000D16  0EB5               	movlw	low _eusart1TxBuffer
  4739   000D18  2436               	addwf	_eusart1TxHead^0,w,c	;volatile
  4740   000D1A  6ED9               	movwf	fsr2l,c
  4741   000D1C  6ADA               	clrf	fsr2h,c
  4742   000D1E  0E00               	movlw	high _eusart1TxBuffer
  4743   000D20  22DA               	addwfc	fsr2h,f,c
  4744   000D22  C01F  FFDF         	movff	EUSART1_Write@txData,indf2
  4745   000D26  2A36               	incf	_eusart1TxHead^0,f,c	;volatile
  4746   000D28                     
  4747                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
  4748   000D28  0E07               	movlw	7
  4749   000D2A  6436               	cpfsgt	_eusart1TxHead^0,c	;volatile
  4750   000D2C  EF9A  F006         	goto	u1891
  4751   000D30  EF9C  F006         	goto	u1890
  4752   000D34                     u1891:
  4753   000D34  EF9E  F006         	goto	l3012
  4754   000D38                     u1890:
  4755   000D38                     
  4756                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
  4757   000D38  0E00               	movlw	0
  4758   000D3A  6E36               	movwf	_eusart1TxHead^0,c	;volatile
  4759   000D3C                     l3012:
  4760                           
  4761                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
  4762   000D3C  0634               	decf	_eusart1TxBufferRemaining^0,f,c	;volatile
  4763   000D3E                     l3014:
  4764                           
  4765                           ;mcc_generated_files/eusart1.c: 193:     PIE1bits.TX1IE = 1;
  4766   000D3E  889D               	bsf	157,4,c	;volatile
  4767   000D40  0012               	return		;funcret
  4768   000D42                     __end_of_EUSART1_Write:
  4769                           	callstack 0
  4770                           
  4771 ;; *************** function _EUSART1_Read *****************
  4772 ;; Defined at:
  4773 ;;		line 151 in file "mcc_generated_files/eusart1.c"
  4774 ;; Parameters:    Size  Location     Type
  4775 ;;		None
  4776 ;; Auto vars:     Size  Location     Type
  4777 ;;  readValue       1   30[COMRAM] unsigned char 
  4778 ;; Return value:  Size  Location     Type
  4779 ;;                  1    wreg      unsigned char 
  4780 ;; Registers used:
  4781 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4782 ;; Tracked objects:
  4783 ;;		On entry : 0/0
  4784 ;;		On exit  : 0/0
  4785 ;;		Unchanged: 0/0
  4786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4788 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4790 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4791 ;;Total ram usage:        1 bytes
  4792 ;; Hardware stack levels used: 1
  4793 ;; Hardware stack levels required when called: 4
  4794 ;; This function calls:
  4795 ;;		Nothing
  4796 ;; This function is called by:
  4797 ;;		_CheckUSART
  4798 ;;		_getch
  4799 ;; This function uses a non-reentrant model
  4800 ;;
  4801                           
  4802                           	psect	text39
  4803   000DE8                     __ptext39:
  4804                           	callstack 0
  4805   000DE8                     _EUSART1_Read:
  4806                           	callstack 25
  4807   000DE8                     l2634:
  4808                           
  4809                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
  4810   000DE8  5031               	movf	_eusart1RxCount^0,w,c	;volatile
  4811   000DEA  B4D8               	btfsc	status,2,c
  4812   000DEC  EFFA  F006         	goto	u1471
  4813   000DF0  EFFC  F006         	goto	u1470
  4814   000DF4                     u1471:
  4815   000DF4  EFF4  F006         	goto	l2634
  4816   000DF8                     u1470:
  4817   000DF8                     
  4818                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
  4819   000DF8  0EA5               	movlw	low _eusart1RxStatusBuffer
  4820   000DFA  2432               	addwf	_eusart1RxTail^0,w,c	;volatile
  4821   000DFC  6ED9               	movwf	fsr2l,c
  4822   000DFE  6ADA               	clrf	fsr2h,c
  4823   000E00  0E00               	movlw	high _eusart1RxStatusBuffer
  4824   000E02  22DA               	addwfc	fsr2h,f,c
  4825   000E04  50DF               	movf	indf2,w,c
  4826   000E06  6E30               	movwf	_eusart1RxLastError^0,c	;volatile
  4827                           
  4828                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
  4829   000E08  0EAD               	movlw	low _eusart1RxBuffer
  4830   000E0A  2432               	addwf	_eusart1RxTail^0,w,c	;volatile
  4831   000E0C  6ED9               	movwf	fsr2l,c
  4832   000E0E  6ADA               	clrf	fsr2h,c
  4833   000E10  0E00               	movlw	high _eusart1RxBuffer
  4834   000E12  22DA               	addwfc	fsr2h,f,c
  4835   000E14  50DF               	movf	indf2,w,c
  4836   000E16  6E1F               	movwf	EUSART1_Read@readValue^0,c
  4837   000E18  2A32               	incf	_eusart1RxTail^0,f,c	;volatile
  4838   000E1A                     
  4839                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  4840   000E1A  0E07               	movlw	7
  4841   000E1C  6432               	cpfsgt	_eusart1RxTail^0,c	;volatile
  4842   000E1E  EF13  F007         	goto	u1481
  4843   000E22  EF15  F007         	goto	u1480
  4844   000E26                     u1481:
  4845   000E26  EF17  F007         	goto	l2644
  4846   000E2A                     u1480:
  4847   000E2A                     
  4848                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
  4849   000E2A  0E00               	movlw	0
  4850   000E2C  6E32               	movwf	_eusart1RxTail^0,c	;volatile
  4851   000E2E                     l2644:
  4852                           
  4853                           ;mcc_generated_files/eusart1.c: 166:     PIE1bits.RC1IE = 0;
  4854   000E2E  9A9D               	bcf	157,5,c	;volatile
  4855   000E30                     
  4856                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
  4857   000E30  0631               	decf	_eusart1RxCount^0,f,c	;volatile
  4858   000E32                     
  4859                           ;mcc_generated_files/eusart1.c: 168:     PIE1bits.RC1IE = 1;
  4860   000E32  8A9D               	bsf	157,5,c	;volatile
  4861   000E34                     
  4862                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
  4863   000E34  501F               	movf	EUSART1_Read@readValue^0,w,c
  4864   000E36  0012               	return		;funcret
  4865   000E38                     __end_of_EUSART1_Read:
  4866                           	callstack 0
  4867                           
  4868 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  4869 ;; Defined at:
  4870 ;;		line 79 in file "mcc_generated_files/interrupt_manager.c"
  4871 ;; Parameters:    Size  Location     Type
  4872 ;;		None
  4873 ;; Auto vars:     Size  Location     Type
  4874 ;;		None
  4875 ;; Return value:  Size  Location     Type
  4876 ;;                  1    wreg      void 
  4877 ;; Registers used:
  4878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  4879 ;; Tracked objects:
  4880 ;;		On entry : 0/0
  4881 ;;		On exit  : 0/0
  4882 ;;		Unchanged: 0/0
  4883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4886 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4887 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4888 ;;Total ram usage:        4 bytes
  4889 ;; Hardware stack levels used: 1
  4890 ;; Hardware stack levels required when called: 3
  4891 ;; This function calls:
  4892 ;;		NULL
  4893 ;;		_ADC_ISR
  4894 ;;		_EUSART1_Receive_ISR
  4895 ;;		_EUSART1_Transmit_ISR
  4896 ;;		_INT0_ISR
  4897 ;;		_TMR0_ISR
  4898 ;;		_TMR1_ISR
  4899 ;; This function is called by:
  4900 ;;		Interrupt level 2
  4901 ;; This function uses a non-reentrant model
  4902 ;;
  4903                           
  4904                           	psect	intcode
  4905   000008                     __pintcode:
  4906                           	callstack 0
  4907   000008                     _INTERRUPT_InterruptManagerHigh:
  4908                           	callstack 17
  4909                           
  4910                           ;incstack = 0
  4911   000008  8241               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4912   00000A  CFFA F01B          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
  4913   00000E  CFFB F01C          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
  4914   000012  CFD9 F01D          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+2
  4915   000016  CFDA F01E          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+3
  4916   00001A                     
  4917                           ;mcc_generated_files/interrupt_manager.c: 82:     if(PIE1bits.ADIE == 1 && PIR1bits.ADIF
      +                           == 1)
  4918   00001A  AC9D               	btfss	157,6,c	;volatile
  4919   00001C  EF12  F000         	goto	i2u170_41
  4920   000020  EF14  F000         	goto	i2u170_40
  4921   000024                     i2u170_41:
  4922   000024  EF1F  F000         	goto	i2l331
  4923   000028                     i2u170_40:
  4924   000028  AC9E               	btfss	158,6,c	;volatile
  4925   00002A  EF19  F000         	goto	i2u171_41
  4926   00002E  EF1B  F000         	goto	i2u171_40
  4927   000032                     i2u171_41:
  4928   000032  EF1F  F000         	goto	i2l331
  4929   000036                     i2u171_40:
  4930   000036                     
  4931                           ;mcc_generated_files/interrupt_manager.c: 83:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 84:         ADC_ISR();
  4932   000036  ECF4  F007         	call	_ADC_ISR	;wreg free
  4933                           
  4934                           ;mcc_generated_files/interrupt_manager.c: 85:     }
  4935   00003A  EF8F  F000         	goto	i2l343
  4936   00003E                     i2l331:
  4937   00003E  AAF2               	btfss	242,5,c	;volatile
  4938   000040  EF24  F000         	goto	i2u172_41
  4939   000044  EF26  F000         	goto	i2u172_40
  4940   000048                     i2u172_41:
  4941   000048  EF31  F000         	goto	i2l333
  4942   00004C                     i2u172_40:
  4943   00004C  A4F2               	btfss	242,2,c	;volatile
  4944   00004E  EF2B  F000         	goto	i2u173_41
  4945   000052  EF2D  F000         	goto	i2u173_40
  4946   000056                     i2u173_41:
  4947   000056  EF31  F000         	goto	i2l333
  4948   00005A                     i2u173_40:
  4949   00005A                     
  4950                           ;mcc_generated_files/interrupt_manager.c: 87:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 88:         TMR0_ISR();
  4951   00005A  ECDB  F007         	call	_TMR0_ISR	;wreg free
  4952                           
  4953                           ;mcc_generated_files/interrupt_manager.c: 89:     }
  4954   00005E  EF8F  F000         	goto	i2l343
  4955   000062                     i2l333:
  4956   000062  A8F2               	btfss	242,4,c	;volatile
  4957   000064  EF36  F000         	goto	i2u174_41
  4958   000068  EF38  F000         	goto	i2u174_40
  4959   00006C                     i2u174_41:
  4960   00006C  EF43  F000         	goto	i2l335
  4961   000070                     i2u174_40:
  4962   000070  A2F2               	btfss	242,1,c	;volatile
  4963   000072  EF3D  F000         	goto	i2u175_41
  4964   000076  EF3F  F000         	goto	i2u175_40
  4965   00007A                     i2u175_41:
  4966   00007A  EF43  F000         	goto	i2l335
  4967   00007E                     i2u175_40:
  4968   00007E                     
  4969                           ;mcc_generated_files/interrupt_manager.c: 91:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 92:         INT0_ISR();
  4970   00007E  EC34  F009         	call	_INT0_ISR	;wreg free
  4971                           
  4972                           ;mcc_generated_files/interrupt_manager.c: 93:     }
  4973   000082  EF8F  F000         	goto	i2l343
  4974   000086                     i2l335:
  4975   000086  A89D               	btfss	157,4,c	;volatile
  4976   000088  EF48  F000         	goto	i2u176_41
  4977   00008C  EF4A  F000         	goto	i2u176_40
  4978   000090                     i2u176_41:
  4979   000090  EF60  F000         	goto	i2l337
  4980   000094                     i2u176_40:
  4981   000094  A89E               	btfss	158,4,c	;volatile
  4982   000096  EF4F  F000         	goto	i2u177_41
  4983   00009A  EF51  F000         	goto	i2u177_40
  4984   00009E                     i2u177_41:
  4985   00009E  EF60  F000         	goto	i2l337
  4986   0000A2                     i2u177_40:
  4987   0000A2                     
  4988                           ;mcc_generated_files/interrupt_manager.c: 95:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 96:         EUSART1_TxDefaultInterruptHandler();
  4989   0000A2  D802               	call	i2u178_48
  4990   0000A4  EF5E  F000         	goto	i2u178_49
  4991   0000A8                     i2u178_48:
  4992   0000A8  0005               	push	
  4993   0000AA  6EFA               	movwf	pclath,c
  4994   0000AC  0100               	movlb	0	; () banked
  4995   0000AE  51EE               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
  4996   0000B0  6EFD               	movwf	tosl,c
  4997   0000B2  51EF               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
  4998   0000B4  6EFE               	movwf	tosh,c
  4999   0000B6  6AFF               	clrf	tosu,c
  5000   0000B8  50FA               	movf	pclath,w,c
  5001   0000BA  0012               	return		;indir
  5002   0000BC                     i2u178_49:
  5003                           
  5004                           ;mcc_generated_files/interrupt_manager.c: 97:     }
  5005   0000BC  EF8F  F000         	goto	i2l343
  5006   0000C0                     i2l337:
  5007   0000C0  AA9D               	btfss	157,5,c	;volatile
  5008   0000C2  EF65  F000         	goto	i2u179_41
  5009   0000C6  EF67  F000         	goto	i2u179_40
  5010   0000CA                     i2u179_41:
  5011   0000CA  EF7D  F000         	goto	i2l339
  5012   0000CE                     i2u179_40:
  5013   0000CE  AA9E               	btfss	158,5,c	;volatile
  5014   0000D0  EF6C  F000         	goto	i2u180_41
  5015   0000D4  EF6E  F000         	goto	i2u180_40
  5016   0000D8                     i2u180_41:
  5017   0000D8  EF7D  F000         	goto	i2l339
  5018   0000DC                     i2u180_40:
  5019   0000DC                     
  5020                           ;mcc_generated_files/interrupt_manager.c: 99:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 100:         EUSART1_RxDefaultInterruptHandler();
  5021   0000DC  D802               	call	i2u181_48
  5022   0000DE  EF7B  F000         	goto	i2u181_49
  5023   0000E2                     i2u181_48:
  5024   0000E2  0005               	push	
  5025   0000E4  6EFA               	movwf	pclath,c
  5026   0000E6  0100               	movlb	0	; () banked
  5027   0000E8  51EC               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
  5028   0000EA  6EFD               	movwf	tosl,c
  5029   0000EC  51ED               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
  5030   0000EE  6EFE               	movwf	tosh,c
  5031   0000F0  6AFF               	clrf	tosu,c
  5032   0000F2  50FA               	movf	pclath,w,c
  5033   0000F4  0012               	return		;indir
  5034   0000F6                     i2u181_49:
  5035                           
  5036                           ;mcc_generated_files/interrupt_manager.c: 101:     }
  5037   0000F6  EF8F  F000         	goto	i2l343
  5038   0000FA                     i2l339:
  5039   0000FA  A09D               	btfss	157,0,c	;volatile
  5040   0000FC  EF82  F000         	goto	i2u182_41
  5041   000100  EF84  F000         	goto	i2u182_40
  5042   000104                     i2u182_41:
  5043   000104  EF8F  F000         	goto	i2l338
  5044   000108                     i2u182_40:
  5045   000108  A09E               	btfss	158,0,c	;volatile
  5046   00010A  EF89  F000         	goto	i2u183_41
  5047   00010E  EF8B  F000         	goto	i2u183_40
  5048   000112                     i2u183_41:
  5049   000112  EF8F  F000         	goto	i2l338
  5050   000116                     i2u183_40:
  5051   000116                     
  5052                           ;mcc_generated_files/interrupt_manager.c: 103:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 104:         TMR1_ISR();
  5053   000116  ECA3  F007         	call	_TMR1_ISR	;wreg free
  5054                           
  5055                           ;mcc_generated_files/interrupt_manager.c: 105:     }
  5056   00011A  EF8F  F000         	goto	i2l343
  5057   00011E                     i2l338:
  5058   00011E                     i2l343:
  5059   00011E  C01E  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr2h
  5060   000122  C01D  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr2l
  5061   000126  C01C  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
  5062   00012A  C01B  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
  5063   00012E  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5064   000130  0011               	retfie		f
  5065   000132                     __end_of_INTERRUPT_InterruptManagerHigh:
  5066                           	callstack 0
  5067                           
  5068 ;; *************** function _TMR1_ISR *****************
  5069 ;; Defined at:
  5070 ;;		line 158 in file "mcc_generated_files/tmr1.c"
  5071 ;; Parameters:    Size  Location     Type
  5072 ;;		None
  5073 ;; Auto vars:     Size  Location     Type
  5074 ;;		None
  5075 ;; Return value:  Size  Location     Type
  5076 ;;                  1    wreg      void 
  5077 ;; Registers used:
  5078 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5079 ;; Tracked objects:
  5080 ;;		On entry : 0/0
  5081 ;;		On exit  : 0/0
  5082 ;;		Unchanged: 0/0
  5083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5088 ;;Total ram usage:        0 bytes
  5089 ;; Hardware stack levels used: 1
  5090 ;; Hardware stack levels required when called: 1
  5091 ;; This function calls:
  5092 ;;		NULL
  5093 ;;		_TMR1_DefaultInterruptHandler
  5094 ;;		_TMR1_MyInterruptHandler
  5095 ;;		_TMR1_WriteTimer
  5096 ;; This function is called by:
  5097 ;;		_INTERRUPT_InterruptManagerHigh
  5098 ;; This function uses a non-reentrant model
  5099 ;;
  5100                           
  5101                           	psect	text41
  5102   000F46                     __ptext41:
  5103                           	callstack 0
  5104   000F46                     _TMR1_ISR:
  5105                           	callstack 18
  5106   000F46                     
  5107                           ;mcc_generated_files/tmr1.c: 162:     PIR1bits.TMR1IF = 0;
  5108   000F46  909E               	bcf	158,0,c	;volatile
  5109   000F48                     
  5110                           ;mcc_generated_files/tmr1.c: 163:     TMR1_WriteTimer(timer1ReloadVal);
  5111   000F48  C02A  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
  5112   000F4C  C02B  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
  5113   000F50  EC74  F008         	call	_TMR1_WriteTimer	;wreg free
  5114   000F54                     
  5115                           ;mcc_generated_files/tmr1.c: 165:     if(TMR1_InterruptHandler)
  5116   000F54  5037               	movf	_TMR1_InterruptHandler^0,w,c
  5117   000F56  1038               	iorwf	(_TMR1_InterruptHandler+1)^0,w,c
  5118   000F58  B4D8               	btfsc	status,2,c
  5119   000F5A  EFB1  F007         	goto	i2u164_41
  5120   000F5E  EFB3  F007         	goto	i2u164_40
  5121   000F62                     i2u164_41:
  5122   000F62  EFBF  F007         	goto	i2l519
  5123   000F66                     i2u164_40:
  5124   000F66                     
  5125                           ;mcc_generated_files/tmr1.c: 166:     {;mcc_generated_files/tmr1.c: 167:         TMR1_In
      +                          terruptHandler();
  5126   000F66  D802               	call	i2u165_48
  5127   000F68  EFBF  F007         	goto	i2u165_49
  5128   000F6C                     i2u165_48:
  5129   000F6C  0005               	push	
  5130   000F6E  6EFA               	movwf	pclath,c
  5131   000F70  5037               	movf	_TMR1_InterruptHandler^0,w,c
  5132   000F72  6EFD               	movwf	tosl,c
  5133   000F74  5038               	movf	(_TMR1_InterruptHandler+1)^0,w,c
  5134   000F76  6EFE               	movwf	tosh,c
  5135   000F78  6AFF               	clrf	tosu,c
  5136   000F7A  50FA               	movf	pclath,w,c
  5137   000F7C  0012               	return		;indir
  5138   000F7E                     i2u165_49:
  5139   000F7E                     i2l519:
  5140   000F7E  0012               	return		;funcret
  5141   000F80                     __end_of_TMR1_ISR:
  5142                           	callstack 0
  5143                           
  5144 ;; *************** function _TMR1_WriteTimer *****************
  5145 ;; Defined at:
  5146 ;;		line 121 in file "mcc_generated_files/tmr1.c"
  5147 ;; Parameters:    Size  Location     Type
  5148 ;;  timerVal        2    0[COMRAM] unsigned short 
  5149 ;; Auto vars:     Size  Location     Type
  5150 ;;		None
  5151 ;; Return value:  Size  Location     Type
  5152 ;;                  1    wreg      void 
  5153 ;; Registers used:
  5154 ;;		wreg, status,2
  5155 ;; Tracked objects:
  5156 ;;		On entry : 0/0
  5157 ;;		On exit  : 0/0
  5158 ;;		Unchanged: 0/0
  5159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5160 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5163 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5164 ;;Total ram usage:        2 bytes
  5165 ;; Hardware stack levels used: 1
  5166 ;; This function calls:
  5167 ;;		Nothing
  5168 ;; This function is called by:
  5169 ;;		_TMR1_ISR
  5170 ;;		_TMR1_Reload
  5171 ;; This function uses a non-reentrant model
  5172 ;;
  5173                           
  5174                           	psect	text42
  5175   0010E8                     __ptext42:
  5176                           	callstack 0
  5177   0010E8                     _TMR1_WriteTimer:
  5178                           	callstack 18
  5179   0010E8                     
  5180                           ;mcc_generated_files/tmr1.c: 121: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 122: {;mcc_generated_files/tmr1.c: 123:     if (T1CONbits.T1SYNC == 1)
  5181   0010E8  A4CD               	btfss	205,2,c	;volatile
  5182   0010EA  EF79  F008         	goto	i2u149_41
  5183   0010EE  EF7B  F008         	goto	i2u149_40
  5184   0010F2                     i2u149_41:
  5185   0010F2  EF83  F008         	goto	i2l2700
  5186   0010F6                     i2u149_40:
  5187   0010F6                     
  5188                           ;mcc_generated_files/tmr1.c: 124:     {;mcc_generated_files/tmr1.c: 126:         T1CONbi
      +                          ts.TMR1ON = 0;
  5189   0010F6  90CD               	bcf	205,0,c	;volatile
  5190   0010F8                     
  5191                           ;mcc_generated_files/tmr1.c: 129:         TMR1H = (timerVal >> 8);
  5192   0010F8  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  5193   0010FA  6ECF               	movwf	207,c	;volatile
  5194   0010FC                     
  5195                           ;mcc_generated_files/tmr1.c: 130:         TMR1L = (uint8_t) timerVal;
  5196   0010FC  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  5197   001100                     
  5198                           ;mcc_generated_files/tmr1.c: 133:         T1CONbits.TMR1ON =1;
  5199   001100  80CD               	bsf	205,0,c	;volatile
  5200                           
  5201                           ;mcc_generated_files/tmr1.c: 134:     }
  5202   001102  EF87  F008         	goto	i2l506
  5203   001106                     i2l2700:
  5204                           
  5205                           ;mcc_generated_files/tmr1.c: 136:     {;mcc_generated_files/tmr1.c: 138:         TMR1H =
      +                           (timerVal >> 8);
  5206   001106  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  5207   001108  6ECF               	movwf	207,c	;volatile
  5208   00110A                     
  5209                           ;mcc_generated_files/tmr1.c: 139:         TMR1L = (uint8_t) timerVal;
  5210   00110A  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  5211   00110E                     i2l506:
  5212   00110E  0012               	return		;funcret
  5213   001110                     __end_of_TMR1_WriteTimer:
  5214                           	callstack 0
  5215                           
  5216 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  5217 ;; Defined at:
  5218 ;;		line 176 in file "mcc_generated_files/tmr1.c"
  5219 ;; Parameters:    Size  Location     Type
  5220 ;;		None
  5221 ;; Auto vars:     Size  Location     Type
  5222 ;;		None
  5223 ;; Return value:  Size  Location     Type
  5224 ;;                  1    wreg      void 
  5225 ;; Registers used:
  5226 ;;		None
  5227 ;; Tracked objects:
  5228 ;;		On entry : 0/0
  5229 ;;		On exit  : 0/0
  5230 ;;		Unchanged: 0/0
  5231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5236 ;;Total ram usage:        0 bytes
  5237 ;; Hardware stack levels used: 1
  5238 ;; This function calls:
  5239 ;;		Nothing
  5240 ;; This function is called by:
  5241 ;;		_TMR1_Initialize
  5242 ;;		_TMR1_ISR
  5243 ;; This function uses a non-reentrant model
  5244 ;;
  5245                           
  5246                           	psect	text43
  5247   001290                     __ptext43:
  5248                           	callstack 0
  5249   001290                     _TMR1_DefaultInterruptHandler:
  5250                           	callstack 18
  5251   001290  0012               	return		;funcret
  5252   001292                     __end_of_TMR1_DefaultInterruptHandler:
  5253                           	callstack 0
  5254                           
  5255 ;; *************** function _TMR1_MyInterruptHandler *****************
  5256 ;; Defined at:
  5257 ;;		line 82 in file "main.c"
  5258 ;; Parameters:    Size  Location     Type
  5259 ;;		None
  5260 ;; Auto vars:     Size  Location     Type
  5261 ;;		None
  5262 ;; Return value:  Size  Location     Type
  5263 ;;                  1    wreg      void 
  5264 ;; Registers used:
  5265 ;;		wreg, status,2, status,0
  5266 ;; Tracked objects:
  5267 ;;		On entry : 0/0
  5268 ;;		On exit  : 0/0
  5269 ;;		Unchanged: 0/0
  5270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5273 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5274 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5275 ;;Total ram usage:        1 bytes
  5276 ;; Hardware stack levels used: 1
  5277 ;; This function calls:
  5278 ;;		Nothing
  5279 ;; This function is called by:
  5280 ;;		_main
  5281 ;;		_TMR1_ISR
  5282 ;; This function uses a non-reentrant model
  5283 ;;
  5284                           
  5285                           	psect	text44
  5286   000F80                     __ptext44:
  5287                           	callstack 0
  5288   000F80                     _TMR1_MyInterruptHandler:
  5289                           	callstack 18
  5290   000F80                     
  5291                           ;main.c: 84:     if (SistemaControloLigado) {
  5292   000F80  0100               	movlb	0	; () banked
  5293   000F82  51C5               	movf	_SistemaControloLigado& (0+255),w,b	;volatile
  5294   000F84  B4D8               	btfsc	status,2,c
  5295   000F86  EFC7  F007         	goto	i2u150_41
  5296   000F8A  EFC9  F007         	goto	i2u150_40
  5297   000F8E                     i2u150_41:
  5298   000F8E  EFDA  F007         	goto	i2l588
  5299   000F92                     i2u150_40:
  5300   000F92                     
  5301                           ; BSR set to: 0
  5302   000F92  B88A               	btfsc	138,4,c	;volatile
  5303   000F94  EFCE  F007         	goto	i2u151_41
  5304   000F98  EFD1  F007         	goto	i2u151_40
  5305   000F9C                     i2u151_41:
  5306   000F9C  0E01               	movlw	1
  5307   000F9E  EFD2  F007         	goto	i2u151_46
  5308   000FA2                     i2u151_40:
  5309   000FA2  0E00               	movlw	0
  5310   000FA4                     i2u151_46:
  5311   000FA4  0AFF               	xorlw	255
  5312   000FA6  6E01               	movwf	??_TMR1_MyInterruptHandler^0,c
  5313   000FA8  3A01               	swapf	??_TMR1_MyInterruptHandler^0,f,c
  5314   000FAA  508A               	movf	138,w,c	;volatile
  5315   000FAC  1801               	xorwf	??_TMR1_MyInterruptHandler^0,w,c
  5316   000FAE  0BEF               	andlw	-17
  5317   000FB0  1801               	xorwf	??_TMR1_MyInterruptHandler^0,w,c
  5318   000FB2  6E8A               	movwf	138,c	;volatile
  5319   000FB4                     i2l588:
  5320                           
  5321                           ; BSR set to: 0
  5322   000FB4  0012               	return		;funcret
  5323   000FB6                     __end_of_TMR1_MyInterruptHandler:
  5324                           	callstack 0
  5325                           
  5326 ;; *************** function _TMR0_ISR *****************
  5327 ;; Defined at:
  5328 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  5329 ;; Parameters:    Size  Location     Type
  5330 ;;		None
  5331 ;; Auto vars:     Size  Location     Type
  5332 ;;		None
  5333 ;; Return value:  Size  Location     Type
  5334 ;;                  1    wreg      void 
  5335 ;; Registers used:
  5336 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5337 ;; Tracked objects:
  5338 ;;		On entry : 0/0
  5339 ;;		On exit  : 0/0
  5340 ;;		Unchanged: 0/0
  5341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5346 ;;Total ram usage:        0 bytes
  5347 ;; Hardware stack levels used: 1
  5348 ;; Hardware stack levels required when called: 2
  5349 ;; This function calls:
  5350 ;;		NULL
  5351 ;;		_TMR0_DefaultInterruptHandler
  5352 ;;		_TMR0_MyInterruptHandler
  5353 ;; This function is called by:
  5354 ;;		_INTERRUPT_InterruptManagerHigh
  5355 ;; This function uses a non-reentrant model
  5356 ;;
  5357                           
  5358                           	psect	text45
  5359   000FB6                     __ptext45:
  5360                           	callstack 0
  5361   000FB6                     _TMR0_ISR:
  5362                           	callstack 17
  5363   000FB6                     
  5364                           ;mcc_generated_files/tmr0.c: 133:     INTCONbits.TMR0IF = 0;
  5365   000FB6  94F2               	bcf	242,2,c	;volatile
  5366                           
  5367                           ;mcc_generated_files/tmr0.c: 136:     TMR0L = timer0ReloadVal;
  5368   000FB8  C02F  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  5369   000FBC                     
  5370                           ;mcc_generated_files/tmr0.c: 138:     if(TMR0_InterruptHandler)
  5371   000FBC  5039               	movf	_TMR0_InterruptHandler^0,w,c
  5372   000FBE  103A               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  5373   000FC0  B4D8               	btfsc	status,2,c
  5374   000FC2  EFE5  F007         	goto	i2u162_41
  5375   000FC6  EFE7  F007         	goto	i2u162_40
  5376   000FCA                     i2u162_41:
  5377   000FCA  EFF3  F007         	goto	i2l457
  5378   000FCE                     i2u162_40:
  5379   000FCE                     
  5380                           ;mcc_generated_files/tmr0.c: 139:     {;mcc_generated_files/tmr0.c: 140:         TMR0_In
      +                          terruptHandler();
  5381   000FCE  D802               	call	i2u163_48
  5382   000FD0  EFF3  F007         	goto	i2u163_49
  5383   000FD4                     i2u163_48:
  5384   000FD4  0005               	push	
  5385   000FD6  6EFA               	movwf	pclath,c
  5386   000FD8  5039               	movf	_TMR0_InterruptHandler^0,w,c
  5387   000FDA  6EFD               	movwf	tosl,c
  5388   000FDC  503A               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  5389   000FDE  6EFE               	movwf	tosh,c
  5390   000FE0  6AFF               	clrf	tosu,c
  5391   000FE2  50FA               	movf	pclath,w,c
  5392   000FE4  0012               	return		;indir
  5393   000FE6                     i2u163_49:
  5394   000FE6                     i2l457:
  5395   000FE6  0012               	return		;funcret
  5396   000FE8                     __end_of_TMR0_ISR:
  5397                           	callstack 0
  5398                           
  5399 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  5400 ;; Defined at:
  5401 ;;		line 151 in file "mcc_generated_files/tmr0.c"
  5402 ;; Parameters:    Size  Location     Type
  5403 ;;		None
  5404 ;; Auto vars:     Size  Location     Type
  5405 ;;		None
  5406 ;; Return value:  Size  Location     Type
  5407 ;;                  1    wreg      void 
  5408 ;; Registers used:
  5409 ;;		None
  5410 ;; Tracked objects:
  5411 ;;		On entry : 0/0
  5412 ;;		On exit  : 0/0
  5413 ;;		Unchanged: 0/0
  5414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5419 ;;Total ram usage:        0 bytes
  5420 ;; Hardware stack levels used: 1
  5421 ;; This function calls:
  5422 ;;		Nothing
  5423 ;; This function is called by:
  5424 ;;		_TMR0_Initialize
  5425 ;;		_TMR0_ISR
  5426 ;; This function uses a non-reentrant model
  5427 ;;
  5428                           
  5429                           	psect	text46
  5430   001292                     __ptext46:
  5431                           	callstack 0
  5432   001292                     _TMR0_DefaultInterruptHandler:
  5433                           	callstack 18
  5434   001292  0012               	return		;funcret
  5435   001294                     __end_of_TMR0_DefaultInterruptHandler:
  5436                           	callstack 0
  5437                           
  5438 ;; *************** function _TMR0_MyInterruptHandler *****************
  5439 ;; Defined at:
  5440 ;;		line 77 in file "main.c"
  5441 ;; Parameters:    Size  Location     Type
  5442 ;;		None
  5443 ;; Auto vars:     Size  Location     Type
  5444 ;;		None
  5445 ;; Return value:  Size  Location     Type
  5446 ;;                  1    wreg      void 
  5447 ;; Registers used:
  5448 ;;		wreg, status,2, status,0, cstack
  5449 ;; Tracked objects:
  5450 ;;		On entry : 0/0
  5451 ;;		On exit  : 0/0
  5452 ;;		Unchanged: 0/0
  5453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5458 ;;Total ram usage:        0 bytes
  5459 ;; Hardware stack levels used: 1
  5460 ;; Hardware stack levels required when called: 1
  5461 ;; This function calls:
  5462 ;;		_ADC_SelectChannel
  5463 ;;		_ADC_StartConversion
  5464 ;; This function is called by:
  5465 ;;		_main
  5466 ;;		_TMR0_ISR
  5467 ;; This function uses a non-reentrant model
  5468 ;;
  5469                           
  5470                           	psect	text47
  5471   0011F8                     __ptext47:
  5472                           	callstack 0
  5473   0011F8                     _TMR0_MyInterruptHandler:
  5474                           	callstack 17
  5475   0011F8                     
  5476                           ;main.c: 78:     ADC_SelectChannel(channel_AN0);
  5477   0011F8  0E00               	movlw	0
  5478   0011FA  ECAB  F008         	call	_ADC_SelectChannel
  5479   0011FE                     
  5480                           ;main.c: 79:     ADC_StartConversion();
  5481   0011FE  EC44  F009         	call	_ADC_StartConversion	;wreg free
  5482   001202  0012               	return		;funcret
  5483   001204                     __end_of_TMR0_MyInterruptHandler:
  5484                           	callstack 0
  5485                           
  5486 ;; *************** function _ADC_StartConversion *****************
  5487 ;; Defined at:
  5488 ;;		line 96 in file "mcc_generated_files/adc.c"
  5489 ;; Parameters:    Size  Location     Type
  5490 ;;		None
  5491 ;; Auto vars:     Size  Location     Type
  5492 ;;		None
  5493 ;; Return value:  Size  Location     Type
  5494 ;;                  1    wreg      void 
  5495 ;; Registers used:
  5496 ;;		None
  5497 ;; Tracked objects:
  5498 ;;		On entry : 0/0
  5499 ;;		On exit  : 0/0
  5500 ;;		Unchanged: 0/0
  5501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5506 ;;Total ram usage:        0 bytes
  5507 ;; Hardware stack levels used: 1
  5508 ;; This function calls:
  5509 ;;		Nothing
  5510 ;; This function is called by:
  5511 ;;		_TMR0_MyInterruptHandler
  5512 ;; This function uses a non-reentrant model
  5513 ;;
  5514                           
  5515                           	psect	text48
  5516   001288                     __ptext48:
  5517                           	callstack 0
  5518   001288                     _ADC_StartConversion:
  5519                           	callstack 17
  5520   001288                     
  5521                           ;mcc_generated_files/adc.c: 99:     ADCON0bits.GO_nDONE = 1;
  5522   001288  82C2               	bsf	194,1,c	;volatile
  5523   00128A  0012               	return		;funcret
  5524   00128C                     __end_of_ADC_StartConversion:
  5525                           	callstack 0
  5526                           
  5527 ;; *************** function _INT0_ISR *****************
  5528 ;; Defined at:
  5529 ;;		line 32 in file "mcc_generated_files/ext_int.c"
  5530 ;; Parameters:    Size  Location     Type
  5531 ;;		None
  5532 ;; Auto vars:     Size  Location     Type
  5533 ;;		None
  5534 ;; Return value:  Size  Location     Type
  5535 ;;                  1    wreg      void 
  5536 ;; Registers used:
  5537 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5538 ;; Tracked objects:
  5539 ;;		On entry : 0/0
  5540 ;;		On exit  : 0/0
  5541 ;;		Unchanged: 0/0
  5542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5547 ;;Total ram usage:        0 bytes
  5548 ;; Hardware stack levels used: 1
  5549 ;; Hardware stack levels required when called: 2
  5550 ;; This function calls:
  5551 ;;		_INT0_CallBack
  5552 ;; This function is called by:
  5553 ;;		_INTERRUPT_InterruptManagerHigh
  5554 ;; This function uses a non-reentrant model
  5555 ;;
  5556                           
  5557                           	psect	text49
  5558   001268                     __ptext49:
  5559                           	callstack 0
  5560   001268                     _INT0_ISR:
  5561                           	callstack 17
  5562   001268                     
  5563                           ;mcc_generated_files/ext_int.c: 34:     (INTCONbits.INT0IF = 0);
  5564   001268  92F2               	bcf	242,1,c	;volatile
  5565   00126A                     
  5566                           ;mcc_generated_files/ext_int.c: 37:     INT0_CallBack();
  5567   00126A  EC0B  F008         	call	_INT0_CallBack	;wreg free
  5568   00126E  0012               	return		;funcret
  5569   001270                     __end_of_INT0_ISR:
  5570                           	callstack 0
  5571                           
  5572 ;; *************** function _INT0_CallBack *****************
  5573 ;; Defined at:
  5574 ;;		line 41 in file "mcc_generated_files/ext_int.c"
  5575 ;; Parameters:    Size  Location     Type
  5576 ;;		None
  5577 ;; Auto vars:     Size  Location     Type
  5578 ;;		None
  5579 ;; Return value:  Size  Location     Type
  5580 ;;                  1    wreg      void 
  5581 ;; Registers used:
  5582 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5583 ;; Tracked objects:
  5584 ;;		On entry : 0/0
  5585 ;;		On exit  : 0/0
  5586 ;;		Unchanged: 0/0
  5587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5592 ;;Total ram usage:        0 bytes
  5593 ;; Hardware stack levels used: 1
  5594 ;; Hardware stack levels required when called: 1
  5595 ;; This function calls:
  5596 ;;		NULL
  5597 ;;		_INT0_DefaultInterruptHandler
  5598 ;;		_INT0_MyInterruptHandler
  5599 ;; This function is called by:
  5600 ;;		_INT0_ISR
  5601 ;; This function uses a non-reentrant model
  5602 ;;
  5603                           
  5604                           	psect	text50
  5605   001016                     __ptext50:
  5606                           	callstack 0
  5607   001016                     _INT0_CallBack:
  5608                           	callstack 17
  5609   001016                     
  5610                           ;mcc_generated_files/ext_int.c: 44:     if(INT0_InterruptHandler)
  5611   001016  503B               	movf	_INT0_InterruptHandler^0,w,c
  5612   001018  103C               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
  5613   00101A  B4D8               	btfsc	status,2,c
  5614   00101C  EF12  F008         	goto	i2u143_41
  5615   001020  EF14  F008         	goto	i2u143_40
  5616   001024                     i2u143_41:
  5617   001024  EF20  F008         	goto	i2l140
  5618   001028                     i2u143_40:
  5619   001028                     
  5620                           ;mcc_generated_files/ext_int.c: 45:     {;mcc_generated_files/ext_int.c: 46:         INT
      +                          0_InterruptHandler();
  5621   001028  D802               	call	i2u144_48
  5622   00102A  EF20  F008         	goto	i2u144_49
  5623   00102E                     i2u144_48:
  5624   00102E  0005               	push	
  5625   001030  6EFA               	movwf	pclath,c
  5626   001032  503B               	movf	_INT0_InterruptHandler^0,w,c
  5627   001034  6EFD               	movwf	tosl,c
  5628   001036  503C               	movf	(_INT0_InterruptHandler+1)^0,w,c
  5629   001038  6EFE               	movwf	tosh,c
  5630   00103A  6AFF               	clrf	tosu,c
  5631   00103C  50FA               	movf	pclath,w,c
  5632   00103E  0012               	return		;indir
  5633   001040                     i2u144_49:
  5634   001040                     i2l140:
  5635   001040  0012               	return		;funcret
  5636   001042                     __end_of_INT0_CallBack:
  5637                           	callstack 0
  5638                           
  5639 ;; *************** function _INT0_DefaultInterruptHandler *****************
  5640 ;; Defined at:
  5641 ;;		line 54 in file "mcc_generated_files/ext_int.c"
  5642 ;; Parameters:    Size  Location     Type
  5643 ;;		None
  5644 ;; Auto vars:     Size  Location     Type
  5645 ;;		None
  5646 ;; Return value:  Size  Location     Type
  5647 ;;                  1    wreg      void 
  5648 ;; Registers used:
  5649 ;;		None
  5650 ;; Tracked objects:
  5651 ;;		On entry : 0/0
  5652 ;;		On exit  : 0/0
  5653 ;;		Unchanged: 0/0
  5654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5659 ;;Total ram usage:        0 bytes
  5660 ;; Hardware stack levels used: 1
  5661 ;; This function calls:
  5662 ;;		Nothing
  5663 ;; This function is called by:
  5664 ;;		_EXT_INT_Initialize
  5665 ;;		_INT0_CallBack
  5666 ;; This function uses a non-reentrant model
  5667 ;;
  5668                           
  5669                           	psect	text51
  5670   001294                     __ptext51:
  5671                           	callstack 0
  5672   001294                     _INT0_DefaultInterruptHandler:
  5673                           	callstack 17
  5674   001294  0012               	return		;funcret
  5675   001296                     __end_of_INT0_DefaultInterruptHandler:
  5676                           	callstack 0
  5677                           
  5678 ;; *************** function _INT0_MyInterruptHandler *****************
  5679 ;; Defined at:
  5680 ;;		line 57 in file "main.c"
  5681 ;; Parameters:    Size  Location     Type
  5682 ;;		None
  5683 ;; Auto vars:     Size  Location     Type
  5684 ;;		None
  5685 ;; Return value:  Size  Location     Type
  5686 ;;                  1    wreg      void 
  5687 ;; Registers used:
  5688 ;;		wreg, status,2
  5689 ;; Tracked objects:
  5690 ;;		On entry : 0/0
  5691 ;;		On exit  : 0/0
  5692 ;;		Unchanged: 0/0
  5693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5698 ;;Total ram usage:        0 bytes
  5699 ;; Hardware stack levels used: 1
  5700 ;; This function calls:
  5701 ;;		Nothing
  5702 ;; This function is called by:
  5703 ;;		_main
  5704 ;;		_INT0_CallBack
  5705 ;; This function uses a non-reentrant model
  5706 ;;
  5707                           
  5708                           	psect	text52
  5709   0011EA                     __ptext52:
  5710                           	callstack 0
  5711   0011EA                     _INT0_MyInterruptHandler:
  5712                           	callstack 17
  5713   0011EA                     
  5714                           ;main.c: 59:     BombaLigada = 0;
  5715   0011EA  0E00               	movlw	0
  5716   0011EC  0100               	movlb	0	; () banked
  5717   0011EE  6FC4               	movwf	_BombaLigada& (0+255),b	;volatile
  5718                           
  5719                           ;main.c: 60:     SistemaControloLigado = 0;
  5720   0011F0  0E00               	movlw	0
  5721   0011F2  6FC5               	movwf	_SistemaControloLigado& (0+255),b	;volatile
  5722   0011F4                     
  5723                           ; BSR set to: 0
  5724                           ;main.c: 62:     (INTCONbits.INT0IF = 0);
  5725   0011F4  92F2               	bcf	242,1,c	;volatile
  5726   0011F6                     
  5727                           ; BSR set to: 0
  5728   0011F6  0012               	return		;funcret
  5729   0011F8                     __end_of_INT0_MyInterruptHandler:
  5730                           	callstack 0
  5731                           
  5732 ;; *************** function _EUSART1_Transmit_ISR *****************
  5733 ;; Defined at:
  5734 ;;		line 206 in file "mcc_generated_files/eusart1.c"
  5735 ;; Parameters:    Size  Location     Type
  5736 ;;		None
  5737 ;; Auto vars:     Size  Location     Type
  5738 ;;		None
  5739 ;; Return value:  Size  Location     Type
  5740 ;;                  1    wreg      void 
  5741 ;; Registers used:
  5742 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5743 ;; Tracked objects:
  5744 ;;		On entry : 0/0
  5745 ;;		On exit  : 0/0
  5746 ;;		Unchanged: 0/0
  5747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5752 ;;Total ram usage:        0 bytes
  5753 ;; Hardware stack levels used: 1
  5754 ;; This function calls:
  5755 ;;		Nothing
  5756 ;; This function is called by:
  5757 ;;		_EUSART1_Initialize
  5758 ;;		_INTERRUPT_InterruptManagerHigh
  5759 ;; This function uses a non-reentrant model
  5760 ;;
  5761                           
  5762                           	psect	text53
  5763   000F06                     __ptext53:
  5764                           	callstack 0
  5765   000F06                     _EUSART1_Transmit_ISR:
  5766                           	callstack 19
  5767   000F06                     
  5768                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  5769   000F06  0E08               	movlw	8
  5770   000F08  6034               	cpfslt	_eusart1TxBufferRemaining^0,c	;volatile
  5771   000F0A  EF89  F007         	goto	i2u154_41
  5772   000F0E  EF8B  F007         	goto	i2u154_40
  5773   000F12                     i2u154_41:
  5774   000F12  EFA1  F007         	goto	i2l261
  5775   000F16                     i2u154_40:
  5776   000F16                     
  5777                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          XREG1 = eusart1TxBuffer[eusart1TxTail++];
  5778   000F16  0EB5               	movlw	low _eusart1TxBuffer
  5779   000F18  2435               	addwf	_eusart1TxTail^0,w,c	;volatile
  5780   000F1A  6ED9               	movwf	fsr2l,c
  5781   000F1C  6ADA               	clrf	fsr2h,c
  5782   000F1E  0E00               	movlw	high _eusart1TxBuffer
  5783   000F20  22DA               	addwfc	fsr2h,f,c
  5784   000F22  50DF               	movf	indf2,w,c
  5785   000F24  6EAD               	movwf	173,c	;volatile
  5786   000F26  2A35               	incf	_eusart1TxTail^0,f,c	;volatile
  5787   000F28                     
  5788                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  5789   000F28  0E07               	movlw	7
  5790   000F2A  6435               	cpfsgt	_eusart1TxTail^0,c	;volatile
  5791   000F2C  EF9A  F007         	goto	i2u155_41
  5792   000F30  EF9C  F007         	goto	i2u155_40
  5793   000F34                     i2u155_41:
  5794   000F34  EF9E  F007         	goto	i2l2740
  5795   000F38                     i2u155_40:
  5796   000F38                     
  5797                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
  5798   000F38  0E00               	movlw	0
  5799   000F3A  6E35               	movwf	_eusart1TxTail^0,c	;volatile
  5800   000F3C                     i2l2740:
  5801                           
  5802                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
  5803   000F3C  2A34               	incf	_eusart1TxBufferRemaining^0,f,c	;volatile
  5804                           
  5805                           ;mcc_generated_files/eusart1.c: 218:     }
  5806   000F3E  EFA2  F007         	goto	i2l264
  5807   000F42                     i2l261:
  5808                           
  5809                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE1bits.TX1IE = 0;
  5810   000F42  989D               	bcf	157,4,c	;volatile
  5811   000F44                     i2l264:
  5812   000F44  0012               	return		;funcret
  5813   000F46                     __end_of_EUSART1_Transmit_ISR:
  5814                           	callstack 0
  5815                           
  5816 ;; *************** function _EUSART1_Receive_ISR *****************
  5817 ;; Defined at:
  5818 ;;		line 225 in file "mcc_generated_files/eusart1.c"
  5819 ;; Parameters:    Size  Location     Type
  5820 ;;		None
  5821 ;; Auto vars:     Size  Location     Type
  5822 ;;		None
  5823 ;; Return value:  Size  Location     Type
  5824 ;;                  1    wreg      void 
  5825 ;; Registers used:
  5826 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5827 ;; Tracked objects:
  5828 ;;		On entry : 0/0
  5829 ;;		On exit  : 0/0
  5830 ;;		Unchanged: 0/0
  5831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5836 ;;Total ram usage:        0 bytes
  5837 ;; Hardware stack levels used: 1
  5838 ;; Hardware stack levels required when called: 2
  5839 ;; This function calls:
  5840 ;;		NULL
  5841 ;;		_EUSART1_DefaultErrorHandler
  5842 ;;		_EUSART1_DefaultFramingErrorHandler
  5843 ;;		_EUSART1_DefaultOverrunErrorHandler
  5844 ;;		_EUSART1_RxDataHandler
  5845 ;; This function is called by:
  5846 ;;		_EUSART1_Initialize
  5847 ;;		_INTERRUPT_InterruptManagerHigh
  5848 ;; This function uses a non-reentrant model
  5849 ;;
  5850                           
  5851                           	psect	text54
  5852   000958                     __ptext54:
  5853                           	callstack 0
  5854   000958                     _EUSART1_Receive_ISR:
  5855                           	callstack 17
  5856   000958                     
  5857                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  5858   000958  0EA5               	movlw	low _eusart1RxStatusBuffer
  5859   00095A  2433               	addwf	_eusart1RxHead^0,w,c	;volatile
  5860   00095C  6ED9               	movwf	fsr2l,c
  5861   00095E  6ADA               	clrf	fsr2h,c
  5862   000960  0E00               	movlw	high _eusart1RxStatusBuffer
  5863   000962  22DA               	addwfc	fsr2h,f,c
  5864   000964  6ADF               	clrf	indf2,c
  5865   000966                     
  5866                           ;mcc_generated_files/eusart1.c: 230:     if(RCSTA1bits.FERR){
  5867   000966  A4AB               	btfss	171,2,c	;volatile
  5868   000968  EFB8  F004         	goto	i2u156_41
  5869   00096C  EFBA  F004         	goto	i2u156_40
  5870   000970                     i2u156_41:
  5871   000970  EFCE  F004         	goto	i2l2750
  5872   000974                     i2u156_40:
  5873   000974                     
  5874                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  5875   000974  0EA5               	movlw	low _eusart1RxStatusBuffer
  5876   000976  2433               	addwf	_eusart1RxHead^0,w,c	;volatile
  5877   000978  6ED9               	movwf	fsr2l,c
  5878   00097A  6ADA               	clrf	fsr2h,c
  5879   00097C  0E00               	movlw	high _eusart1RxStatusBuffer
  5880   00097E  22DA               	addwfc	fsr2h,f,c
  5881   000980  0100               	movlb	0	; () banked
  5882   000982  82DF               	bsf	indf2,1,c
  5883   000984                     
  5884                           ; BSR set to: 0
  5885                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
  5886   000984  D802               	call	i2u157_48
  5887   000986  EFCE  F004         	goto	i2u157_49
  5888   00098A                     i2u157_48:
  5889   00098A  0005               	push	
  5890   00098C  6EFA               	movwf	pclath,c
  5891   00098E  51EA               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
  5892   000990  6EFD               	movwf	tosl,c
  5893   000992  51EB               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
  5894   000994  6EFE               	movwf	tosh,c
  5895   000996  6AFF               	clrf	tosu,c
  5896   000998  50FA               	movf	pclath,w,c
  5897   00099A  0012               	return		;indir
  5898   00099C                     i2u157_49:
  5899   00099C                     i2l2750:
  5900                           
  5901                           ;mcc_generated_files/eusart1.c: 235:     if(RCSTA1bits.OERR){
  5902   00099C  A2AB               	btfss	171,1,c	;volatile
  5903   00099E  EFD3  F004         	goto	i2u158_41
  5904   0009A2  EFD5  F004         	goto	i2u158_40
  5905   0009A6                     i2u158_41:
  5906   0009A6  EFE9  F004         	goto	i2l2756
  5907   0009AA                     i2u158_40:
  5908   0009AA                     
  5909                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  5910   0009AA  0EA5               	movlw	low _eusart1RxStatusBuffer
  5911   0009AC  2433               	addwf	_eusart1RxHead^0,w,c	;volatile
  5912   0009AE  6ED9               	movwf	fsr2l,c
  5913   0009B0  6ADA               	clrf	fsr2h,c
  5914   0009B2  0E00               	movlw	high _eusart1RxStatusBuffer
  5915   0009B4  22DA               	addwfc	fsr2h,f,c
  5916   0009B6  0100               	movlb	0	; () banked
  5917   0009B8  84DF               	bsf	indf2,2,c
  5918   0009BA                     
  5919                           ; BSR set to: 0
  5920                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
  5921   0009BA  D802               	call	i2u159_48
  5922   0009BC  EFE9  F004         	goto	i2u159_49
  5923   0009C0                     i2u159_48:
  5924   0009C0  0005               	push	
  5925   0009C2  6EFA               	movwf	pclath,c
  5926   0009C4  51E8               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
  5927   0009C6  6EFD               	movwf	tosl,c
  5928   0009C8  51E9               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
  5929   0009CA  6EFE               	movwf	tosh,c
  5930   0009CC  6AFF               	clrf	tosu,c
  5931   0009CE  50FA               	movf	pclath,w,c
  5932   0009D0  0012               	return		;indir
  5933   0009D2                     i2u159_49:
  5934   0009D2                     i2l2756:
  5935                           
  5936                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  5937   0009D2  0EA5               	movlw	low _eusart1RxStatusBuffer
  5938   0009D4  2433               	addwf	_eusart1RxHead^0,w,c	;volatile
  5939   0009D6  6ED9               	movwf	fsr2l,c
  5940   0009D8  6ADA               	clrf	fsr2h,c
  5941   0009DA  0E00               	movlw	high _eusart1RxStatusBuffer
  5942   0009DC  22DA               	addwfc	fsr2h,f,c
  5943   0009DE  50DF               	movf	indf2,w,c
  5944   0009E0  B4D8               	btfsc	status,2,c
  5945   0009E2  EFF5  F004         	goto	i2u160_41
  5946   0009E6  EFF7  F004         	goto	i2u160_40
  5947   0009EA                     i2u160_41:
  5948   0009EA  EF06  F005         	goto	i2l2760
  5949   0009EE                     i2u160_40:
  5950   0009EE                     
  5951                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
  5952   0009EE  D802               	call	i2u161_48
  5953   0009F0  EF04  F005         	goto	i2u161_49
  5954   0009F4                     i2u161_48:
  5955   0009F4  0005               	push	
  5956   0009F6  6EFA               	movwf	pclath,c
  5957   0009F8  0100               	movlb	0	; () banked
  5958   0009FA  51E6               	movf	_EUSART1_ErrorHandler& (0+255),w,b
  5959   0009FC  6EFD               	movwf	tosl,c
  5960   0009FE  51E7               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
  5961   000A00  6EFE               	movwf	tosh,c
  5962   000A02  6AFF               	clrf	tosu,c
  5963   000A04  50FA               	movf	pclath,w,c
  5964   000A06  0012               	return		;indir
  5965   000A08                     i2u161_49:
  5966                           
  5967                           ;mcc_generated_files/eusart1.c: 242:     } else {
  5968   000A08  EF08  F005         	goto	i2l271
  5969   000A0C                     i2l2760:
  5970                           
  5971                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
  5972   000A0C  EC4B  F008         	call	_EUSART1_RxDataHandler	;wreg free
  5973   000A10                     i2l271:
  5974   000A10  0012               	return		;funcret
  5975   000A12                     __end_of_EUSART1_Receive_ISR:
  5976                           	callstack 0
  5977                           
  5978 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  5979 ;; Defined at:
  5980 ;;		line 261 in file "mcc_generated_files/eusart1.c"
  5981 ;; Parameters:    Size  Location     Type
  5982 ;;		None
  5983 ;; Auto vars:     Size  Location     Type
  5984 ;;		None
  5985 ;; Return value:  Size  Location     Type
  5986 ;;                  1    wreg      void 
  5987 ;; Registers used:
  5988 ;;		None
  5989 ;; Tracked objects:
  5990 ;;		On entry : 0/0
  5991 ;;		On exit  : 0/0
  5992 ;;		Unchanged: 0/0
  5993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5998 ;;Total ram usage:        0 bytes
  5999 ;; Hardware stack levels used: 1
  6000 ;; This function calls:
  6001 ;;		Nothing
  6002 ;; This function is called by:
  6003 ;;		_EUSART1_Initialize
  6004 ;;		_EUSART1_Receive_ISR
  6005 ;; This function uses a non-reentrant model
  6006 ;;
  6007                           
  6008                           	psect	text55
  6009   001270                     __ptext55:
  6010                           	callstack 0
  6011   001270                     _EUSART1_DefaultOverrunErrorHandler:
  6012                           	callstack 18
  6013   001270                     
  6014                           ;mcc_generated_files/eusart1.c: 264:     RCSTA1bits.CREN = 0;
  6015   001270  98AB               	bcf	171,4,c	;volatile
  6016                           
  6017                           ;mcc_generated_files/eusart1.c: 265:     RCSTA1bits.CREN = 1;
  6018   001272  88AB               	bsf	171,4,c	;volatile
  6019   001274  0012               	return		;funcret
  6020   001276                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  6021                           	callstack 0
  6022                           
  6023 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  6024 ;; Defined at:
  6025 ;;		line 259 in file "mcc_generated_files/eusart1.c"
  6026 ;; Parameters:    Size  Location     Type
  6027 ;;		None
  6028 ;; Auto vars:     Size  Location     Type
  6029 ;;		None
  6030 ;; Return value:  Size  Location     Type
  6031 ;;                  1    wreg      void 
  6032 ;; Registers used:
  6033 ;;		None
  6034 ;; Tracked objects:
  6035 ;;		On entry : 0/0
  6036 ;;		On exit  : 0/0
  6037 ;;		Unchanged: 0/0
  6038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6043 ;;Total ram usage:        0 bytes
  6044 ;; Hardware stack levels used: 1
  6045 ;; This function calls:
  6046 ;;		Nothing
  6047 ;; This function is called by:
  6048 ;;		_EUSART1_Initialize
  6049 ;;		_EUSART1_Receive_ISR
  6050 ;; This function uses a non-reentrant model
  6051 ;;
  6052                           
  6053                           	psect	text56
  6054   001296                     __ptext56:
  6055                           	callstack 0
  6056   001296                     _EUSART1_DefaultFramingErrorHandler:
  6057                           	callstack 18
  6058   001296  0012               	return		;funcret
  6059   001298                     __end_of_EUSART1_DefaultFramingErrorHandler:
  6060                           	callstack 0
  6061                           
  6062 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  6063 ;; Defined at:
  6064 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  6065 ;; Parameters:    Size  Location     Type
  6066 ;;		None
  6067 ;; Auto vars:     Size  Location     Type
  6068 ;;		None
  6069 ;; Return value:  Size  Location     Type
  6070 ;;                  1    wreg      void 
  6071 ;; Registers used:
  6072 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6073 ;; Tracked objects:
  6074 ;;		On entry : 0/0
  6075 ;;		On exit  : 0/0
  6076 ;;		Unchanged: 0/0
  6077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6082 ;;Total ram usage:        0 bytes
  6083 ;; Hardware stack levels used: 1
  6084 ;; Hardware stack levels required when called: 1
  6085 ;; This function calls:
  6086 ;;		_EUSART1_RxDataHandler
  6087 ;; This function is called by:
  6088 ;;		_EUSART1_Initialize
  6089 ;;		_EUSART1_Receive_ISR
  6090 ;; This function uses a non-reentrant model
  6091 ;;
  6092                           
  6093                           	psect	text57
  6094   001276                     __ptext57:
  6095                           	callstack 0
  6096   001276                     _EUSART1_DefaultErrorHandler:
  6097                           	callstack 17
  6098   001276                     
  6099                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
  6100   001276  EC4B  F008         	call	_EUSART1_RxDataHandler	;wreg free
  6101   00127A  0012               	return		;funcret
  6102   00127C                     __end_of_EUSART1_DefaultErrorHandler:
  6103                           	callstack 0
  6104                           
  6105 ;; *************** function _EUSART1_RxDataHandler *****************
  6106 ;; Defined at:
  6107 ;;		line 249 in file "mcc_generated_files/eusart1.c"
  6108 ;; Parameters:    Size  Location     Type
  6109 ;;		None
  6110 ;; Auto vars:     Size  Location     Type
  6111 ;;		None
  6112 ;; Return value:  Size  Location     Type
  6113 ;;                  1    wreg      void 
  6114 ;; Registers used:
  6115 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6116 ;; Tracked objects:
  6117 ;;		On entry : 0/0
  6118 ;;		On exit  : 0/0
  6119 ;;		Unchanged: 0/0
  6120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6125 ;;Total ram usage:        0 bytes
  6126 ;; Hardware stack levels used: 1
  6127 ;; This function calls:
  6128 ;;		Nothing
  6129 ;; This function is called by:
  6130 ;;		_EUSART1_Receive_ISR
  6131 ;;		_EUSART1_DefaultErrorHandler
  6132 ;; This function uses a non-reentrant model
  6133 ;;
  6134                           
  6135                           	psect	text58
  6136   001096                     __ptext58:
  6137                           	callstack 0
  6138   001096                     _EUSART1_RxDataHandler:
  6139                           	callstack 18
  6140   001096                     
  6141                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  6142   001096  0EAD               	movlw	low _eusart1RxBuffer
  6143   001098  2433               	addwf	_eusart1RxHead^0,w,c	;volatile
  6144   00109A  6ED9               	movwf	fsr2l,c
  6145   00109C  6ADA               	clrf	fsr2h,c
  6146   00109E  0E00               	movlw	high _eusart1RxBuffer
  6147   0010A0  22DA               	addwfc	fsr2h,f,c
  6148   0010A2  CFAE FFDF          	movff	4014,indf2	;volatile
  6149   0010A6  2A33               	incf	_eusart1RxHead^0,f,c	;volatile
  6150   0010A8                     
  6151                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  6152   0010A8  0E07               	movlw	7
  6153   0010AA  6433               	cpfsgt	_eusart1RxHead^0,c	;volatile
  6154   0010AC  EF5A  F008         	goto	i2u133_41
  6155   0010B0  EF5C  F008         	goto	i2u133_40
  6156   0010B4                     i2u133_41:
  6157   0010B4  EF5E  F008         	goto	i2l2506
  6158   0010B8                     i2u133_40:
  6159   0010B8                     
  6160                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
  6161   0010B8  0E00               	movlw	0
  6162   0010BA  6E33               	movwf	_eusart1RxHead^0,c	;volatile
  6163   0010BC                     i2l2506:
  6164                           
  6165                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
  6166   0010BC  2A31               	incf	_eusart1RxCount^0,f,c	;volatile
  6167   0010BE  0012               	return		;funcret
  6168   0010C0                     __end_of_EUSART1_RxDataHandler:
  6169                           	callstack 0
  6170                           
  6171 ;; *************** function _ADC_ISR *****************
  6172 ;; Defined at:
  6173 ;;		line 140 in file "mcc_generated_files/adc.c"
  6174 ;; Parameters:    Size  Location     Type
  6175 ;;		None
  6176 ;; Auto vars:     Size  Location     Type
  6177 ;;		None
  6178 ;; Return value:  Size  Location     Type
  6179 ;;                  1    wreg      void 
  6180 ;; Registers used:
  6181 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6182 ;; Tracked objects:
  6183 ;;		On entry : 0/0
  6184 ;;		On exit  : 0/0
  6185 ;;		Unchanged: 0/0
  6186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6191 ;;Total ram usage:        0 bytes
  6192 ;; Hardware stack levels used: 1
  6193 ;; Hardware stack levels required when called: 2
  6194 ;; This function calls:
  6195 ;;		NULL
  6196 ;;		_ADC_DefaultInterruptHandler
  6197 ;;		_ADC_MyInterruptHandler
  6198 ;; This function is called by:
  6199 ;;		_INTERRUPT_InterruptManagerHigh
  6200 ;; This function uses a non-reentrant model
  6201 ;;
  6202                           
  6203                           	psect	text59
  6204   000FE8                     __ptext59:
  6205                           	callstack 0
  6206   000FE8                     _ADC_ISR:
  6207                           	callstack 17
  6208   000FE8                     
  6209                           ;mcc_generated_files/adc.c: 143:     PIR1bits.ADIF = 0;
  6210   000FE8  9C9E               	bcf	158,6,c	;volatile
  6211   000FEA                     
  6212                           ;mcc_generated_files/adc.c: 145:  if(ADC_InterruptHandler)
  6213   000FEA  503D               	movf	_ADC_InterruptHandler^0,w,c
  6214   000FEC  103E               	iorwf	(_ADC_InterruptHandler+1)^0,w,c
  6215   000FEE  B4D8               	btfsc	status,2,c
  6216   000FF0  EFFC  F007         	goto	i2u152_41
  6217   000FF4  EFFE  F007         	goto	i2u152_40
  6218   000FF8                     i2u152_41:
  6219   000FF8  EF0A  F008         	goto	i2l119
  6220   000FFC                     i2u152_40:
  6221   000FFC                     
  6222                           ;mcc_generated_files/adc.c: 146:     {;mcc_generated_files/adc.c: 147:         ADC_Inter
      +                          ruptHandler();
  6223   000FFC  D802               	call	i2u153_48
  6224   000FFE  EF0A  F008         	goto	i2u153_49
  6225   001002                     i2u153_48:
  6226   001002  0005               	push	
  6227   001004  6EFA               	movwf	pclath,c
  6228   001006  503D               	movf	_ADC_InterruptHandler^0,w,c
  6229   001008  6EFD               	movwf	tosl,c
  6230   00100A  503E               	movf	(_ADC_InterruptHandler+1)^0,w,c
  6231   00100C  6EFE               	movwf	tosh,c
  6232   00100E  6AFF               	clrf	tosu,c
  6233   001010  50FA               	movf	pclath,w,c
  6234   001012  0012               	return		;indir
  6235   001014                     i2u153_49:
  6236   001014                     i2l119:
  6237   001014  0012               	return		;funcret
  6238   001016                     __end_of_ADC_ISR:
  6239                           	callstack 0
  6240                           
  6241 ;; *************** function _ADC_DefaultInterruptHandler *****************
  6242 ;; Defined at:
  6243 ;;		line 155 in file "mcc_generated_files/adc.c"
  6244 ;; Parameters:    Size  Location     Type
  6245 ;;		None
  6246 ;; Auto vars:     Size  Location     Type
  6247 ;;		None
  6248 ;; Return value:  Size  Location     Type
  6249 ;;                  1    wreg      void 
  6250 ;; Registers used:
  6251 ;;		None
  6252 ;; Tracked objects:
  6253 ;;		On entry : 0/0
  6254 ;;		On exit  : 0/0
  6255 ;;		Unchanged: 0/0
  6256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6261 ;;Total ram usage:        0 bytes
  6262 ;; Hardware stack levels used: 1
  6263 ;; This function calls:
  6264 ;;		Nothing
  6265 ;; This function is called by:
  6266 ;;		_ADC_Initialize
  6267 ;;		_ADC_ISR
  6268 ;; This function uses a non-reentrant model
  6269 ;;
  6270                           
  6271                           	psect	text60
  6272   001298                     __ptext60:
  6273                           	callstack 0
  6274   001298                     _ADC_DefaultInterruptHandler:
  6275                           	callstack 18
  6276   001298  0012               	return		;funcret
  6277   00129A                     __end_of_ADC_DefaultInterruptHandler:
  6278                           	callstack 0
  6279                           
  6280 ;; *************** function _ADC_MyInterruptHandler *****************
  6281 ;; Defined at:
  6282 ;;		line 68 in file "main.c"
  6283 ;; Parameters:    Size  Location     Type
  6284 ;;		None
  6285 ;; Auto vars:     Size  Location     Type
  6286 ;;		None
  6287 ;; Return value:  Size  Location     Type
  6288 ;;                  1    wreg      void 
  6289 ;; Registers used:
  6290 ;;		wreg, status,2, status,0, cstack
  6291 ;; Tracked objects:
  6292 ;;		On entry : 0/0
  6293 ;;		On exit  : 0/0
  6294 ;;		Unchanged: 0/0
  6295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6300 ;;Total ram usage:        0 bytes
  6301 ;; Hardware stack levels used: 1
  6302 ;; Hardware stack levels required when called: 1
  6303 ;; This function calls:
  6304 ;;		_ADC_GetConversionResult
  6305 ;;		_ADC_SelectChannel
  6306 ;;		___aldiv
  6307 ;;		___lmul
  6308 ;; This function is called by:
  6309 ;;		_main
  6310 ;;		_ADC_ISR
  6311 ;; This function uses a non-reentrant model
  6312 ;;
  6313                           
  6314                           	psect	text61
  6315   000C8C                     __ptext61:
  6316                           	callstack 0
  6317   000C8C                     _ADC_MyInterruptHandler:
  6318                           	callstack 17
  6319   000C8C                     
  6320                           ;main.c: 69:     ADC_SelectChannel(channel_AN0);
  6321   000C8C  0E00               	movlw	0
  6322   000C8E  ECAB  F008         	call	_ADC_SelectChannel
  6323                           
  6324                           ;main.c: 70:     convertedValue = ADC_GetConversionResult();
  6325   000C92  ECCC  F008         	call	_ADC_GetConversionResult	;wreg free
  6326   000C96  C001  F028         	movff	?_ADC_GetConversionResult,_convertedValue
  6327   000C9A  C002  F029         	movff	?_ADC_GetConversionResult+1,_convertedValue+1
  6328                           
  6329                           ;main.c: 71:     nivel_agua = (long)convertedValue * 100 / 1023;
  6330   000C9E  C028  F001         	movff	_convertedValue,___lmul@multiplier
  6331   000CA2  C029  F002         	movff	_convertedValue+1,___lmul@multiplier+1
  6332   000CA6  6A03               	clrf	(___lmul@multiplier+2)^0,c
  6333   000CA8  6A04               	clrf	(___lmul@multiplier+3)^0,c
  6334   000CAA  0E64               	movlw	100
  6335   000CAC  6E05               	movwf	___lmul@multiplicand^0,c
  6336   000CAE  0E00               	movlw	0
  6337   000CB0  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  6338   000CB2  0E00               	movlw	0
  6339   000CB4  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  6340   000CB6  0E00               	movlw	0
  6341   000CB8  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  6342   000CBA  EC11  F006         	call	___lmul	;wreg free
  6343   000CBE  C001  F00D         	movff	?___lmul,___aldiv@dividend
  6344   000CC2  C002  F00E         	movff	?___lmul+1,___aldiv@dividend+1
  6345   000CC6  C003  F00F         	movff	?___lmul+2,___aldiv@dividend+2
  6346   000CCA  C004  F010         	movff	?___lmul+3,___aldiv@dividend+3
  6347   000CCE  0EFF               	movlw	255
  6348   000CD0  6E11               	movwf	___aldiv@divisor^0,c
  6349   000CD2  0E03               	movlw	3
  6350   000CD4  6E12               	movwf	(___aldiv@divisor+1)^0,c
  6351   000CD6  0E00               	movlw	0
  6352   000CD8  6E13               	movwf	(___aldiv@divisor+2)^0,c
  6353   000CDA  0E00               	movlw	0
  6354   000CDC  6E14               	movwf	(___aldiv@divisor+3)^0,c
  6355   000CDE  EC00  F003         	call	___aldiv	;wreg free
  6356   000CE2  C00D  F0C1         	movff	?___aldiv,_nivel_agua
  6357   000CE6  C00E  F0C2         	movff	?___aldiv+1,_nivel_agua+1
  6358   000CEA  0012               	return		;funcret
  6359   000CEC                     __end_of_ADC_MyInterruptHandler:
  6360                           	callstack 0
  6361                           
  6362 ;; *************** function ___lmul *****************
  6363 ;; Defined at:
  6364 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul32.c"
  6365 ;; Parameters:    Size  Location     Type
  6366 ;;  multiplier      4    0[COMRAM] unsigned long 
  6367 ;;  multiplicand    4    4[COMRAM] unsigned long 
  6368 ;; Auto vars:     Size  Location     Type
  6369 ;;  product         4    8[COMRAM] unsigned long 
  6370 ;; Return value:  Size  Location     Type
  6371 ;;                  4    0[COMRAM] unsigned long 
  6372 ;; Registers used:
  6373 ;;		wreg, status,2, status,0
  6374 ;; Tracked objects:
  6375 ;;		On entry : 0/0
  6376 ;;		On exit  : 0/0
  6377 ;;		Unchanged: 0/0
  6378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6379 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6380 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6382 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6383 ;;Total ram usage:       12 bytes
  6384 ;; Hardware stack levels used: 1
  6385 ;; This function calls:
  6386 ;;		Nothing
  6387 ;; This function is called by:
  6388 ;;		_ADC_MyInterruptHandler
  6389 ;; This function uses a non-reentrant model
  6390 ;;
  6391                           
  6392                           	psect	text62
  6393   000C22                     __ptext62:
  6394                           	callstack 0
  6395   000C22                     ___lmul:
  6396                           	callstack 17
  6397   000C22  0E00               	movlw	0
  6398   000C24  6E09               	movwf	___lmul@product^0,c
  6399   000C26  0E00               	movlw	0
  6400   000C28  6E0A               	movwf	(___lmul@product+1)^0,c
  6401   000C2A  0E00               	movlw	0
  6402   000C2C  6E0B               	movwf	(___lmul@product+2)^0,c
  6403   000C2E  0E00               	movlw	0
  6404   000C30  6E0C               	movwf	(___lmul@product+3)^0,c
  6405   000C32                     i2l2518:
  6406   000C32  A001               	btfss	___lmul@multiplier^0,0,c
  6407   000C34  EF1E  F006         	goto	i2u134_41
  6408   000C38  EF20  F006         	goto	i2u134_40
  6409   000C3C                     i2u134_41:
  6410   000C3C  EF28  F006         	goto	i2l2522
  6411   000C40                     i2u134_40:
  6412   000C40  5005               	movf	___lmul@multiplicand^0,w,c
  6413   000C42  2609               	addwf	___lmul@product^0,f,c
  6414   000C44  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  6415   000C46  220A               	addwfc	(___lmul@product+1)^0,f,c
  6416   000C48  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  6417   000C4A  220B               	addwfc	(___lmul@product+2)^0,f,c
  6418   000C4C  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  6419   000C4E  220C               	addwfc	(___lmul@product+3)^0,f,c
  6420   000C50                     i2l2522:
  6421   000C50  90D8               	bcf	status,0,c
  6422   000C52  3605               	rlcf	___lmul@multiplicand^0,f,c
  6423   000C54  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  6424   000C56  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  6425   000C58  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  6426   000C5A  90D8               	bcf	status,0,c
  6427   000C5C  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  6428   000C5E  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  6429   000C60  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  6430   000C62  3201               	rrcf	___lmul@multiplier^0,f,c
  6431   000C64  5001               	movf	___lmul@multiplier^0,w,c
  6432   000C66  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  6433   000C68  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  6434   000C6A  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  6435   000C6C  A4D8               	btfss	status,2,c
  6436   000C6E  EF3B  F006         	goto	i2u135_41
  6437   000C72  EF3D  F006         	goto	i2u135_40
  6438   000C76                     i2u135_41:
  6439   000C76  EF19  F006         	goto	i2l2518
  6440   000C7A                     i2u135_40:
  6441   000C7A  C009  F001         	movff	___lmul@product,?___lmul
  6442   000C7E  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  6443   000C82  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  6444   000C86  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  6445   000C8A  0012               	return		;funcret
  6446   000C8C                     __end_of___lmul:
  6447                           	callstack 0
  6448                           
  6449 ;; *************** function ___aldiv *****************
  6450 ;; Defined at:
  6451 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\aldiv.c"
  6452 ;; Parameters:    Size  Location     Type
  6453 ;;  dividend        4   12[COMRAM] long 
  6454 ;;  divisor         4   16[COMRAM] long 
  6455 ;; Auto vars:     Size  Location     Type
  6456 ;;  quotient        4   22[COMRAM] long 
  6457 ;;  sign            1   21[COMRAM] unsigned char 
  6458 ;;  counter         1   20[COMRAM] unsigned char 
  6459 ;; Return value:  Size  Location     Type
  6460 ;;                  4   12[COMRAM] long 
  6461 ;; Registers used:
  6462 ;;		wreg, status,2, status,0
  6463 ;; Tracked objects:
  6464 ;;		On entry : 0/0
  6465 ;;		On exit  : 0/0
  6466 ;;		Unchanged: 0/0
  6467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6468 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6469 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6471 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6472 ;;Total ram usage:       14 bytes
  6473 ;; Hardware stack levels used: 1
  6474 ;; This function calls:
  6475 ;;		Nothing
  6476 ;; This function is called by:
  6477 ;;		_ADC_MyInterruptHandler
  6478 ;; This function uses a non-reentrant model
  6479 ;;
  6480                           
  6481                           	psect	text63
  6482   000600                     __ptext63:
  6483                           	callstack 0
  6484   000600                     ___aldiv:
  6485                           	callstack 17
  6486   000600  0E00               	movlw	0
  6487   000602  6E16               	movwf	___aldiv@sign^0,c
  6488   000604  BE14               	btfsc	(___aldiv@divisor+3)^0,7,c
  6489   000606  EF09  F003         	goto	i2u136_40
  6490   00060A  EF07  F003         	goto	i2u136_41
  6491   00060E                     i2u136_41:
  6492   00060E  EF13  F003         	goto	i2l2534
  6493   000612                     i2u136_40:
  6494   000612  1E14               	comf	(___aldiv@divisor+3)^0,f,c
  6495   000614  1E13               	comf	(___aldiv@divisor+2)^0,f,c
  6496   000616  1E12               	comf	(___aldiv@divisor+1)^0,f,c
  6497   000618  6C11               	negf	___aldiv@divisor^0,c
  6498   00061A  0E00               	movlw	0
  6499   00061C  2212               	addwfc	(___aldiv@divisor+1)^0,f,c
  6500   00061E  2213               	addwfc	(___aldiv@divisor+2)^0,f,c
  6501   000620  2214               	addwfc	(___aldiv@divisor+3)^0,f,c
  6502   000622  0E01               	movlw	1
  6503   000624  6E16               	movwf	___aldiv@sign^0,c
  6504   000626                     i2l2534:
  6505   000626  BE10               	btfsc	(___aldiv@dividend+3)^0,7,c
  6506   000628  EF1A  F003         	goto	i2u137_40
  6507   00062C  EF18  F003         	goto	i2u137_41
  6508   000630                     i2u137_41:
  6509   000630  EF24  F003         	goto	i2l2540
  6510   000634                     i2u137_40:
  6511   000634  1E10               	comf	(___aldiv@dividend+3)^0,f,c
  6512   000636  1E0F               	comf	(___aldiv@dividend+2)^0,f,c
  6513   000638  1E0E               	comf	(___aldiv@dividend+1)^0,f,c
  6514   00063A  6C0D               	negf	___aldiv@dividend^0,c
  6515   00063C  0E00               	movlw	0
  6516   00063E  220E               	addwfc	(___aldiv@dividend+1)^0,f,c
  6517   000640  220F               	addwfc	(___aldiv@dividend+2)^0,f,c
  6518   000642  2210               	addwfc	(___aldiv@dividend+3)^0,f,c
  6519   000644  0E01               	movlw	1
  6520   000646  1A16               	xorwf	___aldiv@sign^0,f,c
  6521   000648                     i2l2540:
  6522   000648  0E00               	movlw	0
  6523   00064A  6E17               	movwf	___aldiv@quotient^0,c
  6524   00064C  0E00               	movlw	0
  6525   00064E  6E18               	movwf	(___aldiv@quotient+1)^0,c
  6526   000650  0E00               	movlw	0
  6527   000652  6E19               	movwf	(___aldiv@quotient+2)^0,c
  6528   000654  0E00               	movlw	0
  6529   000656  6E1A               	movwf	(___aldiv@quotient+3)^0,c
  6530   000658  5011               	movf	___aldiv@divisor^0,w,c
  6531   00065A  1012               	iorwf	(___aldiv@divisor+1)^0,w,c
  6532   00065C  1013               	iorwf	(___aldiv@divisor+2)^0,w,c
  6533   00065E  1014               	iorwf	(___aldiv@divisor+3)^0,w,c
  6534   000660  B4D8               	btfsc	status,2,c
  6535   000662  EF35  F003         	goto	i2u138_41
  6536   000666  EF37  F003         	goto	i2u138_40
  6537   00066A                     i2u138_41:
  6538   00066A  EF6D  F003         	goto	i2l2562
  6539   00066E                     i2u138_40:
  6540   00066E  0E01               	movlw	1
  6541   000670  6E15               	movwf	___aldiv@counter^0,c
  6542   000672  EF41  F003         	goto	i2l2548
  6543   000676                     i2l2546:
  6544   000676  90D8               	bcf	status,0,c
  6545   000678  3611               	rlcf	___aldiv@divisor^0,f,c
  6546   00067A  3612               	rlcf	(___aldiv@divisor+1)^0,f,c
  6547   00067C  3613               	rlcf	(___aldiv@divisor+2)^0,f,c
  6548   00067E  3614               	rlcf	(___aldiv@divisor+3)^0,f,c
  6549   000680  2A15               	incf	___aldiv@counter^0,f,c
  6550   000682                     i2l2548:
  6551   000682  AE14               	btfss	(___aldiv@divisor+3)^0,7,c
  6552   000684  EF46  F003         	goto	i2u139_41
  6553   000688  EF48  F003         	goto	i2u139_40
  6554   00068C                     i2u139_41:
  6555   00068C  EF3B  F003         	goto	i2l2546
  6556   000690                     i2u139_40:
  6557   000690                     i2l2550:
  6558   000690  90D8               	bcf	status,0,c
  6559   000692  3617               	rlcf	___aldiv@quotient^0,f,c
  6560   000694  3618               	rlcf	(___aldiv@quotient+1)^0,f,c
  6561   000696  3619               	rlcf	(___aldiv@quotient+2)^0,f,c
  6562   000698  361A               	rlcf	(___aldiv@quotient+3)^0,f,c
  6563   00069A  5011               	movf	___aldiv@divisor^0,w,c
  6564   00069C  5C0D               	subwf	___aldiv@dividend^0,w,c
  6565   00069E  5012               	movf	(___aldiv@divisor+1)^0,w,c
  6566   0006A0  580E               	subwfb	(___aldiv@dividend+1)^0,w,c
  6567   0006A2  5013               	movf	(___aldiv@divisor+2)^0,w,c
  6568   0006A4  580F               	subwfb	(___aldiv@dividend+2)^0,w,c
  6569   0006A6  5014               	movf	(___aldiv@divisor+3)^0,w,c
  6570   0006A8  5810               	subwfb	(___aldiv@dividend+3)^0,w,c
  6571   0006AA  A0D8               	btfss	status,0,c
  6572   0006AC  EF5A  F003         	goto	i2u140_41
  6573   0006B0  EF5C  F003         	goto	i2u140_40
  6574   0006B4                     i2u140_41:
  6575   0006B4  EF65  F003         	goto	i2l2558
  6576   0006B8                     i2u140_40:
  6577   0006B8  5011               	movf	___aldiv@divisor^0,w,c
  6578   0006BA  5E0D               	subwf	___aldiv@dividend^0,f,c
  6579   0006BC  5012               	movf	(___aldiv@divisor+1)^0,w,c
  6580   0006BE  5A0E               	subwfb	(___aldiv@dividend+1)^0,f,c
  6581   0006C0  5013               	movf	(___aldiv@divisor+2)^0,w,c
  6582   0006C2  5A0F               	subwfb	(___aldiv@dividend+2)^0,f,c
  6583   0006C4  5014               	movf	(___aldiv@divisor+3)^0,w,c
  6584   0006C6  5A10               	subwfb	(___aldiv@dividend+3)^0,f,c
  6585   0006C8  8017               	bsf	___aldiv@quotient^0,0,c
  6586   0006CA                     i2l2558:
  6587   0006CA  90D8               	bcf	status,0,c
  6588   0006CC  3214               	rrcf	(___aldiv@divisor+3)^0,f,c
  6589   0006CE  3213               	rrcf	(___aldiv@divisor+2)^0,f,c
  6590   0006D0  3212               	rrcf	(___aldiv@divisor+1)^0,f,c
  6591   0006D2  3211               	rrcf	___aldiv@divisor^0,f,c
  6592   0006D4  2E15               	decfsz	___aldiv@counter^0,f,c
  6593   0006D6  EF48  F003         	goto	i2l2550
  6594   0006DA                     i2l2562:
  6595   0006DA  5016               	movf	___aldiv@sign^0,w,c
  6596   0006DC  B4D8               	btfsc	status,2,c
  6597   0006DE  EF73  F003         	goto	i2u141_41
  6598   0006E2  EF75  F003         	goto	i2u141_40
  6599   0006E6                     i2u141_41:
  6600   0006E6  EF7D  F003         	goto	i2l2566
  6601   0006EA                     i2u141_40:
  6602   0006EA  1E1A               	comf	(___aldiv@quotient+3)^0,f,c
  6603   0006EC  1E19               	comf	(___aldiv@quotient+2)^0,f,c
  6604   0006EE  1E18               	comf	(___aldiv@quotient+1)^0,f,c
  6605   0006F0  6C17               	negf	___aldiv@quotient^0,c
  6606   0006F2  0E00               	movlw	0
  6607   0006F4  2218               	addwfc	(___aldiv@quotient+1)^0,f,c
  6608   0006F6  2219               	addwfc	(___aldiv@quotient+2)^0,f,c
  6609   0006F8  221A               	addwfc	(___aldiv@quotient+3)^0,f,c
  6610   0006FA                     i2l2566:
  6611   0006FA  C017  F00D         	movff	___aldiv@quotient,?___aldiv
  6612   0006FE  C018  F00E         	movff	___aldiv@quotient+1,?___aldiv+1
  6613   000702  C019  F00F         	movff	___aldiv@quotient+2,?___aldiv+2
  6614   000706  C01A  F010         	movff	___aldiv@quotient+3,?___aldiv+3
  6615   00070A  0012               	return		;funcret
  6616   00070C                     __end_of___aldiv:
  6617                           	callstack 0
  6618                           
  6619 ;; *************** function _ADC_SelectChannel *****************
  6620 ;; Defined at:
  6621 ;;		line 88 in file "mcc_generated_files/adc.c"
  6622 ;; Parameters:    Size  Location     Type
  6623 ;;  channel         1    wreg     enum E6010
  6624 ;; Auto vars:     Size  Location     Type
  6625 ;;  channel         1    1[COMRAM] enum E6010
  6626 ;; Return value:  Size  Location     Type
  6627 ;;                  1    wreg      void 
  6628 ;; Registers used:
  6629 ;;		wreg, status,2, status,0
  6630 ;; Tracked objects:
  6631 ;;		On entry : 0/0
  6632 ;;		On exit  : 0/0
  6633 ;;		Unchanged: 0/0
  6634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6636 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6637 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6638 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6639 ;;Total ram usage:        2 bytes
  6640 ;; Hardware stack levels used: 1
  6641 ;; This function calls:
  6642 ;;		Nothing
  6643 ;; This function is called by:
  6644 ;;		_ADC_MyInterruptHandler
  6645 ;;		_TMR0_MyInterruptHandler
  6646 ;; This function uses a non-reentrant model
  6647 ;;
  6648                           
  6649                           	psect	text64
  6650   001156                     __ptext64:
  6651                           	callstack 0
  6652   001156                     _ADC_SelectChannel:
  6653                           	callstack 17
  6654                           
  6655                           ;incstack = 0
  6656                           ;ADC_SelectChannel@channel stored from wreg
  6657   001156  6E02               	movwf	ADC_SelectChannel@channel^0,c
  6658   001158                     
  6659                           ;mcc_generated_files/adc.c: 88: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 89: {;mcc_generated_files/adc.c: 91:     ADCON0bits.CHS = channel;
  6660   001158  C002  F001         	movff	ADC_SelectChannel@channel,??_ADC_SelectChannel
  6661   00115C  4601               	rlncf	??_ADC_SelectChannel^0,f,c
  6662   00115E  4601               	rlncf	??_ADC_SelectChannel^0,f,c
  6663   001160  50C2               	movf	194,w,c	;volatile
  6664   001162  1801               	xorwf	??_ADC_SelectChannel^0,w,c
  6665   001164  0B83               	andlw	-125
  6666   001166  1801               	xorwf	??_ADC_SelectChannel^0,w,c
  6667   001168  6EC2               	movwf	194,c	;volatile
  6668   00116A                     
  6669                           ;mcc_generated_files/adc.c: 93:     ADCON0bits.ADON = 1;
  6670   00116A  80C2               	bsf	194,0,c	;volatile
  6671   00116C  0012               	return		;funcret
  6672   00116E                     __end_of_ADC_SelectChannel:
  6673                           	callstack 0
  6674                           
  6675 ;; *************** function _ADC_GetConversionResult *****************
  6676 ;; Defined at:
  6677 ;;		line 109 in file "mcc_generated_files/adc.c"
  6678 ;; Parameters:    Size  Location     Type
  6679 ;;		None
  6680 ;; Auto vars:     Size  Location     Type
  6681 ;;		None
  6682 ;; Return value:  Size  Location     Type
  6683 ;;                  2    0[COMRAM] unsigned short 
  6684 ;; Registers used:
  6685 ;;		wreg, status,2, status,0
  6686 ;; Tracked objects:
  6687 ;;		On entry : 0/0
  6688 ;;		On exit  : 0/0
  6689 ;;		Unchanged: 0/0
  6690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6691 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6693 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6694 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6695 ;;Total ram usage:        4 bytes
  6696 ;; Hardware stack levels used: 1
  6697 ;; This function calls:
  6698 ;;		Nothing
  6699 ;; This function is called by:
  6700 ;;		_ADC_MyInterruptHandler
  6701 ;; This function uses a non-reentrant model
  6702 ;;
  6703                           
  6704                           	psect	text65
  6705   001198                     __ptext65:
  6706                           	callstack 0
  6707   001198                     _ADC_GetConversionResult:
  6708                           	callstack 17
  6709   001198                     
  6710                           ;mcc_generated_files/adc.c: 112:      return ((adc_result_t)((ADRESH << 8) + ADRESL));
  6711   001198  50C4               	movf	196,w,c	;volatile
  6712   00119A  6E04               	movwf	(??_ADC_GetConversionResult+1)^0,c
  6713   00119C  6A03               	clrf	??_ADC_GetConversionResult^0,c
  6714   00119E  50C3               	movf	195,w,c	;volatile
  6715   0011A0  2403               	addwf	??_ADC_GetConversionResult^0,w,c
  6716   0011A2  6E01               	movwf	?_ADC_GetConversionResult^0,c
  6717   0011A4  0E00               	movlw	0
  6718   0011A6  2004               	addwfc	(??_ADC_GetConversionResult+1)^0,w,c
  6719   0011A8  6E02               	movwf	(?_ADC_GetConversionResult+1)^0,c
  6720   0011AA  0012               	return		;funcret
  6721   0011AC                     __end_of_ADC_GetConversionResult:
  6722                           	callstack 0
  6723                           
  6724                           	psect	text66
  6725   000000                     __ptext66:
  6726                           	callstack 0
  6727   000000                     
  6728                           	psect	rparam
  6729   000000                     
  6730                           	psect	temp
  6731   000041                     btemp:
  6732                           	callstack 0
  6733   000041                     	ds	1
  6734   000000                     int$flags	set	btemp
  6735   000000                     wtemp8	set	btemp+1
  6736   000000                     ttemp5	set	btemp+1
  6737   000000                     ttemp6	set	btemp+4
  6738   000000                     ttemp7	set	btemp+8
  6739                           
  6740                           	psect	idloc
  6741                           
  6742                           ;Config register IDLOC0 @ 0x200000
  6743                           ;	unspecified, using default values
  6744   200000                     	org	2097152
  6745   200000  FF                 	db	255
  6746                           
  6747                           ;Config register IDLOC1 @ 0x200001
  6748                           ;	unspecified, using default values
  6749   200001                     	org	2097153
  6750   200001  FF                 	db	255
  6751                           
  6752                           ;Config register IDLOC2 @ 0x200002
  6753                           ;	unspecified, using default values
  6754   200002                     	org	2097154
  6755   200002  FF                 	db	255
  6756                           
  6757                           ;Config register IDLOC3 @ 0x200003
  6758                           ;	unspecified, using default values
  6759   200003                     	org	2097155
  6760   200003  FF                 	db	255
  6761                           
  6762                           ;Config register IDLOC4 @ 0x200004
  6763                           ;	unspecified, using default values
  6764   200004                     	org	2097156
  6765   200004  FF                 	db	255
  6766                           
  6767                           ;Config register IDLOC5 @ 0x200005
  6768                           ;	unspecified, using default values
  6769   200005                     	org	2097157
  6770   200005  FF                 	db	255
  6771                           
  6772                           ;Config register IDLOC6 @ 0x200006
  6773                           ;	unspecified, using default values
  6774   200006                     	org	2097158
  6775   200006  FF                 	db	255
  6776                           
  6777                           ;Config register IDLOC7 @ 0x200007
  6778                           ;	unspecified, using default values
  6779   200007                     	org	2097159
  6780   200007  FF                 	db	255
  6781                           
  6782                           	psect	config
  6783                           
  6784                           ; Padding undefined space
  6785   300000                     	org	3145728
  6786   300000  FF                 	db	255
  6787                           
  6788                           ;Config register CONFIG1H @ 0x300001
  6789                           ;	Oscillator Selection bits
  6790                           ;	FOSC = ECMP, EC oscillator, CLKOUT function on OSC2 (medium power, 500 kHz-16 MHz)
  6791                           ;	4X PLL Enable
  6792                           ;	PLLCFG = OFF, Oscillator used directly
  6793                           ;	Primary clock enable bit
  6794                           ;	PRICLKEN = ON, Primary clock is always enabled
  6795                           ;	Fail-Safe Clock Monitor Enable bit
  6796                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6797                           ;	Internal/External Oscillator Switchover bit
  6798                           ;	IESO = OFF, Oscillator Switchover mode disabled
  6799   300001                     	org	3145729
  6800   300001  2A                 	db	42
  6801                           
  6802                           ;Config register CONFIG2L @ 0x300002
  6803                           ;	Power-up Timer Enable bit
  6804                           ;	PWRTEN = OFF, Power up timer disabled
  6805                           ;	Brown-out Reset Enable bits
  6806                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  6807                           ;	Brown Out Reset Voltage bits
  6808                           ;	BORV = 190, VBOR set to 1.90 V nominal
  6809   300002                     	org	3145730
  6810   300002  1F                 	db	31
  6811                           
  6812                           ;Config register CONFIG2H @ 0x300003
  6813                           ;	Watchdog Timer Enable bits
  6814                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  6815                           ;	Watchdog Timer Postscale Select bits
  6816                           ;	WDTPS = 32768, 1:32768
  6817   300003                     	org	3145731
  6818   300003  3C                 	db	60
  6819                           
  6820                           ; Padding undefined space
  6821   300004                     	org	3145732
  6822   300004  FF                 	db	255
  6823                           
  6824                           ;Config register CONFIG3H @ 0x300005
  6825                           ;	CCP2 MUX bit
  6826                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  6827                           ;	PORTB A/D Enable bit
  6828                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  6829                           ;	P3A/CCP3 Mux bit
  6830                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  6831                           ;	HFINTOSC Fast Start-up
  6832                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  6833                           ;	Timer3 Clock input mux bit
  6834                           ;	T3CMX = PORTC0, T3CKI is on RC0
  6835                           ;	ECCP2 B output mux bit
  6836                           ;	P2BMX = PORTD2, P2B is on RD2
  6837                           ;	MCLR Pin Enable bit
  6838                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  6839   300005                     	org	3145733
  6840   300005  BF                 	db	191
  6841                           
  6842                           ;Config register CONFIG4L @ 0x300006
  6843                           ;	Stack Full/Underflow Reset Enable bit
  6844                           ;	STVREN = ON, Stack full/underflow will cause Reset
  6845                           ;	Single-Supply ICSP Enable bit
  6846                           ;	LVP = OFF, Single-Supply ICSP disabled
  6847                           ;	Extended Instruction Set Enable bit
  6848                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6849                           ;	Background Debug
  6850                           ;	DEBUG = OFF, Disabled
  6851   300006                     	org	3145734
  6852   300006  81                 	db	129
  6853                           
  6854                           ; Padding undefined space
  6855   300007                     	org	3145735
  6856   300007  FF                 	db	255
  6857                           
  6858                           ;Config register CONFIG5L @ 0x300008
  6859                           ;	Code Protection Block 0
  6860                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  6861                           ;	Code Protection Block 1
  6862                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  6863                           ;	Code Protection Block 2
  6864                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  6865                           ;	Code Protection Block 3
  6866                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  6867   300008                     	org	3145736
  6868   300008  0F                 	db	15
  6869                           
  6870                           ;Config register CONFIG5H @ 0x300009
  6871                           ;	Boot Block Code Protection bit
  6872                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  6873                           ;	Data EEPROM Code Protection bit
  6874                           ;	CPD = OFF, Data EEPROM not code-protected
  6875   300009                     	org	3145737
  6876   300009  C0                 	db	192
  6877                           
  6878                           ;Config register CONFIG6L @ 0x30000A
  6879                           ;	Write Protection Block 0
  6880                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  6881                           ;	Write Protection Block 1
  6882                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  6883                           ;	Write Protection Block 2
  6884                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  6885                           ;	Write Protection Block 3
  6886                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  6887   30000A                     	org	3145738
  6888   30000A  0F                 	db	15
  6889                           
  6890                           ;Config register CONFIG6H @ 0x30000B
  6891                           ;	Configuration Register Write Protection bit
  6892                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  6893                           ;	Boot Block Write Protection bit
  6894                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  6895                           ;	Data EEPROM Write Protection bit
  6896                           ;	WRTD = OFF, Data EEPROM not write-protected
  6897   30000B                     	org	3145739
  6898   30000B  E0                 	db	224
  6899                           
  6900                           ;Config register CONFIG7L @ 0x30000C
  6901                           ;	Table Read Protection Block 0
  6902                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  6903                           ;	Table Read Protection Block 1
  6904                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  6905                           ;	Table Read Protection Block 2
  6906                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  6907                           ;	Table Read Protection Block 3
  6908                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  6909   30000C                     	org	3145740
  6910   30000C  0F                 	db	15
  6911                           
  6912                           ;Config register CONFIG7H @ 0x30000D
  6913                           ;	Boot Block Table Read Protection bit
  6914                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  6915   30000D                     	org	3145741
  6916   30000D  40                 	db	64
  6917                           tosu	equ	0xFFF
  6918                           tosh	equ	0xFFE
  6919                           tosl	equ	0xFFD
  6920                           stkptr	equ	0xFFC
  6921                           pclatu	equ	0xFFB
  6922                           pclath	equ	0xFFA
  6923                           pcl	equ	0xFF9
  6924                           tblptru	equ	0xFF8
  6925                           tblptrh	equ	0xFF7
  6926                           tblptrl	equ	0xFF6
  6927                           tablat	equ	0xFF5
  6928                           prodh	equ	0xFF4
  6929                           prodl	equ	0xFF3
  6930                           indf0	equ	0xFEF
  6931                           postinc0	equ	0xFEE
  6932                           postdec0	equ	0xFED
  6933                           preinc0	equ	0xFEC
  6934                           plusw0	equ	0xFEB
  6935                           fsr0h	equ	0xFEA
  6936                           fsr0l	equ	0xFE9
  6937                           wreg	equ	0xFE8
  6938                           indf1	equ	0xFE7
  6939                           postinc1	equ	0xFE6
  6940                           postdec1	equ	0xFE5
  6941                           preinc1	equ	0xFE4
  6942                           plusw1	equ	0xFE3
  6943                           fsr1h	equ	0xFE2
  6944                           fsr1l	equ	0xFE1
  6945                           bsr	equ	0xFE0
  6946                           indf2	equ	0xFDF
  6947                           postinc2	equ	0xFDE
  6948                           postdec2	equ	0xFDD
  6949                           preinc2	equ	0xFDC
  6950                           plusw2	equ	0xFDB
  6951                           fsr2h	equ	0xFDA
  6952                           fsr2l	equ	0xFD9
  6953                           status	equ	0xFD8

Data Sizes:
    Strings     450
    Constant    4
    Data        4
    BSS         86
    Persistent  18
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     33      64
    BANK0           160     69     146
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2004$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S2004$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 48
		 -> STR_25(CODE[40]), STR_24(CODE[17]), STR_23(CODE[10]), STR_22(CODE[31]), 
		 -> STR_21(CODE[10]), STR_20(CODE[31]), STR_19(CODE[10]), STR_18(CODE[31]), 
		 -> STR_17(CODE[11]), STR_16(CODE[35]), STR_15(CODE[10]), STR_14(CODE[31]), 
		 -> STR_13(CODE[36]), STR_12(CODE[10]), STR_11(CODE[31]), STR_10(CODE[26]), 
		 -> STR_9(CODE[10]), STR_8(CODE[31]), STR_7(CODE[41]), STR_6(CODE[39]), 
		 -> STR_5(CODE[48]), STR_4(CODE[39]), STR_3(CODE[29]), STR_2(CODE[17]), 
		 -> STR_1(CODE[31]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 48
		 -> STR_25(CODE[40]), STR_24(CODE[17]), STR_23(CODE[10]), STR_22(CODE[31]), 
		 -> STR_21(CODE[10]), STR_20(CODE[31]), STR_19(CODE[10]), STR_18(CODE[31]), 
		 -> STR_17(CODE[11]), STR_16(CODE[35]), STR_15(CODE[10]), STR_14(CODE[31]), 
		 -> STR_13(CODE[36]), STR_12(CODE[10]), STR_11(CODE[31]), STR_10(CODE[26]), 
		 -> STR_9(CODE[10]), STR_8(CODE[31]), STR_7(CODE[41]), STR_6(CODE[39]), 
		 -> STR_5(CODE[48]), STR_4(CODE[39]), STR_3(CODE[29]), STR_2(CODE[17]), 
		 -> STR_1(CODE[31]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 48
		 -> STR_25(CODE[40]), STR_24(CODE[17]), STR_23(CODE[10]), STR_22(CODE[31]), 
		 -> STR_21(CODE[10]), STR_20(CODE[31]), STR_19(CODE[10]), STR_18(CODE[31]), 
		 -> STR_17(CODE[11]), STR_16(CODE[35]), STR_15(CODE[10]), STR_14(CODE[31]), 
		 -> STR_13(CODE[36]), STR_12(CODE[10]), STR_11(CODE[31]), STR_10(CODE[26]), 
		 -> STR_9(CODE[10]), STR_8(CODE[31]), STR_7(CODE[41]), STR_6(CODE[39]), 
		 -> STR_5(CODE[48]), STR_4(CODE[39]), STR_3(CODE[29]), STR_2(CODE[17]), 
		 -> STR_1(CODE[31]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2044$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 48
		 -> STR_25(CODE[40]), STR_24(CODE[17]), STR_23(CODE[10]), STR_22(CODE[31]), 
		 -> STR_21(CODE[10]), STR_20(CODE[31]), STR_19(CODE[10]), STR_18(CODE[31]), 
		 -> STR_17(CODE[11]), STR_16(CODE[35]), STR_15(CODE[10]), STR_14(CODE[31]), 
		 -> STR_13(CODE[36]), STR_12(CODE[10]), STR_11(CODE[31]), STR_10(CODE[26]), 
		 -> STR_9(CODE[10]), STR_8(CODE[31]), STR_7(CODE[41]), STR_6(CODE[39]), 
		 -> STR_5(CODE[48]), STR_4(CODE[39]), STR_3(CODE[29]), STR_2(CODE[17]), 
		 -> STR_1(CODE[31]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_MyInterruptHandler(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_MyInterruptHandler(), TMR1_DefaultInterruptHandler(), NULL(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_MyInterruptHandler(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_MyInterruptHandler(), TMR0_DefaultInterruptHandler(), NULL(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), NULL(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), NULL(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), NULL(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), NULL(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), NULL(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_MyInterruptHandler(), INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_MyInterruptHandler(), INT0_DefaultInterruptHandler(), NULL(), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_MyInterruptHandler(), ADC_DefaultInterruptHandler(), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_MyInterruptHandler(), NULL(), ADC_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _dtoa->_pad
    _fputc->_putch
    _putch->_EUSART1_Write
    _abs->___awmod
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ADC_Initialize->_ADC_SetInterruptHandler
    _CheckUSART->_EUSART1_Read
    _CheckUSART->_EUSART1_Write

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _TMR1_ISR->_TMR1_WriteTimer
    _TMR0_MyInterruptHandler->_ADC_SelectChannel
    _ADC_MyInterruptHandler->___aldiv
    ___aldiv->___lmul

Critical Paths under _main in BANK0

    _main->_ShowMenuInTerminal
    _ShowMenuInTerminal->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   20842
            _ADC_SetInterruptHandler
                         _CheckUSART
           _INT0_SetInterruptHandler
                  _SYSTEM_Initialize
                 _ShowMenuInTerminal
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
                     _TMR1_StopTimer
                             _printf
 ---------------------------------------------------------------------------------
 (1) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ShowMenuInTerminal                                   2     2      0    9468
                                             67 BANK0      2     2      0
                      _EUSART1_Write
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    9406
                                             61 BANK0      6     2      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7075
                                             53 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           19    13      6    6614
                                             39 BANK0     14     8      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                13     9      4    4954
                                             26 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2719
                                             32 COMRAM     1     1      0
                                             16 BANK0     10     4      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1270
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     950
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      93
                                             31 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                              4 BANK0      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                             30 COMRAM     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1186
                     _ADC_Initialize
                    _CCP5_Initialize
                 _EUSART1_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                             30 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                             30 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     174
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2     174
                                             30 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                             30 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                             30 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             30 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             30 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             30 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0     174
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADC_SetInterruptHandler                              2     0      2     174
                                             30 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _CheckUSART                                           0     0      0      86
                       _EUSART1_Read
                      _EUSART1_Write
                _EUSART1_is_rx_ready
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      62
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      24
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManagerHigh                      4     4      0    1106
                                             26 COMRAM     4     4      0
                                NULL *
                            _ADC_ISR
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _INT0_ISR
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR1_ISR                                            0     0      0     240
                                NULL *
       _TMR1_DefaultInterruptHandler *
            _TMR1_MyInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) _TMR1_MyInterruptHandler                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            0     0      0      22
                                NULL *
       _TMR0_DefaultInterruptHandler *
            _TMR0_MyInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _TMR0_MyInterruptHandler                             0     0      0      22
                  _ADC_SelectChannel
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (14) _ADC_StartConversion                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT0_CallBack                                       0     0      0       0
                                NULL *
       _INT0_DefaultInterruptHandler *
            _INT0_MyInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT0_MyInterruptHandler                             0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Receive_ISR                                 0     0      0       0
                                NULL *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ADC_ISR                                             0     0      0     844
                                NULL *
        _ADC_DefaultInterruptHandler *
             _ADC_MyInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _ADC_MyInterruptHandler                              0     0      0     844
            _ADC_GetConversionResult
                  _ADC_SelectChannel
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (14) ___lmul                                             12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (14) ___aldiv                                            14     6      8     452
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (14) _ADC_SelectChannel                                   2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (14) _ADC_GetConversionResult                             4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (13) _ADC_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (13) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_SetInterruptHandler
   _CheckUSART
     _EUSART1_Read
     _EUSART1_Write
     _EUSART1_is_rx_ready
   _INT0_SetInterruptHandler
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _CCP5_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   _ShowMenuInTerminal
     _EUSART1_Write
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
           _fputc
   _TMR0_SetInterruptHandler
   _TMR0_StartTimer
   _TMR1_SetInterruptHandler
   _TMR1_StartTimer
   _TMR1_StopTimer
   _printf

 _INTERRUPT_InterruptManagerHigh (ROOT)
   NULL(Fake) *
   _ADC_ISR *
     NULL(Fake) *
     _ADC_DefaultInterruptHandler *
     _ADC_MyInterruptHandler *
       _ADC_GetConversionResult
       _ADC_SelectChannel
       ___aldiv
         ___lmul (ARG)
       ___lmul
   _EUSART1_Receive_ISR *
     NULL(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _INT0_ISR *
     _INT0_CallBack
       NULL(Fake) *
       _INT0_DefaultInterruptHandler *
       _INT0_MyInterruptHandler *
   _TMR0_ISR *
     NULL(Fake) *
     _TMR0_DefaultInterruptHandler *
     _TMR0_MyInterruptHandler *
       _ADC_SelectChannel
       _ADC_StartConversion
   _TMR1_ISR *
     NULL(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_MyInterruptHandler *
     _TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      51        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     45      92       5       91.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     21      40       1       68.1%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRhllllh     27      0       0      47        0.0%
BITBIGSFRhhlhhh     19      0       0      37        0.0%
BITBIGSFRlh         17      0       0      49        0.0%
BITBIGSFRhhh         D      0       0      36        0.0%
BITBIGSFRhlhhll      B      0       0      43        0.0%
BITBIGSFRhlllll      A      0       0      48        0.0%
BITBIGSFRhlhhll      7      0       0      42        0.0%
BITBIGSFRhlhhlh      7      0       0      41        0.0%
BITBIGSFRhlhllh      4      0       0      45        0.0%
BITBIGSFRhllhl       4      0       0      46        0.0%
BITBIGSFRhhlll       2      0       0      40        0.0%
BITBIGSFRhlhlh       1      0       0      44        0.0%
BITBIGSFRhhlhhl      1      0       0      38        0.0%
BITBIGSFRhhlhl       1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D2      50        0.0%
DATA                 0      0      D2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Dec 14 13:49:11 2023

                      _eusart1TxBufferRemaining 0034                                               l9 11CC  
                                             _s 00BD                                              l30 11BC  
                                            l94 1132                                    ___awdiv@sign 0065  
                      ?_INT0_MyInterruptHandler 0001                             ?_ShowMenuInTerminal 0001  
                               _timer0ReloadVal 002F                       fp__ADC_MyInterruptHandler 0000  
                                           l122 1266                                             l230 1182  
                                           l143 122A                                             l224 0BB4  
                                           l243 0E36                                             l252 0D40  
                                           l149 1196                                             l326 11E8  
                                           l414 0EC2                                             l248 0CFE  
                                           l249 0D14                                             l441 1286  
                                           l290 1248                                             l522 1216  
                                           l258 120C                                             l460 1220  
                                           l372 106A                                             l620 0930  
                                           l293 125C                                             l438 1154  
                                           l287 1252                                             l375 11DA  
                                           l296 1234                                             l617 092A  
                                           l299 123E                                             l492 1094  
                                           l637 0338                                             l495 1282  
                                           l648 0C20                                             l498 127E  
                                           l882 089C                                             l895 0AC2  
                    ??_INT0_SetInterruptHandler 0021                                 _timer1ReloadVal 002A  
                                           _abs 0EC4                                             _pad 0AC4  
                               __end_of_ADC_ISR 1016                 __end_of_ADC_SetInterruptHandler 1268  
                                  ___awmod@sign 0020                                             tosl 0FFD  
                                           wreg 0FE8                                      _TXSTA1bits 0FAC  
                                 _INT0_CallBack 1016                                      _CheckUSART 0BB6  
                  ?_ADC_DefaultInterruptHandler 0001                        ?_TMR1_MyInterruptHandler 0001  
                               _CCP5_Initialize 11BE                                            ?_abs 0064  
                                          l3000 0CEE                                            l3010 0D38  
                                          l3002 0D0C                                            l3012 0D3C  
                                          l3004 0D16                                            l3100 0A62  
                                          l3020 0720                                            l3006 0D26  
                                          l3014 0D3E                                            l3110 0A9C  
                                          l3102 0A6A                                            l1406 07D6  
                                          l3022 0732                                            l1414 0E7E  
                                          l1351 0AE8                                            l3008 0D28  
                                          l3040 07D8                                            l3104 0A78  
                                          l3112 0AA2                                            l3016 1206  
                                          l3024 073C                                            l3032 0E38  
                                          l3120 0AC4                                            l1360 0382  
                                          l3200 0544                                            l1329 10E6  
                                          l3050 0806                                            l3042 07DE  
                                          l3114 0AB2                                            l3106 0A8E  
                                          l3026 075A                                            l3018 070C  
                                          l3034 0E46                                            l3130 0B0E  
                                          l3122 0AD4                                            l1362 038A  
                                          l3202 0562                                            l1355 0B40  
                                          l1363 03D0                                            l3060 0834  
                                          l3052 080E                                            l3044 07EC  
                                          l3116 0ABA                                            l3108 0A96  
                                          l3028 0790                                            l3036 0E58  
                                          l3132 0B2C                                            l3124 0AE0  
                                          l3140 0350                                            l3204 05A8  
                                          l3212 05D2                                            l3220 0D4E  
                                          l3300 02A6                                            l1381 05FE  
                                          l2510 120E                                            l3070 086E  
                                          l3062 083C                                            l3054 0812  
                                          l3046 07F4                                            l3134 0EC4  
                                          l3038 0E5E                                            l3126 0AF4  
                                          l1374 04D0                                            l3150 03A2  
                                          l3142 0360                                            l3222 0D6C  
                                          l3230 10CA                                            l3310 02DA  
                                          l3302 02B4                                            l1391 0EFC  
                                          l2600 1188                                            l3080 0894  
                                          l3072 0870                                            l3064 084A  
                                          l3056 081A                                            l3048 07F8  
                                          l3136 0EE0                                            l3128 0B08  
                                          l3160 03D8                                            l3152 03A8  
                                          l3144 0368                                            l3208 05C0  
                                          l3224 0D8A                                            l3240 014E  
                                          l3330 0BF6                                            l3322 0BB6  
                                          l2610 0B5E                                            l2602 1194  
                                          l3074 0876                                            l3066 0850  
                                          l3058 082C                                            l3090 0A2E  
                                          l1394 0F04                                            l3170 0426  
                                          l3162 03E0                                            l3154 03B8  
                                          l3146 0376                                            l3138 033A  
                                          l3218 0D42                                            l3306 02C6  
                                          l3250 0194                                            l3242 015C  
                                          l3234 0136                                            l1387 0D94  
                                          l3332 0C08                                            l3324 0BCA  
                                          l2620 0B72                                            l2612 0B62  
                                          l2604 0B42                                            l2508 1218  
                                          l3068 0866                                            l3076 087C  
                                          l3092 0A32                                            l3084 0A12  
                                          l3180 049A                                            l3164 03E6  
                                          l3172 0442                                            l3156 03C4  
                                          l3148 0392                                            l3228 10C0  
                                          l3308 02CC                                            l3260 01CE  
                                          l3252 01A2                                            l3244 016A  
                                          l3236 013A                                            l3316 02EC  
                                          l3340 089E                                            l3334 0C0E  
                                          l3326 0BD6                                            l2622 0B7E  
                                          l2614 0B66                                            l2606 0B44  
                                          l3078 088C                                            l3094 0A40  
                                          l3086 0A16                                            l3182 04A0  
                                          l3174 045E                                            l3166 041A  
                                          l3158 03CC                                            l3190 04F8  
                                          l3270 01FA                                            l3262 01DC  
                                          l3254 01B0                                            l3246 0178  
                                          l3238 0140                                            l3350 08D0  
                                          l3342 08A2                                            l2640 0E1A  
                                          l2632 0DE8                                            l3336 0C16  
                                          l3328 0BE6                                            l2624 0B8A  
                                          l2616 0B6A                                            l2608 0B50  
                                          l3096 0A48                                            l3088 0A26  
                                          l3184 04B0                                            l3176 0470  
                                          l3168 0420                                            l3192 0506  
                                          l3280 022E                                            l3272 0208  
                                          l3264 01EA                                            l3256 01BA  
                                          l3248 0186                                            l2800 127C  
                                          l3360 090A                                            l3352 08E0  
                                          l3344 08A4                                            l2650 0E34  
                                          l2642 0E2A                                            l2634 0DE8  
                                          l2474 125E                                            l2490 122C  
                                          l2626 0BB2                                            l2618 0B6E  
                                          l3098 0A5A                                            l3178 048A  
                                          l3194 0512                                            l3290 027A  
                                          l3282 0244                                            l3274 0216  
                                          l3258 01C0                                            l3370 0932  
                                          l3362 090C                                            l3354 08EE  
                                          l3346 08A6                                            l2644 0E2E  
                                          l2636 0DF8                                            l2628 116E  
                                          l2580 11BE                                            l2492 124A  
                                          l2660 0E80                                            l3196 0516  
                                          l3188 04D2                                            l3292 0280  
                                          l3284 025A                                            l3268 01F4  
                                          l3372 0942                                            l3364 0912  
                                          l3356 08F4                                            l3348 08CC  
                                          l2646 0E30                                            l2638 0E18  
                                          l2590 1124                                            l2494 1240  
                                          l2486 1222                                            l2662 0EA4  
                                          l2582 11AC                                            l2670 1078  
                                          l3198 0526                                            l3294 028E  
                                          l3286 0268                                            l3278 0228  
                                          l3374 0946                                            l3366 0916  
                                          l3358 0906                                            l2648 0E32  
                                          l2592 1126                                            l2496 1254  
                                          l2488 1236                                            l2664 0EC0  
                                          l2584 11B8                                            l2680 1134  
                                          l2672 1080                                            l3376 094C  
                                          l3368 0918                                            l2658 11DC  
                                          l2666 11CE                                            l2586 11BA  
                                          l2682 1140                                            l2674 1082  
                                          l3298 02A0                                            l2588 1110  
                                          l2684 1142                                            l2676 1084  
                                          l2668 106C                                            l2780 104A  
                                          l2598 1184                                            l2686 1144  
                                          l2678 1090                                            l2790 105E  
                                          l2782 104E                                            l3398 0302  
                                          ?_pad 0070                                            l2688 1150  
                                          l2792 1062                                            l2784 1052  
                                          l2776 1042                                            l2794 1066  
                                          l2786 1056                                            l2778 1046  
                                          l2788 105A                                            l2796 1284  
                                          l2798 1280                                            l2998 0CEE  
                                          STR_1 FF53                                            STR_2 FFC8  
                                          STR_3 FF91                                            STR_4 FEE5  
                                          STR_5 FE3D                                            STR_6 FEBE  
                                          STR_7 FE6D                                            STR_8 FF72  
                                          STR_9 FFF5                                            u2000 088C  
                                          u2001 0888                                            u2010 0A26  
                                          u2011 0A22                                            u2020 0A40  
                                          u2100 034C                                            u2021 0A3C  
                                          u2101 0346                                            u2030 0A5A  
                                          u2110 034E                                            u2031 0A56  
                                          u2040 0A78                                            u2120 0360  
                                          u2200 04F8                                            u2041 0A74  
                                          u2121 035C                                            u2201 04F4  
                                          u2050 0A8E                                            u2130 0376  
                                          u2210 0544                                            u2051 0A8A  
                                          u2131 0372                                            u2211 0540  
                                          u2060 0AB2                                            u2140 03A2  
                                          u2220 0562                                            u2300 0942  
                                          u2061 0AAE                                            u2141 039E  
                                          u2221 055E                                            u2301 093E  
                                          _LATA 0F89                                            u2070 0AD4  
                                          u2150 03B8                                            u2230 0D8A  
                                          _LATB 0F8A                                            u2071 0AD0  
                                          u2151 03B4                                            u2231 0D86  
                                          _LATC 0F8B                                            u2240 0BCA  
                                          u2080 0B2C                                            u2160 045E  
                                          _LATD 0F8C                                            u2241 0BC6  
                                          u2081 0B28                                            u2161 045A  
                                          _LATE 0F8D                                            u1450 1180  
                                          u2250 0BE6                                            u2090 0EE0  
                                          u2170 0470                                            u1451 117A  
                                          u2251 0BE2                                            u2091 0EDC  
                                          u2171 046C                                            u1460 1182  
                                          u2260 0BF6                                            u2180 048A  
                                          u2261 0BF2                                            u2181 0486  
                                          u1470 0DF8                                            u2270 0C08  
                                          u2190 049A                                            u1471 0DF4  
                                          u2271 0C04                                            u2191 0496  
                                          u1480 0E2A                                            u2280 0906  
                                          u1481 0E26                                            u2281 0902  
                                          u2290 092A                                            u2291 0926  
                                          u1900 0720                                            u1901 071C  
                                          u1910 0732                                            u1911 072E  
                                          u1920 075A                                            u1921 0756  
                                          u1930 0790                                            u1931 078C  
                                          u1940 0E7E                                            u1941 0E7A  
                                          u1870 0CFE                                            u1950 07EC  
                                          u1871 0CFA                                            u1951 07E8  
                                          u1880 0D0C                                            u1960 0806  
                                          u1881 0D08                                            u1961 0802  
                                          u1890 0D38                                            u1970 082C  
                                          u1891 0D34                                            u1971 0828  
                                          u1980 084A                                            u1981 0846  
                                          u1990 0866                                            u1991 0862  
                                          i2l97 116C                                            _TMR1 0FCE  
                                          _WPUB 0F61                            ??_ShowMenuInTerminal 00A3  
                                 _EUSART1_Write 0CEC                                            abs@a 0064  
                                          _dbuf 00C6                                            _main 089E  
                                          _dtoa 033A                                            _menu 00F1  
                                 ?_EUSART1_Read 0001                                            _prec 0024  
                               _TMR0_StartTimer 1284                                            pad@i 0076  
                                          pad@p 0074                                            fsr1h 0FE2  
                                          fsr2h 0FDA                                            indf2 0FDF  
                                          fsr1l 0FE1                                            pad@w 0078  
                                          fsr2l 0FD9                                            btemp 0041  
                                          start 0132                      ??_TMR1_SetInterruptHandler 0021  
                fp__EUSART1_DefaultErrorHandler 0000                                    ___param_bank 0000  
                       ?_ADC_MyInterruptHandler 0001                                           ??_abs 0066  
                                         ??_pad 0021                         __end_of_TMR0_Initialize 1156  
                              __end_of_INT0_ISR 1270                  ??_TMR0_DefaultInterruptHandler 0001  
                 __end_of_OSCILLATOR_Initialize 11DC                           _eusart1RxStatusBuffer 00A5  
                               __end_of___aldiv 070C                                           ?_main 0001  
                                         ?_dtoa 007A                                 __end_of___awdiv 089E  
                                         STR_10 FFAE                                           STR_11 FF72  
                                         STR_12 FFF5                                           STR_20 FF72  
                                         STR_21 FFF5                                           STR_13 FF0C  
                                         STR_22 FF72                                           STR_14 FF72  
                                         STR_23 FFF5                                           STR_15 FFF5  
                                         STR_24 FFD9                                           STR_16 FF30  
                                         STR_17 FFEA                                           STR_25 FE96  
                                         STR_18 FF72                                           STR_19 FFF5  
                               __end_of___awmod 0AC4                                 _TMR1_StartTimer 1280  
                                         _T0CON 0FD5                                 ___awdiv@divisor 0062  
                                         _T1CON 0FCD                                           i2l100 128A  
                                         i2l106 11AA                                           i2l140 1040  
                                         i2l125 1298                                           i2l119 1014  
                                         i2l136 126E                                           i2l146 1294  
                                         i2l331 003E                                           i2l261 0F42  
                                         i2l333 0062                                           i2l271 0A10  
                                         i2l335 0086                                           i2l343 011E  
                                         i2l264 0F44                                           i2l281 1274  
                                         i2l337 00C0                                           i2l506 110E  
                                         i2l338 011E                                           i2l275 10BE  
                                         i2l339 00FA                                           i2l284 127A  
                                         i2l525 1290                                           i2l278 1296  
                                         i2l463 1292                                           i2l519 0F7E  
                                         i2l457 0FE6                                           i2l730 070A  
                                         i2l662 0C7A                                           i2l582 1202  
                                         i2l663 0C8A                                           i2l576 11F6  
                                         i2l579 0CEA                                           i2l588 0FB4  
                               ___awdiv@counter 0064                                    vfpfcnvrt@fmt 0089  
                                         _TMR0H 0FD7                                           _TMR1H 0FCF  
                                         _TMR0L 0FD6                                           _TMR1L 0FCE  
                                         _TRISA 0F92                                           _TRISB 0F93  
                                ?_INT0_CallBack 0001                                           _TRISC 0F94  
                                         _TRISD 0F95                                           _TRISE 0F96  
                           ___lmul@multiplicand 0005                       ?_TMR0_SetInterruptHandler 001F  
                          _EUSART1_Transmit_ISR 0F06                                __end_of_TMR0_ISR 0FE8  
                              __end_of_TMR1_ISR 0F80                                           _flags 00C3  
                                         _fputc 070C                                           _fputs 0E38  
                                         pad@fp 0070                                           _width 0022  
                                         _putch 1204                                           dtoa@d 007C  
                                         dtoa@i 0085                                           dtoa@p 0080  
                                         dtoa@s 0084                                           dtoa@w 0082  
                                ?_EUSART1_Write 0001                         __end_of_TMR1_Initialize 1096  
                                         pclath 0FFA                                           pclatu 0FFB  
                                         tablat 0FF5                                  ??_EUSART1_Read 001F  
                                         ttemp5 0042                                           ttemp6 0045  
                                         ttemp7 0049                                           status 0FD8  
                                         wtemp8 0042           fp__EUSART1_DefaultFramingErrorHandler 0000  
    __end_of_EUSART1_DefaultFramingErrorHandler 1298            ??_EUSART1_DefaultFramingErrorHandler 0001  
           ?_EUSART1_DefaultFramingErrorHandler 0001              _EUSART1_DefaultFramingErrorHandler 1296  
                               _TMR1_WriteTimer 10E8                  __end_of_ADC_MyInterruptHandler 0CEC  
                               __initialization 0D96                 __end_of_INT0_MyInterruptHandler 11F8  
                    __end_of_EUSART1_Initialize 0BB6                                    __end_of_main 0958  
                                  __end_of_dtoa 04D2                                     _BombaLigada 00C4  
                                     ??_ADC_ISR 001B                                          ??_main 0022  
                                        ??_dtoa 0022                         __end_of_CCP5_Initialize 11CE  
               __end_of_TMR1_MyInterruptHandler 0FB6                                   __activetblptr 0003  
                         ?_EUSART1_Transmit_ISR 0001                                  _convertedValue 0028  
                                   ?_CheckUSART 0001                         __end_of_TMR0_StartTimer 1288  
                                        _ADCON0 0FC2                                          _ADCON1 0FC1  
                                        _ADCON2 0FC0                                          ?_fputc 0060  
                                        ?_fputs 0069                                          _ADRESH 0FC4  
                                        _ADRESL 0FC3                                          _CCPR5H 0F56  
                                        _CCPR5L 0F55                                ___awdiv@dividend 0060  
                                        _ANSELA 0F38                                          ?_putch 0001  
                                        _ANSELB 0F39                                          _ANSELC 0F3A  
                                        _ANSELD 0F3B                                          _ANSELE 0F3C  
                                        _T1GCON 0FCC                         TMR1_WriteTimer@timerVal 0001  
                                        i2l2500 10A6                                          i2l2502 10A8  
                                        i2l2520 0C40                                          i2l2504 10B8  
                                        i2l2512 11EA                                          i2l2530 0612  
                                        i2l2522 0C50                                          i2l2506 10BC  
                                        i2l2514 11F4                                          i2l2540 0648  
                                        i2l2532 0622                                          i2l2524 0C5A  
                                        i2l2516 0C22                                          i2l2700 1106  
                                        i2l2550 0690                                          i2l2542 0658  
                                        i2l2534 0626                                          i2l2526 0600  
                                        i2l2518 0C32                                          i2l2710 0F80  
                                        i2l2702 110A                                          i2l2560 06D4  
                                        i2l2552 069A                                          i2l2544 066E  
                                        i2l2536 0634                                          i2l2528 0604  
                                        i2l2704 0C8C                                          i2l2720 0FE8  
                                        i2l2480 1288                                          i2l2712 0F92  
                                        i2l2482 1198                                          i2l2554 06B8  
                                        i2l2546 0676                                          i2l2562 06DA  
                                        i2l2538 0644                                          i2l2722 0FEA  
                                        i2l2730 0F06                                          i2l2706 11F8  
                                        i2l2476 1158                                          i2l2564 06EA  
                                        i2l2556 06C8                                          i2l2548 0682  
                                        i2l2724 0FFC                                          i2l2740 0F3C  
                                        i2l2732 0F16                                          i2l2708 11FE  
                                        i2l2478 116A                                          i2l2566 06FA  
                                        i2l2558 06CA                                          i2l2654 1270  
                                        i2l2750 099C                                          i2l2742 0958  
                                        i2l2734 0F26                                          i2l2726 1268  
                                        i2l2656 1276                                          i2l2760 0A0C  
                                        i2l2752 09AA                                          i2l2744 0966  
                                        i2l2736 0F28                                          i2l2728 126A  
                                        i2l2920 005A                                          i2l2912 001A  
                                        i2l2498 1096                                          i2l2754 09BA  
                                        i2l2746 0974                                          i2l2738 0F38  
                                        i2l2594 1016                                          i2l2762 0FB6  
                                        i2l2690 10E8                                          i2l2770 0F48  
                                        i2l2930 00CE                                          i2l2922 0070  
                                        i2l2914 0028                                          i2l2756 09D2  
                                        i2l2748 0984                                          i2l2596 1028  
                                        i2l2764 0FBC                                          i2l2692 10F6  
                                        i2l2772 0F54                                          i2l2932 00DC  
                                        i2l2924 007E                                          i2l2916 0036  
                                        i2l2758 09EE                                          i2l2766 0FCE  
                                        i2l2694 10F8                                          i2l2774 0F66  
                                        i2l2934 0108                                          i2l2926 0094  
                                        i2l2918 004C                                          i2l2696 10FC  
                                        i2l2768 0F46                                          i2l2936 0116  
                                        i2l2928 00A2                                          i2l2698 1100  
                                        _RCREG1 0FAE                                          _RCSTA1 0FAB  
                                        _OSCCON 0FD3                                          _SPBRG1 0FAF  
                                        _TXREG1 0FAD                                          _TXSTA1 0FAC  
          __end_of_TMR1_DefaultInterruptHandler 1292                    _TMR1_DefaultInterruptHandler 1290  
                                  vfprintf@cfmt 009B                                          ___lmul 0C22  
                       __end_of_TMR1_StartTimer 1284                                       ??___aldiv 0015  
                                     ??___awdiv 001F                                       ??___awmod 001F  
                      ?_EUSART1_SetErrorHandler 001F                                ?_TMR0_Initialize 0001  
                                        clear_0 0DCC                                          clear_1 0DD8  
                                        _rxData 002E                                ___awdiv@quotient 0066  
                               ___awmod@divisor 0062                                          isa$std 0001  
                               ___awmod@counter 001F                                          _printf 10C0  
                                        pad@buf 0072                ??_EUSART1_SetOverrunErrorHandler 0021  
               ?_EUSART1_SetOverrunErrorHandler 001F                                 ??_INT0_CallBack 0001  
                                        dtoa@fp 007A                                          fputc@c 0060  
                                        fputs@c 006D                                          fputs@i 006E  
                                  __pdataCOMRAM 003F                                          fputs@s 0069  
                                  __mediumconst FE38                                          tblptrh 0FF7  
                                        tblptrl 0FF6                                          tblptru 0FF8  
                              __end_of_vfprintf 0D96                                 ??_EUSART1_Write 001F  
      TMR1_SetInterruptHandler@InterruptHandler 001F        TMR0_SetInterruptHandler@InterruptHandler 001F  
      INT0_SetInterruptHandler@InterruptHandler 001F         ADC_SetInterruptHandler@InterruptHandler 001F  
                       __end_of_TMR1_WriteTimer 1110                                 _eusart1RxBuffer 00AD  
                               _eusart1TxBuffer 00B5                                ?_TMR1_Initialize 0001  
              ??_INTERRUPT_InterruptManagerHigh 001B                 ?_INTERRUPT_InterruptManagerHigh 0001  
                             _SYSTEM_Initialize 1042                                      __accesstop 0060  
                       __end_of__initialization 0DDE                                       ?_INT0_ISR 0001  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 0001  
                 __end_of_EUSART1_RxDataHandler 10C0                                  __pcstackCOMRAM 0001  
                                  __pidataBANK0 128E                             ??_SYSTEM_Initialize 0021  
                                     ?_TMR0_ISR 0001                                       ?_TMR1_ISR 0001  
               fp__TMR1_DefaultInterruptHandler 0000                   ?_TMR1_DefaultInterruptHandler 0001  
                                 __end_of_fputc 07D8                                   __end_of_fputs 0E80  
                             ??_SPI1_Initialize 001F                                   __end_of_putch 120E  
                              _carater_recebido 00F0                            __end_of_EUSART1_Read 0E38  
                              ?_CCP5_Initialize 0001                          ??_EUSART1_Transmit_ISR 0001  
                       _ADC_GetConversionResult 1198                              _spi1_configuration FE39  
                   __end_of_EUSART1_Receive_ISR 0A12                                ?_TMR0_StartTimer 0001  
                                       ??_fputc 0064                       __end_of_SYSTEM_Initialize 106C  
                                       ??_fputs 0021                                         ??_putch 0020  
                                 _eusart1RxHead 0033                                   _eusart1TxHead 0036  
                                 _eusart1RxTail 0032                                      __pbssBANK0 00A5  
                                 _eusart1TxTail 0035               _EUSART1_TxDefaultInterruptHandler 00EE  
               ??_EUSART1_SetRxInterruptHandler 0021                           _INT0_InterruptHandler 003B  
                                    ??_INT0_ISR 0001                                      __pnvCOMRAM 0037  
               __end_of_EUSART1_SetErrorHandler 125E                __end_of_TMR0_SetInterruptHandler 1222  
                                       ?___lmul 0001                                ?_TMR1_StartTimer 0001  
                                    ??_TMR0_ISR 0003                                      ??_TMR1_ISR 0003  
                                       _CCP5CON 0F54                                         _ADC_ISR 0FE8  
                                ___lmul@product 0009                                         ?_printf 009D  
        __end_of_EUSART1_SetFramingErrorHandler 1254                  _EUSART1_SetFramingErrorHandler 124A  
                  ?_EUSART1_DefaultErrorHandler 0001                                         _OSCCON2 0FD2  
                      ?_TMR0_MyInterruptHandler 0001                                         _OSCTUNE 0F9B  
                                       _SPBRGH1 0FB0                                         _SSP1ADD 0FC8  
                                       _SSP1BUF 0FC9                                ?_TMR1_WriteTimer 0001  
                     ?_INT0_SetInterruptHandler 001F                            _ADC_InterruptHandler 003D  
                                       __Hparam 0000                         _ADC_SetInterruptHandler 125E  
                                       __Lparam 0000                                         ___aldiv 0600  
                                       ___awdiv 07D8                                         ___awmod 0A12  
                                     ?_vfprintf 0095                             _EUSART1_is_rx_ready 116E  
                     ??_ADC_GetConversionResult 0003                                         __pcinit 0D96  
                                       __ramtop 1000                                         __ptext0 089E  
                                       __ptext1 127C                                         __ptext2 1280  
                                       __ptext3 1284                                         __ptext4 0136  
                                       __ptext5 10C0                                         __ptext6 0D42  
                                       __ptext7 04D2                                         __ptext8 033A  
                                       __ptext9 0AC4                                       _T0CONbits 0FD5  
                ??_TMR1_DefaultInterruptHandler 0001                                       _T1CONbits 0FCD  
                         _OSCILLATOR_Initialize 11CE                                ___awmod@dividend 0060  
                              ___aldiv@dividend 000D                              _EUSART1_Initialize 0B42  
                      ??_PIN_MANAGER_Initialize 001F                       ?_TMR1_SetInterruptHandler 001F  
                                  ??_CheckUSART 0020                   ??_EUSART1_DefaultErrorHandler 0001  
                          end_of_initialization 0DDE                            ?_EUSART1_is_rx_ready 0001  
                           ?_EUSART1_Initialize 0001                                      _nivel_agua 00C1  
                                       fputc@fp 0062                     _EUSART1_OverrunErrorHandler 00E8  
                                       fputs@fp 006B           __end_of_EUSART1_SetRxInterruptHandler 1240  
                 _EUSART1_SetRxInterruptHandler 1236                               __end_of_vfpfcnvrt 0600  
                              ___aldiv@quotient 0017                                         postdec2 0FDD  
                                       postinc0 0FEE                                         postinc1 0FE6  
                                       postinc2 0FDE                                vfpfcnvrt@convarg 008F  
                            __end_of_CheckUSART 0C22                                      ??_vfprintf 0022  
                          ??_EUSART1_Initialize 0021                        _TMR0_SetInterruptHandler 1218  
               __end_of_TMR0_MyInterruptHandler 1204             __end_of_ADC_DefaultInterruptHandler 129A  
                   _ADC_DefaultInterruptHandler 1298                                       _TRISCbits 0F94  
                           _ADC_StartConversion 1288                         fp__EUSART1_Transmit_ISR 0000  
                       _INT0_MyInterruptHandler 11EA                      fp__INT0_MyInterruptHandler 0000  
                           EUSART1_Write@txData 001F                           ??_EUSART1_is_rx_ready 001F  
                 ??_ADC_DefaultInterruptHandler 0001                       ??_ADC_SetInterruptHandler 0021  
                               _SPI1_Initialize 11AC                                    _EUSART1_Read 0DE8  
                       _TMR1_MyInterruptHandler 0F80                      fp__TMR1_MyInterruptHandler 0000  
                          ?_ADC_StartConversion 0001                    __end_of_INTERRUPT_Initialize 11EA  
          __end_of_INT0_DefaultInterruptHandler 1296                    _INT0_DefaultInterruptHandler 1294  
                                __end_of___lmul 0C8C                                     vfpfcnvrt@ap 008B  
                                   vfpfcnvrt@cp 0093                                     vfpfcnvrt@fp 0087  
                                 __pidataCOMRAM 128C                                  _ADC_Initialize 1110  
                                _TMR1_StopTimer 127C                          ?_OSCILLATOR_Initialize 0001  
                                __end_of_printf 10E8                           __end_of_INT0_CallBack 1042  
                           start_initialization 0D96                                     __end_of_abs 0F06  
                                   __end_of_pad 0B42   EUSART1_SetRxInterruptHandler@interruptHandler 001F  
 EUSART1_SetTxInterruptHandler@interruptHandler 001F                                     putch@txData 0020  
                         __end_of_EUSART1_Write 0D42                        ??_ADC_MyInterruptHandler 001B  
                        fp__EUSART1_Receive_ISR 0000                           ??_ADC_StartConversion 0001  
                                   vfprintf@fmt 0097                                        ??___lmul 0009  
                         _EUSART1_RxDataHandler 1096                  ?_EUSART1_SetRxInterruptHandler 001F  
                        __end_of_ADC_Initialize 1134                          __end_of_TMR1_StopTimer 1280  
                                   __pdataBANK0 00F0                                        ?_ADC_ISR 0001  
                    __end_of_EXT_INT_Initialize 1198                 fp__INT0_DefaultInterruptHandler 0000  
                 ?_INT0_DefaultInterruptHandler 0001                                        ??_printf 0022  
                                _eusart1RxCount 0031                       ??_INT0_MyInterruptHandler 0001  
                                   __pbssCOMRAM 0022               _EUSART1_RxDefaultInterruptHandler 00EC  
              __end_of_INT0_SetInterruptHandler 122C                                   __pcstackBANK0 0060  
                       __end_of_SPI1_Initialize 11BE                       ??_TMR1_MyInterruptHandler 0001  
               ??_EUSART1_SetTxInterruptHandler 0021                ??_EUSART1_SetFramingErrorHandler 0021  
               ?_EUSART1_SetFramingErrorHandler 001F                           _TMR0_InterruptHandler 0039  
                                     __pnvBANK0 00E6                          _PIN_MANAGER_Initialize 0E80  
                                     _dtoa$2071 007E                                       __pintcode 0008  
                             _ADC_SelectChannel 1156                __end_of_TMR1_SetInterruptHandler 1218  
                                 __pmediumconst FE38                                        ?___aldiv 000D  
                                      ?___awdiv 0060                                        ?___awmod 0060  
                               ?_ADC_Initialize 0001                                 ?_TMR1_StopTimer 0001  
                            ?_ADC_SelectChannel 0001                                        _BAUDCON1 0FB8  
         fp__EUSART1_DefaultOverrunErrorHandler 0000      __end_of_EUSART1_DefaultOverrunErrorHandler 1276  
          ??_EUSART1_DefaultOverrunErrorHandler 0001             ?_EUSART1_DefaultOverrunErrorHandler 0001  
            _EUSART1_DefaultOverrunErrorHandler 1270                             ??_ADC_SelectChannel 0001  
                          _EUSART1_ErrorHandler 00E6                         _EUSART1_SetErrorHandler 1254  
                    __end_of_ShowMenuInTerminal 033A                            _INTERRUPT_Initialize 11DC  
                               ___aldiv@divisor 0011                               ??_TMR0_Initialize 0021  
                               ___aldiv@counter 0015                                        _INT0_ISR 1268  
       EUSART1_SetErrorHandler@interruptHandler 001F                                        _LATBbits 0F8A  
                                      _IPR1bits 0F9F                                        _PIE1bits 0F9D  
                     __end_of_ADC_SelectChannel 116E                                        i2u140_40 06B8  
                                      i2u140_41 06B4                                        i2u141_40 06EA  
                                      i2u133_40 10B8                                        i2u141_41 06E6  
                                      i2u133_41 10B4                                        i2u134_40 0C40  
                                      i2u150_40 0F92                                        i2u134_41 0C3C  
                                      i2u150_41 0F8E                                        i2u135_40 0C7A  
                                      i2u143_40 1028                                        i2u151_40 0FA2  
                                      i2u135_41 0C76                                        i2u143_41 1024  
                                      i2u151_41 0F9C                                        i2u151_46 0FA4  
                                      i2u136_40 0612                                        i2u152_40 0FFC  
                                      i2u160_40 09EE                                        i2u136_41 060E  
                                      i2u152_41 0FF8                                        i2u160_41 09EA  
                                      i2u137_40 0634                                        i2u144_48 102E  
                                      i2u137_41 0630                                        i2u144_49 1040  
                                      i2u138_40 066E                                        i2u153_48 1002  
                                      i2u161_48 09F4                                        i2u154_40 0F16  
                                      i2u162_40 0FCE                                        i2u170_40 0028  
                                      i2u138_41 066A                                        i2u153_49 1014  
                                      i2u161_49 0A08                                        i2u154_41 0F12  
                                      i2u162_41 0FCA                                        i2u170_41 0024  
                                      i2u139_40 0690                                        i2u155_40 0F38  
                                      i2u171_40 0036                                        i2u139_41 068C  
                                      i2u155_41 0F34                                        i2u171_41 0032  
                                      i2u156_40 0974                                        i2u163_48 0FD4  
                                      i2u164_40 0F66                                        i2u180_40 00DC  
                                      i2u172_40 004C                                        i2u156_41 0970  
                                      i2u163_49 0FE6                                        i2u164_41 0F62  
                                      i2u180_41 00D8                                        i2u172_41 0048  
                                      i2u149_40 10F6                                        i2u173_40 005A  
                    ??_TMR0_SetInterruptHandler 0021                                        i2u149_41 10F2  
                                      i2u173_41 0056                                        i2u158_40 09AA  
                                      i2u157_48 098A                                        i2u165_48 0F6C  
                                      i2u182_40 0108                                        i2u181_48 00E2  
                                      i2u174_40 0070                                        i2u158_41 09A6  
                                      i2u157_49 099C                                        i2u165_49 0F7E  
                                      i2u182_41 0104                                        i2u181_49 00F6  
                                      i2u174_41 006C                                        i2u183_40 0116  
                                      i2u175_40 007E                                        i2u183_41 0112  
                                      i2u175_41 007A                                        i2u159_48 09C0  
                                      i2u176_40 0094                                        i2u159_49 09D2  
                                      i2u176_41 0090                                        i2u177_40 00A2  
                                      i2u177_41 009E                                        _PIR1bits 0F9E  
                                      i2u179_40 00CE                                        i2u178_48 00A8  
                                      i2u179_41 00CA                                        i2u178_49 00BC  
                        ?_EUSART1_RxDataHandler 0001                                        _RCONbits 0FD0  
                fp__ADC_DefaultInterruptHandler 0000                                        _SSP1CON1 0FC6  
                                      _SSP1CON2 0FC5                                        _TMR0_ISR 0FB6  
                         _SistemaControloLigado 00C5                                        _TMR1_ISR 0F46  
                                      _SSP1STAT 0FC7                                       _vfpfcnvrt 04D2  
                             ??_TMR1_Initialize 0021                                      _ADCON0bits 0FC2  
                      ADC_SelectChannel@channel 0002                  ??_INT0_DefaultInterruptHandler 0001  
                              ?_SPI1_Initialize 0001                               ___lmul@multiplier 0001  
                                   _INTCON2bits 0FF1                           ?_INTERRUPT_Initialize 0001  
                      _INT0_SetInterruptHandler 1222                           EUSART1_Read@readValue 001F  
                             ??_CCP5_Initialize 001F           __end_of_EUSART1_SetTxInterruptHandler 1236  
                 _EUSART1_SetTxInterruptHandler 122C                                        __Hrparam 0000  
                                    vfprintf@ap 0099                                        __Lrparam 0000  
                                    vfprintf@fp 0095                        ?_ADC_GetConversionResult 0001  
                       ??_OSCILLATOR_Initialize 001F                               ??_TMR0_StartTimer 001F  
                        _ADC_MyInterruptHandler 0C8C                                      ?_vfpfcnvrt 0087  
                      _TMR1_SetInterruptHandler 120E                           _TMR1_InterruptHandler 0037  
                     ??_EUSART1_SetErrorHandler 0021             __end_of_EUSART1_DefaultErrorHandler 127C  
                   _EUSART1_DefaultErrorHandler 1276                     __end_of_EUSART1_is_rx_ready 1184  
                                      __ptext10 0E38                                        __ptext11 070C  
                                      __ptext20 1218                                        __ptext12 1204  
                                      __ptext21 11AC                                        __ptext13 0EC4  
                                    _T1GCONbits 0FCC                                        __ptext30 1240  
                                      __ptext22 0E80                                        __ptext14 0A12  
                                      __ptext31 124A                                        __ptext23 11CE  
                                      __ptext15 07D8                                        __ptext32 1254  
                                      __ptext24 11DC                                        __ptext16 1042  
                                      __ptext41 0F46                                        __ptext33 11BE  
                                      __ptext25 1184                                        __ptext17 106C  
                                      __ptext50 1016                                        __ptext42 10E8  
                                      __ptext34 1110                                        __ptext26 1222  
                                      __ptext18 120E                                        __ptext51 1294  
                                      __ptext43 1290                                        __ptext35 125E  
                                      __ptext27 0B42                                        __ptext19 1134  
                                      __ptext60 1298                                        __ptext52 11EA  
                                      __ptext44 0F80                                        __ptext36 0BB6  
                                      __ptext28 122C                                        __ptext61 0C8C  
                                      __ptext53 0F06                                        __ptext45 0FB6  
                                      __ptext37 116E                                        __ptext29 1236  
                                      __ptext62 0C22                                        __ptext54 0958  
                                      __ptext46 1292                                        __ptext38 0CEC  
                                      __ptext63 0600                                        __ptext55 1270  
                                      __ptext47 11F8                                        __ptext39 0DE8  
                                      __ptext64 1156                                        __ptext56 1296  
                                      __ptext48 1288                                        __ptext65 1198  
                                      __ptext57 1276                                        __ptext49 1268  
                                      __ptext66 0000                                        __ptext58 1096  
                                      __ptext59 0FE8                                    _SSP1CON1bits 0FC6  
                                      _cnt_char 002D                               ??_TMR1_StartTimer 001F  
                              _nivel_referencia 0026                         _TMR0_MyInterruptHandler 11F8  
                    fp__TMR0_MyInterruptHandler 0000            __end_of_TMR0_DefaultInterruptHandler 1294  
                  _TMR0_DefaultInterruptHandler 1292  EUSART1_SetOverrunErrorHandler@interruptHandler 001F  
                                      isa$xinst 0000                                        int$flags 0041  
                                      _vfprintf 0D42                                       printf@fmt 009D  
                             ??_TMR1_WriteTimer 0003                                     _intro_valor 002C  
                   _EUSART1_FramingErrorHandler 00EA                             _EUSART1_Receive_ISR 0958  
                                    _INTCONbits 0FF2                          ??_INTERRUPT_Initialize 001F  
                            _EXT_INT_Initialize 1184                        ?_ADC_SetInterruptHandler 001F  
                                      intlevel2 0000                            ?_EUSART1_Receive_ISR 0001  
                   __end_of_ADC_StartConversion 128C                         ?_PIN_MANAGER_Initialize 0001  
               __end_of_ADC_GetConversionResult 11AC                             ?_EXT_INT_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 124A                  _EUSART1_SetOverrunErrorHandler 1240  
                                    _RCSTA1bits 0FAB                    __end_of_EUSART1_Transmit_ISR 0F46  
                              ??_ADC_Initialize 0021                                ??_TMR1_StopTimer 001F  
               fp__TMR0_DefaultInterruptHandler 0000                   ?_TMR0_DefaultInterruptHandler 0001  
                                      printf@ap 00A1  EUSART1_SetFramingErrorHandler@interruptHandler 001F  
                ?_EUSART1_SetTxInterruptHandler 001F                                     ??_vfpfcnvrt 008D  
                            _eusart1RxLastError 0030          __end_of_INTERRUPT_InterruptManagerHigh 0132  
                _INTERRUPT_InterruptManagerHigh 0008                            ??_EXT_INT_Initialize 0021  
                                   _temperatura 003F                                 _TMR0_Initialize 1134  
                                  ___aldiv@sign 0016                           ??_EUSART1_Receive_ISR 0001  
                __end_of_PIN_MANAGER_Initialize 0EC4                       ??_TMR0_MyInterruptHandler 0003  
                       ??_EUSART1_RxDataHandler 0001                                 _TMR1_Initialize 106C  
                    __end_of_spi1_configuration FE3D                              _ShowMenuInTerminal 0136  
